{
  "uuid": "d07b192f-3f4e-4d10-8616-0cd97462ea98",
  "lastMigration": 19,
  "name": "Error Reporting API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "abff37fc-7233-4e79-b745-b1a074d0a557",
      "documentation": "Get the specified group.",
      "method": "get",
      "endpoint": "v1beta1/:groupName",
      "responses": [
        {
          "uuid": "b227d612-3603-4faa-95a6-b93dece7e44c",
          "body": "{\n  \"groupId\": \"\",\n  \"name\": \"\",\n  \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n  \"trackingIssues\": [\n    {\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80ee01e6-d9cc-494f-9289-0fe233a67eb8",
      "documentation": "Replace the data for the specified group. Fails if the group does not exist.",
      "method": "put",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "7c00422c-47b8-4c10-9e61-7ff152b6f7b6",
          "body": "{\n  \"groupId\": \"\",\n  \"name\": \"\",\n  \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n  \"trackingIssues\": [\n    {\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48cf79fe-b2c2-4ac4-a218-a8e16295d719",
      "documentation": "Deletes all error events of a given project.",
      "method": "delete",
      "endpoint": "v1beta1/:projectName/events",
      "responses": [
        {
          "uuid": "827c4fb4-8d2b-4a1a-8b7d-9089fd1f492b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8dd4c54-0344-43ba-af2b-f0df649177e6",
      "documentation": "Lists the specified events.",
      "method": "get",
      "endpoint": "v1beta1/:projectName/events",
      "responses": [
        {
          "uuid": "fe4f0320-4be7-45cd-97ed-2ac41b70d378",
          "body": "{\n  \"errorEvents\": [\n    {\n      \"context\": {\n        \"httpRequest\": {\n          \"method\": \"\",\n          \"referrer\": \"\",\n          \"remoteIp\": \"\",\n          \"responseStatusCode\": {{faker 'random.number'}},\n          \"url\": \"\",\n          \"userAgent\": \"\"\n        },\n        \"reportLocation\": {\n          \"filePath\": \"\",\n          \"functionName\": \"\",\n          \"lineNumber\": {{faker 'random.number'}}\n        },\n        \"sourceReferences\": [\n          {\n            \"repository\": \"\",\n            \"revisionId\": \"\"\n          }\n        ],\n        \"user\": \"\"\n      },\n      \"eventTime\": \"\",\n      \"message\": \"\",\n      \"serviceContext\": {\n        \"resourceType\": \"\",\n        \"service\": \"\",\n        \"version\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"timeRangeBegin\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25fa3098-29ab-45fe-b53d-409c2e138ee2",
      "documentation": "Report an individual error event and record the event to a log. This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example: `POST https://clouderrorreporting.googleapis.com/v1beta1/{projectName}/events:report?key=123ABC456` **Note:** [Error Reporting] (https://cloud.google.com/error-reporting) is a global service built on Cloud Logging and doesn't analyze logs stored in regional log buckets or logs routed to other Google Cloud projects. For more information, see [Using Error Reporting with regionalized logs] (https://cloud.google.com/error-reporting/docs/regionalization).",
      "method": "post",
      "endpoint": "v1beta1/:projectName/events:report",
      "responses": [
        {
          "uuid": "520727ce-94f4-4e3d-911b-88312f1809e8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67d2cfa9-8662-41f3-9c1e-7a9632622d76",
      "documentation": "Lists the specified groups.",
      "method": "get",
      "endpoint": "v1beta1/:projectName/groupStats",
      "responses": [
        {
          "uuid": "ad060cb2-d3b6-417a-94c0-1d1c7d2e2256",
          "body": "{\n  \"errorGroupStats\": [\n    {\n      \"affectedServices\": [\n        {\n          \"resourceType\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"affectedUsersCount\": \"\",\n      \"count\": \"\",\n      \"firstSeenTime\": \"\",\n      \"group\": {\n        \"groupId\": \"\",\n        \"name\": \"\",\n        \"resolutionStatus\": \"{{oneOf (array 'RESOLUTION_STATUS_UNSPECIFIED' 'OPEN' 'ACKNOWLEDGED' 'RESOLVED' 'MUTED')}}\",\n        \"trackingIssues\": [\n          {\n            \"url\": \"\"\n          }\n        ]\n      },\n      \"lastSeenTime\": \"\",\n      \"numAffectedServices\": {{faker 'random.number'}},\n      \"representative\": {\n        \"context\": {\n          \"httpRequest\": {\n            \"method\": \"\",\n            \"referrer\": \"\",\n            \"remoteIp\": \"\",\n            \"responseStatusCode\": {{faker 'random.number'}},\n            \"url\": \"\",\n            \"userAgent\": \"\"\n          },\n          \"reportLocation\": {\n            \"filePath\": \"\",\n            \"functionName\": \"\",\n            \"lineNumber\": {{faker 'random.number'}}\n          },\n          \"sourceReferences\": [\n            {\n              \"repository\": \"\",\n              \"revisionId\": \"\"\n            }\n          ],\n          \"user\": \"\"\n        },\n        \"eventTime\": \"\",\n        \"message\": \"\",\n        \"serviceContext\": {\n          \"resourceType\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        }\n      },\n      \"timedCounts\": [\n        {\n          \"count\": \"\",\n          \"endTime\": \"\",\n          \"startTime\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\",\n  \"timeRangeBegin\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}