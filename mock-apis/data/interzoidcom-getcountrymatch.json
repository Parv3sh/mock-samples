{
  "uuid": "4a340cc1-252e-4a5e-b7de-c1409ce0c7ab",
  "lastMigration": 19,
  "name": "Interzoid Get Country Match Similarity Key API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "738e9008-8e6f-42ad-8c76-8777320dcaa9",
      "documentation": "Gets a similarity key for matching purposes for country name data",
      "method": "get",
      "endpoint": "getcountrymatch",
      "responses": [
        {
          "uuid": "30ad7eda-1c02-445d-a7fc-d7b077540a7d",
          "body": "{\n  \"Code\": \"\",\n  \"Credits\": \"\",\n  \"Simkey\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Generated similarity key for country name data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "066b7ee1-e235-4779-81d8-ca17cc80951b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request - insufficient parameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a56cbb3e-047a-4da5-951e-513ed746a219",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "credits exhausted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "411ace32-fad7-48e0-b167-ccd147e64cd7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "invalid license API key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ca344e2-f6f3-4f37-b8c4-40f982729463",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "method not allowed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9a6e31c-585e-46fe-827d-0fccf31029bc",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}