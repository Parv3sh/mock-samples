{
  "uuid": "c90d7b3f-b888-43ba-b703-df50297eb087",
  "lastMigration": 19,
  "name": "Amazon Relational Database Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4215fe6f-a910-448e-83fe-ff1f8f3ffb32",
      "documentation": "<p>Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "f40744d9-c48d-44f7-a0bc-768435283f68",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "183d37ab-d07c-4898-ba1f-84413187a3a5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd66c4fc-6298-4177-897d-22b3fa90e0f9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f9b0309-022e-4ce8-9965-66cda9767f13",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "566ad602-edb8-4624-8e42-bb70b8f7a5f7",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c4a6d74-943d-4232-a957-661656f75876",
      "documentation": "<p>Associates an Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=AddRoleToDBCluster",
      "responses": [
        {
          "uuid": "d9a0074e-d030-4886-b155-4770cba7af22",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6511cd-7d7d-4aa8-abab-fc4eadfb299c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e820acb0-e069-4faa-a9c3-32ca9ce7aeb7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ef72a2-bc26-40bd-b24c-484471c61156",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22f636b3-f172-41bb-8d46-4f69a590296a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dd3da2f-e8f3-4e32-92c9-55288d138866",
      "documentation": "<p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=AddRoleToDBInstance",
      "responses": [
        {
          "uuid": "b2a8771f-586d-4cfb-ade9-3ed260586cdc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b57ba101-f04c-4831-99af-4e1c088a3d1c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f940c19-d25e-4a21-8f66-338f59d49d92",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f4fc04b-7c16-4411-94c2-411a88b78015",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e091e6ef-4451-48b3-adde-4fa51e6fbec7",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97d461c4-f142-4258-a51c-53335d6093d3",
      "documentation": "<p>Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance.</p> <note> <p>To add a role to a DB instance, the status of the DB instance must be <code>available</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=AddRoleToDBInstance",
      "responses": [
        {
          "uuid": "6b066292-35ee-476d-a0f8-03a2620c520e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c33cec8-73d6-4273-8a37-c3e68a9f17f7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49df5404-95d2-46d5-9ec8-286650958de5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ccfcae4-4bfe-4c8a-8460-a37269df1861",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97807f3c-eb34-4aa7-b4d4-b9ed1d29faa9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceRoleQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b998dded-2229-4889-a796-391145c70fae",
      "documentation": "Adds a source identifier to an existing RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "e8004b80-1b16-4057-ba09-9305a6657d3f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3f106d8-5aa6-4a9c-af97-88780819b1ab",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7c516ef-7df8-4bee-987f-ecc478359e91",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e602f93-b80e-4e06-853c-732a863d5781",
      "documentation": "Adds a source identifier to an existing RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=AddSourceIdentifierToSubscription",
      "responses": [
        {
          "uuid": "c11aa6c7-6246-4228-be58-389fe092fac2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f61674c-aa94-48b2-a262-51c23d15c1dc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "355bd72c-fd63-4db3-8c2a-d10d018cade4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b54b500-fc12-4c01-b256-bfe7617c059f",
      "documentation": "<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
      "method": "get",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "f7539e4b-6276-4919-b471-5ffcaeaddda6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "936b0012-3de3-45f8-8474-f475e7613ace",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2617f1ce-12b2-46c7-9a14-544bde1e714e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5f4ae62-237a-403d-a8ef-860d50bb233c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e61bd7e4-fb83-446d-9157-aec378f1b605",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0dac6ab-2a39-48a7-b9f7-74d20f94d623",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeca90f8-72dd-419a-b1ad-35b900121d69",
      "documentation": "<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a>.</p>",
      "method": "post",
      "endpoint": "#Action=AddTagsToResource",
      "responses": [
        {
          "uuid": "b13f1e15-e796-449b-aad7-8fe0a7fce290",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8fa497e-d108-448c-9271-5706971d18e0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "561decb2-c828-4ebe-b1ad-580c65e43df3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5989b8d0-1a64-43d9-89bc-c4e7ca998ea4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2da1033-b8cd-4c87-a861-6cb92c38d524",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b85619d9-c5ec-4a9e-bdf0-255098253ef3",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b090f25-4646-4f46-9952-3cac87716825",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "get",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "491bb376-16be-4700-9b22-b7a364b353b1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23e1e12e-d19b-4244-aef0-4c77f66e6b02",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce9af09-971c-48ce-967e-be83eea63ae0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4361aa7-8c7d-4b5e-9d5f-e0fc1c0b193b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "321d0d9f-c3e3-4611-95c6-2a3a5f944f89",
      "documentation": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
      "method": "post",
      "endpoint": "#Action=ApplyPendingMaintenanceAction",
      "responses": [
        {
          "uuid": "30840bbc-323f-43db-b4e4-cc34116a8359",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69185b26-7030-4c99-a85d-7f6246d4c74f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3da38976-d5f9-429b-8a10-47cfef9e7572",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b8db46b-770c-40ee-882f-fdcac9dd226a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "202483e7-2add-40b1-8adb-a54e7d9c2c09",
      "documentation": "<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "get",
      "endpoint": "#Action=AuthorizeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "3d88084e-1dfe-4d44-be85-6fb43ea60fa3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c46f853c-0540-4d58-9cf4-27c22ddd456b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5299417-2139-4875-a056-d055a4d152a9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c1b5188-88ef-40ea-ae71-a41785c2c493",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "134069fd-1a32-4fee-9a59-04d693814f4b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "593211d1-ab72-4009-9d8e-db5f74209454",
      "documentation": "<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You can't authorize ingress from an EC2 security group in one Amazon Web Services Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "post",
      "endpoint": "#Action=AuthorizeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "f2cf8727-6dfe-4529-8e3d-221154a3fc9a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c7227b8-b86f-4d73-80cf-e46a9d9631c5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e73e779b-da22-40b9-8dec-e0914fd73495",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57b610af-cf50-4e1b-ba77-a2b31d18dc5a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a75c3af4-eeeb-478d-8b84-44d291ad4d4e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "236de754-4fd6-4018-ae8a-5ab25d8ff9af",
      "documentation": "<p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html\"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=BacktrackDBCluster",
      "responses": [
        {
          "uuid": "81295dc5-3682-4f53-bb9e-8e65d96d01c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f9ac927-0d30-499d-8d06-bee7b83d440a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c33187fb-a839-4c07-9b97-898261f56fc2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93c57e3c-6557-4f50-849d-bd0d8736706b",
      "documentation": "<p>Backtracks a DB cluster to a specific time, without creating a new DB cluster.</p> <p>For more information on backtracking, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html\"> Backtracking an Aurora DB Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=BacktrackDBCluster",
      "responses": [
        {
          "uuid": "256e6268-b127-4b28-b00c-ce491e1753b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d83a88b3-a445-45a0-a5b3-b04e5a11ff0d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "431f0e7d-8c0f-422b-a204-82309e0a8674",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4837f9aa-9646-4a4d-86f6-ef48c4c65fbc",
      "documentation": "Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn't removed. ",
      "method": "get",
      "endpoint": "#Action=CancelExportTask",
      "responses": [
        {
          "uuid": "982149b7-e061-4062-9e0c-7aba7b770351",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b735d07-f274-4855-8a62-bc8b5e228d89",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ef8b104-dc92-4b46-9fa2-60ab8c297563",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExportTaskStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cc18b77-f9dd-4f83-8255-b1fc5d357c5c",
      "documentation": "Cancels an export task in progress that is exporting a snapshot to Amazon S3. Any data that has already been written to the S3 bucket isn't removed. ",
      "method": "post",
      "endpoint": "#Action=CancelExportTask",
      "responses": [
        {
          "uuid": "12122e1c-a32b-4cdd-a883-3f6dbd8b7fcb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d5f11fa-4605-48d0-bff1-3b8ee3e7fbe3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f0e65b6-4e3a-4e05-8c60-dedc2fa05abc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidExportTaskStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a4d9b76-a4a4-444c-ae34-ea81c6a99d1d",
      "documentation": "<p>Copies the specified DB cluster parameter group.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "79811898-b223-4603-b695-2f0d3990dc08",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd388d77-67c0-4157-a32d-f2d47b09d47b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37958da5-433a-4b9a-af20-10a0f0478b5c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90ddee82-abf7-4e8a-9944-0109983a041f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bce00b5f-e710-44c5-9a5b-c4ade25ac5b5",
      "documentation": "<p>Copies the specified DB cluster parameter group.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "0b88125a-b6b1-4dae-bdf7-19e63301ca52",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebe7d6c7-a804-4e41-811d-5492082cd62a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3502f16-ff17-4441-898f-ac15d558a9c7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b406dbd9-390b-4815-920d-d0cf3411d4e6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f35ffb6c-a444-41b7-af9d-c2f637262cc5",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source Amazon Web Services Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services KMS key identifier for the customer master key (CMK) to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination Amazon Web Services Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Amazon Web Services Region.</p> </note> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one Amazon Web Services Region to another, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html\"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "dca0c5ee-0772-4f33-b99d-f6e6cc0422bb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fd876eb-18ab-42b2-b9ca-99d068a916ae",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "841f8c90-c46c-48bb-9af0-bb0b0fd157e8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3545aa7-b1c4-466b-a2e8-e26c09ae128e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40acbf65-2880-45f2-a139-a109dd7e4f9e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaadd90c-332d-4c99-bb0c-23be4ba95a98",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a67de50-0622-44fd-a48f-abcfb6b51a33",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "962f6e5a-28a3-480f-ab94-9df1fdc26536",
      "documentation": "<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another Amazon Web Services Region. In that case, the Amazon Web Services Region where you call the <code>CopyDBClusterSnapshot</code> action is the destination Amazon Web Services Region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another Amazon Web Services Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source Amazon Web Services Region where the DB cluster snapshot is copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source Amazon Web Services Region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The Amazon Web Services KMS key identifier for the customer master key (CMK) to use to encrypt the copy of the DB cluster snapshot in the destination Amazon Web Services Region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination Amazon Web Services Region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that the DB cluster snapshot is to be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\"> Signature Version 4 Signing Process</a>.</p> <note> <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Amazon Web Services Region.</p> </note> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination Amazon Web Services Region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source Amazon Web Services Region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in \"copying\" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one Amazon Web Services Region to another, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_CopySnapshot.html\"> Copying a Snapshot</a> in the <i>Amazon Aurora User Guide.</i> </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CopyDBClusterSnapshot",
      "responses": [
        {
          "uuid": "03528be2-8abd-4d0d-beef-4005d73f77b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75028910-de87-4d0f-8326-f8ba8e7cff1f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd318fdb-19b8-4bfe-aadb-f59e192146ba",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faea9ba3-9fce-4ddd-9183-6e5d16d9decc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba4c4029-80c7-417a-83d0-dcb7e7eb0c11",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "814cb220-d310-4ec7-8650-9433c2b5970c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97b797c5-c258-4ebc-8ae4-440ad80c991d",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "502f859b-467d-4b13-ab3a-ef495e8d59f6",
      "documentation": "Copies the specified DB parameter group.",
      "method": "get",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "7ea0393b-d621-42ca-bd19-722df9ef7c11",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fac0306d-31c5-4a78-897d-584eb2fb2cef",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d71e2d1-43a5-429f-966b-f03e746f6811",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce21924b-9b15-42ef-ae80-9f376f748ea0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a72e511-fe2c-4e92-bd77-521da1c9befc",
      "documentation": "Copies the specified DB parameter group.",
      "method": "post",
      "endpoint": "#Action=CopyDBParameterGroup",
      "responses": [
        {
          "uuid": "16f744d9-10d8-4b0c-bc2a-f341097de6fb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b61e73db-0de3-45cf-877b-f76871b7793f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad0e7d50-6830-4342-bdc8-2158aa98eb38",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19bca3b9-fcb3-4a2e-ac6f-adf325c40980",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27dc28fd-7108-4846-a3d3-52743759327a",
      "documentation": "<p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> action is the destination Amazon Web Services Region for the DB snapshot copy. </p> <p>For more information about copying snapshots, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot\">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=CopyDBSnapshot",
      "responses": [
        {
          "uuid": "48103a3f-822a-4254-a5b9-3d6aa422a876",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f84b2644-c996-4b69-8629-6c4c0169d49e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0192b6e3-08dd-4095-9311-aa5e6200da2e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec7387fc-95b1-4974-a242-acdd7a1ecab9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1107ba91-ad25-42cf-90ed-d0188e7b476e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "810cd264-92e5-4e06-b300-e099f557e1c6",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9773b1a3-d074-4068-995c-b27f9f95c51a",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0aee30a-6ee7-4c9e-b6f8-995388ae57bf",
      "documentation": "<p>Copies the specified DB snapshot. The source DB snapshot must be in the <code>available</code> state.</p> <p>You can copy a snapshot from one Amazon Web Services Region to another. In that case, the Amazon Web Services Region where you call the <code>CopyDBSnapshot</code> action is the destination Amazon Web Services Region for the DB snapshot copy. </p> <p>For more information about copying snapshots, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBSnapshot\">Copying a DB Snapshot</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=CopyDBSnapshot",
      "responses": [
        {
          "uuid": "6cadad88-c8ec-478e-a749-afb3c2204e63",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c0f8113-adcd-420a-8f37-4535217ec350",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c157348-f8a8-4f58-9157-42eeb1986d91",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8699624-5640-4120-8943-de99072582c1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5b21e3b-ab7d-47c3-86ac-890af628f41e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a18ce467-d060-4c4a-8602-73048311addc",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70b51610-0e08-4ac2-b557-6134ee0ac676",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "890a5959-523d-4dbc-b85b-f1987e5b41ba",
      "documentation": "Copies the specified option group.",
      "method": "get",
      "endpoint": "#Action=CopyOptionGroup",
      "responses": [
        {
          "uuid": "9c12c1d6-db02-4312-ac35-f234f385e0c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "540c5a31-9d69-4f59-a307-6e2f23af5357",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aba8ef4-0d32-46ca-93d3-b7607315a1b4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5bb4ee-000f-4c15-949f-087c6a3ff7ce",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86a49595-b43e-458e-b1e9-cc70c243c58a",
      "documentation": "Copies the specified option group.",
      "method": "post",
      "endpoint": "#Action=CopyOptionGroup",
      "responses": [
        {
          "uuid": "e007ae86-bbf5-43bc-907f-e07359614373",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ea6c95-6c90-4e5a-90b9-0ff5e1d4f5bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38384525-7c25-4520-a150-fb79be813c34",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8a5660e-cdc7-463e-950e-8481ee6bd37b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26fc722b-760e-40a5-9e5b-0de69c062a8c",
      "documentation": "<p>Creates a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=CreateCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "f5ef4c0d-398b-4e30-9f2b-602e1109c2be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da0be205-dec1-4d2f-b5a6-e8f3067b5454",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "765a605f-9c72-4376-98a1-cd54aab64438",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "CustomAvailabilityZoneQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "732cb401-31bf-40d7-8b10-5fd599c540d8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56ee6a32-61dd-4aa8-9356-4c6fdd914273",
      "documentation": "<p>Creates a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=CreateCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "e52d4e9c-167f-487e-9570-5a3cee8bfd0e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e20ae0f1-64db-4507-9255-6ef2d871fcc2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5addd843-c8cb-4256-a7bc-2409b42be594",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "CustomAvailabilityZoneQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8342bf95-0a2a-4607-b12d-7d8353b7e159",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78da9234-a2be-4807-b353-233658178263",
      "documentation": "<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL or PostgreSQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "fb8222ad-89e8-49bc-999e-43363cd73fce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425314b5-a601-4e58-87c1-7e610e547f87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1fd868e-08cc-4a3b-a2d6-ff994bdaafd6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3a4d06a-ec4d-451e-a842-155c3129f2ec",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "876e84ba-9cc8-4a41-b864-6ba94c103c1c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4768b1cd-b7db-429f-9c97-70d56ac27ad0",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dd20d7d-e125-4e18-8cdc-24cb77360a44",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09467b6f-382f-4bc1-9a6e-d5dbce0112ae",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d20f515-dc70-4754-8d46-9355544f2a16",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f195efb0-7c9f-432c-ab33-21609e2a5704",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47f13ad7-b58d-4832-8651-61f4cdd51ac0",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4038efb2-3720-4067-b4fb-2cf72722d727",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1691308-56c5-41b7-9cdc-379acd1f2813",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ede214c7-ecd0-45a4-abe4-e18a9a430810",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7471a464-25ec-4e87-9b06-90d4ae919e8d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1cb814d-0685-45a3-9039-7ae6ffe4916c",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09431d81-faca-441e-95b5-3633b1001821",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b7bed56-d2e1-4e46-96e5-fd4d937d16ae",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8a11be1-642c-4d5d-bb4d-d87c2a594a5e",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f60a2c49-8f38-4fea-93b3-fef7ca5999be",
      "documentation": "<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL or PostgreSQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBCluster",
      "responses": [
        {
          "uuid": "d48d8d10-1583-41df-bf1d-cede80cad5ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20ae11a1-adc0-4c50-a0f9-5a788b5264d9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13b41201-1183-4c21-8da5-e9f340aef895",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "548d14d5-4cc6-4625-b9b7-8e4e946df432",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b0597d3-bc51-4c77-882b-fb01e05a92ca",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54413cf0-9b51-4cab-a893-193bcdbcb837",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e3ee17d-5898-467f-a21c-253baed81c43",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb1cfbcc-f22e-4355-984e-2c5d99f7fca0",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce1c1577-8546-4310-9027-85c216978356",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b63c75d3-3dcc-4147-9e54-fa5a517b8070",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e6195be-2b80-4ecb-baff-338fc5a5047b",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165c9e34-0da2-4dd6-93cf-4db23e21cd74",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30c654ac-edf1-4581-a8bf-173bcdfc7b78",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89746b03-3242-4e27-96e9-abcf61df3e0c",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61740101-1a40-46b8-8c9b-8ebc888009c6",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72117e5d-44a7-4236-831a-f99c3d290436",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e93ba5c8-0a82-4b71-b5d8-bf8f8a45ac93",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb222366-a9fa-4fd0-b183-349445f81869",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04a19b38-4a95-41ad-ab5e-9fd15b818534",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e0d5b76-7f2a-4bd9-ab43-c4a491f7e286",
      "documentation": "<p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "f631cee8-05df-438e-98d9-a1b376d73e88",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d244c2c-b005-4b1a-8405-0f71167e0471",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce5f364-f40f-4bfd-a261-8251fd24c88a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c9555fe-3d73-4ea6-aa42-ac8602275e14",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d360c5a-7c84-4a11-8254-d0c736862de0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9221a68d-e21e-4776-ac27-18d3d4367e8b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac7b036b-fd12-447e-b683-b399c7ad6a9c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf266a68-8cf5-4029-94ee-a3f710180bec",
      "documentation": "<p>Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterEndpoint",
      "responses": [
        {
          "uuid": "87bd733d-024b-4432-a351-2b8021f32907",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bd56983-ad52-4ce2-ab88-69398a20527a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "411dbea5-cf06-46f3-9e91-2e8810b9964c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5cc0c4f-f528-4719-99e5-0d6fa6b3932c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0467eef1-efaf-4926-8777-3b75b7b15dc2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9014b6b2-361f-469c-bbe4-b1dca91c7000",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb20324f-f8e5-4635-956c-07d2ebb24094",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2907d735-e93e-431b-a24f-8f03ae6e0bdb",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "4c2fe447-5a41-4913-b817-628cbb3cca09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9224b50c-0a72-43f7-9863-a150588455a8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a8b6463-328d-4393-8c6c-4a12d8d0613e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18e1e2d6-a7a4-410d-b91f-646cfbf60b38",
      "documentation": "<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <code>ModifyDBClusterParameterGroup</code>. Once you've created a DB cluster parameter group, you need to associate it with your DB cluster using <code>ModifyDBCluster</code>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "8eaab4e8-95eb-4b75-b6f4-9d53490e3655",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33daadc8-8468-428b-a04b-75fd492a70ea",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "643b4e6e-36c3-482f-80e8-ce9da6072261",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa0b0844-981e-4bad-85b3-da8c3da73ffe",
      "documentation": "<p>Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "7639414f-ca62-4dee-9d22-9d8f1b7605ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a656f61-ff64-40f0-9a20-bf10c29d656a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00473ab4-bfba-4a6a-8fa3-997e750c80fd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95e3d8f1-d46f-4f5b-98ea-5b46d1892331",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61678c52-b828-4481-aff2-13ffb0183d8d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09a63b74-6528-4780-8583-472ef25d2eb0",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31fb9079-0d29-4f13-a990-3d64e9af581b",
      "documentation": "<p>Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBClusterSnapshot",
      "responses": [
        {
          "uuid": "0cde0d14-1f0f-4008-9b0a-467f30212bb5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b81fd45-b3be-47a6-a5c5-3e384155ff00",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31300c05-0a83-449c-b9e2-9bd6ad49c937",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "591bffdc-f1ca-43f2-998d-c3f910f67c56",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5faea9f8-4809-4e5b-9acb-6745e8563fbe",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "559f0ada-5839-4f95-81db-aab9ac16b2c4",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da96477c-4a08-4ceb-921f-3ebb3cea8544",
      "documentation": "Creates a new DB instance.",
      "method": "get",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "0e8441c2-b8af-40e8-b2e9-f774472b2525",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45c4a352-62e8-4c80-82ba-1e75997de102",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26afc0cb-3fd6-4fdb-bd92-10550a995b96",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dbf4600-fd8b-4da9-9dbb-da984e798f93",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a44b0ca-58a8-4ac5-a0f2-650907e5fff4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9930c9cb-78f3-4bcc-8098-753d761ac53f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5598d11f-a561-432c-9175-6199b7c3f0ce",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d266b47-2160-486a-bc66-80b512da0ea9",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dd0b003-49aa-4c71-bd01-2a9e798a1ee4",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e439268-2c51-4022-b666-809c992bf835",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3298ad3c-7394-44af-840d-bfe61511f6cc",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4586c32c-8b8d-495c-bd9c-668b562323a9",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d47f1608-2858-4597-9bb3-53bb2bb9560f",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "288d2021-a05d-48e4-a1b5-f2d9ab4caed6",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02c078fa-5723-4199-a84e-f45cd35aaa65",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f498238e-0489-40d5-a9db-396960fd0d2b",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c47f47f-c781-42ba-97b7-1c8176773f6e",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2fee2c9-9595-4879-a315-086db12a94b8",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d66b1854-ecdd-41fc-99ee-5b369d2d2af9",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e40ddf9c-4c84-4b58-a3e4-ebdec51b65d2",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4911e5ab-70c4-42b9-8d89-f139546aacb1",
      "documentation": "Creates a new DB instance.",
      "method": "post",
      "endpoint": "#Action=CreateDBInstance",
      "responses": [
        {
          "uuid": "222c7884-eed9-4439-9c02-90f34cf4deda",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cde5bcb5-8f6e-43c1-8140-08603cf3d94f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5780f6f0-d117-450b-a8f2-375a20d3009e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cb6b4cc-418b-4475-928d-3918cade3f58",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2b92bc6-d0a9-460e-9b4f-f9d893739e23",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ef1a63-0d73-449b-8a29-d4deba14ceb8",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62d3f4db-b1b6-4cd0-a607-8e9eca19f2c5",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05a88ffc-7bbe-48cc-900a-8b317c2ab1e8",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e7993d9-6614-40a6-bee1-ea3873c3add8",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf8acbc0-4437-4880-9735-41ef887be864",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccace87a-8f8c-48a1-be6e-17e43b895a84",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df52a868-9ebb-4484-82da-fb6b9a79ef74",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2034e43f-4882-4ab2-9908-fc90705086cc",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165bc965-803e-4f2f-b0ba-ce9fc68bcc56",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a723fbc7-289b-48ba-b873-bddc55975c6d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cda65fcc-7b32-454f-9d16-d6afb3b01155",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81df09b0-0d21-4eea-83d5-8fa219fd8078",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d764b08e-a2ad-4121-83b8-32d334b070eb",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6cd4e7f-7d47-4601-8eef-892ca19c5245",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09291923-ef7e-4dec-8f4b-f333bcf2dc7b",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48b0145f-b1ce-461c-b638-e6a0be8a3072",
      "documentation": "<p>Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html\">Working with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.</p> <important> <p>Your source DB instance must have backup retention enabled. </p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBInstanceReadReplica",
      "responses": [
        {
          "uuid": "e30d18e4-f100-4caa-a7de-030e9f50dcd8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97b0b428-64e8-4427-a4ea-a740aa5f1abf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9798c6a-b498-4f70-aa49-aa26fb6631e3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e82960ef-7f4c-40d2-8f02-fad76e6ecfde",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "669ce171-0a8b-4c57-badc-12041aac6db3",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b756984c-4f35-4fa4-8bcd-f5573a175b2c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3fd607e-6b89-4836-b74a-6b683880c5d7",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c75e4a-a9fb-47b8-84ba-d3291f71166f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d3cbc6b-3c5e-4a6c-b472-438a7052a584",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f0bcdb0-b58e-482b-a6eb-321d39bc9613",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d940ab8-7e07-4736-8db5-2134afb391ae",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ff51d4d-3c4a-4a34-bb79-db5ec3195708",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71645690-44ea-4bf4-bed5-ee6d16ddc29a",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7978209-5fe8-4284-a3a9-970f4efdf175",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db41ed60-af83-4c10-82f8-b585a7568973",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aff49cba-481a-4146-bfd0-3c20a4715e45",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupNotAllowedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e57ba58-482b-4541-8672-011e4cf53b7e",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidDBSubnetGroupFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68cbd1b9-fa56-4e53-8bf6-84f26ad6c3bd",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b11a3080-2321-47f9-b8f8-cc16bfd2a723",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c2db344-b1ad-4e0f-ad58-3e6bfe292bc4",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82b1bac2-fb9b-46e1-aaf7-0ae2bd6ed89e",
      "documentation": "<p>Creates a new DB instance that acts as a read replica for an existing source DB instance. You can create a read replica for a DB instance running MySQL, MariaDB, Oracle, PostgreSQL, or SQL Server. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html\">Working with Read Replicas</a> in the <i>Amazon RDS User Guide</i>. </p> <p>Amazon Aurora doesn't support this action. Call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> <p>All read replica DB instances are created with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified.</p> <important> <p>Your source DB instance must have backup retention enabled. </p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBInstanceReadReplica",
      "responses": [
        {
          "uuid": "be3e19aa-138b-4570-ae76-fb1d76836747",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5350c2b-0b17-425d-b046-767435e54e16",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39f50bd0-b32f-4f7f-89e3-74bf090cdbf2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e37df17a-36d9-4105-a722-a96fb715f078",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4639a463-19a2-486b-a5ea-35f123d6db92",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce965c82-a1d2-463c-a0cb-853c653b7f5f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9675298-83f2-4aad-b8ec-a446dcba9dff",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcaa3be2-dbea-43b2-a713-8a5551d755ae",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "778d69dc-1743-433b-9b4d-9ee4f38cb102",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db388835-cdf5-410d-b525-1d3438a63f41",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "342c7042-c305-4880-b5a1-6dbbe401acb2",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c44d7201-1e5a-4b89-afe5-487babbb1124",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74450fb0-5f4b-4395-afeb-09daff86f728",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0ab41fd-09df-49d7-aca9-e55411db6230",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c87832de-f442-49d5-b54d-a3de1287c25e",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fe76329-84ea-4552-aff1-5f2c3dfae0f4",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "DBSubnetGroupNotAllowedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9145b54f-041d-41af-8f39-5ace9b40a716",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidDBSubnetGroupFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7336656-1c9e-42b6-a7a3-60d24b7c184b",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3815e3e-8039-4158-a6bb-2321852f057e",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d3d722b-6860-446f-84f6-24766565b3ae",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80da70b3-b49f-4f1f-a4ab-694fadcfd536",
      "documentation": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "c732d31f-4415-4f4c-93b6-b30d17b51e1b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "867300ad-9c75-4dc4-9817-1542e6001f1b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5e88808-cbf3-4eaa-b114-37d6b92159dd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8cd3ed40-dad0-4337-a16c-bc1e17813c02",
      "documentation": "<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=CreateDBParameterGroup",
      "responses": [
        {
          "uuid": "0a394c17-2537-4b43-8fdd-b3155d84d403",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "543e6e62-94fb-49b7-aaf2-b01885d1a1c9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c5c56ce-eadb-4d8b-81c1-2316572adb1e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88e4d2ca-9962-4fc4-88c0-fa0b6313eeb9",
      "documentation": "Creates a new DB proxy.",
      "method": "get",
      "endpoint": "#Action=CreateDBProxy",
      "responses": [
        {
          "uuid": "caa81b76-b94f-4c80-be12-cc48759403d9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adacdfd9-2dd4-4e71-8369-7d32edb4c6f4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67757a29-17ad-472b-a64c-664136015e1c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "912b464d-867d-4a02-9e07-790e5fbde136",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23f1d874-beb7-44e2-93ce-4404dc1bd782",
      "documentation": "Creates a new DB proxy.",
      "method": "post",
      "endpoint": "#Action=CreateDBProxy",
      "responses": [
        {
          "uuid": "d84a8bb5-3ef2-49fe-8e4d-bbd93a24c161",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c68e024e-3bcb-46fd-bac2-8e329bea6c18",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59825d4f-2a78-456e-91cc-0ab0b7efaecd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bfdc61b-3667-4551-bdc1-7e84417b7d06",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50979fc5-b75b-4d08-8c9d-1232160bb201",
      "documentation": " Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC. ",
      "method": "get",
      "endpoint": "#Action=CreateDBProxyEndpoint",
      "responses": [
        {
          "uuid": "1c941137-032e-4cc5-9f70-98650f62c2fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e31a401b-3dda-403a-ac61-9cbf860bc4d1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95098b5f-3689-4e00-a522-cff2ff5a6c66",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa1b4d33-a4c6-4a07-9948-09b1e46f9790",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5ac5dcb-ad31-469a-9faf-caeda8ade657",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "157e6c73-458f-4a7c-a456-ec923e170330",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04a3f85f-d1c1-45b3-b058-8838192be094",
      "documentation": " Creates a <code>DBProxyEndpoint</code>. Only applies to proxies that are associated with Aurora DB clusters. You can use DB proxy endpoints to specify read/write or read-only access to the DB cluster. You can also use DB proxy endpoints to access a DB proxy through a different VPC than the proxy's default VPC. ",
      "method": "post",
      "endpoint": "#Action=CreateDBProxyEndpoint",
      "responses": [
        {
          "uuid": "76de128d-5591-48ff-90db-fbd7b35bf262",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcd16885-c59b-42d0-aab1-2d989801ab56",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d8d7c7-3898-44ea-bff8-3d9def5421f1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "307d06e3-ef2c-4373-97be-eee8df81f018",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47ab9f7a-b793-44f8-8394-393406c8a9dc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyEndpointQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97a3a3e8-52bd-4b02-b72a-8315f86e7aba",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "601f2aea-204d-4da3-a324-3022b954a12a",
      "documentation": "<p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <note> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateDBSecurityGroup",
      "responses": [
        {
          "uuid": "843e7c87-f838-4282-9b53-eccf3041baab",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4fe7e7d-5aec-44a0-90bf-9e4a8d4a8e2f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ab45a60-2b50-4427-9814-4916dab505cc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a61eaed0-c984-4046-be84-bcc0ed86cb6c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSecurityGroupNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0679cb3d-558a-4d29-9535-676881977a38",
      "documentation": "<p>Creates a new DB security group. DB security groups control access to a DB instance.</p> <note> <p>A DB security group controls access to EC2-Classic DB instances that are not in a VPC.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateDBSecurityGroup",
      "responses": [
        {
          "uuid": "b994262b-860d-4723-9877-761d9292c3db",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82bb53e3-2131-4b4a-bcc8-c58090d3410e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be9695f3-6712-4cae-882f-3a4b5da7012e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "233d1fea-2c65-4bf2-a8b8-63532d541721",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSecurityGroupNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fa36424-3a29-4ff0-a9ed-089cf93a697e",
      "documentation": "Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.",
      "method": "get",
      "endpoint": "#Action=CreateDBSnapshot",
      "responses": [
        {
          "uuid": "826f1a7e-b889-4b53-bb4d-9ea097b09b11",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bfc7751-9b3b-404f-bb2a-d84b7ce506dd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c1b652-563c-4f98-9c1d-a4c197726dcd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a6853ce-8c72-411a-a708-f1e82011962e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9458f046-93fe-44cb-84c1-5305a7153674",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba60d30a-ff28-47d6-a799-52c1194f33a5",
      "documentation": "Creates a snapshot of a DB instance. The source DB instance must be in the <code>available</code> or <code>storage-optimization</code> state.",
      "method": "post",
      "endpoint": "#Action=CreateDBSnapshot",
      "responses": [
        {
          "uuid": "1b61dafb-def5-469a-a2b5-77b5193b0aba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "750faf72-3550-472e-b8c1-2b0a26dbc15e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a1eea55-723a-489f-8985-aaff094ddd47",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62350ba1-a4e7-4b7f-a5e9-f3f8d94603e5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb89fee8-99d0-40d0-8148-1cc9dab1622b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09da02c7-cd36-473e-894a-a307e21cfe67",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "get",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "7c5c2b8f-1a91-41bb-ab26-41fb2ea5aaf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97e03844-1211-46ea-a60d-3da3a58cdc02",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78c9a97a-4a9c-4d05-af46-955d71b26ec0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40e4b375-3db6-4072-8ae3-d1abc7af8291",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d76e0e57-7f8b-4674-b5ec-f16f9158580c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66dcb2cc-7a8f-44de-a48c-e11dcd683a2a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0099511-759c-4687-8363-96f5e027fcea",
      "documentation": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#Action=CreateDBSubnetGroup",
      "responses": [
        {
          "uuid": "391630d9-c826-4ece-9c37-03cb7a82584a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b31459d3-bff8-4169-9fcb-0c0001c2f314",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ff034e2-46f4-4456-b0c8-9d9b97f75b1c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a51305c-5c20-44ef-bfe9-77dcaa6c5046",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f4afb0-c148-41db-a3c7-1af0225e83be",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36485ca6-05b7-4a45-bc16-8f32b67c4123",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2279911-e791-4267-a3e9-0919c8d67228",
      "documentation": "<p>Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIdentifier</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIdentifier</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <note> <p>RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "70a8f243-4ccf-41f4-82ad-0caadf9dabb2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "665c91ae-042e-4ea1-ba24-1f9339384432",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f69143bd-875a-4f4b-896f-90e1ca7cad39",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba5fce3b-2c4c-40b0-8987-36c12bd881a8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56f40deb-982b-4601-8cec-f3d824be5dec",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d43156-ad44-41d5-83c0-0d832b806586",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d05e0577-9602-4a2b-b273-98b532662671",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5f80c8f-ce54-4370-a21c-8e0c1f657af3",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16d135cc-d099-4dcd-96a9-56cbec6b4329",
      "documentation": "<p>Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (<code>SourceType</code>) that you want to be notified of and provide a list of RDS sources (<code>SourceIds</code>) that triggers the events. You can also provide a list of event categories (<code>EventCategories</code>) for events that you want to be notified of. For example, you can specify <code>SourceType</code> = <code>db-instance</code>, <code>SourceIds</code> = <code>mydbinstance1</code>, <code>mydbinstance2</code> and <code>EventCategories</code> = <code>Availability</code>, <code>Backup</code>.</p> <p>If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType</code> = <code>db-instance</code> and <code>SourceIdentifier</code> = <code>myDBInstance1</code>, you are notified of all the <code>db-instance</code> events for the specified source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the <code>SourceIdentifier</code>, you are notified of events generated from all RDS sources belonging to your customer account.</p> <note> <p>RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateEventSubscription",
      "responses": [
        {
          "uuid": "5a827b3d-1d6c-4bf7-b5b5-aa4c3a8c0339",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6ed4bad-267d-43d2-86d3-7ab6ca0bddfb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27af4cac-7a1b-451e-b0cf-73186b914b5a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionAlreadyExistFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f70a1c0-5b40-48b4-a1aa-eec1a3b9e58c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e401ab1f-8af8-4eef-8816-60496e57fc3a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd59daf7-a2d4-47c3-b6da-145467bb9473",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07742649-5e38-4a62-89c7-aaf89bf9a5af",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3529deb-38ab-49ea-8572-b07c637fb663",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d75eb92a-782c-4540-901c-7f85975c5bde",
      "documentation": "<p> Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem. </p> <p> You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=CreateGlobalCluster",
      "responses": [
        {
          "uuid": "676d4343-8313-4c1e-a609-f520eb24a3dc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80aea617-958a-4273-b426-3927e14f4faf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b332bdd9-4668-483c-9256-6483ab248a80",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "GlobalClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1afaa57-6805-4ac0-b2ee-13725f1d1377",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca333944-f7cb-43e6-b1df-104711c3074c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8342c921-82c5-484e-a39c-1cf158db8a36",
      "documentation": "<p> Creates an Aurora global database spread across multiple Amazon Web Services Regions. The global database contains a single primary cluster with read-write capability, and a read-only secondary cluster that receives data from the primary cluster through high-speed replication performed by the Aurora storage subsystem. </p> <p> You can create a global database that is initially empty, and then add a primary cluster and a secondary cluster to it. Or you can specify an existing Aurora cluster during the create operation, and this cluster becomes the primary cluster of the global database. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=CreateGlobalCluster",
      "responses": [
        {
          "uuid": "416cd146-6dd7-4963-82c4-d67f36234679",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17e13dd1-6bc5-4c08-afbc-1735ce424c2f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b8dea75-312b-4692-a598-725efd8dc110",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "GlobalClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b94dadfd-31db-4163-9408-838f2b972266",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c6e1441-a79e-4260-b598-544bcecc0ff8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8ceca33-083e-4aee-94d2-8a5fa0ffefe4",
      "documentation": "Creates a new option group. You can create up to 20 option groups.",
      "method": "get",
      "endpoint": "#Action=CreateOptionGroup",
      "responses": [
        {
          "uuid": "2b32f580-df57-464f-b159-553606c35f03",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e078fc5-d0e6-4b8f-ac22-db5eb9593326",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4186f215-1ca1-4647-ab57-812bc015a404",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d28dcdf-5073-4723-abb8-c407d9c46b7c",
      "documentation": "Creates a new option group. You can create up to 20 option groups.",
      "method": "post",
      "endpoint": "#Action=CreateOptionGroup",
      "responses": [
        {
          "uuid": "eedffbdb-3c2e-4ef3-b5bb-fe9c4f1143b1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d72397-9452-48e8-8ef4-67d15dab69cc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fac68524-9b95-4432-a1ef-99e393ae72f0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3ba9499-245b-406f-9f0f-d1b8c11cd19c",
      "documentation": "<p>Deletes a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=DeleteCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "db22701f-5526-4279-8087-bfbd135fad1c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04c26e0e-e807-4fbc-a93d-cde848d3d7ad",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "691412bc-6e18-481a-8902-30d32658aeff",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d94dc79-8be3-4869-b253-337fc496271c",
      "documentation": "<p>Deletes a custom Availability Zone (AZ).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=DeleteCustomAvailabilityZone",
      "responses": [
        {
          "uuid": "87b5941d-d856-42f9-8b35-1ad44eeeb0b9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27e32d80-3aa6-4d66-9ae0-8cd4c1526066",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afecb77e-ff9f-464d-a48f-0cec9bd6223b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aafbabf2-80d1-49ae-98da-838d798dce4c",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "e80fde0e-345b-445b-b47a-842e5ce6b506",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "330c8e2b-0843-456f-864a-621709be4383",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2270c27-1983-4a4a-87be-3d0e67774777",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f9e98d-0046-42cb-9de4-eb844f873be1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e1e0457-9e57-4c2d-8ef2-093d572a86a6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68e1ea51-6f3a-418f-a7f6-ec8e4a8cb103",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec14963c-3c15-4190-b1f8-85ee558df92e",
      "documentation": "<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBCluster",
      "responses": [
        {
          "uuid": "30c2bced-7fcd-4445-8c0a-68ed21a27210",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2c432c5-1f66-4bc8-8561-83c7cc5bca5d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14f9ce1c-4def-4c76-a837-db1677683e53",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e88c800-5249-4af4-a767-5f30601dc1df",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cee7343-ca13-4467-b5af-53a947fe8488",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4be9fc2e-7497-4805-b539-094c65fd7572",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c193efa2-d57c-4994-84c2-40a0a3cba249",
      "documentation": "<p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "4d83ef0d-cab6-4f33-ba12-2e15161f2adc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed87922-02ed-4342-a69b-0c06643ff428",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b12db8-eb67-4825-babd-a4747a1874c8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfc8f85a-a5b6-4c62-a4e4-9f432868915b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6ee213a-cc9f-406e-a53f-b2d1dc7440a5",
      "documentation": "<p>Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterEndpoint",
      "responses": [
        {
          "uuid": "8acb57a3-aba1-4eca-9e31-9f1ad5a41d9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed47bf5b-49a1-43a4-810b-b95c6036814c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c42a87e-a52f-426b-9594-8df52f750c31",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3b6f33d-247b-468d-98f3-026d26b72be8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9bf4b63d-4486-40a4-9b90-ed105aeb661b",
      "documentation": "<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "8fe0d5a8-5869-42ec-a66c-a96c9116707c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79534b1d-640d-4c83-9afa-bc0b4f1ed1af",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f571d06c-c3f6-4bce-87c5-b06314ef9928",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d95faea9-333e-4e01-9aa8-cdec0b9c11ed",
      "documentation": "<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "f134ea6b-8f4c-4b34-9643-c2f29e0c644c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "532044cb-9d40-462d-baea-e2bcce43ebc0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d9a7ef7-808e-47a8-9c93-f13f5fe848e3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c096cec7-f444-4696-8a1b-13cc16ad981e",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "0ad988fa-4786-4641-b1fb-766685718ed8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90901b6c-985a-4cc4-987d-11b14e5085e3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20a25a90-aa43-4304-a520-1c7a7d7b17b4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5e714de-0911-4f30-8160-86a8b40c23db",
      "documentation": "<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBClusterSnapshot",
      "responses": [
        {
          "uuid": "019ea73e-2035-4b89-89d9-96e9093d69e7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0931fe52-94d6-43d4-a628-22f38afd39eb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18f5cf50-f2e5-440f-afa1-94d4d11f1a88",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93d8c061-fad2-49ab-8469-dfa5c6ce8f02",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "3beee4ff-9eca-41cb-8991-e6bd3fc0de54",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3604e8b-8fe3-431f-8825-52be20a07b3c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b80b7df4-d74f-4192-b79c-8964c12ac8fe",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d33db0e3-e9be-4a22-bde2-4623eae813f1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a5d1166-4d79-48b3-b445-ba45ea6b49f8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27888a9-3bbb-4991-bf83-4b3fb7840e3a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "080952fc-6e96-4fcc-8ec4-b470d353e91f",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f364018b-539a-48d8-b6a6-be0d307a5ed2",
      "documentation": "<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and can't be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action can't be canceled or reverted once submitted. </p> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when you skip creation of the final snapshot with the <code>SkipFinalSnapshot</code> parameter.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you can't delete the DB instance if both of the following conditions are true:</p> <ul> <li> <p>The DB cluster is a read replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <code>PromoteReadReplicaDBCluster</code> API action to promote the DB cluster so it's no longer a read replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteDBInstance",
      "responses": [
        {
          "uuid": "723e4153-fc29-4c51-87be-40554edc7a59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ca42b2c-0c24-43b9-aced-78263140db04",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2adf1773-0e16-405e-8420-e8598f380510",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c9d3829-2001-4ad0-a19d-4db1023d9de9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dd5cbcb-dcf1-48a3-aedd-e5158cbbf25d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e948f749-3689-4431-95f1-339db8b6881f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "271a45b6-b06d-4182-83e4-5de196d82478",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22df2517-b9d3-43db-87ea-d12d9bfda75e",
      "documentation": "Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.",
      "method": "get",
      "endpoint": "#Action=DeleteDBInstanceAutomatedBackup",
      "responses": [
        {
          "uuid": "2518d467-ad39-45fb-a079-775702b0105e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e40be9d-fb06-40ca-ac84-239d73ce69cf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceAutomatedBackupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc11a90-a0aa-4190-987c-99cdef31d45f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf8ffe97-1ea0-4cfc-9589-588864387f43",
      "documentation": "Deletes automated backups using the <code>DbiResourceId</code> value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups.",
      "method": "post",
      "endpoint": "#Action=DeleteDBInstanceAutomatedBackup",
      "responses": [
        {
          "uuid": "3fc6028a-55bb-4ee0-863f-a26e44ff134e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3db580b9-f9b4-4410-b1d3-8e44dda29fb7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceAutomatedBackupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86e04b4c-45d6-4284-80f9-9a7c24d2b5ed",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0246d25e-d191-4a61-b8f7-5450da85711e",
      "documentation": "Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.",
      "method": "get",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "f4b0b8db-f7a3-4f1b-b888-9adcdde6db44",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06a89837-3a15-469f-a2d2-6091a6b2f381",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3962874-9bb1-4991-b86d-d90136202933",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77e70c85-ac85-4499-92ce-c13748aebb4d",
      "documentation": "Deletes a specified DB parameter group. The DB parameter group to be deleted can't be associated with any DB instances.",
      "method": "post",
      "endpoint": "#Action=DeleteDBParameterGroup",
      "responses": [
        {
          "uuid": "fb42a481-d126-4646-a3b6-37034455e597",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0642055b-e55a-40a6-8aa9-c6a2b575b948",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3aafa60-0519-4637-86c0-33b48c59bb72",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "245e1aea-d781-4f6c-b2dd-d530045ba337",
      "documentation": "Deletes an existing DB proxy.",
      "method": "get",
      "endpoint": "#Action=DeleteDBProxy",
      "responses": [
        {
          "uuid": "94a649a3-3587-4d59-b5f2-2b20674a9dbd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0af83143-d47a-4033-a32a-239f812bb4bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f24bc13-ce84-4779-86d4-5391cd4c1bc5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3ad85ce-d8e0-40aa-8c59-3d45a8f387bb",
      "documentation": "Deletes an existing DB proxy.",
      "method": "post",
      "endpoint": "#Action=DeleteDBProxy",
      "responses": [
        {
          "uuid": "1171f8dc-f528-4e48-8623-18fbaf5b71ab",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08d30a50-c373-4cf7-97d3-e5dc8cab6f68",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca738638-3367-4b3d-92d3-49d3ec73b4d5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e1f9c29-19eb-4a9d-83c8-39dc3e0d95bd",
      "documentation": "Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.",
      "method": "get",
      "endpoint": "#Action=DeleteDBProxyEndpoint",
      "responses": [
        {
          "uuid": "28b5ac67-01ac-4f19-a7bc-97e998bc30b1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6007d21-3893-4ec2-95b2-f3d45edc3dac",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5711f7e2-25ca-40e7-ba99-cc685aa0080d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "630e6b7e-3e6e-4c41-a9d5-dd0b3c7c6771",
      "documentation": "Deletes a <code>DBProxyEndpoint</code>. Doing so removes the ability to access the DB proxy using the endpoint that you defined. The endpoint that you delete might have provided capabilities such as read/write or read-only operations, or using a different VPC than the DB proxy's default VPC.",
      "method": "post",
      "endpoint": "#Action=DeleteDBProxyEndpoint",
      "responses": [
        {
          "uuid": "2e668053-6401-4b91-8f62-94b930e03211",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ac51955-3db7-46da-b7cb-c4743abf240d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "797f8ea7-06a2-4309-9620-62a0ef72a2c7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "619ea27d-cd61-4d65-bf65-3d8acc9d1fa5",
      "documentation": "<p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSecurityGroup",
      "responses": [
        {
          "uuid": "af57e68a-a04c-4196-9142-abbf7ca607c6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00e78ad2-8162-4e20-8a16-1cad115e6ecf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c1fc9cc-7e7d-48e7-8909-b8014ca1fc8e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbdd1095-fc8c-4ca4-8ef0-a9b954dba076",
      "documentation": "<p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSecurityGroup",
      "responses": [
        {
          "uuid": "bd466def-23db-425b-90eb-e611c5c85bdb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81c47dad-cab6-4955-885f-cef6fba995e7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3089737f-5884-44ca-a809-8a5546c3a909",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c58ac5d5-9e89-4b6b-b953-25aabcf0e193",
      "documentation": "<p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSnapshot",
      "responses": [
        {
          "uuid": "dfbb11e3-c20f-498e-97c1-3859993e4cd6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6107a4e5-00fa-4514-9142-931ed41bedff",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bbf9a51-6733-45b7-8501-a92c7d1093f3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88f55a27-a9b0-48a0-971a-c41e2f2e2542",
      "documentation": "<p>Deletes a DB snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB snapshot must be in the <code>available</code> state to be deleted.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSnapshot",
      "responses": [
        {
          "uuid": "388b34b6-010b-4e40-b076-d68022dd4eb8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75f0e40d-b107-40f8-baea-bf4c2bf18b25",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffe80b34-6f0b-4d30-b8d5-6be29897e122",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bee06e90-2607-4493-83ca-e91735474385",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "50db2b56-d1a0-464f-8b10-873d4f5cf1d7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af1eff77-2b14-410c-a031-6eb300493f4a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2af3af87-1254-4668-80cd-95a65ab3ab2a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef80148a-1d55-409d-a0f6-94cf0ea7fe4e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86ec3999-939c-420c-a8a4-000443286ddb",
      "documentation": "<p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteDBSubnetGroup",
      "responses": [
        {
          "uuid": "fd62ea13-864c-415b-8200-f5c60fb89b88",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43e0bcde-6a3e-4498-9b07-7afbbf4c9a1c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afd326be-7e47-46f4-b9ef-b62bbe4f61f2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSubnetStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dbb3ad5-977c-4982-b194-96fd4dcb7aab",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21af6581-5e22-46a9-8682-aba2bb23f7df",
      "documentation": "Deletes an RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "7502f08c-37e3-4929-b516-19b4cb696a80",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17459ab2-3479-4c48-b571-ff8d9133f4cc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17fdf9e4-a210-44a4-8d02-1f9a081dbfe6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b91ffc7-d15b-4899-bb63-3b362b08cd63",
      "documentation": "Deletes an RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=DeleteEventSubscription",
      "responses": [
        {
          "uuid": "e7cf33e8-bae7-4faf-a4d4-81992bf257f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6680715-cff7-41c3-b8ad-c2357a79e78d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ceab6672-f003-4318-a8a0-89fa2668efed",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidEventSubscriptionStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fc455b7-beba-45f2-b952-e80a6f82a58e",
      "documentation": "<p> Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DeleteGlobalCluster",
      "responses": [
        {
          "uuid": "35273ad7-401b-4bb5-b5d1-cacfde1d1cda",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5eeaaa-7c59-485f-9b3d-1504bda0310d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58310ad7-e345-409b-baad-4fdf78d1d9d8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83bf8b76-9769-441f-a75e-af8dcaa2c6b9",
      "documentation": "<p> Deletes a global database cluster. The primary and secondary clusters must already be detached or destroyed first. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DeleteGlobalCluster",
      "responses": [
        {
          "uuid": "920c8344-9837-42ea-8f5d-2adc3d676074",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d5c4bc7-8fb8-4d00-82e8-c9d3e7582564",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8518446c-1094-4d7d-97b6-ef83f9cfb858",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f4f9543-b4a9-4b74-ab63-f46edd3a5a77",
      "documentation": "Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "get",
      "endpoint": "#Action=DeleteInstallationMedia",
      "responses": [
        {
          "uuid": "e2484ea8-74d0-43ea-ba7a-5b67e2bad460",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afa205ae-a2e5-4c36-bf6d-7bbacbf99993",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cb04265-78af-4fbd-8314-ceeecf53b8bb",
      "documentation": "Deletes the installation medium for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "post",
      "endpoint": "#Action=DeleteInstallationMedia",
      "responses": [
        {
          "uuid": "70f9647c-94fb-4bb2-838c-fa6b26742031",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "743d6283-1565-4e2f-a585-cf4cc441922e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6adbfcfc-831e-4c77-849b-2b6f91bbd5e1",
      "documentation": "Deletes an existing option group.",
      "method": "get",
      "endpoint": "#Action=DeleteOptionGroup",
      "responses": [
        {
          "uuid": "b81f57ef-5d5a-4211-9e74-8a803bdd3571",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "495acffd-43c4-4174-8478-3d4e96efb757",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86dbf5cd-769e-43cf-8255-622095d448d3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14ddd74c-d9cf-471e-89b7-ecf40f5629f6",
      "documentation": "Deletes an existing option group.",
      "method": "post",
      "endpoint": "#Action=DeleteOptionGroup",
      "responses": [
        {
          "uuid": "3077e6ee-5e7a-47e9-be0b-0b8cbb5b3bd1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2361ce2-ad07-40e8-b110-4a5eb17e96aa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4942ce71-12a2-419c-9be7-85c280fa171d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92527094-602b-47ad-b0e7-d1ec553b5dc2",
      "documentation": "Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=DeregisterDBProxyTargets",
      "responses": [
        {
          "uuid": "4d314af7-b25d-47ea-bb98-bf2ed37047de",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3d2cfae-3da4-4ba3-a6c2-91da72b856d5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60aec59b-ab4b-44c4-9573-6dfe3f32ecae",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f8cd440-3ddb-4821-a131-bcf4bb803c0c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d58d2e56-8f9f-4c26-99fd-5fba2d9df5be",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48fb3879-91d2-4df5-b15d-1b77e338bd2a",
      "documentation": "Remove the association between one or more <code>DBProxyTarget</code> data structures and a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=DeregisterDBProxyTargets",
      "responses": [
        {
          "uuid": "e184348e-4661-4218-bf2a-d45fbfa46c17",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899e0647-cefd-445d-9c69-23c194c6b87e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b327a287-ab33-457c-98cc-f9832fa42237",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b035f5fe-9bc6-4850-8d3a-df09e9d74811",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b03d410-2d30-4814-a797-8d64a948a823",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aca5635c-fbc7-4bab-849f-b7ed6118b9b9",
      "documentation": "<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "431be12b-2e3a-4566-9b87-7fe5abf9ad9a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c503404-8019-4ecf-a31f-286f24849d7a",
      "documentation": "<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota's maximum value.</p> <p>This command doesn't take any parameters.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeAccountAttributes",
      "responses": [
        {
          "uuid": "f432ee69-d3e8-4875-ae91-fb44de624641",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61b4b9c6-ff58-4744-8b41-078cadd12be5",
      "documentation": "Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.",
      "method": "get",
      "endpoint": "#Action=DescribeCertificates",
      "responses": [
        {
          "uuid": "5726d4a7-ef73-48aa-b938-c5cd74535f87",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c839a34b-e37b-492c-8b2a-6c1fd67892cd",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61889810-7eee-4937-a926-f5aaa2fa93b4",
      "documentation": "Lists the set of CA certificates provided by Amazon RDS for this Amazon Web Services account.",
      "method": "post",
      "endpoint": "#Action=DescribeCertificates",
      "responses": [
        {
          "uuid": "92bb4acf-111e-47d2-ae45-2a989b2c3f4f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01af4d9e-f348-4adf-b116-f73ee3f5e8be",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa9885ce-6f34-42d4-88f9-14c62f202b95",
      "documentation": "<p>Returns information about custom Availability Zones (AZs).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "get",
      "endpoint": "#Action=DescribeCustomAvailabilityZones",
      "responses": [
        {
          "uuid": "478e311c-9459-41d4-b7bf-0b41481c95c8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e14c693-f141-4423-b184-884a0201121f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4464d9e6-33a4-459b-8c08-038f171f4ae4",
      "documentation": "<p>Returns information about custom Availability Zones (AZs).</p> <p>A custom AZ is an on-premises AZ that is integrated with a VMware vSphere cluster.</p> <p>For more information about RDS on VMware, see the <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html\"> RDS on VMware User Guide.</a> </p>",
      "method": "post",
      "endpoint": "#Action=DescribeCustomAvailabilityZones",
      "responses": [
        {
          "uuid": "442ed35a-439c-4a43-a67c-011356a4671b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4722007-16dc-4060-832b-7ad6d65d2a66",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22d2ec39-d3f9-494e-845a-0492fe2e335d",
      "documentation": "<p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterBacktracks",
      "responses": [
        {
          "uuid": "0585b456-3303-415f-8984-688ef0d1e3c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e55f342-4c60-4317-b5f0-8135b1be2716",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d92d0a88-3dd3-42e5-ac3e-31d80f771078",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterBacktrackNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2287b411-0579-4d60-93e0-29355c67dad4",
      "documentation": "<p>Returns information about backtracks for a DB cluster.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora MySQL DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterBacktracks",
      "responses": [
        {
          "uuid": "f8be7881-38f9-4c74-b379-6baa024fca18",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f254b05b-0de4-4786-85a4-09f757d05785",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a6a54ca-1fcb-48af-a19e-3ecaa08a8a1f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterBacktrackNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d418e72-06e5-467f-bc3c-79ea6b8ddfc1",
      "documentation": "<p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "be8c6ed5-1d67-47f1-80a4-399843ed50ae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7df6103a-b617-46ce-bf16-c31a1dd29647",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d993342-f05e-41fd-af75-cd039191d9d4",
      "documentation": "<p>Returns information about endpoints for an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterEndpoints",
      "responses": [
        {
          "uuid": "9eb87df3-45a7-4d46-9ef8-68c8a2cad465",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eeb07d72-6264-402a-96ef-00e797abd8ba",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb6943fd-d0c4-4b86-a8c3-9a6daee9f7ad",
      "documentation": "<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "e9663191-b1ce-446a-9054-0a9fcb011aa4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c51377-5aef-4a9e-a54e-727f6e05d57c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "019ef3ea-1c1b-4292-9fbe-ecccf7b9538f",
      "documentation": "<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameterGroups",
      "responses": [
        {
          "uuid": "0404cad5-ff40-47cc-a887-6cc5e35848a8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4379066-d6ae-4402-a8c8-039ab17e300a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d8e90ab-49df-45fe-bc2f-4b207c09a29b",
      "documentation": "<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "a6dc1800-2645-42b5-80a5-673ea4809b6e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac66de71-97d1-4d8f-ac9c-67bed4984c72",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b133c66-3523-423c-b663-47ba7705c323",
      "documentation": "<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterParameters",
      "responses": [
        {
          "uuid": "a9da05c4-2943-4241-a4de-e24a4c7c5d68",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b4416d1-d010-4359-a448-93937e878b93",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1ff3415-b505-41eb-ae65-e04377f5528d",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "d2156770-f0d4-459f-b4af-6002e5454728",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "984fe496-2f0f-4de9-920e-255e6c0806bf",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fdc08b0-8c2b-4767-b15e-aebac27d3dad",
      "documentation": "<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshotAttributes",
      "responses": [
        {
          "uuid": "2890d359-2442-46a1-b4a1-9fe5f1b935ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5119fa14-d242-449e-ba78-90cb076e6c6e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d4b2753-ced1-4ad8-8a29-9d86337c652e",
      "documentation": "<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "b9aec497-9999-43a0-93b9-8cff61917403",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d831b93-55b2-4eea-9ae0-a73c003f583e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f5ced6d-ee18-461b-994a-2fec99ea9348",
      "documentation": "<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusterSnapshots",
      "responses": [
        {
          "uuid": "372de79a-9744-4210-8695-fc1b53917557",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60b0ecf2-a8c7-4b41-9901-62dd55269d80",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba953fb6-2fa3-4c8e-94d1-3263f90bfd14",
      "documentation": "<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "2a854469-3ee4-4e5f-bbb0-b54e024ca252",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d2d4e3f-1a9a-4a41-8cc0-29c63fac7ec1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "635f77b0-805c-4b70-b4be-c953647d664b",
      "documentation": "<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBClusters",
      "responses": [
        {
          "uuid": "99e1d9a9-4b03-46ce-a33d-168e03fa0cfe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3670e13a-6885-4d8c-b2d0-d080cb653bc1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe9dab7f-2c43-436d-96cc-7e43878808a0",
      "documentation": "Returns a list of the available DB engines.",
      "method": "get",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "244d8d15-f6b2-4226-921d-334d23dc66aa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71aed929-2ac8-424a-8e11-d1f6224eaaea",
      "documentation": "Returns a list of the available DB engines.",
      "method": "post",
      "endpoint": "#Action=DescribeDBEngineVersions",
      "responses": [
        {
          "uuid": "0b5c87d3-d7fb-4fb6-a5ba-a0378167d228",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ec91b00-5a74-4280-a27a-a530cc81d26b",
      "documentation": "<p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBInstanceAutomatedBackups",
      "responses": [
        {
          "uuid": "e45617d9-aa6b-4345-bfa3-c3339cc6fd85",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a866a07-6012-4890-bd87-5e936920d086",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdad788d-5b64-4599-b864-eb2964da0682",
      "documentation": "<p>Displays backups for both current and deleted instances. For example, use this operation to find details about automated backups for previously deleted instances. Current instances with retention periods greater than zero (0) are returned for both the <code>DescribeDBInstanceAutomatedBackups</code> and <code>DescribeDBInstances</code> operations.</p> <p>All parameters are optional.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBInstanceAutomatedBackups",
      "responses": [
        {
          "uuid": "b0a84795-8c55-478b-97e2-7695d17f8d41",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4ccbd82-1738-40e0-912e-327f4242e27e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d67d1b17-c365-422d-b040-a8779fcb2e95",
      "documentation": "<p>Returns information about provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "5f1a1194-ff17-4b5f-87d4-3ff2ff59dcc1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f034926-43d5-4177-a6e6-01fb5a67daea",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "611e4595-eb76-488f-b696-866317b1ed7d",
      "documentation": "<p>Returns information about provisioned RDS instances. This API supports pagination.</p> <note> <p>This operation can also return information for Amazon Neptune DB instances and Amazon DocumentDB instances.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeDBInstances",
      "responses": [
        {
          "uuid": "efde0590-93e3-45f9-9a52-6b1857e1a193",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43d6bf6c-59a7-45bc-a799-0577f522b18f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0802baf-d38a-4fa7-b165-06bdb0683b32",
      "documentation": "Returns a list of DB log files for the DB instance.",
      "method": "get",
      "endpoint": "#Action=DescribeDBLogFiles",
      "responses": [
        {
          "uuid": "69d1c586-fbd2-494b-80e8-4574df658c0d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d314442-9955-41e7-bfb7-5aaac4ee266e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22555658-d6a2-4167-b803-d5a3a2ee3f31",
      "documentation": "Returns a list of DB log files for the DB instance.",
      "method": "post",
      "endpoint": "#Action=DescribeDBLogFiles",
      "responses": [
        {
          "uuid": "b3cb140c-9efe-455e-a1b5-6f303ca2fa6a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a7f444e-f158-451d-a9c4-eb541c21393a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2d8b0b3-43d6-4fb8-951a-3fcb28e46e0b",
      "documentation": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "f583eb68-2950-4d53-baf0-3155dd2ce9ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9cec99c-fb50-4d6b-ae26-bb42ac741720",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ce4916e-671f-445e-a7f9-7585013d0f6c",
      "documentation": " Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. ",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameterGroups",
      "responses": [
        {
          "uuid": "7695bf5c-9dfd-4c9a-93ab-6a64015528ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94cc874d-6fe5-4945-a78d-7b66150c5eb7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d22c1124-558b-4227-81a7-eb7e161b6a1d",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "get",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "8f8386ac-22ec-4a00-9732-2f0fc0ef5dbf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "412edc94-34aa-4886-b0b2-f78a282ff676",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a37039a-f526-442d-93d5-434ce7d83338",
      "documentation": "Returns the detailed parameter list for a particular DB parameter group.",
      "method": "post",
      "endpoint": "#Action=DescribeDBParameters",
      "responses": [
        {
          "uuid": "fbda8c85-be8b-460b-9ddf-6a8c398578d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d474897c-5e83-47e1-95dc-01d91c7e739d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e513dea-9e08-4ad5-a3c0-0d2974f51e78",
      "documentation": "Returns information about DB proxies.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxies",
      "responses": [
        {
          "uuid": "a2fa8307-fcad-4b38-8a81-40dff8b41d98",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aecfb6d-c1af-489d-90dc-2221904600ba",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96b565d6-a15b-4c55-99e3-c7ca9f9025d7",
      "documentation": "Returns information about DB proxies.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxies",
      "responses": [
        {
          "uuid": "7fae478b-5e31-4634-b8f2-cc195abcfc1e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1556cae-d895-419b-bed9-029457c9024b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5f51ccb-ce39-4057-8497-87e260c30787",
      "documentation": "Returns information about DB proxy endpoints.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyEndpoints",
      "responses": [
        {
          "uuid": "de7fc6d9-54f6-41e4-b511-362eaa6cfe17",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a87eae34-4122-441d-add0-bbeb0fb12d77",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6c811ff-bb45-48fc-b20b-cba9e1654359",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f18baeb5-9369-456f-ae2a-4398915757b6",
      "documentation": "Returns information about DB proxy endpoints.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyEndpoints",
      "responses": [
        {
          "uuid": "973c785e-dace-409f-ba35-db5bedc41c03",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecbac2be-f43d-4498-8a39-a4382d76393b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "656d5077-909a-404a-a608-4aba31ffb446",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9a0ba2d-d5e1-4575-8b84-2e4b7aad7571",
      "documentation": "Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyTargetGroups",
      "responses": [
        {
          "uuid": "6cc3158a-19bc-423d-900c-6bece1522a26",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ca385a-7039-4fcb-abd6-082630a212c8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd17a7cb-e897-450d-b366-a0945fcd936c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c528e379-2965-45c6-8dd1-2d8508524735",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d59dec03-2e48-47d9-82a7-634c45000394",
      "documentation": "Returns information about DB proxy target groups, represented by <code>DBProxyTargetGroup</code> data structures.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyTargetGroups",
      "responses": [
        {
          "uuid": "98a932f0-05d6-4cb3-8fb5-943e9371d683",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb8f3ee7-460a-4102-bb36-e4231e9a8ff5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8b21b81-1c4f-4c30-9c6f-ff5b33b896c4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "647b7125-4f3f-4954-a002-bda96dcd64ad",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78d639ee-b7e2-45a4-bb19-411ee06f86d6",
      "documentation": "Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeDBProxyTargets",
      "responses": [
        {
          "uuid": "62ff5361-59d3-4328-a79d-e9abafef50cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6b927b3-bc99-4f5b-ab51-8d54730c37ed",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d616e0d8-8c9b-4bcf-b74a-590fbbfea7d5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e9614e7-3de5-4c0b-8cc5-e3d566930d58",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c403a92-71f1-4ca5-9f3b-9f73db65a386",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc36f857-82f2-44c6-8d99-8053215af3e3",
      "documentation": "Returns information about <code>DBProxyTarget</code> objects. This API supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeDBProxyTargets",
      "responses": [
        {
          "uuid": "30cdeb0b-81ca-452d-84bf-5679dc0f1d03",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "043ff503-3814-42fc-9d57-61aa4c14a4bb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfc89ff5-a36d-4e1c-b942-ae375b874321",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54d34553-35c8-43c9-9f6f-7cae50751da7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c5b29d4-b238-4f54-91b5-2f454a4dcb5e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "396a3f8b-0c09-428d-8c5b-3f5b24979ba9",
      "documentation": " Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. ",
      "method": "get",
      "endpoint": "#Action=DescribeDBSecurityGroups",
      "responses": [
        {
          "uuid": "96d20239-a358-4a3f-87bf-1828d87c75cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b75a9caf-d14b-4f95-8317-3e045aac38a3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e9d4df5-2f49-49f3-9ecf-06f5f0dfca8a",
      "documentation": " Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. ",
      "method": "post",
      "endpoint": "#Action=DescribeDBSecurityGroups",
      "responses": [
        {
          "uuid": "a0cb2fb7-caac-427f-aed6-5e9101911c10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a26a8623-abfa-4cb5-9b37-1f017e961519",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "504787e8-f2fb-44ea-968a-ba886331f2e8",
      "documentation": "<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBSnapshotAttributes",
      "responses": [
        {
          "uuid": "063cd39c-f5ec-4e89-973c-5dfccf73ac1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "388453ca-2904-4a2d-8fec-a5d65f9ff50b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc3803d3-3500-4701-ab5d-16591d19c53f",
      "documentation": "<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other Amazon Web Services accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the Amazon Web Services accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.</p> <p>To add or remove access for an Amazon Web Services account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <code>ModifyDBSnapshotAttribute</code> API action.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBSnapshotAttributes",
      "responses": [
        {
          "uuid": "43e6dad6-6477-4b72-b7f5-ea3b399cd56c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "573994da-49ad-4fd8-8161-864dca6b24c4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6ec0258-fd20-46a1-9d74-5933ee42fd67",
      "documentation": "Returns information about DB snapshots. This API action supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeDBSnapshots",
      "responses": [
        {
          "uuid": "0884300f-5289-4981-ae2e-17794e11c8d0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5b97def-fc44-4d22-9dc6-2bc788450445",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7597fb9-b007-401e-ba86-fd0dc56ab14e",
      "documentation": "Returns information about DB snapshots. This API action supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeDBSnapshots",
      "responses": [
        {
          "uuid": "bd4c2764-8019-4cdd-a34b-82fdf937fe43",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ca527c-8c55-42f7-bef3-fb3f5d39fbd8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f41c6afc-adde-4d66-8aae-ea534c7033ec",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "get",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "d2212e23-a812-4f14-b5e7-6e29a59af21d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3575062d-00ba-4ebe-a927-c9af7168d18e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24b27b41-cd94-4232-a68e-750ae1f12eda",
      "documentation": "<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">Wikipedia Tutorial</a>. </p>",
      "method": "post",
      "endpoint": "#Action=DescribeDBSubnetGroups",
      "responses": [
        {
          "uuid": "5c8be543-b9e0-46e6-b325-fc543d7ed22f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68444481-caed-4360-8ae1-1fd6be0e57fa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79902bd0-c9f0-4111-801a-77e061014d0b",
      "documentation": "<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "2b49ebad-b2f0-4013-a901-3779fce500a0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fe87b28-0634-4c12-b503-c6b0959ac557",
      "documentation": "<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultClusterParameters",
      "responses": [
        {
          "uuid": "1c369750-5cd2-4a5c-8e45-c49e622357e4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f10bcae2-5507-43d9-85f2-83235f07f633",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "get",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "265c69af-dc19-42b7-9e3e-3af0b55e5b52",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "585750bf-69e5-4819-9960-661bb1d91be4",
      "documentation": "Returns the default engine and system parameter information for the specified database engine.",
      "method": "post",
      "endpoint": "#Action=DescribeEngineDefaultParameters",
      "responses": [
        {
          "uuid": "957971c8-f290-422a-b937-a148aab06cb0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72ae64ef-260d-4c0e-94fa-cb7a474235e9",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "get",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "4924e224-4b03-408e-8910-e1b1895f8b32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c2d2ca9-37c4-4358-b129-bc99bfc06d6e",
      "documentation": "Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"> Events</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "post",
      "endpoint": "#Action=DescribeEventCategories",
      "responses": [
        {
          "uuid": "f1992d8d-2e17-4d48-a7a9-2687a645ecda",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff15d2b2-ab75-441f-a3f2-772067ffc5f6",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>",
      "method": "get",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "aae7f7c4-4c41-4e5f-99a5-784c49262a09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d875034f-baa7-4795-aba2-00ea1639384b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a877a58e-92a5-4518-8201-21cb72a20b79",
      "documentation": "<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p> <p>If you specify a <code>SubscriptionName</code>, lists the description for that subscription.</p>",
      "method": "post",
      "endpoint": "#Action=DescribeEventSubscriptions",
      "responses": [
        {
          "uuid": "e2f6fba0-0ee4-406f-afa0-9f6c7d6059a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e520ea79-a96c-46db-9842-276a87273a60",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f3edc12-47e7-49cc-aaeb-7862f575ef80",
      "documentation": "<p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots for the past 14 days. Events specific to a particular DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots group can be obtained by providing the name as a parameter.</p> <note> <p>By default, the past hour of events are returned.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "741c7850-f66d-4f9f-b2ee-cc671d663109",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27f1e237-3838-4738-b458-78192ba0bc4d",
      "documentation": "<p>Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots for the past 14 days. Events specific to a particular DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, and DB cluster snapshots group can be obtained by providing the name as a parameter.</p> <note> <p>By default, the past hour of events are returned.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeEvents",
      "responses": [
        {
          "uuid": "4c1b0565-eafb-448e-8756-bc5f8fefab01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfe325ca-9785-4358-b38d-49bcf34f0fd0",
      "documentation": "Returns information about a snapshot export to Amazon S3. This API operation supports pagination. ",
      "method": "get",
      "endpoint": "#Action=DescribeExportTasks",
      "responses": [
        {
          "uuid": "c306a353-cf8a-4dd5-acd6-b56b67445756",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5d9227b-20cb-42ed-bffc-637b2ae2ea59",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed2786bd-8156-4a94-8f53-746af9b30f5c",
      "documentation": "Returns information about a snapshot export to Amazon S3. This API operation supports pagination. ",
      "method": "post",
      "endpoint": "#Action=DescribeExportTasks",
      "responses": [
        {
          "uuid": "31207b8d-28f8-44bb-ae4b-c0bf64e922b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "253bc280-0e9b-4c03-b4b3-f555537e3c01",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ExportTaskNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f352498c-e443-4bcb-8a08-ee8e49bab6a5",
      "documentation": "<p> Returns information about Aurora global database clusters. This API supports pagination. </p> <p> For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=DescribeGlobalClusters",
      "responses": [
        {
          "uuid": "21b4fa64-2b50-4254-a752-95a402652be7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ddcf050-08c5-4e1b-a03f-5bdeceaed264",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a0b4d9d-cb4f-4612-9b34-1c9c79cd3333",
      "documentation": "<p> Returns information about Aurora global database clusters. This API supports pagination. </p> <p> For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=DescribeGlobalClusters",
      "responses": [
        {
          "uuid": "0b823753-7324-4945-8d1e-59920e20a658",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "912022d5-db4e-43fe-afd5-86b9eb8faead",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7ae8c10-220b-4351-a9eb-0a9c9c9c87d8",
      "documentation": "Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "get",
      "endpoint": "#Action=DescribeInstallationMedia",
      "responses": [
        {
          "uuid": "49283465-7b0a-45d2-9624-a7baebcafd98",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fc08f22-a2ed-4c4f-9fe9-574fa1d69093",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43a55e37-8b14-46c8-b98c-584c6d1b4601",
      "documentation": "Describes the available installation media for a DB engine that requires an on-premises customer provided license, such as Microsoft SQL Server.",
      "method": "post",
      "endpoint": "#Action=DescribeInstallationMedia",
      "responses": [
        {
          "uuid": "b92b0bcc-2ff0-46bf-b9a5-3fe27ccc562e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad69587a-13a2-4318-a1da-450ca94eb7d2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InstallationMediaNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bfe5ae2-de60-473f-9141-2701839ef30b",
      "documentation": "Describes all available options.",
      "method": "get",
      "endpoint": "#Action=DescribeOptionGroupOptions",
      "responses": [
        {
          "uuid": "5aa5600e-b445-4283-9410-acbb59708069",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "859873b2-d0c5-4292-a7c7-ee56954601f6",
      "documentation": "Describes all available options.",
      "method": "post",
      "endpoint": "#Action=DescribeOptionGroupOptions",
      "responses": [
        {
          "uuid": "402b415e-b75e-45b3-ad11-0d4a171dbaa7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f321b995-8de7-4b10-8101-b804ff89e706",
      "documentation": "Describes the available option groups.",
      "method": "get",
      "endpoint": "#Action=DescribeOptionGroups",
      "responses": [
        {
          "uuid": "9c501951-def2-4973-87cc-095b3254acfd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fa68af3-b30e-488e-aa94-ae59c040d847",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2381cd0b-c940-41cc-9313-1d50c9740b08",
      "documentation": "Describes the available option groups.",
      "method": "post",
      "endpoint": "#Action=DescribeOptionGroups",
      "responses": [
        {
          "uuid": "97f95ea2-a6ca-4c85-a548-8f3999752465",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d29fc2-a5d6-407f-b333-4e40a321cdc6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70b05a0e-a569-4b53-a084-43b6e35eee5e",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "get",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "8843acfd-e2a9-4605-a904-7607fa517401",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "655794ed-33cf-4da0-82cf-79b2d6389060",
      "documentation": "Returns a list of orderable DB instance options for the specified engine.",
      "method": "post",
      "endpoint": "#Action=DescribeOrderableDBInstanceOptions",
      "responses": [
        {
          "uuid": "4cab2b12-c78e-46f5-9a43-a5335a885e57",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a16e779c-b076-4e8e-aec5-9e65f6dfcc38",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "get",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "7cd15d4c-c810-4dbb-80cb-6110b2c4b846",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6e6b4b-89c4-4376-b56c-6888cfad3eec",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be39b17e-402a-4de5-b43e-79e38e82eb2a",
      "documentation": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
      "method": "post",
      "endpoint": "#Action=DescribePendingMaintenanceActions",
      "responses": [
        {
          "uuid": "956e9778-48e6-4e9a-ac63-e5a023aa3053",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b55985a7-879a-4f1b-a14f-c7311e00111b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3afef38-38e0-44f3-883f-5f8076f9ca7b",
      "documentation": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
      "method": "get",
      "endpoint": "#Action=DescribeReservedDBInstances",
      "responses": [
        {
          "uuid": "855ad1e3-6222-4e93-a7cc-6d52152a1478",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7695e66-069c-4d0e-a26e-b623a1f9df90",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61769c0f-721e-4a0b-8fb7-839ce64ab39c",
      "documentation": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
      "method": "post",
      "endpoint": "#Action=DescribeReservedDBInstances",
      "responses": [
        {
          "uuid": "1265b252-70d4-49da-bc67-35d88279ee2f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "450472fa-521a-47f8-b484-a6acdf10ee8f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95de8f3a-0b5f-4c00-adec-13567f682b8f",
      "documentation": "Lists available reserved DB instance offerings.",
      "method": "get",
      "endpoint": "#Action=DescribeReservedDBInstancesOfferings",
      "responses": [
        {
          "uuid": "4982f477-f56a-48f0-abe0-de5b26e79e18",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26a1790-df7f-4042-a9b5-e752b417dc99",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "094b6195-f10f-46cd-ba87-c19753738813",
      "documentation": "Lists available reserved DB instance offerings.",
      "method": "post",
      "endpoint": "#Action=DescribeReservedDBInstancesOfferings",
      "responses": [
        {
          "uuid": "cfcf8ab5-6a72-413f-b6e9-09eb6054e2ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccb2d259-cf10-42f8-abd2-888311bcb31a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0fe69ffe-b6ad-43e5-824e-66b4dd9e5a3f",
      "documentation": "Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from. This API action supports pagination.",
      "method": "get",
      "endpoint": "#Action=DescribeSourceRegions",
      "responses": [
        {
          "uuid": "956ab546-1efb-4b14-aa90-c25716b209ca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "511783dd-953e-4fa2-a7d6-438bb27225aa",
      "documentation": "Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from. This API action supports pagination.",
      "method": "post",
      "endpoint": "#Action=DescribeSourceRegions",
      "responses": [
        {
          "uuid": "17296f01-c23b-41c0-ba69-ac7d90632b34",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c60606d-a204-49f0-ba13-295885af0f42",
      "documentation": "You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>. ",
      "method": "get",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "188cde4f-fe95-488f-b1a4-84544b659eea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03d6394c-65a3-429f-b198-b54338dbec34",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dcf94bb-45ea-46b7-b61a-0e2546445092",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c011cb51-9999-44b7-bad6-9ba4ee1b8f6a",
      "documentation": "You can call <code>DescribeValidDBInstanceModifications</code> to learn what modifications you can make to your DB instance. You can use this information when you call <code>ModifyDBInstance</code>. ",
      "method": "post",
      "endpoint": "#Action=DescribeValidDBInstanceModifications",
      "responses": [
        {
          "uuid": "00acf1ef-3e9d-4e8b-a07b-bc5234b7df5c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bad6fb0-4848-4ae0-acfd-ff7efc52db55",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99df33e1-6965-4ca0-9f43-0b6cda79ca51",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24061d5c-436e-4896-9dbb-d8086db8a76a",
      "documentation": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
      "method": "get",
      "endpoint": "#Action=DownloadDBLogFilePortion",
      "responses": [
        {
          "uuid": "4390bca9-7092-4e72-b3bc-a5403a531a40",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71fdb010-0a5e-47e9-bbfe-0e94b0308b3a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "686f5e8a-705e-4156-be1c-048f2cc2341e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBLogFileNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2e0abbb-e7da-49b6-8492-e94d7433c2ac",
      "documentation": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
      "method": "post",
      "endpoint": "#Action=DownloadDBLogFilePortion",
      "responses": [
        {
          "uuid": "b50af05c-55ac-4913-9b7e-d277599454d3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7763725c-0a6e-4a10-b544-d5f6e3d6bdd7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e151a005-81d6-4165-82ea-d03b833f2b20",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBLogFileNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "743ca571-7bb5-43d1-93bf-a85581b14ef7",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "44d69419-f6c7-4612-8dba-cd1823863af7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1754d36-551a-40e8-b4cf-c352e7e27bb3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54b53982-02d4-4e5c-9b00-4403abfbe5aa",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9d672f1-39c6-44d3-be25-42d7840f5d1e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd13ccab-f443-441d-ab30-69c1d4c35c80",
      "documentation": "<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=FailoverDBCluster",
      "responses": [
        {
          "uuid": "36744694-7e46-488d-9260-2be02989fb7e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f155b37-2464-407d-8e68-e09fd16bef95",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3425669a-0c47-426c-b908-157985e24b48",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a392fb31-d727-442b-9e99-bada1299f4f3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93073b78-2c68-4d03-81c7-1e24f0bbc460",
      "documentation": "<p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover\">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology. </p> </note>",
      "method": "get",
      "endpoint": "#Action=FailoverGlobalCluster",
      "responses": [
        {
          "uuid": "51c5d017-cc94-4d78-a2e6-61de765c2fbc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "453d8f14-9891-413a-a5be-cf8e56a659b6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05a0aba0-d8ae-4e20-ae51-c5635d3aff42",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "224b111e-5fa9-46f2-924d-9b23567fba00",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01f1edf2-179d-4f5e-b9de-d7233581e15f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ded42e22-2171-4676-9a0e-12f5c5bfef72",
      "documentation": "<p>Initiates the failover process for an Aurora global database (<a>GlobalCluster</a>).</p> <p>A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.</p> <p>For more information about failing over an Amazon Aurora global database, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover\">Managed planned failover for Amazon Aurora global databases</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action applies to <a>GlobalCluster</a> (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology. </p> </note>",
      "method": "post",
      "endpoint": "#Action=FailoverGlobalCluster",
      "responses": [
        {
          "uuid": "bc8be143-95fe-4ff2-9127-005e764320ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "415aa4cd-4b20-44a2-a2c5-2cc29eb1cb15",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f143926-3081-477d-b995-4d06679886ec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72b8738c-c3bf-4090-b513-243c1fa3e0cd",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77fcebd1-4f1f-4aca-b86b-23fd7d137c2d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57dd0626-6438-41c6-ac0d-6eb4e4c899b2",
      "documentation": "Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.",
      "method": "get",
      "endpoint": "#Action=ImportInstallationMedia",
      "responses": [
        {
          "uuid": "995893bb-4326-48ff-a1f0-886604244360",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7d53b55-cb2e-4bb1-9135-39eb6989b937",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a83d7273-8d54-4dda-bcd5-3abf52fe2ff3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InstallationMediaAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "811334b4-7259-4019-b115-bd3db676d8b8",
      "documentation": "Imports the installation media for a DB engine that requires an on-premises customer provided license, such as SQL Server.",
      "method": "post",
      "endpoint": "#Action=ImportInstallationMedia",
      "responses": [
        {
          "uuid": "4e24a322-34cf-4463-b011-0259d3da1490",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb37e941-1a18-4b1e-aae8-de5e7599ace8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CustomAvailabilityZoneNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "513bc72f-403e-4f91-9ef1-045e43c717ec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InstallationMediaAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05d5126c-1188-481c-8360-c0a86ecf4fd8",
      "documentation": "<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "b25964f8-f89a-49c4-96c2-3300978f3214",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "107f0fb8-c28e-4ecf-aa7c-97325d85c58d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ef9e9c7-53a7-4492-a830-ae2c75fd383c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8954e88-5977-4a5f-b896-6990cdf00a80",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfe8a3c0-8894-451f-8632-b7dc3dd9a79f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b3947d7-3b00-4649-bcaa-0da8a9dae916",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81dbbd28-4b2b-459e-ac19-ac6412183bd0",
      "documentation": "<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "45734278-3dd9-4831-9564-aeae1a402d1b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b49dbb-238c-4369-b27e-183d88171376",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a890d17-afee-43b6-8b73-84686f82df7d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09c873a3-cc22-41af-9823-4ad40978ce33",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05fb6734-9c5f-41c4-82f6-7609e396ac90",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a19ce44b-e746-4241-b9b8-74f8a300ca81",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fa99f3b-3758-4ded-97fe-f1fd0fd8ca4c",
      "documentation": "<p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyCertificates",
      "responses": [
        {
          "uuid": "ac7ab248-d2d9-4d12-ab43-537722808ed5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2badb4a2-5b83-483f-bf40-48a3d54c8856",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87f42087-f184-4d63-b17c-6a7a6585932b",
      "documentation": "<p>Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances temporarily, or remove the override.</p> <p>By using this operation, you can specify an RDS-approved SSL/TLS certificate for new DB instances that is different from the default certificate provided by RDS. You can also use this operation to remove the override, so that new DB instances use the default certificate provided by RDS.</p> <p>You might need to override the default certificate in the following situations:</p> <ul> <li> <p>You already migrated your applications to support the latest certificate authority (CA) certificate, but the new CA certificate is not yet the RDS default CA certificate for the specified Amazon Web Services Region.</p> </li> <li> <p>RDS has already moved to a new default CA certificate for the specified Amazon Web Services Region, but you are still in the process of supporting the new CA certificate. In this case, you temporarily need additional time to finish your application changes.</p> </li> </ul> <p>For more information about rotating your SSL/TLS certificate for RDS DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about rotating your SSL/TLS certificate for Aurora DB engines, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL-certificate-rotation.html\"> Rotating Your SSL/TLS Certificate</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyCertificates",
      "responses": [
        {
          "uuid": "88339ab7-54d2-4e52-9b41-fdb18ba345f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be8613d9-e3be-40dd-8cd7-b40e6c2f449d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9769e58-158f-4b83-9cdb-7e05df3332e9",
      "documentation": "<p>Set the capacity of an Aurora Serverless DB cluster to a specific value.</p> <p>Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html\">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless from finding a scaling point might be dropped. For more information about scaling points, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling\"> Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyCurrentDBClusterCapacity",
      "responses": [
        {
          "uuid": "2c33b916-aa9e-4a24-926b-f99c718fb9ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aba371e-b56b-402d-b774-1fd4a01e2d39",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f15192b3-ca11-42b0-86d9-9b56af34c901",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f209fed1-493b-411e-9c2f-6e3b6813a5fb",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41cfff72-40b3-472d-887e-16e4fca8240f",
      "documentation": "<p>Set the capacity of an Aurora Serverless DB cluster to a specific value.</p> <p>Aurora Serverless scales seamlessly based on the workload on the DB cluster. In some cases, the capacity might not scale fast enough to meet a sudden change in workload, such as a large number of new transactions. Call <code>ModifyCurrentDBClusterCapacity</code> to set the capacity explicitly.</p> <p>After this call sets the DB cluster capacity, Aurora Serverless can automatically scale the DB cluster based on the cooldown period for scaling up and the cooldown period for scaling down.</p> <p>For more information about Aurora Serverless, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html\">Using Amazon Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> <important> <p>If you call <code>ModifyCurrentDBClusterCapacity</code> with the default <code>TimeoutAction</code>, connections that prevent Aurora Serverless from finding a scaling point might be dropped. For more information about scaling points, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling\"> Autoscaling for Aurora Serverless</a> in the <i>Amazon Aurora User Guide</i>.</p> </important> <note> <p>This action only applies to Aurora Serverless DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyCurrentDBClusterCapacity",
      "responses": [
        {
          "uuid": "2bf3dfdf-ac17-466b-9968-3f52b02fb89f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50328268-8285-4162-a31f-b68fee7b7c9c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a511c998-0758-4b0a-8ac7-d3d11c90e417",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74da5e18-b617-4d53-8e6d-40822a4c2d23",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29fd1c2f-7696-4c58-be98-e3e14371026d",
      "documentation": "<p>Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "caa72441-485d-489a-bb6d-949de4c5962d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54b756dc-7df6-423e-a182-a9c9bc1ad44e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b444f0f9-7ad8-414a-b9ca-10d5bf2e75fd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49e64a5f-d1ef-457b-9fbd-49940e6e1935",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be9eb8c6-7723-4844-ab83-720b0f9d4fa9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f695924-981e-4e7d-a148-9b776b31b919",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00b00844-1b59-493b-b374-86c38c5445fb",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd2c4b5-1fb7-41ca-ade8-49dc8d0b0604",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad50c69-0152-44d7-9a5b-00a1b8ff1e3d",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b399221-f1bd-4807-87de-88b2528ef30b",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38ee24b7-e008-4089-b5c1-9979c2804f24",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0ccfca2-d0b3-4159-8414-5e378921d830",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34683b27-6554-4714-9b20-4f771ecaca05",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dcea5187-f0d7-4e1c-8134-bc673e353a59",
      "documentation": "<p>Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBCluster",
      "responses": [
        {
          "uuid": "8206b15d-cf92-44d3-bb97-1b550cbfaf57",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a633ae2-05d3-47af-9e9d-754609320176",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aa88444-85fd-4719-b351-0b4616bc9fbd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1345ae45-b117-4868-b19f-29a299a900ec",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aa90067-6e1c-4b6b-96f5-088ea9191751",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6fa020e-2246-4544-a941-a1cd6824fe18",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c720903-5b52-4ed7-a704-328112a74b08",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43575093-e5c2-4015-b579-91924dd58378",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a68e760f-e22f-4146-a018-c2170b824e62",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83f77669-bcbb-4101-835f-a16bb46a9541",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55cae1e1-ec70-4a47-ba81-e80880bf4702",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "910add67-249d-4e67-b67c-7be54941181f",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed8132bb-0675-4193-bfee-d6742b7ea3f2",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80d3f0e5-94ad-4b56-82c8-5dd600587ffe",
      "documentation": "<p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "528a93db-f598-4eb9-ae75-8900865b8572",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd740aa9-eae5-4cd4-80f9-1f240c32057b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa85ab80-f6ee-499a-abea-57704ddba870",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d6e2727-106d-4c36-9e89-2a7f873cb5d0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69455781-1d16-4e36-b7b9-a1fbf5281920",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f577475d-437d-4e83-af17-fad263febe5c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c73ec957-1740-4ed3-bd15-d1027f2ef8b9",
      "documentation": "<p>Modifies the properties of an endpoint in an Amazon Aurora DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterEndpoint",
      "responses": [
        {
          "uuid": "6a436b31-a44a-41b3-b6df-229476e99b90",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbb56180-868a-466d-9bd9-f76c2013d86d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "054acfa3-aede-4c8b-8623-9a96b17650d9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56568c7f-cec6-43df-a540-644124980e40",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acd631d1-8e99-4ad2-a4de-e7db897946dc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64c938d9-a12f-46ea-8770-45432f11d691",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51f74e14-070f-447f-96dc-7d619ead3f22",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "52fa2015-dec1-4296-b93d-7360d31039e6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c8f14e0-3d43-4b97-925f-477f6060c456",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358a5a1c-67c3-4398-9202-ea185ab2024e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ba7f70b-7d41-4313-b9e9-01e2b8979bca",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <code>DescribeDBClusterParameters</code> action to verify that your DB cluster parameter group has been created or modified.</p> <p>If the modified DB cluster parameter group is used by an Aurora Serverless cluster, Aurora applies the update immediately. The cluster restart might interrupt your workload. In that case, your application must reopen any connections and retry any transactions that were active when the parameter changes took effect.</p> </important> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "64f4702c-b30b-4438-94f2-348ea001e39b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56e6b7f6-17a0-44f9-8b48-ebe59053d695",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64604be8-76c9-452a-93df-bc9266b52fc0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77974214-0eb2-44fa-bcc6-ea3d11dcfbaa",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "8f9ef33c-3d73-4d03-82a8-d9edd2d43f62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6b7835e-05cd-4b2d-a605-b6453f66016b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba338495-cb9f-4d26-b455-b075c18f86c3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89237b91-cc17-4bd4-9041-57635646e6eb",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbfb6a00-064d-4f9b-bb74-26637c4da301",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot is public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyDBClusterSnapshotAttribute",
      "responses": [
        {
          "uuid": "132f4041-9eb0-4e3b-a211-ad3ecfa6cb60",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fabc48b9-de86-418d-a484-0cd4d910df90",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6698e28c-242b-45df-b0d8-3daf683b137f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01252063-1a07-4bd1-b68a-5b62abf8409c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a7aafc9-2018-4479-a9b4-10af89e97268",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>. ",
      "method": "get",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "c167c8f3-0321-4646-964e-44a15b3ecc44",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d17723c1-4418-42d9-b5cb-0a950d2ce599",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b86e0f89-ffd2-42a1-91fb-f108937df378",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98236fb9-897b-46f2-97e9-06d2d5bfd8a5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8437e00b-dae6-411c-8e95-520517ead0cb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a97655a-2031-4b03-8627-d44c9b43ea77",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60a68b96-0615-4a30-a883-e7ee9f1fbf45",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a02b1f1f-bb4a-4bda-b87e-27fa27ecab02",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3d491ad-32ea-4bfb-8ca4-bdfd2015a684",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b529d03-ae6d-4487-821f-f06724349a40",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5df17f76-af11-4a4b-a2d3-a8fb748f0046",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15f64593-b8c1-49a2-9594-a5c4ea833012",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "208f94a5-55ed-4b6a-855b-72120e7c3fde",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6f701a8-1d54-4e93-88ca-7a1528fe2f90",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71c17808-f1ab-43fc-97a3-e25a77f52846",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31ed7361-decc-4e42-8688-b174130976b0",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70ed7f33-4bba-429d-a0fa-bb13d6329006",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39eb8fbf-9971-4c18-89ab-0258cabce3db",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "887f2750-5661-4da6-9261-d2618df8a1d5",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e94ab05d-41fd-48d1-b65a-4900bf989ee4",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46439f00-1e9e-4909-8cef-c9c0a6deb635",
      "documentation": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. To learn what modifications you can make to your DB instance, call <code>DescribeValidDBInstanceModifications</code> before you call <code>ModifyDBInstance</code>. ",
      "method": "post",
      "endpoint": "#Action=ModifyDBInstance",
      "responses": [
        {
          "uuid": "7e432d4b-003e-4fa1-8841-4c9eea9d7e37",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a888736-edcb-4586-9329-c2bb0acd315c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c45b59-76b4-420c-b17d-b1649793ad23",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed8a9ef5-6d70-40dd-ae1e-c66c6d8a2d20",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dbfb55d-1d2b-4f12-8abb-608f9b13f2eb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeb56af1-84c5-4979-b40d-c5d7d048dbe7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80252675-4a5d-4277-b514-791a1d0976d8",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "576b0d98-77cf-4c65-b9e1-8985d467d62e",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e51ac91b-fb9e-4e62-801f-6d9c1ffd53f6",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1f4d1e3-f229-4603-884e-32f2f6f1f042",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "435f17cc-ad92-48aa-a391-ae18b093f078",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac2c5b49-3766-4885-8465-eee34a2b681e",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "386e3484-6a8a-4e79-b1ae-160b93a6bcc5",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBUpgradeDependencyFailureFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63126070-b8c3-487b-a78c-631c46bca9a5",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5d4f4b1-34c9-49af-9d13-9b8cbddfb275",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b02caa3a-25c4-4757-992a-6bd3c7ae4a6a",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "CertificateNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab469ef5-3523-4e98-a0c1-148be7682315",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74a79a2a-6035-4722-b4cf-983262213d39",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e65c6cb5-1311-4822-8d42-af9c673b6e0e",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45fa0dfb-9dd7-4da1-98f7-5c1bb2d4aae2",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92edeca9-997c-4fdf-a7ae-e78c51524272",
      "documentation": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "get",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "cc699ced-9525-4986-be13-cd00c64fe489",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d24d640c-b787-4abe-9d06-3fec93aade9d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faf883a2-0c0a-4486-8388-7fccdbe98311",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3733d6a1-48e5-430b-b925-72527912dba4",
      "documentation": "<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href=\"https://console.aws.amazon.com/rds/\">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>",
      "method": "post",
      "endpoint": "#Action=ModifyDBParameterGroup",
      "responses": [
        {
          "uuid": "e9735086-fcca-4842-a092-be7af8005b77",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed1f78c-9597-4d48-94f7-690ab7484a44",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d472e4-0dbf-41c8-bb8f-c686e9c2e51b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f30120bd-dde0-403a-be81-510abcb9c2af",
      "documentation": "Changes the settings for an existing DB proxy.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxy",
      "responses": [
        {
          "uuid": "381daac4-f1a0-499b-9313-2c481c1e8a78",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "074fab47-ba73-408e-8eb5-69afdbe7ef81",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44941220-d802-48a2-9268-2e1ef97d760b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49d9cbec-1ad0-4a7e-a61b-628ec1178723",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d60d8f5a-0fac-4bb9-842f-339cd0701f98",
      "documentation": "Changes the settings for an existing DB proxy.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxy",
      "responses": [
        {
          "uuid": "c369f7e1-1b85-4f9c-85df-93bb1cb198f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55b440a5-16e6-4645-9765-36e87811c139",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0be09b6-1579-4b47-8339-291564477b03",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f988ae7-b739-4b9f-9075-fffa419657ee",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d7f682b-a320-4787-981b-ded9b7a5c37d",
      "documentation": "Changes the settings for an existing DB proxy endpoint.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxyEndpoint",
      "responses": [
        {
          "uuid": "940a144f-5f56-42ab-a828-3d1757a42ec7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6dd9ce3-17b4-430c-a32a-222c2a6502b7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c64e3801-9a50-414d-b1e0-1a0ba8fb6727",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1786d2e-ec38-4427-97c6-b7f392569467",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1586468-91f5-47e4-9028-e6f032a434cb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cae8d37-67b3-449e-aa91-85e61c5d437c",
      "documentation": "Changes the settings for an existing DB proxy endpoint.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxyEndpoint",
      "responses": [
        {
          "uuid": "e85a9659-25ef-4222-bc3b-72d6170794bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d99167b2-5541-4c16-8b75-96e70dae7086",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyEndpointNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc9c51da-c642-4008-a194-35a52d7f22d5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyEndpointAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "686f8a82-2201-4c04-abbe-bd98b8e30899",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyEndpointStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33ac7fab-47eb-4925-a052-cd196ea70869",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4bbed75-c566-44b6-ad9e-8ab6e33a09db",
      "documentation": "Modifies the properties of a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=ModifyDBProxyTargetGroup",
      "responses": [
        {
          "uuid": "89c614e6-6f61-463d-b1c0-ed2e20b09096",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da4c0c85-ad70-40e9-af82-0af1513e7552",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a07ad2-f2a7-407f-a525-a282c3d1fed9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71beb148-fd93-4b61-865b-72fcee1ad45f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c57c026-ae5e-4f95-8ac5-cf4b731db6f5",
      "documentation": "Modifies the properties of a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=ModifyDBProxyTargetGroup",
      "responses": [
        {
          "uuid": "27a735bd-5945-42f2-ba3a-9b7a08fa49be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eecf6b3f-bb8c-4c09-927d-6e1ce26a7d5f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "896a5429-c037-45ff-9aef-3b5107e45774",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6afbcdf9-559e-4c84-8a3c-9f65c84126fe",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3e16805-497f-4621-b708-b8ed98c67eb0",
      "documentation": "<p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. </p>",
      "method": "get",
      "endpoint": "#Action=ModifyDBSnapshot",
      "responses": [
        {
          "uuid": "5b3da25d-287f-4a0b-8dc1-3daf60751a7b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc6207b0-c9a5-47f3-942a-ca3364d25ae0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "128a8ec6-1791-4aa3-8d61-7aad81d81b3a",
      "documentation": "<p>Updates a manual DB snapshot with a new engine version. The snapshot can be encrypted or unencrypted, but not shared or public. </p> <p>Amazon RDS supports upgrading DB snapshots for MySQL, Oracle, and PostgreSQL. </p>",
      "method": "post",
      "endpoint": "#Action=ModifyDBSnapshot",
      "responses": [
        {
          "uuid": "1885f61c-3f7a-4a86-a327-a8e60906cdc3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7953cd4f-2553-419c-b9a4-45a9d5605a18",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae4a4366-c28e-466a-8cf5-937845a1f4d4",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyDBSnapshotAttribute",
      "responses": [
        {
          "uuid": "0683b30d-6c27-49b6-86ff-9be114d17698",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d2e8da8-b3c0-4e65-81eb-a9255ad4684d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee1eac8b-73be-4487-af44-7814b570b56e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "712d4c67-11f9-4a63-b13b-1574ada7224f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd232219-a7d5-4408-a4f6-5767c55baa3b",
      "documentation": "<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note> <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p> </note> <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p> <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action. The accounts are returned as values for the <code>restore</code> attribute.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyDBSnapshotAttribute",
      "responses": [
        {
          "uuid": "b7a7d6e7-a641-459d-aacf-1f2ab3bebc8d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "431674a9-0a07-4b1a-9534-c481b98dbee4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0c14883-7eed-4c1e-b154-e4dff2782799",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c79318b-ee4e-4774-8b2c-692d8e16c891",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SharedSnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4aa85fc-bc48-4847-8171-dba56512cb8c",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "get",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "c875a77b-727e-4e10-977d-44c4912d5b10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71a55493-6b16-4762-80e5-1850e51902ef",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebff5979-57c8-47fd-add6-7ca9097e3291",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "897083ca-f3db-43f0-afe9-65aff1d94688",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "930abb8f-dd9b-479d-9fb5-e74541237f4d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e069c69-461c-411a-8816-d89f2485c928",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a07bdfb-ac1c-4ff0-bd60-1719d690703d",
      "documentation": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the Amazon Web Services Region.",
      "method": "post",
      "endpoint": "#Action=ModifyDBSubnetGroup",
      "responses": [
        {
          "uuid": "aa41f4c9-6033-47d2-93b3-4b4fdeff9856",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e3bd448-fee2-48b0-88d6-dbfd52c1cee5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7ef296a-db81-4ceb-9c58-eef043634108",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSubnetQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bad1849-95d9-451b-bfa4-0212dc7aae04",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SubnetAlreadyInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd2f115d-727c-4a6b-ad00-812e6afafad0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23af130a-fc45-41b3-a30d-136df1c6a24e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3898a27-2f31-4d35-a071-1e0c6f72ae6d",
      "documentation": "<p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>",
      "method": "get",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "6ae6ddd5-7a78-4d5a-b22b-46d2dd3ea224",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5709f758-0acd-4079-8f32-bd82d99e2d37",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16862fd5-9395-4236-9817-b00084bc871f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81e3e72c-0e45-4c1f-94bd-26cc0aca47b0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62fd6f0c-7f61-4022-b1c9-29c28ac6434d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4cd5f41-c5cb-4b5f-adaf-763eb473898f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6003217f-6c3e-451c-893e-ba000bd2c25c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1683cf14-a484-4473-a2e6-4631f6754db6",
      "documentation": "<p>Modifies an existing RDS event notification subscription. You can't modify the source identifiers using this call. To change source identifiers for a subscription, use the <code>AddSourceIdentifierToSubscription</code> and <code>RemoveSourceIdentifierFromSubscription</code> calls.</p> <p>You can see a list of the event categories for a given source type (<code>SourceType</code>) in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\">Events</a> in the <i>Amazon RDS User Guide</i> or by using the <code>DescribeEventCategories</code> operation.</p>",
      "method": "post",
      "endpoint": "#Action=ModifyEventSubscription",
      "responses": [
        {
          "uuid": "f46cde8a-0589-47ab-a48a-6d42103f17b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3813df9-4d7e-4713-ab55-94fa19674108",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "EventSubscriptionQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72403eeb-593f-4869-a106-05eb55683c3c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b8bdde4-e37e-449c-b1eb-9eb963bdad25",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "SNSInvalidTopicFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d54f790-b3df-42d3-a9da-29042163624b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SNSNoAuthorizationFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7e48432-fcc6-4070-b256-e4a1502fc42a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "SNSTopicArnNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da5bc6b9-8c01-42dd-839e-a430bdb3c7bc",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "SubscriptionCategoryNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fcb4e2e-8a3a-4c69-8ca7-f744e0a8de77",
      "documentation": "<p> Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ModifyGlobalCluster",
      "responses": [
        {
          "uuid": "ea2af271-09a1-43f2-af9d-7c382c8bd5ea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0e26555-96f6-4a65-a976-7cc636dd945b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd0ea74c-066c-4394-8563-379ebf0b6003",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df656dd-7de0-4e42-8de1-f794588f8419",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec5f6883-53e6-497c-8d33-f799aae25b1c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d8718a9-a900-43bd-88c5-d8e742179c26",
      "documentation": "<p> Modify a setting for an Amazon Aurora global cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ModifyGlobalCluster",
      "responses": [
        {
          "uuid": "a738d8dc-bd62-4ff7-a2d9-34234d16a0a0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3585525-df72-42f4-b12b-46f11190a2ec",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c99993bf-68ba-43da-b4b5-caa818660bf5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57a6e690-847c-4e74-949a-a7324b300fb1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88f0bdfb-741d-4bcc-a08b-c76e06781bf5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32faa04e-5c4d-4898-abf7-4d2cd0109342",
      "documentation": "Modifies an existing option group.",
      "method": "get",
      "endpoint": "#Action=ModifyOptionGroup",
      "responses": [
        {
          "uuid": "3bd9a499-8b6d-4e90-b32a-fa3b709da393",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff548d70-6e1f-4834-b2b6-7429daced986",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "440ea833-f376-4c1c-ba0b-691be200525d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be9d27cc-5344-44be-a804-769dbab647f7",
      "documentation": "Modifies an existing option group.",
      "method": "post",
      "endpoint": "#Action=ModifyOptionGroup",
      "responses": [
        {
          "uuid": "9d377727-3086-4b29-8c2d-bc480c4b4c00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0677232-01ec-4f19-8f34-ff5970818458",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidOptionGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76ab8fa0-2337-4d0e-8944-47c81b98c616",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d4caa50-4e8e-4ba7-b6b7-7c3442c0b81a",
      "documentation": "<p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.</p> </li> </ul> </note>",
      "method": "get",
      "endpoint": "#Action=PromoteReadReplica",
      "responses": [
        {
          "uuid": "6b2839de-0125-41d8-8641-43b932620897",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a7ff4dc-62b7-49d6-8185-1ac923eae0d6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85fa0098-2ecf-4761-8ca4-32aca062dc4b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfeef791-cdf5-424c-8396-e1e52e15d990",
      "documentation": "<p>Promotes a read replica DB instance to a standalone DB instance.</p> <note> <ul> <li> <p>Backup duration is a function of the amount of changes to the database since the previous backup. If you plan to promote a read replica to a standalone instance, we recommend that you enable backups and complete at least one backup prior to promotion. In addition, a read replica cannot be promoted to a standalone instance when it is in the <code>backing-up</code> status. If you have enabled backups on your read replica, configure the automated backup window so that daily backups do not interfere with read replica promotion.</p> </li> <li> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL.</p> </li> </ul> </note>",
      "method": "post",
      "endpoint": "#Action=PromoteReadReplica",
      "responses": [
        {
          "uuid": "fd941ee3-c6a4-469d-8045-686a62dbc522",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad62ae3-2e83-499b-ba58-d0989cc3fee0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1330c35f-ed4e-43de-aab3-fb781af98ce4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9e2b97b-a358-4015-8a2c-28388cdde0a7",
      "documentation": "<p>Promotes a read replica DB cluster to a standalone DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "a96885f7-5047-4eb3-b645-54f70e2b8038",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df58a2a2-7a43-4fcd-9031-45ce453d7e58",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4662905e-758f-4915-b3f4-a27bd0199097",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffead127-a6fb-40e9-839b-5c77e0d102ca",
      "documentation": "<p>Promotes a read replica DB cluster to a standalone DB cluster.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=PromoteReadReplicaDBCluster",
      "responses": [
        {
          "uuid": "f138a9c3-1221-4a11-ae11-2b6109ffac07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49077f5c-210f-43d0-8e9d-a18f8f892707",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91987fba-41e2-46b5-b0c4-c33a89be1fa7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0b44e8f-4dca-43f1-bb2c-f847ea23ceb7",
      "documentation": "Purchases a reserved DB instance offering.",
      "method": "get",
      "endpoint": "#Action=PurchaseReservedDBInstancesOffering",
      "responses": [
        {
          "uuid": "16cfed97-2c82-448b-9d6a-31ec2c46f82a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7379f138-508b-4515-a4cb-1125835e489c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82e594d3-52b4-4247-a599-2536ac4a3a39",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ReservedDBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dff9b0d6-299d-4e1c-b1dd-7cb812ab0ca1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ReservedDBInstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d825cc7-d018-4c5a-a400-6cd7ed350b06",
      "documentation": "Purchases a reserved DB instance offering.",
      "method": "post",
      "endpoint": "#Action=PurchaseReservedDBInstancesOffering",
      "responses": [
        {
          "uuid": "6ac1128f-f17e-4001-80eb-c48ab6dd710f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4fb2bd7-a0ac-4f38-80f6-7ad909e79545",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ReservedDBInstancesOfferingNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1d67177-5e9a-465b-a541-631960b81f22",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ReservedDBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4430ff3-2564-466e-9790-df6f4cf265f6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ReservedDBInstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe183117-83f4-4305-a6b9-f84a9751b341",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p> <p>For more information about rebooting, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html\">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "114506eb-426a-4788-9d76-0832740b7834",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee7d9568-85a4-416e-ba6f-6f7d3d5b48be",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd3d003d-e5b0-49ca-b5b1-0e17486efa6f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "983c32d3-e5a8-43b4-9ccf-8ad90e52cc8a",
      "documentation": "<p>You might need to reboot your DB instance, usually for maintenance reasons. For example, if you make certain modifications, or if you change the DB parameter group associated with the DB instance, you must reboot the instance for the changes to take effect. </p> <p>Rebooting a DB instance restarts the database engine service. Rebooting a DB instance results in a momentary outage, during which the DB instance status is set to rebooting. </p> <p>For more information about rebooting, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_RebootInstance.html\">Rebooting a DB Instance</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=RebootDBInstance",
      "responses": [
        {
          "uuid": "aeda08d9-97d1-4026-b71b-1f9ef8b7bbc4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2158bef-5664-42b8-aa1e-6113d4b4e37a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c94d49a-f468-49d2-987d-787c28c74142",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf91ef11-0cbd-4496-af48-674e9bba90f1",
      "documentation": "Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.",
      "method": "get",
      "endpoint": "#Action=RegisterDBProxyTargets",
      "responses": [
        {
          "uuid": "aa4c6776-df0e-4fc6-8f0e-35f6c0748128",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91383a21-f8d3-4dfb-9e54-9bf0f1dc5711",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c0ee03e-4ea0-4e2f-b937-a7fc73295123",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805d1198-be8d-4a32-a91e-7c14297d752d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1795f85f-deca-4349-a436-e1142d2c2550",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f40da565-17ca-43d2-bc97-7c9a120bfb61",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetAlreadyRegisteredFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d55b75bf-b40e-461c-b2ee-93bf10736646",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1165e05b-d929-421a-be3e-2d09113bafcc",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d713dc70-0ef0-4606-8d55-4ccf5b0fb2fb",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e991a842-2262-422b-abce-bfb301c90b72",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InsufficientAvailableIPsInSubnetFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "926d5596-e7a6-4a55-8ab7-2654a5a78a10",
      "documentation": "Associate one or more <code>DBProxyTarget</code> data structures with a <code>DBProxyTargetGroup</code>.",
      "method": "post",
      "endpoint": "#Action=RegisterDBProxyTargets",
      "responses": [
        {
          "uuid": "59c27bc2-4d59-4c87-b2c4-2e8b1997ea86",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54f8203c-ab74-4ed8-bfa7-d52ccda2118d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcd512a5-1900-4425-8687-7f3fc010a887",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45542307-882e-4e40-874d-5bcd36b9fc0a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d51ab07f-3bfd-462a-9c7e-aa2071fa5ba6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc65790b-a83e-4bc9-82bf-02b5689246ac",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetAlreadyRegisteredFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c7b1350-8a4b-4bdd-8935-6ea0357433ea",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4c0e9da-25e9-4bcb-9260-9c04c0d85c6d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6780516b-3651-48da-b54e-14e344516dcc",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBProxyStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "455e800e-a2a5-4efd-b72b-1e9e9acabd6a",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InsufficientAvailableIPsInSubnetFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04db0ad6-9012-49f3-a3b3-f5ef66102c0a",
      "documentation": "<p> Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RemoveFromGlobalCluster",
      "responses": [
        {
          "uuid": "e7715980-c06c-4462-9d26-e6a9818e2ab9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61696c2a-eadb-458b-8548-387995ea37eb",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cf740e9-0bf9-4cf4-9301-3d4c6af99acd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa6b8e2e-e2b9-4836-80ba-24fdc9584219",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ae9024e-45e3-4dbe-8ee8-109505b767a0",
      "documentation": "<p> Detaches an Aurora secondary cluster from an Aurora global database cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary cluster in a different region. </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RemoveFromGlobalCluster",
      "responses": [
        {
          "uuid": "0d033120-9f22-4665-bc03-c4ae10b93fc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80278956-cdf7-4506-80a0-a5463a810ac5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "GlobalClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "656f0d5f-9f47-4fb5-9567-7cda2f555b64",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidGlobalClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "253e3894-3de5-43fd-a14d-f9a470584361",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33727960-73de-4c0a-8c20-ed0f44cc2843",
      "documentation": "<p>Disassociates an Amazon Web Services Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf </a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "07a0d1fd-76ba-4952-9ecd-2bdc079cb394",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727e16ac-1f5a-4a56-892f-14110a921dda",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab6161f2-c379-455e-98ed-60ba25f6bb8c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "728c92b0-dc72-4995-a425-6727cf2658dc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc51b20b-c681-4f27-8434-cab920fd845f",
      "documentation": "<p>Disassociates an Amazon Web Services Identity and Access Management (IAM) role from an Amazon Aurora DB cluster. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.html\">Authorizing Amazon Aurora MySQL to Access Other Amazon Web Services Services on Your Behalf </a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RemoveRoleFromDBCluster",
      "responses": [
        {
          "uuid": "01cae1aa-7d84-45f9-ab12-7fa28114e030",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20ae50d4-ccd4-4f65-bbb3-5e96a2392f35",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "378e1f59-f15f-44b0-8408-cc9d934cf0e4",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf0a81d-c79d-4107-8587-9538b8a07046",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df90a937-5de8-4184-a34b-68b3df575daa",
      "documentation": "Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.",
      "method": "get",
      "endpoint": "#Action=RemoveRoleFromDBInstance",
      "responses": [
        {
          "uuid": "14bfb9fc-ad4d-472d-b266-17fbaf6f4555",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af539f00-bcfc-45ab-b1a4-24d8c39b1370",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45087669-590d-4aa3-b826-ee5a4657da1b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fac36a1-c378-4d9d-b4d0-1c3f2fbd3cad",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5eacef87-e8b7-4683-a80b-33b1d52e36de",
      "documentation": "Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance.",
      "method": "post",
      "endpoint": "#Action=RemoveRoleFromDBInstance",
      "responses": [
        {
          "uuid": "76988977-ab14-4458-9b50-af3942ab0a29",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cf4d792-9e7b-46c1-ba35-cdb73bdfc5f6",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899a595e-7e69-4985-b780-4a1a8ef524c9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "968655ab-aba5-40f6-8190-af769394e793",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3e605bb-f584-4e26-97c2-32bbc1e162bf",
      "documentation": "Removes a source identifier from an existing RDS event notification subscription.",
      "method": "get",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "6029ab2e-5b84-4132-a818-676ef1ae741d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d9f3c2-bad9-446b-89f6-b96e3312d74e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8806ca9-ee7f-43fd-a1f5-e47c65b624ec",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "323e5e5f-b7c0-466b-8e73-fda8ded0e357",
      "documentation": "Removes a source identifier from an existing RDS event notification subscription.",
      "method": "post",
      "endpoint": "#Action=RemoveSourceIdentifierFromSubscription",
      "responses": [
        {
          "uuid": "3a49400c-90cd-4ebf-8993-9057d2ead89a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaef6b86-e584-40d4-a87f-7acc51cc698e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "994ecd7c-1a5b-4385-8fe7-8b9298954940",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "SourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71316adb-cb4b-4541-bc0d-7a019b449788",
      "documentation": "<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "7b89fcdf-75f4-4171-8d71-8473980fe4e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9e60ae7-e39c-453f-b2c4-0e003e585d40",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a3f5d27-a960-4479-933e-97ff6b05af72",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade4125e-7100-4fd7-95e2-be1f57904dd3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff61315c-24be-4251-be39-242ae0ca5562",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74b9f4dc-1694-4138-aef1-029101711700",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfb16562-d3e4-4831-a39a-c916c9b91014",
      "documentation": "<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "59255bdd-af91-490a-8077-eaf2cfa8b573",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99082f08-5b96-40c6-a2db-b66b354973f5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20be78f0-a43a-40c3-9205-0892f414c450",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f4ede0-0135-4207-9eae-80e7e6195881",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b26735b0-7dcd-4773-9214-dde80e1b5bb6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBProxyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4207e5a-dde8-4a6c-b740-9641f7e31d57",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBProxyTargetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "172b32bc-249f-42b9-81e8-136f25a2a442",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "2b9abe96-3bd2-4722-bf96-52c9d2a8cca8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa2c44ed-9188-4e95-b476-232e0a83e79a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e047d180-acd1-4f00-96e0-89cdaecd9e8d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d828eba-01b3-4149-b1a3-81f8e5ec2fa0",
      "documentation": "<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. You must call <code>RebootDBInstance</code> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=ResetDBClusterParameterGroup",
      "responses": [
        {
          "uuid": "ed6e77cb-7220-49bb-b7cf-b5a4a7cde679",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c836390c-4e81-43e8-964b-299624265e2b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b7e2a1-804e-4ceb-ac28-4b77605bda55",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7390cc20-ac87-4125-bb29-f33e45dc952f",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
      "method": "get",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "21729ef2-74c3-4dbb-b99a-5c8fade24c2e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce51a29c-0977-4102-9fa5-6838a72f0853",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c869e2c2-bdce-4072-837f-b724cd2c3344",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef8e892a-d273-4ca7-8083-2edef95b3aa7",
      "documentation": "Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. ",
      "method": "post",
      "endpoint": "#Action=ResetDBParameterGroup",
      "responses": [
        {
          "uuid": "8eadff1e-36cf-42d1-b2d5-ae926ccc954c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6e6b020-c82d-42f3-a152-0f0b67f00464",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBParameterGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab6e5328-4b5d-456d-bc6e-b9ce3ecd7934",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f08499cd-8e30-4c5b-a2a0-0f0b068a26d1",
      "documentation": "<p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3\"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterFromS3",
      "responses": [
        {
          "uuid": "6a03c029-cdd1-4310-bed1-cc4b56442cc7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff687be6-b4d7-433c-a3fe-c811264d2184",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48707b8b-7b69-4ecc-9d92-159451df366b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0621d4c-bd44-46a5-8987-3906f4358450",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f422b4a1-e94c-437b-a8b5-49dc657a74b0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b7e10a7-5193-411d-9fdc-fc309ffbaa45",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d425a3e-dfd0-41a2-bc6c-3c963cf3ee5f",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "012a674c-edd7-4482-82d7-73d90de8c00e",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61c1b054-7002-42d5-90fe-3c7215cbd792",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2add34f-fd7d-4854-801b-25fb8c258691",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53c04fc-92df-4375-ad1c-78c5ee7b0586",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2253acb-d5e9-4338-bf13-2b77c5675797",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67af2815-2f52-4411-a540-aa02f6bef2da",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d77d7e2-eec2-47ea-869b-2a8760754537",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcc9d644-4487-4901-afe4-20456d528f75",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71875304-5294-41a0-a18e-d8975c725687",
      "documentation": "<p>Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3\"> Migrating Data from MySQL by Using an Amazon S3 Bucket</a> in the <i>Amazon Aurora User Guide</i>.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromS3</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters. The source DB engine must be MySQL.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterFromS3",
      "responses": [
        {
          "uuid": "314cf0ed-d333-4372-9c36-2257c235f912",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "934d4610-6de1-4859-8080-d3f8fd6afae3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "241b9f7f-c6ba-4617-b3b7-153d9897f74c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eec70ecf-28f5-47cf-b2ae-dff4d38aff04",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f218a53-f420-49f9-814e-bd7d702b951e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e1ab0be-3a3c-4800-bc42-fb32f0adc9b7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e40fbbda-36af-4143-8d04-b6644748a57c",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5857937c-4c2c-474e-9aee-7e6020f1e3ee",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDBSubnetGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17319d95-a0b8-42bb-ab2d-d263f5d05c54",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6758e61c-fe91-47eb-b85e-2a626dc3ba4a",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df58f708-6739-47b7-97dd-af45ffd00316",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a167e1c-277b-428d-871a-f8894fe4d699",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49f43b91-c042-4b21-96a6-412f4cd4e285",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11994fc5-f0d3-43fc-b8af-931e97907650",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e6d04fc-8062-49ff-8cd5-ef67c5695f16",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f03df736-fdd9-4eb5-bd1c-833beebc9983",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "17271b8d-2f48-4b86-8cb9-5093c8db9796",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b83c3a06-2953-4268-af6f-fce1495d78a0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52bf4f56-7269-4a4c-80e3-b6b84fb5ab95",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3488687-2ea0-40a7-baf1-2362b0ba8736",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf57ae41-23b3-470a-a694-78b0696a38b6",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb1d8f01-baee-4416-9b83-a6bd5226bcca",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c401fce4-c5d1-4aad-8a48-9e1ae4371ddc",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e33e174-defa-4f5b-a7b2-7ad3792dba25",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dcbf842-6c8c-4e6b-8a98-9610d0d31264",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f09343-37d4-4adc-b19e-231ef4936dcf",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fec7300f-383b-4a16-b609-35e3eab83b56",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10024b79-bf48-49a4-a5af-2cc466c8c7ff",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9bb80a1-6e76-4614-8b43-6ad4f4430ea9",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c81402f-5926-4e80-8b3e-2bfeaa681c52",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2977144-faee-4576-ba13-73b996a671ee",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "570537d1-1675-4534-b8be-cd407bb0c1bc",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "745af4d8-b476-425c-ae8a-55559d3cff77",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6e98d7a-1094-4c9f-a87a-6c3e805712d4",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "359ffc76-b528-4fe9-94b3-66dd848a26e6",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faaeb2c2-6624-4dd2-9d3d-9757e0281675",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efd693ba-6e9d-4b90-b0e0-8ebcf44ae4e7",
      "documentation": "<p>Creates a new DB cluster from a DB snapshot or DB cluster snapshot. This action only applies to Aurora DB clusters.</p> <p>The target DB cluster is created from the source snapshot with a default configuration. If you don't specify a security group, the new DB cluster is associated with the default security group.</p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterFromSnapshot</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterFromSnapshot",
      "responses": [
        {
          "uuid": "48b1305e-7b7a-48aa-9356-2121dcb31234",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0b99360-9c8c-4f50-96dd-525886b0f361",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "602fab68-7dde-499c-bf9d-a4941ee283b7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff1a392e-761e-4bba-bacc-117140ca8c32",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c58ab6c-3f99-49dd-966b-5a8fd8956ea7",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05654fb6-051c-40fb-8108-ad6722898959",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a11c05b-bd85-4b88-80ab-800d3257f4c5",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "341256d0-918d-459f-a409-d4ef05d1619c",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2003e00-e214-4a34-99df-bdca63cb78cd",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a990d49-74e0-440d-9b13-722b780de06b",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46100eec-3d78-4b15-81f8-dae90590ab9a",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b411f0ee-1408-4803-99be-6efa0fb1e243",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d562e846-3901-4560-9f32-87af83e3f018",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d186c56-6b33-417c-bb9b-97675574febb",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53b2ce3-5a19-4d16-af1a-8e00b27b0b1e",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f39d14e6-fd07-41a6-b060-3f728a2ce7f3",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c58b71b-0ad6-4b12-a5a0-f1bfb1352467",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e1807df-3561-48d6-8d36-502af4df1c0f",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ea67de9-b4d8-46e8-aecd-15376c98bd44",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d67782b1-38cc-40f0-b847-5ae8d2d07b51",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85f1ab2a-85e6-4f1c-b30b-9a525fdfe3bd",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "4b167e52-ebfe-4336-b8ec-86aaad2d9f38",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbda67fe-f16f-4df7-84aa-d899cc21a710",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "355ebc0c-7247-4ee7-8bd6-aa4a55a7f031",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ec30c28-8559-4c5d-8914-5bb832147d5a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fccb087-be6e-4a02-80ca-21889e2bc917",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd345069-e40e-49b8-ae30-014e5bd10b07",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b10b6a1b-ee12-49fb-a529-b0a8395bdb97",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83b05bf9-1f09-4beb-96f8-c106f28a37b1",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6719e1a-38ba-4458-9a7e-6d298b528efd",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8675e6c5-78fe-41b7-bf23-9266330e3d5f",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62bc409a-6be0-45bf-84a5-b4d1fd801ed9",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fc45ee0-c8f0-4083-b616-e019f0769740",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4190f9e-4237-4692-93c4-994059be3558",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5cdba7a-361b-4aa5-82f3-83c126c67abc",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf7122db-1bd6-4dc9-9135-5361ec80976d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08db2396-e919-4e42-915c-b80efe63b9a6",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "863f5112-2dc3-41e7-b60a-0d216d9f1235",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "436951fc-6237-414e-91e2-65defec30bac",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80303ee0-0827-47b9-94be-17728fcd7eb4",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9f1b786-d8aa-471c-bbba-18223be5cb3c",
      "documentation": "<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <note> <p>This action only restores the DB cluster, not the DB instances for that DB cluster. You must invoke the <code>CreateDBInstance</code> action to create DB instances for the restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>. You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code> action has completed and the DB cluster is available.</p> </note> <p>For more information on Amazon Aurora, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html\"> What Is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBClusterToPointInTime",
      "responses": [
        {
          "uuid": "e198c583-d689-47bd-a5f3-fbff943ae8ac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26b6fd32-b710-4c3d-9456-8bc44550e6dc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2ad62a8-82ba-459f-bffe-089a5764109c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f73edce-51a3-44c3-b256-ce67fc194177",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBClusterQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65657526-5d37-46a7-b852-601636809b8a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41261ea8-2cfa-4952-bbe6-adb5a81020b5",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bfacb5f-776b-4467-875a-2ccb1a67e5d2",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InsufficientDBClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d42b750-44b5-45dd-bb76-ca9343966a5d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientStorageClusterCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e92de0b6-d777-49aa-86a8-1da353da684a",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDBClusterSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40173374-3af6-4931-9067-5714e6f532c7",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f738a8-4293-49c2-9ebe-33d3d0237fb1",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9978a98d-9f6e-444c-a6a4-e301cd4ec257",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68830dfe-d533-41ac-92fb-f219258abc74",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e4ce7be-d192-454f-ad9b-5f077070760e",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c478f557-091a-4b5b-a250-71e3683c3cc1",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ed4fe51-ce77-4be2-8bc7-6a3eefbcca99",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93ee4c39-cfb7-4bdc-8f01-d62622bdf61b",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a71db6ed-8183-4f80-9d77-c065a0de9a60",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61ff7531-fd66-458f-b569-06dfa8d5438e",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBClusterParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3b64587-60d0-4cc7-b08f-1a5ee4f635ac",
      "documentation": "<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceFromDBSnapshot",
      "responses": [
        {
          "uuid": "aee5b179-4027-4584-85e5-e815cc38a738",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8527056b-0707-4f20-b3a9-5a3c3bed6109",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b48710-1563-4698-a7a7-7ff2c275209f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e8c7625-1156-4d33-8594-d68fd199f10c",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81858c7d-6a80-48ac-8d2d-2bcddd6bfbf3",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2497b9fc-ffaf-4311-bdab-6da79172c8a8",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd5cc038-3e18-43ba-9e71-1df1908057b1",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54001461-361c-466b-ada5-c1f9f61442f3",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e328a4e8-518c-4fab-9581-03d78e41cc7f",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69f17865-597c-4395-b37e-8f0049449e69",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d98198ee-c911-4547-ae3f-450bb7f89e95",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a39e68c2-2f8a-4b43-a404-8558c66f6a6d",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf368142-2349-43cd-8efc-3eaab6a548ce",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84bbaa0d-9d63-4e3a-b576-0663b0475830",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9ceb571-9b01-420e-a1a5-a9a33babdffc",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95417e85-c695-4e44-9a01-8b58dfbf1a74",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92c0e678-28c7-4f56-a1f0-d8e2ad88eb79",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4351e10d-9bab-4291-8bb7-aba8d80712a3",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e069126e-a445-49f4-85a1-215fdfecaede",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2474410f-0e83-48fa-9b2c-6956cf0c07ec",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "738b155e-0872-41f0-8fc4-82e186b489d5",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30e1f772-3ddc-45f4-b1c2-698ba102a1d2",
      "documentation": "<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with most of the source's original configuration, including the default security group and DB parameter group. By default, the new DB instance is created as a Single-AZ deployment, except when the instance is a SQL Server instance that has an option group associated with mirroring. In this case, the instance becomes a Multi-AZ deployment, not a Single-AZ deployment.</p> <p>If you want to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS doesn't allow two DB instances with the same name. After you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterFromSnapshot</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceFromDBSnapshot",
      "responses": [
        {
          "uuid": "dba715fc-d1c6-4145-915a-7ef4b5879f22",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "919a7eed-cf50-4485-b57d-27b92d973cf3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8d3c66c-42a0-4902-88c1-e2b909cfc629",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84d78fa4-c90f-48e2-b39e-05ce2f89e0e4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f1a7485-8aab-41ff-b689-f280a08fda9e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c62a2c59-5ffa-42e7-a55d-2a84cc479a14",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBSnapshotStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51c07888-255a-4764-afdb-0edcdb6e2300",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb8e6505-6204-4bd7-a356-71b0ecc097ea",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c244c78-f871-4632-a6fe-d5904419c22c",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85d0d823-8ad0-4e0c-8a04-5f534fd7a8b3",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0816d01a-cb4e-41c3-b6d8-107938c7633b",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4477b113-2a2a-4d3b-b88a-91f0ec8b0ef8",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d867149-0213-451c-b6ac-0f00e6e610ef",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d54de0a-5971-4778-86be-a271d2aaa7e5",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aca8ff5-67a4-42da-9d07-df53ff3293c9",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2380c4c1-d8b5-4c01-a732-40f59b640ee3",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f768c454-88fc-4c1f-9416-06b8cec76ea6",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "991eeccf-cf10-4db5-b830-5deb09e40afb",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1a047b2-e988-4e2f-9c85-89e56772977e",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cef7ebc-0884-4522-8b74-636aeab0e463",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d012892-00bf-435e-b3b3-33aaa3615078",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cd04fac-f54f-4a54-a17a-2e61698237b5",
      "documentation": "Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html\">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceFromS3",
      "responses": [
        {
          "uuid": "f220406c-ef06-4254-b611-a0e25e2ace44",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90741efc-c3a0-4499-9714-14d7e49fdf74",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6022a09d-2a0b-40f0-b1fd-f174243072ad",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8645b994-8d82-4039-9260-9eaba68fd9bc",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de60eead-10fa-4338-bdc0-c74ca4027bf4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64dcc0bc-42ab-4cb9-819b-d5685be3507d",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b650501-f1dc-401b-93c5-6fba9d71af3b",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a07949e6-3a4e-4351-914e-ee4b3b2a676d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b3e056-0d42-4f86-b7ac-23d6278ae431",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f732cf3f-a3ae-41c5-99d9-7a995ef5d6a6",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9001ba07-6934-4039-9836-7432af52bf05",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6086afa-60c9-4660-b358-be0fde4ddbd7",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54dd903d-ff43-4507-9663-a54023a4f44a",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28cd1a21-b935-4b35-994f-e587a15f062c",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9691f94-379d-411e-8282-8b5bad5975d6",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e347fca0-02a0-4453-8166-ceb95c5dd82e",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d10e96bf-3b91-4dec-8c23-032b14c50b1c",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ac30f65-c565-4508-bbce-8276531e5a3a",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "deaf31f1-49d3-49be-892c-e580f6ec7210",
      "documentation": "Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files. You can create a backup of your on-premises database, store it on Amazon Simple Storage Service (Amazon S3), and then restore the backup file onto a new Amazon RDS DB instance running MySQL. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html\">Importing Data into an Amazon RDS MySQL DB Instance</a> in the <i>Amazon RDS User Guide.</i> ",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceFromS3",
      "responses": [
        {
          "uuid": "e26f1e08-651a-4031-a094-ba5343dcbf8d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74b40274-2ff5-4b4a-a9da-4840ee641ed7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d77bc4a-f786-4521-9693-f8c6b073fa31",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "110f8369-464b-4072-8e3c-f29988cbaf9f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fdd81e7-78ab-4ed2-af02-2cedd4b35776",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9ac1988-0189-49e2-89a6-0b4dacd0e32f",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd531be0-d11e-45e4-855b-ef5161f69c93",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd7b2088-ab7f-4a82-a274-7933661188a1",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a551c39-b706-4982-9026-96e57e3bc9f2",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d492d112-8961-418c-b917-a8aece84c45b",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c4dc54-7264-4102-bc47-0d9d740b88eb",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92562089-7f3e-4fa4-b8bb-9bb7e5369864",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54da9d4f-cfe2-4366-949e-751068851eea",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a282d287-a61d-4b11-961b-9658c57a3ff0",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16b6359f-e84d-47fb-a37f-8ee2f0fd98da",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa1243f9-1d09-44a4-915a-6fcf1c1ecb2a",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1c5fb2b-631f-44fb-a789-e236d6e6efec",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b69082e-6a27-4a2c-8af3-f121cbd12611",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "855d0ff4-966c-4ae1-83d1-b2e66ddbf799",
      "documentation": "<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>",
      "method": "get",
      "endpoint": "#Action=RestoreDBInstanceToPointInTime",
      "responses": [
        {
          "uuid": "afd9276a-84d2-4780-8834-f93e811df94c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ae588dd-53f6-4435-8d5e-41670529b2b4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e074bca9-84be-40b5-b910-eff2b5e73cb6",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54ab84cf-a472-43e4-9d0c-fd3feb205ad0",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "422acd29-0069-4293-b0aa-5143bea65ed4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f01d9cc4-a6c1-41b7-af62-cbfde5d4263e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ffa626a-9219-4518-ab1e-d6f27698f1f3",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PointInTimeRestoreNotEnabledFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aed18cc3-a283-45dc-82cf-4fdc7111bf78",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "335faf36-38fe-4aff-8138-a29b302f375f",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f0d5536-f8f6-4148-8e0b-cdc31f203d8d",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c26d32a-2618-422a-a192-014d892feb89",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7d0470f-f3a1-4f67-9017-bf66f4201715",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aad29ed-5a0c-4ae4-b733-1a509a1a5689",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4495145-7152-4a5a-973e-217986cd3e88",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "783aa41d-648a-47a7-8c17-62d5ca8240eb",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05eccc41-a49e-4aff-928a-a301ba13e9f3",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36aaa998-5005-4975-8dbb-ece5a87bdf4b",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71891fbd-bb2d-414f-8d38-26dfce25d0d4",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dff1009c-764d-48d0-84c2-4a570b316ff3",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f017e2af-6267-4820-b3f4-d4c25cb6af50",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c76bfff-e091-4219-b5a3-aaac3547dd5f",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "902b0615-7dd1-4022-8b84-ce3aebd36cad",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f00caa7-f628-4c0e-8f2d-716910375d78",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c4e8ab7-3e99-47d3-9424-f0bf6af6a88d",
      "documentation": "<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected Availability Zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p> <note> <p>This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora, use <code>RestoreDBClusterToPointInTime</code>.</p> </note>",
      "method": "post",
      "endpoint": "#Action=RestoreDBInstanceToPointInTime",
      "responses": [
        {
          "uuid": "20fa4619-15c6-4f79-8290-4bfe51708415",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc8cb29f-568c-4d44-b26d-18265873bc09",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc8e42fd-1184-49b9-9e1e-7d2fcd210157",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77414a01-cc4a-45b5-83ea-01e65d1afaa8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e789e5b3-7682-4f81-b3ba-6d058240d27e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b28096e-9c4f-4703-832a-6bcc922a0e35",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d585118-380a-4fa9-8cc9-e75c6c41b2d6",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PointInTimeRestoreNotEnabledFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6a3709a-c9ab-4b1d-bf78-a5ae87b5af08",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StorageQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3781669-27d6-4dff-a967-0bb4dd29e010",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a3b36c5-72d7-44ba-9e3a-d5a56b98f6e5",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidRestoreFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05044de3-c180-4392-9864-fc70b24d5a07",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caa153cb-6791-42d8-945d-4112d92cca2f",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7297cf06-1c16-417f-abc1-95166826adcb",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02c7cdf8-0593-46e4-a920-7b80de0379cc",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "ProvisionedIopsNotAvailableInAZFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c41e3b69-b89d-42d1-a775-1536fdcf71b0",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "OptionGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75d3c283-7d1c-47fe-9d76-c7067189a42e",
          "body": "",
          "latency": 0,
          "statusCode": 494,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b735f1c-3331-47c5-be85-011e44113935",
          "body": "",
          "latency": 0,
          "statusCode": 495,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af98fc04-9bfd-4fdd-afc3-34d7d32e2b70",
          "body": "",
          "latency": 0,
          "statusCode": 496,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9254bbf9-806f-4a83-aa47-16ad11000e39",
          "body": "",
          "latency": 0,
          "statusCode": 497,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "895fa9aa-04f9-4dca-ada8-f9f1688b2b07",
          "body": "",
          "latency": 0,
          "statusCode": 498,
          "label": "DomainNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fa72b50-2b27-43f2-bb1b-ea2d8af6a3b8",
          "body": "",
          "latency": 0,
          "statusCode": 499,
          "label": "BackupPolicyNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6180618-84ff-467d-b850-0f29f3fca920",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "DBParameterGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57ec68df-6f9c-42d1-8d12-4c19405dd302",
          "body": "",
          "latency": 0,
          "statusCode": 501,
          "label": "DBInstanceAutomatedBackupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b43021a-9bbd-4e90-b8a1-90998d7e047e",
      "documentation": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).",
      "method": "get",
      "endpoint": "#Action=RevokeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "621f0f10-67c4-4bc1-8f67-432eda77139a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a24c9305-ce48-4cbe-930b-f8ff2283cbc9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f160b336-d3d5-452d-8131-353398a1936f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11f397bf-5db3-4227-b21a-a8f407b1d37e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66a40232-f75c-4dde-8a0d-aaa22db25160",
      "documentation": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).",
      "method": "post",
      "endpoint": "#Action=RevokeDBSecurityGroupIngress",
      "responses": [
        {
          "uuid": "68bc2ade-8734-4727-a94d-a2b315f9208b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49622471-0541-4bb8-8daf-467d2c9e9b2f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSecurityGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da4f6606-c819-469e-b30f-eaac3d3f8ea0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7da961ea-35b1-4381-ac65-177fdcbdf6e6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBSecurityGroupStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffce1fa6-01e1-4d31-87b3-9fbf9f3f056c",
      "documentation": "Starts a database activity stream to monitor activity on the database. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.",
      "method": "get",
      "endpoint": "#Action=StartActivityStream",
      "responses": [
        {
          "uuid": "caa77cd0-1af7-4943-85a7-300972069df8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d1e7cc5-e889-405e-859d-d2d27c5dda09",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41c11645-837a-431e-b52f-a9473f93f4a5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64208af6-60c5-4571-810a-a733fdecaff5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81d0ed84-b2eb-428a-9c8d-bdeaaa642fab",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05d47a2b-70c1-4557-b25b-a786779f09e7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a3a05f6-c3bd-4a51-83fd-f4dc0e238a94",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "162eb84d-fd9f-41ad-a3e1-7783710cd9fc",
      "documentation": "Starts a database activity stream to monitor activity on the database. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.",
      "method": "post",
      "endpoint": "#Action=StartActivityStream",
      "responses": [
        {
          "uuid": "50ac0022-bf38-4e2f-8355-183e6b9c37e7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec28e6b-a660-46bf-895f-6bfc11e3fcde",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7060db7-9c65-4b68-8da4-7ed62113dacf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc9e70c7-56ec-4072-b1b3-34bf22c990fb",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "297a9122-20b9-40fa-b291-c55abe2aaa3d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "731fb0d5-4185-4ae4-83b6-54bf54a87c40",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1828d2d6-6048-4270-9ed6-bc23937a5148",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb97c0c6-65b1-4d93-abff-52a0e1161cfb",
      "documentation": "<p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "eceee4b7-46ec-45a7-b778-0b9021e5ee50",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "822165fa-8f17-4e9b-abbe-1099af672340",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a7d927c-0c4c-49f7-8cda-fbc1fe5392bf",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56427e9-7b2a-44cf-9f09-9f87788983be",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5dcc45c6-2805-4864-9a76-32c7b2926fc2",
      "documentation": "<p>Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=StartDBCluster",
      "responses": [
        {
          "uuid": "1c03f82a-7b20-4e97-baad-e6f245ee3b26",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4971158d-6bf1-4a96-9d74-719e092b4818",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d3d6b2-866f-471f-bc96-566a9ca5d88e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6447d469-65e2-49ea-880d-641ec22a78ce",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82c03094-3c63-4f02-aa27-73d833287baa",
      "documentation": "<p> Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html\"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead. </p> </note>",
      "method": "get",
      "endpoint": "#Action=StartDBInstance",
      "responses": [
        {
          "uuid": "6200a369-2dd9-4faa-92a9-72d17233cf7a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa9774df-e187-4c25-8b01-5b57323f6084",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6be3610-5e88-43f2-861d-da612cfdee64",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51bfee7e-f83c-42d9-b211-c8ab1857a9aa",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fc6c789-1148-47a9-a73e-f3b9e1601457",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1914d958-a1bc-44cf-a000-43559afb94af",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e8caed2-4f25-4c0b-98c0-4a66541c8598",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9ffbe0e-c7bc-4e16-8e08-9cbac0042c97",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3e03533-8e62-4f9c-9ea2-a2573aaf68a6",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e502177-72c8-45d1-b760-718747611c86",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9b3e140-d065-4658-a035-f1012a257bfc",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3e43e87-734f-4f92-ae29-811565d79388",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e525fb7-7fec-4b82-a462-c31a6affc20d",
      "documentation": "<p> Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance action. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StartInstance.html\"> Starting an Amazon RDS DB instance That Was Previously Stopped</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora DB clusters, use <code>StartDBCluster</code> instead. </p> </note>",
      "method": "post",
      "endpoint": "#Action=StartDBInstance",
      "responses": [
        {
          "uuid": "dbb57f32-8b66-4e20-89de-05ba9de0e00f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8314af4e-0d16-412b-8439-473f0b7bb84f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "611366fe-7e1d-42fc-afd0-55cc2abab48a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afe8075a-7b2e-4995-a52d-25d62f087cd5",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InsufficientDBInstanceCapacityFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db3b3547-4014-4db8-b244-75cef04219fa",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBSubnetGroupNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2b71c17-e709-46ad-849a-8867506f7648",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBSubnetGroupDoesNotCoverEnoughAZs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24e04c33-85b0-4506-b533-42a25394c726",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65481f21-0114-44aa-ba67-0fe116ad4f72",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSubnet",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e3d9225-0fd9-4633-a939-03e71df67d04",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidVPCNetworkStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37ebabf1-bc03-48fa-a19c-2cc62c5799ac",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "473164db-9534-4f7d-8d99-d63cab2c7688",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "AuthorizationNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5776b38f-c6ac-4030-979c-59f31733b588",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6acd4340-609f-44e0-8890-1015d5c0c85d",
      "documentation": "<p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=StartDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "bb4b59ed-cb8e-4ad5-b0e9-aa389e9181fa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aca6ffd7-f23c-4efc-92ad-5bfe63fba58b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "616a26da-a821-4582-a1e0-4cc45a50d759",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dc4bc7a-29b0-4343-bb32-db4a32f106b7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63ff3111-06e2-48b6-882d-2a5e67658bc1",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8568f5a2-f841-46bb-8426-31854bc87334",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c75c86a5-6905-4d63-b319-74c8a2a3146c",
      "documentation": "<p>Enables replication of automated backups to a different Amazon Web Services Region.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=StartDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "228a983e-91a7-4337-ac74-55051d2a9bfb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a567245-1bce-47a5-aff4-26c45ee91c0b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecf4043c-2500-4c7f-a324-2086add1d789",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d667ac43-a179-4d61-81da-1902da166dea",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2be911f1-54d6-4d98-b25c-4d1286f86d50",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBInstanceAutomatedBackupQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a0d3a5d-cd49-421a-ab3d-0721a9a061cb",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StorageTypeNotSupportedFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b2f46ca-6758-4632-93f6-b256e6bc429e",
      "documentation": "Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket. ",
      "method": "get",
      "endpoint": "#Action=StartExportTask",
      "responses": [
        {
          "uuid": "7aaedcd0-e005-499d-b090-6c9fbf4e1109",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a306235-2d5b-42eb-9bca-85acc3552830",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d0ba92-f5d8-4d0f-9921-7966c308db33",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "396822e6-0cf2-41d8-b8b0-ab6c6ee011fa",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ExportTaskAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aace07a-355d-47b9-983b-ed9738e77989",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63037e24-df0e-4f6c-99e2-8361058d1f30",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "IamRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82329682-2052-4086-943f-0842fd00c0e4",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "IamRoleMissingPermissionsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54a35049-d67e-4789-ab9e-f218691486d9",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidExportOnlyFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eac2df8-9324-43af-9b8b-b3b8185b9b3e",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0207c620-da5a-494b-98f9-1be05c5792c5",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidExportSourceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c101524-4d29-4b14-aa4f-9a513132b93a",
      "documentation": "Starts an export of a snapshot to Amazon S3. The provided IAM role must have access to the S3 bucket. ",
      "method": "post",
      "endpoint": "#Action=StartExportTask",
      "responses": [
        {
          "uuid": "523b76ff-899c-43b0-adf8-5f4a2ba0d798",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7e2462f-da47-47c0-9be4-f9955b4e28b3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a28c9e8-800b-4add-9ee1-59a1d972b756",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "DBClusterSnapshotNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3cf1595-6315-4130-965f-c2842f249179",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ExportTaskAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ca977f4-3c39-4257-9d26-c2b7d04b3586",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidS3BucketFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "045370c5-86e0-4609-a35e-02f298af89fa",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "IamRoleNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eac7e3a3-6564-402c-ba9e-dab8fad03fea",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "IamRoleMissingPermissionsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12ebd9ef-fca7-4dba-a516-572920562c55",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidExportOnlyFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41544956-dd9f-48a2-98fb-ea489641375c",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSKeyNotAccessibleFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1291fdf-fefa-46ae-b5d7-eeb3f17c40b6",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidExportSourceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54e01c8b-6dfc-42cc-83a3-d24aff47e35b",
      "documentation": "<p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=StopActivityStream",
      "responses": [
        {
          "uuid": "dc9c65fa-80cc-4142-ab8d-cf97274ce374",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c624d28-64a7-4eea-b04e-9f2451190e34",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2998c5e-1e67-4422-8764-dc38c1441361",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0013e1bb-43d8-476b-bc6a-c949f944e758",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "752b9483-a62e-4178-b5d2-f712d9522249",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fda9661-d22f-45e0-84e7-c5279ef02c94",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05f38a3e-8cac-4136-9812-e88acf26db63",
      "documentation": "<p>Stops a database activity stream that was started using the Amazon Web Services console, the <code>start-activity-stream</code> CLI command, or the <code>StartActivityStream</code> action.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/DBActivityStreams.html\">Database Activity Streams</a> in the <i>Amazon Aurora User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=StopActivityStream",
      "responses": [
        {
          "uuid": "c9cac425-326e-4204-a040-d75d440d568a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "421751f2-ee9e-4987-a8f5-1b4aa5ba503e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a32bf848-407f-4411-b572-f97341f7941c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc37b937-9770-4fba-aff6-e79e65b932e4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39e0ed2f-efcf-4571-975d-744e30c35b4b",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eea599c-c31b-443d-85f3-a0fbbdc0098e",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb42f906-4a96-4812-86d1-4289f3ae05dd",
      "documentation": "<p> Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "get",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "16922cda-2252-47f2-8ea9-5a40f06c9090",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb884789-c514-4fd8-96c3-0d1207019b44",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb5280b1-58d0-4bac-a670-5bc088a694b9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ac436f1-d18f-44df-9284-12a043c2733e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9ea78f1-d8dd-4360-aaf0-bf1cb5d63677",
      "documentation": "<p> Stops an Amazon Aurora DB cluster. When you stop a DB cluster, Aurora retains the DB cluster's metadata, including its endpoints and DB parameter groups. Aurora also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-cluster-stop-start.html\"> Stopping and Starting an Aurora Cluster</a> in the <i>Amazon Aurora User Guide.</i> </p> <note> <p>This action only applies to Aurora DB clusters.</p> </note>",
      "method": "post",
      "endpoint": "#Action=StopDBCluster",
      "responses": [
        {
          "uuid": "ab487a09-8d58-49a8-9687-1c9a5724f406",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db8d415c-3804-42fe-9608-a95ca5eba011",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBClusterNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81f5253b-9e5d-4c6c-873e-7d1efc828d73",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "691da571-6bea-45c1-bf40-da0fb7396724",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78121356-2890-4dbc-9c23-ae1f03e11d65",
      "documentation": "<p> Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html\"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead. </p> </note>",
      "method": "get",
      "endpoint": "#Action=StopDBInstance",
      "responses": [
        {
          "uuid": "98cd89bf-d496-43f2-a751-05bff4c0068d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "978a9e47-7978-4463-9f63-1f5acfcb09de",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc768542-43aa-4fa9-ac31-c6729868831c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0bbb547-55de-40f0-b5ef-c032f12a6114",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b484040-f2c3-4bad-9829-2633a59db21e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "555f2053-ebb7-43ac-9c10-158f0db094f9",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bcaa04b-fb26-43c0-82f9-8aa0fd8315eb",
      "documentation": "<p> Stops an Amazon RDS DB instance. When you stop a DB instance, Amazon RDS retains the DB instance's metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html\"> Stopping an Amazon RDS DB Instance Temporarily</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p> This command doesn't apply to Aurora MySQL and Aurora PostgreSQL. For Aurora clusters, use <code>StopDBCluster</code> instead. </p> </note>",
      "method": "post",
      "endpoint": "#Action=StopDBInstance",
      "responses": [
        {
          "uuid": "af640546-50b9-4bae-94f4-cacd8cdb202c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a2a8b23-1954-441e-b39d-fcf713a2fb48",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f155599e-3d6c-4a1f-9bbc-5e9e142cf258",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cedfd29-9a85-442a-9ba1-40de3637ce8d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "DBSnapshotAlreadyExistsFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a3698c-edb9-47b9-93d0-df79edc4232d",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotQuotaExceededFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29c24981-9ef5-4867-b7c5-ae85d29a96ae",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDBClusterStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c6453e8-0549-412d-9cbf-a32c4d9a98df",
      "documentation": "<p>Stops automated backup replication for a DB instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "get",
      "endpoint": "#Action=StopDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "c4b8c560-144d-4564-850b-befe158f1f5d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f38f58f9-268a-4c9b-9a05-e0a90f573dfc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c9991c-5c99-4d18-8579-7b808bfe6004",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05d3024a-8f44-4fd0-a797-e3ea803e132e",
      "documentation": "<p>Stops automated backup replication for a DB instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html\"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>",
      "method": "post",
      "endpoint": "#Action=StopDBInstanceAutomatedBackupsReplication",
      "responses": [
        {
          "uuid": "b0e874a4-1388-47ec-b5db-e214151220ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a271b3fe-b2fc-40d8-b508-75c528ae3b22",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "DBInstanceNotFoundFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9977037d-ff3c-4ba3-aa06-da7f5eb94dcc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDBInstanceStateFault",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}