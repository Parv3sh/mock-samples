{
  "uuid": "883a3ca4-f8a1-4685-b1b3-a16b9afb0b8b",
  "lastMigration": 19,
  "name": "Data pipelines API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "978e963b-7a2b-4e23-bbdb-122d4a8e92a8",
      "documentation": "Deletes a pipeline. If a scheduler job is attached to the pipeline, it will be deleted.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "c93aeb4d-3c9c-4e49-ab49-b93f2ca8438d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdb38963-ecff-4e8e-9251-92f29ef33a0e",
      "documentation": "Looks up a single pipeline. Returns a \"NOT_FOUND\" error if no such pipeline exists. Returns a \"FORBIDDEN\" error if the caller doesn't have permission to access it.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "66fd4469-8eb3-4000-b563-acd12a78897d",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"jobCount\": {{faker 'random.number'}},\n  \"lastUpdateTime\": \"\",\n  \"name\": \"\",\n  \"pipelineSources\": {},\n  \"scheduleInfo\": {\n    \"nextJobTime\": \"\",\n    \"schedule\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"schedulerServiceAccountEmail\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_RESUMING' 'STATE_ACTIVE' 'STATE_STOPPING' 'STATE_ARCHIVED' 'STATE_PAUSED')}}\",\n  \"type\": \"{{oneOf (array 'PIPELINE_TYPE_UNSPECIFIED' 'PIPELINE_TYPE_BATCH' 'PIPELINE_TYPE_STREAMING')}}\",\n  \"workload\": {\n    \"dataflowFlexTemplateRequest\": {\n      \"launchParameter\": {\n        \"containerSpecGcsPath\": \"\",\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"flexrsGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"launchOptions\": {},\n        \"parameters\": {},\n        \"transformNameMappings\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    },\n    \"dataflowLaunchTemplateRequest\": {\n      \"gcsPath\": \"\",\n      \"launchParameters\": {\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"bypassTempDirValidation\": {{faker 'random.boolean'}},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"parameters\": {},\n        \"transformNameMapping\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16ce53da-dc02-4128-aca6-eb3559984b58",
      "documentation": "Updates a pipeline. If successful, the updated Pipeline is returned. Returns `NOT_FOUND` if the pipeline doesn't exist. If UpdatePipeline does not return successfully, you can retry the UpdatePipeline request until you receive a successful response.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "3ba8aa15-2895-46b7-afc0-acdd8a455566",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"jobCount\": {{faker 'random.number'}},\n  \"lastUpdateTime\": \"\",\n  \"name\": \"\",\n  \"pipelineSources\": {},\n  \"scheduleInfo\": {\n    \"nextJobTime\": \"\",\n    \"schedule\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"schedulerServiceAccountEmail\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_RESUMING' 'STATE_ACTIVE' 'STATE_STOPPING' 'STATE_ARCHIVED' 'STATE_PAUSED')}}\",\n  \"type\": \"{{oneOf (array 'PIPELINE_TYPE_UNSPECIFIED' 'PIPELINE_TYPE_BATCH' 'PIPELINE_TYPE_STREAMING')}}\",\n  \"workload\": {\n    \"dataflowFlexTemplateRequest\": {\n      \"launchParameter\": {\n        \"containerSpecGcsPath\": \"\",\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"flexrsGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"launchOptions\": {},\n        \"parameters\": {},\n        \"transformNameMappings\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    },\n    \"dataflowLaunchTemplateRequest\": {\n      \"gcsPath\": \"\",\n      \"launchParameters\": {\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"bypassTempDirValidation\": {{faker 'random.boolean'}},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"parameters\": {},\n        \"transformNameMapping\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19dc233b-4573-4098-a374-0422f8047695",
      "documentation": "Creates a job for the specified pipeline directly. You can use this method when the internal scheduler is not configured and you want to trigger the job directly or through an external system. Returns a \"NOT_FOUND\" error if the pipeline doesn't exist. Returns a \"FORBIDDEN\" error if the user doesn't have permission to access the pipeline or run jobs for the pipeline.",
      "method": "post",
      "endpoint": "v1/:name:run",
      "responses": [
        {
          "uuid": "007a9591-ef48-4736-8d93-0d297ea87b38",
          "body": "{\n  \"job\": {\n    \"createTime\": \"\",\n    \"dataflowJobDetails\": {\n      \"currentWorkers\": {{faker 'random.number'}},\n      \"resourceInfo\": {},\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      }\n    },\n    \"endTime\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_PENDING' 'STATE_RUNNING' 'STATE_DONE' 'STATE_FAILED' 'STATE_CANCELLED')}}\",\n    \"status\": {\n      \"code\": {{faker 'random.number'}},\n      \"details\": [\n        {}\n      ],\n      \"message\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8b19a3e-d168-48be-9fcf-3b47b650aca0",
      "documentation": "Freezes pipeline execution permanently. If there's a corresponding scheduler entry, it's deleted, and the pipeline state is changed to \"ARCHIVED\". However, pipeline metadata is retained.",
      "method": "post",
      "endpoint": "v1/:name:stop",
      "responses": [
        {
          "uuid": "78383f65-6a71-4cb0-9da0-dae969a830ec",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"jobCount\": {{faker 'random.number'}},\n  \"lastUpdateTime\": \"\",\n  \"name\": \"\",\n  \"pipelineSources\": {},\n  \"scheduleInfo\": {\n    \"nextJobTime\": \"\",\n    \"schedule\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"schedulerServiceAccountEmail\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_RESUMING' 'STATE_ACTIVE' 'STATE_STOPPING' 'STATE_ARCHIVED' 'STATE_PAUSED')}}\",\n  \"type\": \"{{oneOf (array 'PIPELINE_TYPE_UNSPECIFIED' 'PIPELINE_TYPE_BATCH' 'PIPELINE_TYPE_STREAMING')}}\",\n  \"workload\": {\n    \"dataflowFlexTemplateRequest\": {\n      \"launchParameter\": {\n        \"containerSpecGcsPath\": \"\",\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"flexrsGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"launchOptions\": {},\n        \"parameters\": {},\n        \"transformNameMappings\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    },\n    \"dataflowLaunchTemplateRequest\": {\n      \"gcsPath\": \"\",\n      \"launchParameters\": {\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"bypassTempDirValidation\": {{faker 'random.boolean'}},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"parameters\": {},\n        \"transformNameMapping\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25c28223-1d38-480b-8d6e-dfa37e2d4f73",
      "documentation": "Lists pipelines. Returns a \"FORBIDDEN\" error if the caller doesn't have permission to access it.",
      "method": "get",
      "endpoint": "v1/:parent",
      "responses": [
        {
          "uuid": "011a42b6-06bd-4c13-8639-25dcaddbaeb1",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"pipelines\": [\n    {\n      \"createTime\": \"\",\n      \"displayName\": \"\",\n      \"jobCount\": {{faker 'random.number'}},\n      \"lastUpdateTime\": \"\",\n      \"name\": \"\",\n      \"pipelineSources\": {},\n      \"scheduleInfo\": {\n        \"nextJobTime\": \"\",\n        \"schedule\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"schedulerServiceAccountEmail\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_RESUMING' 'STATE_ACTIVE' 'STATE_STOPPING' 'STATE_ARCHIVED' 'STATE_PAUSED')}}\",\n      \"type\": \"{{oneOf (array 'PIPELINE_TYPE_UNSPECIFIED' 'PIPELINE_TYPE_BATCH' 'PIPELINE_TYPE_STREAMING')}}\",\n      \"workload\": {\n        \"dataflowFlexTemplateRequest\": {\n          \"launchParameter\": {\n            \"containerSpecGcsPath\": \"\",\n            \"environment\": {\n              \"additionalExperiments\": [\n                \"\"\n              ],\n              \"additionalUserLabels\": {},\n              \"enableStreamingEngine\": {{faker 'random.boolean'}},\n              \"flexrsGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n              \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n              \"kmsKeyName\": \"\",\n              \"machineType\": \"\",\n              \"maxWorkers\": {{faker 'random.number'}},\n              \"network\": \"\",\n              \"numWorkers\": {{faker 'random.number'}},\n              \"serviceAccountEmail\": \"\",\n              \"subnetwork\": \"\",\n              \"tempLocation\": \"\",\n              \"workerRegion\": \"\",\n              \"workerZone\": \"\",\n              \"zone\": \"\"\n            },\n            \"jobName\": \"\",\n            \"launchOptions\": {},\n            \"parameters\": {},\n            \"transformNameMappings\": {},\n            \"update\": {{faker 'random.boolean'}}\n          },\n          \"location\": \"\",\n          \"projectId\": \"\",\n          \"validateOnly\": {{faker 'random.boolean'}}\n        },\n        \"dataflowLaunchTemplateRequest\": {\n          \"gcsPath\": \"\",\n          \"launchParameters\": {\n            \"environment\": {\n              \"additionalExperiments\": [\n                \"\"\n              ],\n              \"additionalUserLabels\": {},\n              \"bypassTempDirValidation\": {{faker 'random.boolean'}},\n              \"enableStreamingEngine\": {{faker 'random.boolean'}},\n              \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n              \"kmsKeyName\": \"\",\n              \"machineType\": \"\",\n              \"maxWorkers\": {{faker 'random.number'}},\n              \"network\": \"\",\n              \"numWorkers\": {{faker 'random.number'}},\n              \"serviceAccountEmail\": \"\",\n              \"subnetwork\": \"\",\n              \"tempLocation\": \"\",\n              \"workerRegion\": \"\",\n              \"workerZone\": \"\",\n              \"zone\": \"\"\n            },\n            \"jobName\": \"\",\n            \"parameters\": {},\n            \"transformNameMapping\": {},\n            \"update\": {{faker 'random.boolean'}}\n          },\n          \"location\": \"\",\n          \"projectId\": \"\",\n          \"validateOnly\": {{faker 'random.boolean'}}\n        }\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "471a6525-25b7-432f-ac66-cde429b5cb40",
      "documentation": "Lists jobs for a given pipeline. Throws a \"FORBIDDEN\" error if the caller doesn't have permission to access it.",
      "method": "get",
      "endpoint": "v1/:parent/jobs",
      "responses": [
        {
          "uuid": "3afbd062-a2ab-4ec7-a067-5f2f54299ee5",
          "body": "{\n  \"jobs\": [\n    {\n      \"createTime\": \"\",\n      \"dataflowJobDetails\": {\n        \"currentWorkers\": {{faker 'random.number'}},\n        \"resourceInfo\": {},\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        }\n      },\n      \"endTime\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_PENDING' 'STATE_RUNNING' 'STATE_DONE' 'STATE_FAILED' 'STATE_CANCELLED')}}\",\n      \"status\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8b7e3d0-9002-4db5-b883-e86b597fa502",
      "documentation": "Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.",
      "method": "post",
      "endpoint": "v1/:parent/pipelines",
      "responses": [
        {
          "uuid": "3436c236-1c4e-4fcc-8c25-342260536f8a",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"jobCount\": {{faker 'random.number'}},\n  \"lastUpdateTime\": \"\",\n  \"name\": \"\",\n  \"pipelineSources\": {},\n  \"scheduleInfo\": {\n    \"nextJobTime\": \"\",\n    \"schedule\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"schedulerServiceAccountEmail\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'STATE_RESUMING' 'STATE_ACTIVE' 'STATE_STOPPING' 'STATE_ARCHIVED' 'STATE_PAUSED')}}\",\n  \"type\": \"{{oneOf (array 'PIPELINE_TYPE_UNSPECIFIED' 'PIPELINE_TYPE_BATCH' 'PIPELINE_TYPE_STREAMING')}}\",\n  \"workload\": {\n    \"dataflowFlexTemplateRequest\": {\n      \"launchParameter\": {\n        \"containerSpecGcsPath\": \"\",\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"flexrsGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"launchOptions\": {},\n        \"parameters\": {},\n        \"transformNameMappings\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    },\n    \"dataflowLaunchTemplateRequest\": {\n      \"gcsPath\": \"\",\n      \"launchParameters\": {\n        \"environment\": {\n          \"additionalExperiments\": [\n            \"\"\n          ],\n          \"additionalUserLabels\": {},\n          \"bypassTempDirValidation\": {{faker 'random.boolean'}},\n          \"enableStreamingEngine\": {{faker 'random.boolean'}},\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kmsKeyName\": \"\",\n          \"machineType\": \"\",\n          \"maxWorkers\": {{faker 'random.number'}},\n          \"network\": \"\",\n          \"numWorkers\": {{faker 'random.number'}},\n          \"serviceAccountEmail\": \"\",\n          \"subnetwork\": \"\",\n          \"tempLocation\": \"\",\n          \"workerRegion\": \"\",\n          \"workerZone\": \"\",\n          \"zone\": \"\"\n        },\n        \"jobName\": \"\",\n        \"parameters\": {},\n        \"transformNameMapping\": {},\n        \"update\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"projectId\": \"\",\n      \"validateOnly\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}