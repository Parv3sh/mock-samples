{
  "uuid": "91318e0a-5ff9-46f5-9c7f-2ee05ba5b740",
  "lastMigration": 19,
  "name": "Gitea API.",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2f5bab11-7aad-4aa9-b30d-c57e831752e4",
      "documentation": "List cron tasks",
      "method": "get",
      "endpoint": "admin/cron",
      "responses": [
        {
          "uuid": "19685708-e3ec-44fa-b2f6-75aff72b920c",
          "body": "[\n  {\n    \"exec_times\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"next\": \"{{faker 'date.recent' 365}}\",\n    \"prev\": \"{{faker 'date.recent' 365}}\",\n    \"schedule\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CronList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "038e2837-7401-401f-a0aa-e47dbd767f01",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96ddf2cb-0b2f-4ca4-9577-52fac3bfe10c",
      "documentation": "Run cron task",
      "method": "post",
      "endpoint": "admin/cron/:task",
      "responses": [
        {
          "uuid": "dbbf6c51-12d3-4a68-b381-add9711b3305",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4dc1652-2ea2-4bc5-b743-196c98335d1f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1ae0a5c-fa38-47de-bd69-af08f06313f9",
      "documentation": "List all organizations",
      "method": "get",
      "endpoint": "admin/orgs",
      "responses": [
        {
          "uuid": "cb9c5918-4d7a-4623-890c-351d01f58d51",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c96489d-83fa-4325-9c50-cce34793079b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df77720a-abcc-4bb5-8c8d-47b31ce9cb84",
      "documentation": "List unadopted repositories",
      "method": "get",
      "endpoint": "admin/unadopted",
      "responses": [
        {
          "uuid": "1a8b5d28-d012-416e-a7b5-5465e4c92090",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StringSlice",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcfb4828-6d9e-426b-a857-4499820a251d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95c89aad-ba74-4610-8e69-d0f7b20995e0",
      "documentation": "Delete unadopted files",
      "method": "delete",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "70f93ba5-7333-4de5-ba5e-56a165d0762e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1c472cd-1c73-4bc6-89c5-c02ee5d7d729",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b92d831-2fdc-480a-80ba-f55ac9dda199",
      "documentation": "Adopt unadopted files as a repository",
      "method": "post",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "0f403238-58f8-4d31-b837-a21a96faefc8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5224ba07-0bb8-4934-90a1-313295c93240",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c457aece-047d-49d3-be30-db3bc0e9e035",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d83c4f54-f9a0-45f2-9f8c-80c34b2d8f91",
      "documentation": "List all users",
      "method": "get",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "e6e24d43-693f-4858-8ba5-6bb7e17cbb76",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a36a206-067d-4d49-86be-9d681bcff25f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cab1f533-4773-4fc0-8fe2-e5e6b8df2055",
      "documentation": "Create a user",
      "method": "post",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "e6fa3295-2126-4e44-b6eb-a5a38370b9a1",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5181f4eb-765f-43f3-8614-e735cac61461",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e017082-9b3d-4e97-9cc0-00a754219c05",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc96c820-d174-43be-a3fb-ac88f33d54b1",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97f0c279-27d4-4184-86ef-b34f75296488",
      "documentation": "Delete a user",
      "method": "delete",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "b1601deb-84a4-442a-8523-8c15e0bfd763",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c37a852-8223-4a35-81b7-d281f368e790",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3027d8a-ebd4-434b-97ea-c7350405b85e",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61da60ab-37fc-4864-a0ae-bcc2d8aaad51",
      "documentation": "Edit an existing user",
      "method": "patch",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "25ef76f2-24da-439f-a2ac-b237b886e653",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17a209b5-651b-4af4-ba0b-0d0aca264071",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1512a91-2c67-4064-aa7c-8bcda7fbc1d7",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac171c20-683b-4405-b1e7-d4ea37386a7b",
      "documentation": "Add a public key on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/keys",
      "responses": [
        {
          "uuid": "4b180843-bf33-4634-a44e-1c08b6057b4f",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d7c07bb-9a0d-4d75-b801-a0e52e0aabc8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e0ad6ad-efb7-4bd4-bacb-cf596ee50b5e",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd83bcda-6bb3-4c30-b9fe-c9fd39137baa",
      "documentation": "Delete a user's public key",
      "method": "delete",
      "endpoint": "admin/users/:username/keys/:id",
      "responses": [
        {
          "uuid": "1b4afdbe-47c6-4f06-94e4-bc6fb2df6d76",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a48d4443-5220-417a-8a2d-5141cc4a0405",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0bc7431-8b6c-4c96-963f-9ed1fd201141",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44860d23-634c-4476-a81d-28cb316077b3",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "admin/users/:username/orgs",
      "responses": [
        {
          "uuid": "87ff7425-c0cb-47cf-9fc8-42326b5951e7",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea876964-5304-486b-a9dd-84b28196f355",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baccccdc-7cef-4c17-8450-0efc3f340a04",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3c746af-d50f-44e1-9597-60a2849fe3a1",
      "documentation": "Create a repository on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/repos",
      "responses": [
        {
          "uuid": "8ca30c26-75c2-44dd-9c3b-ea5d6e53344f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c089147-a16b-4ac7-ac20-b717a6d4e98f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bde7042e-b5ba-4cb1-9b8d-6e9c478b5969",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0cb31f0-f7c4-41c1-b15c-6b681c3ca470",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "908af922-c023-4665-8049-dad3e01350de",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "049f4e3d-e395-49ac-82e7-f561e28cde01",
      "documentation": "Render a markdown document as HTML",
      "method": "post",
      "endpoint": "markdown",
      "responses": [
        {
          "uuid": "620a573b-c644-4488-a50d-e3715d9a236b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0207f87a-fbd7-4705-a9a2-78ce8ab304d6",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02de81c9-3b33-4337-9b40-2e7a6992c1f7",
      "documentation": "Render raw markdown as HTML",
      "method": "post",
      "endpoint": "markdown/raw",
      "responses": [
        {
          "uuid": "e72a96e8-204c-4927-965d-aaf6a4929a9f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5464c89e-33cf-4320-b478-8c2ed1be248b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52924b71-d15a-4cb0-b74d-7a6801701cdb",
      "documentation": "List users's notification threads",
      "method": "get",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "3a727542-e14d-4d30-a6fe-db044bb26421",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8f1de21-a0c2-4df8-b473-b93117ae903b",
      "documentation": "Mark notification threads as read, pinned or unread",
      "method": "put",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "5a18d80c-7a43-4fa2-9fbf-241b9638cc3a",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "161753e7-b7f3-4ee6-8ee3-91618042c41b",
      "documentation": "Check if unread notifications exist",
      "method": "get",
      "endpoint": "notifications/new",
      "responses": [
        {
          "uuid": "8c5376b5-102e-41c2-9acc-334fa7509672",
          "body": "{\n  \"new\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Number of unread notifications",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29229f6f-fc1b-42fe-832b-dce3b7532cda",
      "documentation": "Get notification thread by ID",
      "method": "get",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "c484db50-d9a3-4899-8874-220558284463",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7e861b-4d2a-4733-90a1-70ef53b68756",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28e894b7-b88e-4b82-8a81-0f234172ed6b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7184a04f-ad5f-495e-a2a0-b087e2bb4e6a",
      "documentation": "Mark notification thread as read by ID",
      "method": "patch",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "97a098ad-ce6c-4d25-98b8-1bbad04e8424",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a1195d-ebdd-466e-bf48-152f7be73913",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ced84a7-3230-49ff-b8e8-fcf75938f91b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3367a444-bb6c-4804-9ace-f05a53736d53",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "org/:org/repos",
      "responses": [
        {
          "uuid": "a5b8238e-bad8-4621-8f5b-828242ffed3a",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4379085-eb29-4218-be37-c648a2e88319",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "646be7fc-5ec9-4d32-8c4c-dedec5d996a1",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abb2b251-14e5-4452-b550-06b354769406",
      "documentation": "Get list of organizations",
      "method": "get",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "fec962d1-e44d-498c-8cb5-95acad58ac29",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "218eead2-fa90-4b5f-9d82-32f8f69bbdea",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "291a61d5-58a8-4d66-a723-86129af37a43",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce40e280-85b0-4620-9ad5-75e654dcd0f1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3b94458-985d-448d-b3a1-bb86da8a9de8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abd3da96-1756-489f-b504-b21b40369245",
      "documentation": "Delete an organization",
      "method": "delete",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "a846327a-fdd4-4b29-82e9-994df8a10161",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aba9c6f9-5f61-4b33-933f-469401292297",
      "documentation": "Get an organization",
      "method": "get",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "b5e31afc-1065-4573-9d2e-ff23c7ed3657",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9bc315e-36e1-4bc6-a741-37a63a3fc376",
      "documentation": "Edit an organization",
      "method": "patch",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "32989f41-0eac-4453-9f43-3d1830b83c84",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cddba53a-1b27-4d9e-a913-e898767d032d",
      "documentation": "List an organization's webhooks",
      "method": "get",
      "endpoint": "orgs/:org/hooks",
      "responses": [
        {
          "uuid": "bee4e899-242d-4903-a759-eb0a4bdd352b",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00774a29-3dc3-4434-9e6b-9f611669bce2",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "orgs/:org/hooks/",
      "responses": [
        {
          "uuid": "9d757590-6a8c-48bb-9f80-3cc7963122c6",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81b2821a-bbd0-4d67-9775-d3ffafc2e7f2",
      "documentation": "Delete a hook",
      "method": "delete",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "0d44fd41-51b3-4c94-9e7f-6e3e7fe8efbd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4bd2b4f-bc83-420a-aeca-d1de01d0f6f5",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "e7aec420-473a-424c-ad99-88cc92ca4d8e",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "321f9c98-1ffa-4081-b752-1f26a162fa1d",
      "documentation": "Update a hook",
      "method": "patch",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "fabce316-78e1-4af3-972a-d984e4bce3ec",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7e624ba-c7fa-4cd0-92a4-16b336c93a00",
      "documentation": "List an organization's labels",
      "method": "get",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "6f84cf00-69f4-41cf-bdf9-b033707e498c",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75261436-b72d-411c-b413-ca3c42b290db",
      "documentation": "Create a label for an organization",
      "method": "post",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "233e4167-7c05-41fc-a9c6-0a4c793f2366",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b656b1ba-bbcb-46d1-a0db-3cfa2d5e9107",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c2db339-6d4b-403d-89c1-7bfdbe8a4a89",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "2f2f77fc-6533-4000-931b-1bc9fca616c8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aebec127-bedd-449a-a817-31705ff458bb",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "0521a0a3-0166-44a6-b2c1-6229e20def38",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb43abea-183b-47fe-98bd-da0b977d791e",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "6761d29b-4ea7-4514-891a-dbcf0e4dbafe",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "278fe290-0d96-4a87-8e5d-04a19c3dd1a0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb28b53d-3f82-4c87-86db-648e3a48b623",
      "documentation": "List an organization's members",
      "method": "get",
      "endpoint": "orgs/:org/members",
      "responses": [
        {
          "uuid": "71a7bc80-6b23-47dc-a574-ea3f1222b274",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "694bdd54-3025-4590-8315-36dae0b505ff",
      "documentation": "Remove a member from an organization",
      "method": "delete",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "9d941f74-500d-4bdc-80f9-29dd9ccdf01e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "member removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c03fd775-8975-40dc-baa8-65c8f0ed795c",
      "documentation": "Check if a user is a member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "7a8d3af3-3fe1-482d-83a4-65f18481df92",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf587ad9-db4d-4063-833e-a267969af034",
          "body": "",
          "latency": 0,
          "statusCode": 302,
          "label": "redirection to /orgs/{org}/public_members/{username}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d05d004-b9ff-4bbb-9605-cdec602ce06a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7243cf07-6aab-4e77-aa3f-33e80cac911a",
      "documentation": "List an organization's public members",
      "method": "get",
      "endpoint": "orgs/:org/public_members",
      "responses": [
        {
          "uuid": "120b2371-543b-4af7-8e5d-4928b77c9a02",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93b258d0-58db-404a-8049-80f2870bb3ba",
      "documentation": "Conceal a user's membership",
      "method": "delete",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "bdea8c93-2eab-4b88-9abe-b68e903d6c16",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a429cfbd-a789-4eeb-941b-b33925af1890",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adc4f0f3-a89f-4a2e-ae72-bf30441a8fb5",
      "documentation": "Check if a user is a public member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "85392b75-14f3-4b10-b1e9-947e572e77c1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93166b43-5fdd-4773-b52b-26225007b12c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e28f5809-57c0-4988-b9bf-f763d6f2544c",
      "documentation": "Publicize a user's membership",
      "method": "put",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "00aaf3e2-c83c-43e1-bab3-e7eeb0cc7a01",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "membership publicized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a2c26d5-c60b-40a9-8f3f-f8afd84db49d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02cf3a8d-c58e-405e-926c-861d29dfb9f0",
      "documentation": "List an organization's repos",
      "method": "get",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "e19ad7b2-43a4-4847-a58a-b2857624098c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4d27f6d-7c40-46f1-aed5-fb51aaa30196",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "1f007e7b-77d6-40a6-bacf-0a7cc2bd60ee",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47c03428-d453-47f8-8fae-f2510beafd77",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "997ab1f7-c688-46be-870a-6876bbf81efd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f895f00-7985-4876-88b8-2ea4dcc0532f",
      "documentation": "List an organization's teams",
      "method": "get",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "d5858110-7960-476b-8c37-87346d9adbc6",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "219a629c-5f11-4ec9-ab74-30e9df791e34",
      "documentation": "Create a team",
      "method": "post",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "d323e7a5-be6a-4a57-96ea-1ee73ad7f4e3",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6da8b049-9981-4961-ad78-ff8598be2adf",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c552e09f-094f-4fce-95f5-a86239a0aa81",
      "documentation": "Search for teams within an organization",
      "method": "get",
      "endpoint": "orgs/:org/teams/search",
      "responses": [
        {
          "uuid": "7c74458a-c054-487f-8674-d2838f0239fa",
          "body": "{\n  \"data\": [\n    {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    }\n  ],\n  \"ok\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7732f16b-c172-48fa-8a89-760ac2acbcca",
      "documentation": "Search for issues across the repositories that the user has access to",
      "method": "get",
      "endpoint": "repos/issues/search",
      "responses": [
        {
          "uuid": "fb1b5e52-adff-4cef-94c0-0afddbd38fc5",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19875c09-321a-4448-b929-afb7d30bc0b0",
      "documentation": "Migrate a remote git repository",
      "method": "post",
      "endpoint": "repos/migrate",
      "responses": [
        {
          "uuid": "4ace7477-6054-4dba-afad-db8ce52fffad",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0c854ff-bfac-4c00-956f-e5abfafb07e4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f3323c4-4bf0-4a9b-8f00-c7a03c4c0303",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca659c78-43e7-42a4-9915-623d10420719",
      "documentation": "Search for repositories",
      "method": "get",
      "endpoint": "repos/search",
      "responses": [
        {
          "uuid": "491e146f-b7c8-4e36-8742-959a4eacb801",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9d4ac3b-2ce2-43a8-9ad8-837f1a0e2589",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7b88b15-1d51-4116-959f-cfabfdd539aa",
      "documentation": "Delete a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "d34dcfbe-7e92-4a02-89ef-d04f184ebc9e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43ccd9e2-b906-4a31-9b1d-6cc596d49239",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d71556ae-9c69-47dd-b52d-881dabbbc594",
      "documentation": "Get a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "ae26ad58-f5f8-469d-a235-e07644c646b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14d8d6b6-5c58-4a9a-8d23-be8c8c225541",
      "documentation": "Edit a repository's properties. Only fields that are set will be changed.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "2e0c10d8-dbd1-461e-9bba-4a432bb3ad59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb6a30c4-3db8-42cc-a5c8-1857278546be",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7510f6-5320-48b4-8f0a-73fb82696c45",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c19b617-a6a1-4ae5-810d-fff0a37102fb",
      "documentation": "Get an archive of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/archive/:archive",
      "responses": [
        {
          "uuid": "a26355f3-93f8-4605-a5f2-a54da7eaa6ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b765780-6815-4078-9235-b6c56e98d40f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9deb63a-c20d-4f14-a60c-466ff7bfbe86",
      "documentation": "Return all users that have write access and can be assigned to issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/assignees",
      "responses": [
        {
          "uuid": "74a7bd20-e2c0-49a0-a3f7-297502c55f01",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ddc8381b-6732-4b55-bd20-ac043c733857",
      "documentation": "List branch protections for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "3a887406-1ccd-4172-a36a-c4c6d5f02eec",
          "body": "[\n  {\n    \"approvals_whitelist_teams\": [\n      \"\"\n    ],\n    \"approvals_whitelist_username\": [\n      \"\"\n    ],\n    \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n    \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n    \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n    \"branch_name\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n    \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n    \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n    \"enable_push\": {{faker 'random.boolean'}},\n    \"enable_push_whitelist\": {{faker 'random.boolean'}},\n    \"enable_status_check\": {{faker 'random.boolean'}},\n    \"merge_whitelist_teams\": [\n      \"\"\n    ],\n    \"merge_whitelist_usernames\": [\n      \"\"\n    ],\n    \"protected_file_patterns\": \"\",\n    \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n    \"push_whitelist_teams\": [\n      \"\"\n    ],\n    \"push_whitelist_usernames\": [\n      \"\"\n    ],\n    \"require_signed_commits\": {{faker 'random.boolean'}},\n    \"required_approvals\": {{faker 'random.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtectionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15718cd7-8663-4514-9f8a-7dd486d1de95",
      "documentation": "Create a branch protections for a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "2b5e0c12-d7b1-4de2-a4eb-869b4afc6780",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b75f75-4f13-44c7-b148-cd40044fa74c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce20bbb-0544-421c-9a9d-9fb9d4b2b7f0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "775aeff6-343a-4f60-9391-9d3943db2911",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f808eec5-a48c-4d46-aa50-41fcc85e78e9",
      "documentation": "Delete a specific branch protection for the repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "c9f19f17-c397-4dd2-9434-351b9bb9869d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38a9e2f0-edc1-4a23-8502-4d8774054541",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35fd0920-2815-4bda-adbc-bc98496bada0",
      "documentation": "Get a specific branch protection for the repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "cbe35943-b1b5-4125-b95f-12f80199a800",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ae1050-6a09-4672-a8c2-3cce35ce21a4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4849f612-8a39-4b79-b9ad-49d9a0df2e1a",
      "documentation": "Edit a branch protections for a repository. Only fields that are set will be changed",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "23f5daf5-5c86-4938-bb99-5ac922b6840b",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcef0e99-57ef-49ae-b740-be9f05aed44a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8de0865-23ef-4996-9fe9-067360f5fec6",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1635b2e5-c8c8-4732-a38c-0e2aad98796f",
      "documentation": "List a repository's branches",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "317b5cb6-d987-43ac-94b2-f9e5c6b1b889",
          "body": "[\n  {\n    \"commit\": {\n      \"added\": [\n        \"\"\n      ],\n      \"author\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"committer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"id\": \"\",\n      \"message\": \"\",\n      \"modified\": [\n        \"\"\n      ],\n      \"removed\": [\n        \"\"\n      ],\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"verification\": {\n        \"payload\": \"\",\n        \"reason\": \"\",\n        \"signature\": \"\",\n        \"signer\": {\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"name\": \"\",\n          \"username\": \"\"\n        },\n        \"verified\": {{faker 'random.boolean'}}\n      }\n    },\n    \"effective_branch_protection_name\": \"\",\n    \"enable_status_check\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"protected\": {{faker 'random.boolean'}},\n    \"required_approvals\": {{faker 'random.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"user_can_merge\": {{faker 'random.boolean'}},\n    \"user_can_push\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2dfadf0-9ce7-4675-8c48-57b1e7788759",
      "documentation": "Create a branch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "270e4b42-6edf-41b9-988b-1950412e46e8",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'random.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'random.boolean'}},\n  \"user_can_push\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c756f56-06ba-4537-8240-93d53774c731",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The old branch does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a422ee12-48dc-4b7f-b41c-efad8bccb590",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The branch with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b54638ba-205f-414e-a4b0-9d2f0d323f1a",
      "documentation": "Delete a specific branch from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "4ac76686-89f6-468c-8732-74829affc454",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cb7ad73-8b66-40da-ba11-270276e76f89",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36685f54-9077-4fda-8d0f-3ef60b687d18",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b573ee67-82fb-4843-9d09-ef8b43c8f3b4",
      "documentation": "Retrieve a specific branch from a repository, including its effective branch protection",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "8b91fcbe-ffec-48e8-8335-c60f8114d074",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'random.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'random.boolean'}},\n  \"user_can_push\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f51845ca-2a6e-4218-9e72-f280162e9143",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "117ecd8a-3f1c-4fc4-99bf-dca7aba54d3a",
      "documentation": "List a repository's collaborators",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators",
      "responses": [
        {
          "uuid": "6031385a-5cc2-4841-96a0-47de1670d004",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94495075-6793-45c8-957d-6655c39e7d0d",
      "documentation": "Delete a collaborator from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "3f707df7-bed7-4261-a7b0-02a75be31c05",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "635cba6c-5bc1-4643-9e5b-6fc5f8dff0cc",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c67a2922-e070-4e30-9ee8-b9155e58bb89",
      "documentation": "Check if a user is a collaborator of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "298a143a-2538-444f-8419-1ae20575ff1a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10782c7d-f9ae-474d-8275-c2ab1f293b75",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2690b214-29ed-4d5d-ab39-7eb9e049bdeb",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "415d0aff-f270-43a0-8c0a-73853a8f622a",
      "documentation": "Add a collaborator to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "33a42994-256e-4dfb-956b-147b4054845e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d5cbd3-3d21-4eec-9e11-3a2f0568c7a9",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f4bec9f-e7f7-4269-a093-b5b9c24eb7a8",
      "documentation": "Get a list of all commits from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits",
      "responses": [
        {
          "uuid": "bd2e3a0f-58d4-4fc8-a33c-556e0de3bdb6",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6c08f86-8ccc-43be-bc2e-eb1ee30b6e4f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55cb6a09-015b-4a83-889f-064fdaae409c",
          "body": "{\n  \"message\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "EmptyRepository",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8650516e-2d85-419d-a2da-44157c81fa28",
      "documentation": "Get a commit's combined status, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/status",
      "responses": [
        {
          "uuid": "b14ca71a-ff37-47e5-a254-f7c43bb4a64d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad9aa5f5-1f23-44d8-91d9-6905e1312315",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91d926ec-1814-4ec1-b035-9eaafd99d123",
      "documentation": "Get a commit's statuses, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/statuses",
      "responses": [
        {
          "uuid": "5cc4bc3d-51a8-4ffe-906d-6be3fe4e68a2",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79a0ad07-c4cd-4e8e-9610-c2e469425a87",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50ea9684-0747-4ef8-9731-6f5e6514e0ef",
      "documentation": "Gets the metadata of all the entries of the root dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents",
      "responses": [
        {
          "uuid": "1b6126e6-5029-4b89-a452-ed2b3dcb7a61",
          "body": "[\n  {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee14fe2f-a1ff-4d5c-ac4d-aa4c078c97b5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72a9985d-ffba-4c45-9b14-3c2b39742ea1",
      "documentation": "Delete a file in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "3682e8e7-0e85-4834-ae83-21757a102f9d",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {},\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileDeleteResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e987f1-2cb6-48eb-bea4-4d9a9d0d7249",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4db7c6ee-993a-4049-90e3-2d902f57186c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f737d9b-1bdc-4309-ab61-58f9ef4c9e39",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ce070eb-bf95-4b3f-88f6-1c20c72d202e",
      "documentation": "Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "ee1276f4-c0b1-4973-a7df-348d5c8ed18d",
          "body": "{\n  \"_links\": {\n    \"git\": \"\",\n    \"html\": \"\",\n    \"self\": \"\"\n  },\n  \"content\": \"\",\n  \"download_url\": \"\",\n  \"encoding\": \"\",\n  \"git_url\": \"\",\n  \"html_url\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"submodule_git_url\": \"\",\n  \"target\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfae20aa-d3e7-4771-a2ea-bb1e9f68e46d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9caa950-6824-44bb-a2e7-4510bf367b2b",
      "documentation": "Create a file in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "b853c8ef-f2dd-42a6-a423-8a44931dfadf",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebc29760-cac6-4ef1-9626-8e058a08f5fb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97e1a0d0-873c-4046-a14f-de15efdc19cd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587ba324-1d08-45f1-bcac-408b46602609",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53b802da-3932-4a03-ad32-df0a1087b1a4",
      "documentation": "Update a file in a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "27f88113-66d1-4316-b656-a5180facfc82",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22517d8-45a4-42b3-9846-9b1fbab5349e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c66c9d4-e205-482f-8fc0-ccf39a922040",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc67b136-5b70-496e-b9d3-9b3528a7b952",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fada915e-0a66-4078-b895-977601b493d1",
      "documentation": "Get the EditorConfig definitions of a file in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/editorconfig/:filepath",
      "responses": [
        {
          "uuid": "98973840-86b0-4e7a-bc48-4ba9e67ffa85",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed50eed2-8644-4238-a992-63b1cf454fc5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8df72e32-f506-415b-97b7-66d74db67713",
      "documentation": "List a repository's forks",
      "method": "get",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "0d9dba56-f062-4808-8154-d735dca340ba",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1df70a4c-1e06-47a3-8caf-a085bdcae7c9",
      "documentation": "Fork a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "b3bf5b87-8ce2-4327-8a97-c188c4facf95",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41d88ed4-fdec-4213-9b2e-732ca8ffe80b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9965a515-4488-4458-a5cf-1e6d1c45fddd",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2128213-defc-49f2-8095-b9bf21a1e7ee",
      "documentation": "Gets the blob of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/blobs/:sha",
      "responses": [
        {
          "uuid": "b0cb5cbd-57b4-4cb7-b46e-1f730caf0a9b",
          "body": "{\n  \"content\": \"\",\n  \"encoding\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitBlobResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "328df970-e9bb-407c-a1fa-a9b30bd425cb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3393020-6624-4c63-9bf8-d5c12dcb5522",
      "documentation": "Get a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/commits/:sha",
      "responses": [
        {
          "uuid": "7fb8c88a-af8a-4a81-86a2-434dd0f5453c",
          "body": "{\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"message\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"committer\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"files\": [\n    {\n      \"filename\": \"\"\n    }\n  ],\n  \"html_url\": \"\",\n  \"parents\": [\n    {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"sha\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Commit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "693f97a7-942c-4eaa-b94d-dcb3f8bfae7a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5423c0e2-a65f-412b-bb9d-c46cc1bf99f2",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f18bd1f7-dcb5-4bb2-9625-69985d48ccdf",
      "documentation": "Get a note corresponding to a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/notes/:sha",
      "responses": [
        {
          "uuid": "0a92c99b-19f1-4521-a530-a6c04b5908d1",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Note",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e2c396d-f70d-43af-98e1-0b58a8e96f0d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76790577-6038-4777-bb6b-6ea01caf9dac",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8493b6ba-2144-4029-8263-0bd906db1e1b",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs",
      "responses": [
        {
          "uuid": "92857f43-abb7-434d-834b-1915e18d1180",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25095b5b-b9f7-4999-a323-48d6954e1d3d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8f33954-1f15-417b-883d-eeb3277c038d",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs/:ref",
      "responses": [
        {
          "uuid": "bfd921cb-571c-4d75-a4df-7c28720e4c0e",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4933cf0-050f-417d-b3bf-d047a6e8c8de",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3b1e7fb-8923-4634-94a0-3bf00fc55f1c",
      "documentation": "Gets the tag object of an annotated tag (not lightweight tags)",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/tags/:sha",
      "responses": [
        {
          "uuid": "c7cbdd2f-a73a-48f0-a089-1d90dc94fea9",
          "body": "{\n  \"message\": \"\",\n  \"object\": {\n    \"sha\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"sha\": \"\",\n  \"tag\": \"\",\n  \"tagger\": {\n    \"date\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"name\": \"\"\n  },\n  \"url\": \"\",\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "AnnotatedTag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4af701ca-f95b-4b3c-ac7c-c8ee5048230f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "769da89b-cfc4-4433-8673-95dd80cae47a",
      "documentation": "Gets the tree of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/trees/:sha",
      "responses": [
        {
          "uuid": "5f3b7a46-caad-4f1c-acd7-731b8d329f80",
          "body": "{\n  \"page\": {{faker 'random.number'}},\n  \"sha\": \"\",\n  \"total_count\": {{faker 'random.number'}},\n  \"tree\": [\n    {\n      \"mode\": \"\",\n      \"path\": \"\",\n      \"sha\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"truncated\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitTreeResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71465ef0-bbdb-4b39-a4ab-6c8bcff9316a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f9a8af5-0dbf-4603-bbe0-cb36d470607b",
      "documentation": "List the hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "6c90c984-8bc0-43ea-940e-7d4417cfc723",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1ae9243-1832-4a1e-a186-dd1fee962f2b",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "8ac1c0f5-b865-4a17-9f5a-204f39231e39",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "977f9e19-c623-414d-bd49-d4f88faa0c64",
      "documentation": "List the Git hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git",
      "responses": [
        {
          "uuid": "c4082400-9df7-43e2-b67f-1845134cad42",
          "body": "[\n  {\n    \"content\": \"\",\n    \"is_active\": {{faker 'random.boolean'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e42b9371-9b2f-4e03-b141-030366b44a0b",
      "documentation": "Delete a Git hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "4d226ede-c3bd-451b-bd4d-58b9dcff1047",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27eb8d1-baeb-468c-935a-22366eb65e2d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbf25b98-56fe-4c87-9c87-384442bccc20",
      "documentation": "Get a Git hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "b69bc4d8-4695-4bc3-bf31-865f3a712a6a",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68bf506a-4ad5-40d3-9b12-7600aa1bc7b6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4eeb9df1-2218-45cb-81eb-fa242e2991cf",
      "documentation": "Edit a Git hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "6eb002e6-b6f0-459f-977f-068f65e4e6d6",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b346c3a-c446-44b7-8c44-601df43c608a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d48978f-87d2-4e70-95cb-07fa73192156",
      "documentation": "Delete a hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "127450c7-7395-4a40-b542-0fec8759c2e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2359409-9cfa-4bec-916e-6fd9bfd1a949",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c035a796-9780-44aa-aa0e-8b02418b0e1e",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "36b4dd0b-3a93-4782-9fa4-d2d502112351",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56e20873-6914-4f81-8f7a-40d4ba701455",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e5db68b-7509-44f4-96a5-c6df79f06356",
      "documentation": "Edit a hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "55b970af-066e-47a3-b618-ea54fb7cba7c",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6b8fa0c-5f93-4999-bf5c-ca02f9c8c1ee",
      "documentation": "Test a push webhook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks/:id/tests",
      "responses": [
        {
          "uuid": "d1a2b670-42ee-4deb-ad8e-0dd99a6772e1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f977dbec-d91b-4b55-a2bc-66e53b2b104a",
      "documentation": "Get available issue templates for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issue_templates",
      "responses": [
        {
          "uuid": "c4058bf5-e830-427c-bdb9-fbe4dd3ef152",
          "body": "[\n  {\n    \"about\": \"\",\n    \"content\": \"\",\n    \"file_name\": \"\",\n    \"labels\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueTemplates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3959ab9b-7655-463b-b1b7-b26bd8914daa",
      "documentation": "List a repository's issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "b99c7371-3206-4e57-9635-9e3c85d2c8fa",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "149f9b2f-757a-45f9-bbaf-05c90d75ffb7",
      "documentation": "Create an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "c0199422-7705-4840-9a88-a5c48fecbb66",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b90458f2-8e94-435c-840e-674081df643b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "452bbaa5-d2de-4602-9fc9-057a56da2720",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5393066-b5af-4bb5-bffa-2e859c935ef4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce2ca174-b366-4534-a1e6-cde97ed860a5",
      "documentation": "List all comments in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments",
      "responses": [
        {
          "uuid": "5b495d9c-bff9-4ff8-be99-8fdede75a796",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80c49be8-3667-478d-be55-672201976425",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "18c7632a-7ac8-4c36-91c9-7bc67533b9e2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07336cbe-4fcb-43fa-bee7-6b2e473f5f1f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7399f23a-db37-4d7f-8f7e-d218776ac88c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e2f4f54-20d0-4770-a199-4160ea6e99ea",
      "documentation": "Get a comment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "9c2bae83-6dd6-4005-9daf-8302e00c2119",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88a08f0d-3064-4515-ad0e-7a83b943fd99",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33e3db46-b66d-463f-bf6d-b4074e5e2b4f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d10146-e04c-4ea9-9bc5-5609d70ed5a8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa923f36-f239-420c-a713-af464a566793",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "ccaa0b8d-d748-4f9e-aee5-cf30abbdccca",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bfea4a2-2501-4c7f-8e46-6f22cf8df09f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "271bf176-4a76-4b1b-a072-33f9b9c9f6b6",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7c7f7b3-b411-459a-95f8-375eef011972",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52ea5fc7-57ab-4482-b9b0-6f2410ad6b27",
      "documentation": "Remove a reaction from a comment of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "b49ac354-f4d9-478f-b32b-ac5fdb4edc10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adacf285-d358-4821-b7b3-3e91095a0750",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8fe8311-ef16-4d42-9302-d9472441a71e",
      "documentation": "Get a list of reactions from a comment of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "ca99c2a7-95fa-4a94-adef-f2041f7065f6",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84cf5da2-ab71-4dec-b0e1-1c1708b58638",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4f4c0f3-916f-4ea5-953a-8968cd8714aa",
      "documentation": "Add a reaction to a comment of an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "9c2824a2-1485-4969-80d7-0e184a774531",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "564b76c4-1f3e-451f-a16d-c8f82962071d",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9772d46a-2067-431f-b395-78956ad034bd",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00676998-e5c9-41f4-86b8-704788e51782",
      "documentation": "Get an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "82a0ca49-2bfc-487a-9127-a45426a10901",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d87a66d-b42d-49e7-9fdf-d8ebbca5972f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6546cfaf-f872-43a2-8460-b08ff54f379a",
      "documentation": "Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "b143611b-6871-4c09-9b8a-bca01e9ffae0",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2606c101-d252-41d6-9c4e-7f0f036d45fa",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6773e416-c795-4454-bba4-fd4e3ae1eee0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bafa7698-bcfa-4624-bb22-fae1bc66feba",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "956d7733-ab5c-413a-9bb2-47590d6231e8",
      "documentation": "List all comments on an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "3fc223f1-e554-40aa-9d1f-8cf5eb97722e",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29ecf652-48f2-434e-954e-107c89a1aa6b",
      "documentation": "Add a comment to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "ce5ecc09-d6bb-4f9f-9ea8-0c5a41698aad",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01081ac5-e7e7-48ef-8a39-1ce850180781",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4a8a738-e3a2-4ff1-9aee-6e57046d0472",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "f238d30f-dc91-4fa1-9851-5b61cd10a211",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12090605-9634-413b-b0a6-d367401c35a5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27813c43-a478-42fc-be7f-8f90883ca985",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c7515b4-8b57-490a-b64a-e38286351ae0",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "e2f24cdb-ec90-4865-8618-5fb0c0ddbab7",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0014b755-7da5-44f9-8e37-17434fbce033",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b271c75-4a75-4abe-886f-9d1782df5eb1",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5d5307b-5d46-4b34-9d06-85bb39b2f6f5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c9d1c08-7a19-4678-8fbb-3661096a5c82",
      "documentation": "Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/deadline",
      "responses": [
        {
          "uuid": "409bf221-2a38-4ac1-9b5e-4fe147cb197c",
          "body": "{\n  \"due_date\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "IssueDeadline",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18178b95-d0ae-4186-945b-b4c1e49cc204",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0df80c62-bbfe-4de6-92db-2adb5e2b6c06",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f332e22c-8095-417b-9777-a8d34de97395",
      "documentation": "Remove all labels from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "2a596ab9-442d-45b7-b337-03fc38519c11",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39733c2d-9e9d-4f97-b826-c89ebbbb72a8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c36dcf52-7360-4be8-940f-f09ef99ae5c1",
      "documentation": "Get an issue's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "02c5ca7b-c17c-4a3b-b1fb-34c57b77b7cc",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce2e44ed-84e0-4108-9ae4-7a87a7ee9ce3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4df7ecdf-5eb8-42db-9910-8abf9bc23282",
      "documentation": "Add a label to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "828f9df1-37bd-4409-af6c-95e3ce14d629",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "729b9cdf-8c5a-4470-bb22-e3f656930bbc",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c0f01e6-a3ca-4d6a-b454-e790ad4b43ea",
      "documentation": "Replace an issue's labels",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "417216a2-1773-474f-9a54-1fbc43e6a653",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f10866-9fe0-4299-8659-8ee669e48327",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cba9fb9-56f6-4564-8e8c-41e1330dcc35",
      "documentation": "Remove a label from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels/:id",
      "responses": [
        {
          "uuid": "6f10f604-fe90-40e4-ad54-70d7c9849be3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74b063d4-b7c9-4211-9654-11aae488a2a8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00c4f4e6-377e-4011-867e-c86ba4bea083",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6ab8175-27df-4075-8db4-dbf00c111373",
      "documentation": "Remove a reaction from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "1db7f270-5d5f-4478-acdc-aa5ad4bc0687",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecb9d848-bfd7-4dc2-b0e9-9faf21affff3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "808df12f-3594-40c2-b4aa-902e0e9e7c8f",
      "documentation": "Get a list reactions of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "0efdd241-6718-465b-889a-e5b957f662cf",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd241eb4-f38c-484f-b497-f49fc3e6d01a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98cf7f95-48b4-4889-a9b9-ede1f7a80f1a",
      "documentation": "Add a reaction to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "9919ec46-82d9-4b3d-b377-16c024e0b79e",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11347e47-d638-45ce-9b03-6bd679ded2e5",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "226b7637-18a9-4bf1-973f-45a04fbb544f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad9fbd1c-a762-48de-a653-84e7a63de747",
      "documentation": "Delete an issue's existing stopwatch.",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/delete",
      "responses": [
        {
          "uuid": "8ac16d1e-bd25-433d-b418-2d628b6c6ec8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb7f29f5-8ed8-4664-a333-024656483118",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "547b80df-6797-4f49-a561-7e7ce8400297",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89f3fdb6-8696-40eb-aedd-81d0661a2e68",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot cancel a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a816a84b-79d7-43ed-8c3b-6c3f6023e83b",
      "documentation": "Start stopwatch on an issue.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/start",
      "responses": [
        {
          "uuid": "6e56b5ed-4b09-4f44-b350-016f95f1d4af",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e29850-626e-4ab9-a6f4-a7fce2b8ad29",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "442adabd-0e51-4474-928f-71b251248466",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79527e00-59c8-4a4b-b847-9e36de981096",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot start a stopwatch again if it already exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4c90f2e-6b75-461a-a17f-a0edff1cac14",
      "documentation": "Stop an issue's existing stopwatch.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/stop",
      "responses": [
        {
          "uuid": "4dd750a8-37e5-4a3b-823c-ff04375f9f5a",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c4da13-55f3-4c2a-8f93-43bee1789b60",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bea0eae-ada8-40f4-912e-d018a241d109",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f64a2944-3eeb-40a7-b8ea-a10c7d3dfeae",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot stop a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "867d1cf5-f499-4423-b80c-7457505cb546",
      "documentation": "Get users who subscribed on an issue.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions",
      "responses": [
        {
          "uuid": "f0a87441-76f3-472c-82ad-5a5970993909",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a2c42fb-c790-4044-8e4b-6a9b8b37420e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da66890f-adf1-4072-9e2e-cf1229c2a4fc",
      "documentation": "Check if user is subscribed to an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/check",
      "responses": [
        {
          "uuid": "5b9d17f4-ab97-43eb-872c-ca7f3f3c63f8",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8645c81-8b48-4697-b247-9822b114f8d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86357c1d-4e07-4c60-a62d-9a2a57c466df",
      "documentation": "Unsubscribe user from issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "4b8bacb9-83eb-4ccd-836e-df2727416630",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfc91247-7439-449c-80be-b1579192b76c",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "247b6768-db34-419d-9c0f-7571840c48ee",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "663fb77c-f8a8-4ddc-b2b4-3dbd86e05761",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81b749a2-d78b-43cb-9b15-755d6bc62d6e",
      "documentation": "Subscribe user to issue",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "3a72033a-702b-40cd-bed4-4f996a4f4958",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2efe2b11-e642-4d1d-9fc4-493a0289ff67",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a973447-bdb9-4ea6-94d2-014c3232b0dd",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35f7ef83-6c14-4aa8-9762-f12aa36b0978",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30c06949-ac6d-4b86-a9ac-5637e874a817",
      "documentation": "Reset a tracked time of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "a6e27470-074a-4d44-a1a9-0fd01c9dd8d0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "332efc7b-74fd-4ee8-b2d6-df47476b3569",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c5a489c-309b-4723-b7e9-44789012bfa5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f16a8822-4678-4862-92a6-ced25d7a7f31",
      "documentation": "List an issue's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "12f3cb3b-95b1-425e-8b28-0c0fa52e767a",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2a0b495-7670-4c3f-a20f-3d3443e4f340",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d36cc04-8083-439c-95aa-a757b714737e",
      "documentation": "Add tracked time to a issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "ef4d04e6-b61e-4bec-a2ea-4d098f84e0a1",
          "body": "{\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"issue\": {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  },\n  \"issue_id\": {{faker 'random.number'}},\n  \"time\": {{faker 'random.number'}},\n  \"user_id\": {{faker 'random.number'}},\n  \"user_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTime",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f886d461-c9be-4e69-b987-0c2f18d0d275",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9694af10-d65f-4e4f-81ad-e8cd0d246d90",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4741af2d-d3bb-4953-885b-f4a3c08803c1",
      "documentation": "Delete specific tracked time",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times/:id",
      "responses": [
        {
          "uuid": "f218a6e0-deec-42b2-bf8c-105767d7f466",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da7da5ce-febf-4ee6-bd48-39b3eb5f2e3c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58b744a0-72f2-48e4-9940-9bfa84ed8c2e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ce9a490-c8cf-4422-8e94-d5ec07341332",
      "documentation": "List a repository's keys",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "3f068fad-4edf-4090-939f-7adaeadb5114",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38cc9387-89b2-433a-afc8-5dd69af882b1",
      "documentation": "Add a key to a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "8be47e43-61e4-4d19-baa2-c7e178042b0f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b2384c4-1148-46e0-ad28-524fa6d62725",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa3da742-fe26-4748-bdd5-0358e8fbfec4",
      "documentation": "Delete a key from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "4cc0dea8-4985-45cb-acaa-423d9c465c8e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92f72f2f-8364-441c-970b-035d6f555db4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3301fab-1e62-40b3-87be-9d98010bcf0b",
      "documentation": "Get a repository's key by id",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "9487a131-1416-47de-9590-1d74289bab26",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ad19bf6-c633-4d15-bf32-f24ec8ecd861",
      "documentation": "Get all of a repository's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "db333d8f-c277-4cb4-ac3f-4624836d3db7",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "969b3591-b404-46f2-b226-5be794b9248f",
      "documentation": "Create a label",
      "method": "post",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "b50acba9-e82d-4bab-9a11-fba7f95d589f",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e81113d-2165-48f7-97b8-46f34df5d7bb",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97141618-44c1-4f2a-8dbd-786cba3babc0",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "5cfd845a-30e8-4525-8ad8-fa48b1b1fc96",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37096b06-5a45-49cc-aba0-da7db0392e82",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "2aff3354-8261-48c3-a6e7-d22c2781759c",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8380189-d0e8-4669-bf7f-608146692476",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "f29c38ac-641a-433f-9fee-e229a3e0bef2",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a87b5c21-80c6-48cc-bcfc-b878df3c6a07",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9a9be92-4708-4523-8112-856a712fcbb9",
      "documentation": "Get languages and number of bytes of code written",
      "method": "get",
      "endpoint": "repos/:owner/:repo/languages",
      "responses": [
        {
          "uuid": "6e0a3395-d283-4ee0-b309-af4f554406b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "LanguageStatistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7132b0f-414b-4bf3-9962-3eeddb34e02d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2527e916-8817-4ccd-92f7-e9aefab78ac0",
      "documentation": "Get all of a repository's opened milestones",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "50ee01f9-a345-4d6a-a75c-05af204259b7",
          "body": "[\n  {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "MilestoneList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28278afc-0233-4427-b787-457f73a1af84",
      "documentation": "Create a milestone",
      "method": "post",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "e59947ed-6613-4b92-a511-73170bf3e3b9",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17ac9f65-8b09-4900-afea-54574f8628a1",
      "documentation": "Delete a milestone",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "97df6db5-f55b-4858-bc80-50ce9da49ee8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1be8b01-6eef-43ee-8454-4e7fc421c3a1",
      "documentation": "Get a milestone",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "a4c5ed17-bc27-4caf-b766-1a36ff138e9a",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbafd578-5390-4726-b76a-f60e806fbf84",
      "documentation": "Update a milestone",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "5c9aa9aa-559f-4ad6-bee3-96939c469e9a",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eec51914-d4e6-40f4-bf69-9bd2378ed7fa",
      "documentation": "Sync a mirrored repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/mirror-sync",
      "responses": [
        {
          "uuid": "f3412bfe-55da-483c-bfcc-90314bcce84f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "835db5fb-1639-4b2b-a892-7ed1f3f1921f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3a7c2ac-110b-4ef0-8574-e3d9db4c48fc",
      "documentation": "List users's notification threads on a specific repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "84261455-0c2d-419b-b2a2-9319fade83e6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f57b8ab-476d-4377-aff1-04f927206aca",
      "documentation": "Mark notification threads as read, pinned or unread on a specific repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "39f213d9-3c59-456b-91d1-82254792d283",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29754bd1-8cbb-4eb9-b2b1-f028ad934ff3",
      "documentation": "List a repo's pull requests",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "989fa5b3-5638-4a7d-bd5f-a086b5c6c269",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ff99e82-ab41-408d-acd1-dd02ef186f69",
      "documentation": "Create a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "1f6d6028-0d27-4a24-ac75-1521d71fe8c9",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0d7cba1-2f8a-47cc-ab30-5d94be702032",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcb967e2-34ad-4b87-8fb6-18c4a4472830",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c0c8167-fbce-4833-be07-163f12b0c5bc",
      "documentation": "Get a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "89abc155-2f3f-4db4-8897-9254aebcc971",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "683ccc30-03c6-4e37-a76e-f736c62380e7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4233396-f9db-4380-adbd-150d02a95e87",
      "documentation": "Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "43bd2335-aa38-4b01-999b-5a054bbec272",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bbe46b1-92d0-4a05-a9bc-fc0ddd15b48c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd9258e7-dce6-4740-889f-27202f7272b6",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aef94f8-ac4d-468d-9b81-55e2171c681e",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10f0a0ea-b057-4813-a56c-a93584363287",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45208e6b-e079-403b-854b-9f2a82ba1720",
      "documentation": "Get a pull request diff",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.diff",
      "responses": [
        {
          "uuid": "eda3d638-c4fc-47e4-ad1f-513c92eb9996",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cad7ffd3-665b-49d9-a9b5-1eb94c74e039",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d3ed224-d738-4314-902c-096688edb087",
      "documentation": "Get a pull request patch file",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.patch",
      "responses": [
        {
          "uuid": "ef42a071-1993-4f4d-ac81-33d6e1573fac",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a636be3-a3e7-4dcd-9995-1c7ac572cafa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e347c80-4ece-4496-9220-e93f2c8f30a8",
      "documentation": "Get commits for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/commits",
      "responses": [
        {
          "uuid": "d8a96af9-096f-4d39-bdaa-8b8a65694aa1",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60e06a82-6494-421f-a4a1-9a7bf54ff889",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b776194-6bb0-4a9e-9ddc-1efd186c03c6",
      "documentation": "Check if a pull request has been merged",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "63e0ec52-8c8f-486a-8283-97a5b4f305e8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "pull request has been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25e77274-7990-4768-b2e2-bd6f64d9eab0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "pull request has not been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3e1420e-9e60-4b03-95cd-cc41822ca762",
      "documentation": "Merge a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "0bc85a6b-0214-4f45-841f-c6f58caa9bd0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34e80f1c-40be-4730-8918-130641a4b87f",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6d2722e-4c2b-4cd8-9267-05273bc73093",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ee0e1a9-ba7e-4475-8378-e76f00e0aadf",
      "documentation": "cancel review requests for a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "cab3ea3d-2b45-45d7-b28c-25027ac8c470",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b6a3a65-ec40-4fe8-bd9c-486db1bb6ce9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39ae0637-07f2-4b05-8393-3ddb2cc098e9",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "351259b5-c66c-43df-b2a2-d46c41fcacdc",
      "documentation": "create review requests for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "364b1541-1cb7-482e-97a2-27118481ecb3",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"official\": {{faker 'random.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'random.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9e5065e-f431-4e06-80f9-52094a55f17b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "285df57b-4dbd-4346-8961-8e2c42459b9d",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dc1bd92-41c0-4e12-9d4d-ed7549e944fb",
      "documentation": "List all reviews for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "e5b414d1-1458-47aa-974a-652c9e7c3686",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"official\": {{faker 'random.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'random.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c8ba924-0c06-4510-a6e3-31f6b07696e3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d1e7568-6e53-4aa2-a01a-31ff0812a27e",
      "documentation": "Create a review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "dd2d43b6-710b-441d-8a36-25a68381e7a4",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5830d62-b8d9-4bf6-9e84-aa2074f32d1a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8120109e-7719-41df-9c43-d5852f1eca7c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "833c947e-71f3-48b9-9eed-0a1afbdb3ed9",
      "documentation": "Delete a specific review from a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "e300b93a-c899-478d-b94f-fb4abdb54eab",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7289cc8d-f5ae-4d90-aa3f-fdc4a1ee66b2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b8c127d-7beb-4467-a328-51bea7185726",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65beb06d-c783-467a-88e9-2f496f47ca0c",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "1884e2b6-481a-4b08-8465-2369f621b6e4",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "202c3d5c-2ab9-411d-8cd9-56d097977d15",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d13ff86-92b8-450a-ac0d-d2c58ad2d0c7",
      "documentation": "Submit a pending review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "d76781ff-aebf-456c-9f31-2f2aa156dc21",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3badf4c9-88fd-4885-8547-6d2ceb1bb0ee",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b6e2898-9c1c-4f93-8718-c33c0c0d0df6",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1b964c1-6715-415f-9518-8ee0a6641a0a",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/comments",
      "responses": [
        {
          "uuid": "36430a21-04c8-4952-8709-c8a2ba0612e1",
          "body": "[\n  {\n    \"body\": \"\",\n    \"commit_id\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"diff_hunk\": \"\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"original_commit_id\": \"\",\n    \"original_position\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"position\": {{faker 'random.number'}},\n    \"pull_request_review_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"resolver\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullCommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f57e929-b5ac-4d97-8d08-99b349e0fc48",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd305f18-7d04-45c8-a73c-356136801442",
      "documentation": "Dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/dismissals",
      "responses": [
        {
          "uuid": "43288a97-17d6-46eb-8f87-24963cd2e935",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f1b2051-2338-4be5-a1b8-8f366070142f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02ea558c-c1df-41d7-bea1-4cade15e5464",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b6483d2-c368-4a51-9335-12e80ae7655d",
      "documentation": "Cancel to dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/undismissals",
      "responses": [
        {
          "uuid": "de79a416-1ba6-4dfb-ab8e-b53d5412cd32",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f519403-b31f-4d4c-b50d-8bc94ef19f3d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff0650c4-1669-4ea9-baac-b81b52bc1f32",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63edf590-0b3e-4253-bc2c-ae7fb10bf84b",
      "documentation": "Merge PR's baseBranch into headBranch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/update",
      "responses": [
        {
          "uuid": "4e0650a3-1631-4bfd-8d4b-daea85956418",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7fbe395-5b05-4bd8-bf9c-80d1600521df",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc5bf272-7e3e-4f9f-b1d7-00026369f00f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b192f06d-0efd-4783-a4ac-91f337e0ddd8",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e378fd1-b6ea-435d-9b0a-39a165393ae8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10a81a9b-aa5f-491d-b0e1-01b9fab09972",
      "documentation": "Get a file from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/raw/:filepath",
      "responses": [
        {
          "uuid": "d619c21b-65f1-4b43-ab65-53e38badbf4c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6cc95d1-6dda-4391-8463-ab6992b1198d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4074230d-b22f-48d5-8fdb-21f370bf107e",
      "documentation": "List a repo's releases",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "a3312c0e-2b27-4ac2-b3ff-1f93c5281635",
          "body": "[\n  {\n    \"assets\": [\n      {\n        \"browser_download_url\": \"\",\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"download_count\": {{faker 'random.number'}},\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"size\": {{faker 'random.number'}},\n        \"uuid\": \"\"\n      }\n    ],\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"draft\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"prerelease\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"tag_name\": \"\",\n    \"tarball_url\": \"\",\n    \"target_commitish\": \"\",\n    \"url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReleaseList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd45a891-4ee6-48f8-9da2-50c29824ca1f",
      "documentation": "Create a release",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "eb0eb531-b01c-4924-9f78-ccc38cee5da2",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d499637-3662-435e-9482-8c368d612100",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb9b8ae2-75e8-41bc-b7e2-390e9c156187",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14368f7e-2f4f-4127-ad08-d107df526e66",
      "documentation": "Delete a release by tag name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "224488f3-591a-4c4b-a07e-3563c15a10ad",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ed5c9f8-7d95-4e02-a855-8698bcb6dbf2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d03937bb-6058-4193-8146-98d54fba3dcc",
      "documentation": "Get a release by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "de50985c-b214-4857-825f-df090828992d",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b86d4e86-a683-4da8-b6ad-b8827b5e300e",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5bf00e1-d3c2-46cd-a57d-915a384cd87d",
      "documentation": "Delete a release",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "f0b9525e-c58e-49da-ab36-32e839a61b9c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8c8f097-b0ef-4fa7-9494-56c6a60a24a1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0a8dafd-e6c6-4c75-9f30-59a00c3f4e11",
      "documentation": "Get a release",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "a67a527f-593b-4dac-b0fa-0ae9bd3f9e52",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6cd181-13f7-4d66-b396-474a274d161f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a55862e3-997a-4574-8b11-30bc7ac28843",
      "documentation": "Update a release",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "a139a210-e792-4622-9126-ed5e38589387",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb0b3bd3-69b1-42b9-8a69-c10a29c5764b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef35d55c-eee8-4c5c-8f46-1112bbc3540b",
      "documentation": "List release's attachments",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "bfd50b76-e66a-458a-97fc-f5cea0cc4abb",
          "body": "[\n  {\n    \"browser_download_url\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"download_count\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"uuid\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AttachmentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0956f40-14d5-43b7-8ce8-7a3b2f409aba",
      "documentation": "Create a release attachment",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "76892f8d-6bfa-4978-917c-bfe6bee6bf34",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "172f68d8-f66a-48da-978c-422a84417069",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b35ca17-bd58-419d-b9eb-6e171a56e1e0",
      "documentation": "Delete a release attachment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "e41dc5f5-704e-42c8-9bb9-126c735f9cd2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54ab2af3-2182-47c0-97ea-4e3dc1fa8b2d",
      "documentation": "Get a release attachment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "7ba4b557-b13b-4441-90a7-31ce77712e77",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a733bc7a-07a9-4f1e-8dfa-baff15af38ef",
      "documentation": "Edit a release attachment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "0c5e7c94-1cb0-455a-8b68-7235f30ee0a8",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b06bc38-5322-48ff-82c0-bb5ff5fcb1cd",
      "documentation": "Return all users that can be requested to review in this repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/reviewers",
      "responses": [
        {
          "uuid": "37bd7803-acf9-4169-8f92-c47218c8ffc9",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0d78112-7613-4afc-b148-1d8440fbfa18",
      "documentation": "Get signing-key.gpg for given repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/signing-key.gpg",
      "responses": [
        {
          "uuid": "70d999c9-e8cf-477e-84b1-40b51f9ad6a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34ed2fe5-650b-496f-b37e-cf9ac6971beb",
      "documentation": "List a repo's stargazers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/stargazers",
      "responses": [
        {
          "uuid": "b931c326-4042-4790-b1c8-3aea72637e8e",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2b8413c-7b8e-46c6-8069-3cfab7262757",
      "documentation": "Get a commit's statuses",
      "method": "get",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "9efa52b6-658e-4259-849d-e77da271cbe1",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e0c0ba7-dd18-4495-8cf7-e4550d70db53",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3b49089-0d85-48cc-b70d-dfe91af12473",
      "documentation": "Create a commit status",
      "method": "post",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "33c4df85-47cf-473e-8363-b6ac5337221f",
          "body": "{\n  \"context\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"creator\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"status\": \"\",\n  \"target_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "CommitStatus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "797ff594-4f04-411f-a5fa-98dc8a5d2a10",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bf81482-e45d-422b-9b42-1bf642d79669",
      "documentation": "List a repo's watchers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscribers",
      "responses": [
        {
          "uuid": "4e8c1c8a-009f-4c4c-a2c9-91ae3bb45fd4",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec4d2b6e-8300-424f-837d-723332a39f0f",
      "documentation": "Unwatch a repo",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "27477878-b06e-4ea5-8916-121474334bc4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7248d86-bd30-487f-9e87-6d40f3e369a6",
      "documentation": "Check if the current user is watching a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "4654c0c2-8ddc-469e-b3cb-f6332b00402f",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae4ef28b-1d13-4f07-8918-d8da32fc0427",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User is not watching this repo or repo do not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6dfd087-c8a5-41d2-b925-b6621a606631",
      "documentation": "Watch a repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "0fcbbd11-3e19-4edd-9851-88b9b8d73c99",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1010e69f-0b49-4590-b36e-602ddf69a00a",
      "documentation": "List a repository's tags",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "879861f2-28a7-4790-8c90-64d317fcddc8",
          "body": "[\n  {\n    \"commit\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"name\": \"\",\n    \"tarball_url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TagList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af7e82f3-7513-46e2-8fee-a774a02ddc75",
      "documentation": "Create a new git tag in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "12e5899d-06dc-4dcc-a7fe-fe78d2f9fab7",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33966c9a-63d3-4adc-8d1d-88fe96ed894d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b808ce3-7950-484a-8819-c42b552d579c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d05c2ca4-d52d-49a9-87f0-d9f9e01124f1",
      "documentation": "Delete a repository's tag by name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "9d8ae6bf-55d2-4b62-95d4-21766a808d42",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b80e620b-d1af-4bbb-88ca-4aa1016ab6d3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "093368e5-732c-40ca-ba2e-0be70d48ac8f",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64872ae7-b959-4923-a449-4de26f3b4ec4",
      "documentation": "Get the tag of a repository by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "9a3c47e2-ae74-4a33-a728-af4f226d2946",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d06e78-799f-4c74-a3e3-2e7861a726d9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b294e68f-c3c2-45e8-b743-d4bbda14082e",
      "documentation": "List a repository's teams",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams",
      "responses": [
        {
          "uuid": "78618831-9f6f-4a50-82ce-95d81da032c0",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3d2e344-8e20-4ddf-87c0-9617e6823929",
      "documentation": "Delete a team from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "b8eff081-4c96-4349-a011-fc78e5a85fc7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46a0a807-44e9-4752-9697-f6f9b536c2c7",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c239dd90-fc61-407b-b172-f966e7130bf8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58d89d21-ad91-4039-afe7-8b84cd1d70fd",
      "documentation": "Check if a team is assigned to a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "997ea1ac-6c88-49db-933e-4880a1be0806",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4605f279-126a-454a-8326-cc250a518ee2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cb2abda-cb39-4cd5-92d2-c31119164f17",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3eee4c80-4814-4ad2-919a-cfa2ab593625",
      "documentation": "Add a team to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "0b3ed564-469b-49bb-854d-3349b09c6e11",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93f02b4-e45e-475e-8d8e-5324c1c6f677",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5abd4e39-1313-431a-b658-953643df77d9",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92e7e5cb-7c51-4ed4-96c0-f8603be70e72",
      "documentation": "List a repo's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times",
      "responses": [
        {
          "uuid": "0d091018-dbf8-4814-8f44-48a3eda4d8ec",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c566515d-8329-4664-a98e-d97b0414c275",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e101fc99-3434-4cc6-9a7f-148b05cdd075",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb73c1b6-37c7-48f8-a999-53be4ca8c908",
      "documentation": "List a user's tracked times in a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times/:user",
      "responses": [
        {
          "uuid": "d32be023-b693-4c29-b7fc-91993644ecdc",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8079d9e-d319-4600-a546-a8e226f109c1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "329a853a-5f60-4736-84cd-511ead7659da",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da6530eb-1287-4a58-b0c1-7f8ede220a86",
      "documentation": "Get list of topics that a repository has",
      "method": "get",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "2753322d-8256-4d58-9dfc-793215b81147",
          "body": "{\n  \"topics\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicNames",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd9d0060-e6a5-4667-9329-a2054bc64790",
      "documentation": "Replace list of topics for a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "45c0ab34-99cd-4ae1-8f1b-e514d38ac12b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cda8678f-43b8-45c4-8411-71cd6412ddc6",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d18b87a9-7665-433a-8f7e-d1b4cfd926bd",
      "documentation": "Delete a topic from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "6512a4a2-6f56-471d-97f0-fa659dbc445d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68b62647-9cbf-4235-8b97-359b78008ea2",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71209ad4-f90c-4fc0-b729-7957597e7247",
      "documentation": "Add a topic to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "39f4c033-f8dc-4517-8e83-3e384a676c5b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ccaa8c9-1aab-4e03-9ef3-04a6125c260a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bec6a13d-edaf-4c5f-a67e-c5a97014b514",
      "documentation": "Transfer a repo ownership",
      "method": "post",
      "endpoint": "repos/:owner/:repo/transfer",
      "responses": [
        {
          "uuid": "a7a973cd-8409-42f0-9259-390179229b8d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b85a7e8-75ef-49a8-9b4d-36ef96c11c24",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d29fbe27-c5fb-4ded-9e7f-0ccc5b8cdecc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1711e7f-dd93-4a66-9e6b-f97e64428f7c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53ee59c6-66c6-4f4a-a90a-d8e2467195b9",
      "documentation": "Create a repository using a template",
      "method": "post",
      "endpoint": "repos/:template_owner/:template_repo/generate",
      "responses": [
        {
          "uuid": "d67f4027-cfea-4766-a3e8-9c221b642cc9",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7499fa00-8c1b-457b-bf0b-31a9240f1719",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efed9eb0-7aa6-4340-993e-6f5f3f944763",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "814ec8c1-1b24-48b5-a239-e9c3b48c97fc",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65e1ce04-ad39-4ad0-b1a8-b834210402b0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a162726-f21b-4440-b8bf-6d072a3fb33a",
      "documentation": "Get a repository by id",
      "method": "get",
      "endpoint": "repositories/:id",
      "responses": [
        {
          "uuid": "a130e651-ef99-4166-a164-5592ffdddcd3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcbffdef-b1e9-4bad-906c-8ea74413085b",
      "documentation": "Get instance's global settings for api",
      "method": "get",
      "endpoint": "settings/api",
      "responses": [
        {
          "uuid": "09d7b1f9-6387-41b9-9542-68006fd94ced",
          "body": "{\n  \"default_git_trees_per_page\": {{faker 'random.number'}},\n  \"default_max_blob_size\": {{faker 'random.number'}},\n  \"default_paging_num\": {{faker 'random.number'}},\n  \"max_response_items\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAPISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85f4a268-1363-462f-b8be-80c050abf84d",
      "documentation": "Get instance's global settings for Attachment",
      "method": "get",
      "endpoint": "settings/attachment",
      "responses": [
        {
          "uuid": "c9e7897d-eb03-4517-b0a5-a412158301ee",
          "body": "{\n  \"allowed_types\": \"\",\n  \"enabled\": {{faker 'random.boolean'}},\n  \"max_files\": {{faker 'random.number'}},\n  \"max_size\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAttachmentSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0180ab54-ddf2-4318-8e2e-78abcede9382",
      "documentation": "Get instance's global settings for repositories",
      "method": "get",
      "endpoint": "settings/repository",
      "responses": [
        {
          "uuid": "27e77a3d-80f3-45cc-9ac1-100b681417b4",
          "body": "{\n  \"http_git_disabled\": {{faker 'random.boolean'}},\n  \"lfs_disabled\": {{faker 'random.boolean'}},\n  \"migrations_disabled\": {{faker 'random.boolean'}},\n  \"mirrors_disabled\": {{faker 'random.boolean'}},\n  \"stars_disabled\": {{faker 'random.boolean'}},\n  \"time_tracking_disabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralRepoSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab1689cc-0e46-4ddd-ab78-f4556d9ad60f",
      "documentation": "Get instance's global settings for ui",
      "method": "get",
      "endpoint": "settings/ui",
      "responses": [
        {
          "uuid": "60be5efb-3b29-444b-9e38-6989a4d16a55",
          "body": "{\n  \"allowed_reactions\": [\n    \"\"\n  ],\n  \"custom_emojis\": [\n    \"\"\n  ],\n  \"default_theme\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralUISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf45324b-9b92-4059-ac2a-06b9e4feb1f6",
      "documentation": "Get default signing-key.gpg",
      "method": "get",
      "endpoint": "signing-key.gpg",
      "responses": [
        {
          "uuid": "9aa456dd-fb03-4854-8768-89e83144def2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34083b75-db31-45e6-b9f3-c3d6ab20e1ad",
      "documentation": "Delete a team",
      "method": "delete",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "3cab98bb-cc20-48f7-b08f-49223c9b341a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "team deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "906785b3-39a2-4f95-a2f2-aacb09953079",
      "documentation": "Get a team",
      "method": "get",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "0dac99ab-5046-4d03-ad92-421765b11078",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27f07e3c-0755-48f8-a85e-0a56bba51711",
      "documentation": "Edit a team",
      "method": "patch",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "ab46882b-80b6-491f-886b-81e94d4cc791",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e43e7ec-3a9e-4bfa-a0bd-0c3a4506cc8c",
      "documentation": "List a team's members",
      "method": "get",
      "endpoint": "teams/:id/members",
      "responses": [
        {
          "uuid": "f2c7e96c-f5e1-4540-87ed-369786b7eca9",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47802d5c-fa10-4cc4-bcc6-f7d6447022f4",
      "documentation": "Remove a team member",
      "method": "delete",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "17a338bb-c494-4a05-b13f-7588899bad4e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dbcd269-60c9-43c2-a3da-435fb0ca79c3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e70d2854-4ab0-407a-aadf-6bda8d8d645e",
      "documentation": "List a particular member of team",
      "method": "get",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "9c36382d-9100-46f5-a478-8df8b488eea3",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3af922f7-1512-4625-8b51-a2c33fbacab9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1ad251c-8964-4ab0-86bf-107283859d86",
      "documentation": "Add a team member",
      "method": "put",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "2cb4a06d-4e3d-404d-a57e-ac71f461fdc7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb4b4319-eeea-4c36-b449-2fb56b96abfb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0de9cd58-79b5-45b7-93a5-1d512f604d38",
      "documentation": "List a team's repos",
      "method": "get",
      "endpoint": "teams/:id/repos",
      "responses": [
        {
          "uuid": "0df2f410-eb13-4105-8d53-574a176813cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "713f6d4c-76a3-4cf7-ae0f-4a1f9e6e6e03",
      "documentation": "Remove a repository from a team",
      "method": "delete",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "d71a0ee1-1188-4c1b-9a86-c07f8dee3b7f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "915faa7d-16ea-4fc7-a08f-17db0a50526c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afdad78c-a0a8-4ffa-8c90-6508cd5cf34e",
      "documentation": "Add a repository to a team",
      "method": "put",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "b8b16e22-9878-47ae-9531-c1f893834e76",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a6f2601-1e2c-45d5-9b8d-0e18cc88e780",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e603c2b0-8643-4d51-b902-983d26304153",
      "documentation": "search topics via keyword",
      "method": "get",
      "endpoint": "topics/search",
      "responses": [
        {
          "uuid": "f7ba32fd-a695-4265-8ffe-42bed80ee803",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"repo_count\": {{faker 'random.number'}},\n    \"topic_name\": \"\",\n    \"updated\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0a1935f-62b6-4aec-9257-e079fbe1a426",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39f811bf-e855-4c1b-aa7d-6c86d50269f2",
      "documentation": "Get the authenticated user",
      "method": "get",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "8701fbc2-b268-4adc-a728-9f3f88d5c06e",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31a1c89e-104a-46bb-8e0d-6d542cd4e33a",
      "documentation": "List the authenticated user's oauth2 applications",
      "method": "get",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "5839ea9f-93e0-4950-af61-2145308a0a96",
          "body": "[\n  {\n    \"client_id\": \"\",\n    \"client_secret\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"redirect_uris\": [\n      \"\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2ApplicationList represents a list of OAuth2 applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18c7d7a3-e126-437f-b1fd-8888b3df9c6c",
      "documentation": "creates a new OAuth2 application",
      "method": "post",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "59f73d31-3762-46fa-8f67-7b878c54319a",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cb97f68-fa5d-4e82-81a5-8fbb75e26e56",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f4f6641-cb01-47d9-908e-16cf2c062ad8",
      "documentation": "delete an OAuth2 Application",
      "method": "delete",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "4c4546de-253a-4aa6-abb6-0672940b7ea9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f392efbe-6d79-4265-b8ad-b3b646d22c59",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "141bc06b-1cb2-464f-aa0f-8854580433b4",
      "documentation": "get an OAuth2 Application",
      "method": "get",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "093fa195-6c84-49af-ab8b-2dc8a8e0ea17",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c467321-8252-4ec9-8419-037032559e09",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d756a625-5617-4db6-985b-a38a9b1c2d5f",
      "documentation": "update an OAuth2 Application, this includes regenerating the client secret",
      "method": "patch",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "5b573d98-813d-4c09-b24c-d2428f82968d",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26211a9d-0a17-4ed8-84ff-2199b25ed75a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "456ec3a2-620e-46c9-b217-e12c0814d9b5",
      "documentation": "Delete email addresses",
      "method": "delete",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "2a849dc3-3396-4e57-8934-9140b74dd7c4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39948c16-34df-4503-bade-4d56d2bb9c3b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79d44d97-d557-4ca7-a7e3-73a29c991267",
      "documentation": "List the authenticated user's email addresses",
      "method": "get",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "08e10504-67ac-432b-aec3-70d9c7caabb0",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'random.boolean'}},\n    \"verified\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "284dd01d-4e3e-45ce-bfe9-8c769e138105",
      "documentation": "Add email addresses",
      "method": "post",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "1035d6b6-3058-4a0e-b98b-966b0e4c0ad2",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'random.boolean'}},\n    \"verified\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a33db6c-3ed4-4c12-9177-f4eec9d59f0d",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c3168f9-d3e6-48aa-b0d5-b09b374fff34",
      "documentation": "List the authenticated user's followers",
      "method": "get",
      "endpoint": "user/followers",
      "responses": [
        {
          "uuid": "393876e9-1e5c-4729-9852-43b2de02ff67",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce0137bc-311e-4177-95d1-7d4298693b50",
      "documentation": "List the users that the authenticated user is following",
      "method": "get",
      "endpoint": "user/following",
      "responses": [
        {
          "uuid": "04f04ce8-27d0-4d8b-b8d0-a4386ac06316",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a80cb61b-ff27-4318-a103-a77c49b20d48",
      "documentation": "Unfollow a user",
      "method": "delete",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "84728bcf-13c5-4d25-9025-8af2eab120e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09050d88-90be-4136-8d82-df6aa771fb86",
      "documentation": "Check whether a user is followed by the authenticated user",
      "method": "get",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "99fdafe0-34b7-44d3-81b1-918a65c4b021",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c108c704-405d-4431-8478-33b16c48e4b1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "deefcf46-c424-43e7-9425-afa02ddf2311",
      "documentation": "Follow a user",
      "method": "put",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "054b94cf-0b8c-4374-b4e5-1b59f51b1f75",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30c14950-239e-4a03-8479-43392ad57de7",
      "documentation": "Get a Token to verify",
      "method": "get",
      "endpoint": "user/gpg_key_token",
      "responses": [
        {
          "uuid": "ea4134d5-e8ac-459b-bcd7-3614ef684f74",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e56ce356-243c-482e-9972-4a164d2a3ca5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2e74d4d-4a92-434a-9702-dd126a70d2a0",
      "documentation": "Verify a GPG key",
      "method": "post",
      "endpoint": "user/gpg_key_verify",
      "responses": [
        {
          "uuid": "7f7207d6-2758-4f72-a3b3-2e082bc7e5c2",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59adc233-a946-4def-a08e-57d013228b15",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d11afc5e-5bc9-455f-87fd-8596957fface",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4866ad49-e71f-44f4-91d5-9bb059a20a25",
      "documentation": "List the authenticated user's GPG keys",
      "method": "get",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "8c3400db-ab37-4c32-aa02-05c6076a3977",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe788a0c-8c78-4827-bbca-36e07bea9929",
      "documentation": "Create a GPG key",
      "method": "post",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "4cb8f77f-5352-4781-b329-a647a50355db",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0162547-ec58-493a-9c35-0801f60c56b1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b78a1455-0ae7-4b65-a6b8-bcb03bd3696b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cde7586-98dc-4c01-a0d2-f7d52c769c24",
      "documentation": "Remove a GPG key",
      "method": "delete",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "8b0243c4-2580-4401-8235-16a38da69710",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f70d1657-52f4-4553-b2c1-22a4d28d7c19",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4327ea06-335c-4b8f-843c-5bd8068a7637",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7465fe1-4d5c-4c1b-bdc9-a82fc79e6588",
      "documentation": "Get a GPG key",
      "method": "get",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "549849f0-21cd-4010-a959-7e0f4f1341df",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a93586dd-8e42-409f-9efe-cecc3aa69399",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40cd7fed-c138-4611-9b75-d5663bc6a210",
      "documentation": "List the authenticated user's public keys",
      "method": "get",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "694d5647-d169-47a8-b442-7ea69b14e6cb",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'random.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1efb5f5-cae9-4c69-a491-6ef891886f0b",
      "documentation": "Create a public key",
      "method": "post",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "75eaaed9-8982-4603-bc76-5110f99bf18c",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeb52dc3-b95a-4903-8fba-5dd9d43878a6",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f811551-7ebc-4a8f-9c33-bf02f3f8e684",
      "documentation": "Delete a public key",
      "method": "delete",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "3cce65d3-d6b8-42c7-a7aa-5db3dec0f842",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d97b9dbc-feb5-4d02-9dcb-3a937834de1c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25c3ec29-d994-4c20-b089-66a18a9b365f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e04b132-27c3-4ee0-942a-b6d4ab3ceed1",
      "documentation": "Get a public key",
      "method": "get",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "15f15b22-1a32-44e9-8c36-0e7c8218fceb",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "225e8018-88eb-4276-927d-ed244a930f08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ddcd9dd9-fbe7-4540-ba99-9df179890418",
      "documentation": "List the current user's organizations",
      "method": "get",
      "endpoint": "user/orgs",
      "responses": [
        {
          "uuid": "5a07406d-ebb1-4e85-b512-975c74903cd8",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2486a278-7dab-4769-8938-05f4e9ad6350",
      "documentation": "List the repos that the authenticated user owns",
      "method": "get",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "6440640b-4796-422a-8bbb-516785d57e07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ace83489-68e8-4332-9dde-c4babeead43a",
      "documentation": "Create a repository",
      "method": "post",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "3f648618-767f-4245-9c2f-ea5d7d6bacd8",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cb5b850-ddc0-4c52-ad12-a035806abede",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2affd8b4-bba7-4d7f-bd03-12fc0dd3da11",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d46530cb-c3fa-42a1-b38b-3d2101e4f02e",
      "documentation": "Get user settings",
      "method": "get",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "1d8ec3e9-3548-4b65-8d82-82f01dbc0f5f",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'random.boolean'}},\n    \"hide_email\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3d52318-021f-45f7-b818-4e25b21c0619",
      "documentation": "Update user settings",
      "method": "patch",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "8eb0849f-c9d9-4e7b-8122-e8b963410b62",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'random.boolean'}},\n    \"hide_email\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ac0ed31-215e-4a38-af46-77c8fe27225d",
      "documentation": "The repos that the authenticated user has starred",
      "method": "get",
      "endpoint": "user/starred",
      "responses": [
        {
          "uuid": "6b20d611-6fc8-489f-baea-ece6b1150a92",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d4595668-4b34-4ca0-a382-10036c3d4939",
      "documentation": "Unstar the given repo",
      "method": "delete",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "05e99bbd-d53b-455f-88e5-086ce91b79a9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "651f371e-d1ec-4b7d-9395-389fc05321e4",
      "documentation": "Whether the authenticated is starring the repo",
      "method": "get",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "17eb1241-a106-4a4b-b758-d285b93b4fd7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48dfb114-beb5-44c2-a41a-48ade33e7b85",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "035858bd-bce8-4340-af8c-d975462bbc62",
      "documentation": "Star the given repo",
      "method": "put",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "38aa46b1-1b18-4405-9401-c9a22ff3b8ff",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e40c3c22-41a2-43d4-9a25-cfbfd9ee941e",
      "documentation": "Get list of all existing stopwatches",
      "method": "get",
      "endpoint": "user/stopwatches",
      "responses": [
        {
          "uuid": "aeca9a94-2329-475f-94b3-3c8032f0f3e2",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"duration\": \"\",\n    \"issue_index\": {{faker 'random.number'}},\n    \"issue_title\": \"\",\n    \"repo_name\": \"\",\n    \"repo_owner_name\": \"\",\n    \"seconds\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StopWatchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50c44255-59ca-426f-8d7b-5a7d69e260d3",
      "documentation": "List repositories watched by the authenticated user",
      "method": "get",
      "endpoint": "user/subscriptions",
      "responses": [
        {
          "uuid": "33e76818-2892-4aff-823a-fab2946df41e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92e99c01-3fd9-49c9-9f59-fbc395f252d5",
      "documentation": "List all the teams a user belongs to",
      "method": "get",
      "endpoint": "user/teams",
      "responses": [
        {
          "uuid": "3be6fc98-d2d2-4e13-9f23-4cbf3860f78c",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a5b6f79-a101-4105-95df-231de1200589",
      "documentation": "List the current user's tracked times",
      "method": "get",
      "endpoint": "user/times",
      "responses": [
        {
          "uuid": "9893153a-736e-421e-a72b-b5a34f11a4fa",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5da54390-e356-45d7-9fe9-3fad8b50c2c8",
      "documentation": "Search for users",
      "method": "get",
      "endpoint": "users/search",
      "responses": [
        {
          "uuid": "09630c11-bfe5-41d8-8ad6-9f315e970b71",
          "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"ok\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "559b2995-f2f7-42c8-b694-1f002b71c2ea",
      "documentation": "Check if one user is following another user",
      "method": "get",
      "endpoint": "users/:follower/following/:followee",
      "responses": [
        {
          "uuid": "f1568ada-e8b8-4a9f-93c6-ca5dee0a091f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56d99602-38bf-49fa-998b-f2c0395a5120",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "197642d9-e39b-4124-b34b-12b651d74ca9",
      "documentation": "Get a user",
      "method": "get",
      "endpoint": "users/:username",
      "responses": [
        {
          "uuid": "38b0b8f3-0202-4d75-9664-361dc7bbc07f",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7afef76a-3ff5-4acf-a150-ef640b89e592",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94fd9a7a-e675-4473-ae65-54a0d8c305a4",
      "documentation": "List the given user's followers",
      "method": "get",
      "endpoint": "users/:username/followers",
      "responses": [
        {
          "uuid": "8202bb52-7abe-425c-8e92-756e49749901",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3456d54f-6931-4dcb-b8fa-42ab09e8a48a",
      "documentation": "List the users that the given user is following",
      "method": "get",
      "endpoint": "users/:username/following",
      "responses": [
        {
          "uuid": "492cbcbb-ce9a-4b93-99ba-e522d2a70cb3",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f548cd2-a537-4471-b91f-41213bb9b536",
      "documentation": "List the given user's GPG keys",
      "method": "get",
      "endpoint": "users/:username/gpg_keys",
      "responses": [
        {
          "uuid": "9fde5495-02c6-40c9-af02-adbf0b9e9bf0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b89465f3-43e1-4c7e-af13-4b7b552cdd52",
      "documentation": "Get a user's heatmap",
      "method": "get",
      "endpoint": "users/:username/heatmap",
      "responses": [
        {
          "uuid": "2725c929-56f2-4e0d-a0d0-173b67a08ed2",
          "body": "[\n  {\n    \"contributions\": {{faker 'random.number'}},\n    \"timestamp\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserHeatmapData",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bb2e362-bdd3-4689-924c-51fcac0e2121",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "428c12ce-371d-4255-90a3-2d127d7701ad",
      "documentation": "List the given user's public keys",
      "method": "get",
      "endpoint": "users/:username/keys",
      "responses": [
        {
          "uuid": "6a903048-3351-4742-9bb0-c2deff392dfa",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'random.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03b3e391-831e-43e4-8601-807809307b9e",
      "documentation": "List a user's organizations",
      "method": "get",
      "endpoint": "users/:username/orgs",
      "responses": [
        {
          "uuid": "7fb47428-32c6-424e-af54-e5cf3881cb92",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26e13a27-3f8b-4843-80d3-4ccc10688725",
      "documentation": "List the repos owned by the given user",
      "method": "get",
      "endpoint": "users/:username/repos",
      "responses": [
        {
          "uuid": "29d40102-0396-420f-91a8-f6a35d6de75b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b5028b1-a839-458a-adf0-0fe3be8eda8e",
      "documentation": "The repos that the given user has starred",
      "method": "get",
      "endpoint": "users/:username/starred",
      "responses": [
        {
          "uuid": "eef5f910-1bf3-4a02-af93-8ee6916d0590",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5201f4de-e4c8-4e89-93d9-eb82e835b3ea",
      "documentation": "List the repositories watched by a user",
      "method": "get",
      "endpoint": "users/:username/subscriptions",
      "responses": [
        {
          "uuid": "1b1c8fdd-1a03-4b50-b100-5731d1db87b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "619e3362-5731-419f-af83-d0b856f775a7",
      "documentation": "List the authenticated user's access tokens",
      "method": "get",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "f289de32-9cd0-422a-8f9d-f088ab7934cf",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"sha1\": \"\",\n    \"token_last_eight\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AccessTokenList represents a list of API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16012051-8f0b-4bcc-94fc-286c62408505",
      "documentation": "Create an access token",
      "method": "post",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "926192d2-810c-405a-aafe-7652af3d7ea7",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"sha1\": \"\",\n  \"token_last_eight\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "AccessToken represents an API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3be7c18a-0c0b-4405-bcac-55420b594ba2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86b44baf-f0be-4c9e-a7fc-b8638ea855a1",
      "documentation": "delete an access token",
      "method": "delete",
      "endpoint": "users/:username/tokens/:token",
      "responses": [
        {
          "uuid": "30579b0d-eb49-4215-ac2e-ef9a5615ec55",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0739db9a-dab5-45e8-992e-32eaf648a66f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a07a0f2b-c677-4eee-b458-9b96a16609fc",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "179b6a2f-c9a6-485b-a8bd-2d25f55a77ec",
      "documentation": "Returns the version of the Gitea application",
      "method": "get",
      "endpoint": "version",
      "responses": [
        {
          "uuid": "1c32810d-9002-463f-9f70-4649cf073151",
          "body": "{\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServerVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}