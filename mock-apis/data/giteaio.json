{
  "uuid": "074ce44d-8668-4082-acee-a81863a15c7f",
  "lastMigration": 19,
  "name": "Gitea API.",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "78b2c59c-a203-4109-a16a-ec256091475e",
      "documentation": "List cron tasks",
      "method": "get",
      "endpoint": "admin/cron",
      "responses": [
        {
          "uuid": "e47bc828-5b9d-4501-86ac-7c9e7fd2ab9a",
          "body": "[\n  {\n    \"exec_times\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"next\": \"{{faker 'date.recent' 365}}\",\n    \"prev\": \"{{faker 'date.recent' 365}}\",\n    \"schedule\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CronList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48c22311-ab65-4633-9c75-69694a0556dc",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13229c22-cb8f-44f7-b6e9-929f7200da30",
      "documentation": "Run cron task",
      "method": "post",
      "endpoint": "admin/cron/:task",
      "responses": [
        {
          "uuid": "467d6fef-dae9-4533-b9e1-7b5b528be993",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87bb4c89-4a57-474f-990c-42e06e8c796f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b61eaa6-90ef-4bba-9cbc-e10037071c71",
      "documentation": "List all organizations",
      "method": "get",
      "endpoint": "admin/orgs",
      "responses": [
        {
          "uuid": "bd6582ba-16bb-468b-b594-33ed33392786",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dd11e10-13a8-4ba2-980e-49c796c01423",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bf0e110-7cca-4de0-ac52-e8314d349384",
      "documentation": "List unadopted repositories",
      "method": "get",
      "endpoint": "admin/unadopted",
      "responses": [
        {
          "uuid": "cafd2d2b-8648-4d94-a0b9-79d7be234f9a",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StringSlice",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbd45aee-70b1-49a2-965c-02751fa17fd8",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2cc1329-29dd-4497-b100-dc16a5834af3",
      "documentation": "Delete unadopted files",
      "method": "delete",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "978dbd4e-2e11-471b-acb5-0374c0bba8f5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea44ea91-7c9f-43ff-92b0-63bfd26749bb",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9accb693-e2cb-486e-81ed-1796f3f8adda",
      "documentation": "Adopt unadopted files as a repository",
      "method": "post",
      "endpoint": "admin/unadopted/:owner/:repo",
      "responses": [
        {
          "uuid": "0c7e0202-9675-46c7-953f-bb02e8b91824",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7035641f-b4c4-47f3-8def-83dad88d6bbf",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f367c2db-9ead-4143-837d-90fcc343ab96",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca9bbd69-afbd-47d5-8cce-d7cddd37cb4d",
      "documentation": "List all users",
      "method": "get",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "da950f5a-59b4-4134-9c29-56617628bdc0",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2e55d51-4051-41d0-8b30-f44c42025574",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0eca42fb-1d93-4529-8cc1-36b113793147",
      "documentation": "Create a user",
      "method": "post",
      "endpoint": "admin/users",
      "responses": [
        {
          "uuid": "75d26670-c2c2-44f0-9e8c-f1893d13d0b9",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b94495e-c7da-419b-a613-0e26ee190579",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0669e2d6-a7d4-45d9-8b10-30ec6f9043f7",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e667f2aa-a5d6-4dc4-a5f7-ad0d3d109385",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "309a4729-e8a8-4a39-bc68-5dab440ed3f0",
      "documentation": "Delete a user",
      "method": "delete",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "31239e9f-9485-463b-9ff5-5972d5f99ea2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc51fc9b-cd5e-4f58-bce0-f6d3fa31ee38",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fcca1b5-685f-4518-bfa9-7795c9a22002",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7867e877-8255-4ec9-9a05-71cca74a22e9",
      "documentation": "Edit an existing user",
      "method": "patch",
      "endpoint": "admin/users/:username",
      "responses": [
        {
          "uuid": "3fb4f637-ca6b-48cc-825d-e032fee87314",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9748ae29-7797-42e6-9996-be0b8bdd2a4a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd853d04-5006-41cc-980f-2d26d24797ec",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bdef35d-d9a2-4377-a1aa-14714ed39965",
      "documentation": "Add a public key on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/keys",
      "responses": [
        {
          "uuid": "a1eff5c1-62e9-4c96-bfdb-9859679072a8",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4496714-c9c5-4cac-b768-8f89d5d1fc2c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff2df103-a78d-439a-b938-06a810fca4e8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2300d1ef-32bf-4652-b93c-f9b3381b30b1",
      "documentation": "Delete a user's public key",
      "method": "delete",
      "endpoint": "admin/users/:username/keys/:id",
      "responses": [
        {
          "uuid": "b0ed8511-b609-4cd4-ace8-bcf39188ebd1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21579128-6dfb-4498-9d73-c3b0a97ce7c4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f45baf16-11b0-4e18-aaa3-02f719c92b56",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9bdb2a67-cf33-45bf-82b8-6d20d4933ff6",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "admin/users/:username/orgs",
      "responses": [
        {
          "uuid": "15181d6d-5352-428b-8f23-1bad6c607be8",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ab1458e-99e3-4302-bdfe-5b8efd4c7def",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e36ba5c1-11cb-4ded-9fc2-4d4564d68696",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d7f5a1e-0bdd-4d4c-8758-7e8e78c96758",
      "documentation": "Create a repository on behalf of a user",
      "method": "post",
      "endpoint": "admin/users/:username/repos",
      "responses": [
        {
          "uuid": "e9c2a402-6ff3-4ee6-a594-468be4442084",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e19fc1b6-3933-4920-a27b-a064b90a5d43",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ec424b6-6bc0-431e-b481-5c65859f2560",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4e69364-a2b4-40f0-8766-4387f160bc2c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb1c31b6-2b61-40c1-a3ae-8787f2792193",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ba04224-e48c-4726-8f15-ab383122a2fc",
      "documentation": "Render a markdown document as HTML",
      "method": "post",
      "endpoint": "markdown",
      "responses": [
        {
          "uuid": "9b0d1e85-fc2b-4b5c-ae82-fe42c1b99312",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dde501b-2c1f-4cb8-a4bc-75a73f2975d4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "228a53bb-b136-41d5-aed2-21a711b26d74",
      "documentation": "Render raw markdown as HTML",
      "method": "post",
      "endpoint": "markdown/raw",
      "responses": [
        {
          "uuid": "6ebdac5d-707a-4218-96d8-05f0c1cb4878",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "MarkdownRender is a rendered markdown document",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c82b9bff-1b5d-4882-abfb-c6faed1c4e68",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aac17e57-100d-494e-b33c-6fe769dcf7e0",
      "documentation": "List users's notification threads",
      "method": "get",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "7c9895a1-f841-459d-89a9-11f1ab0d2b42",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e20a9147-dae3-46f4-9ab4-f1f5212c097e",
      "documentation": "Mark notification threads as read, pinned or unread",
      "method": "put",
      "endpoint": "notifications",
      "responses": [
        {
          "uuid": "7f270094-172e-4c16-bf51-a3ba8ac616f6",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d4b46abd-74aa-41e3-a121-75d92043cd2f",
      "documentation": "Check if unread notifications exist",
      "method": "get",
      "endpoint": "notifications/new",
      "responses": [
        {
          "uuid": "819201fc-dd5c-4980-ad9b-43790494230f",
          "body": "{\n  \"new\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Number of unread notifications",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8be6e5d9-538f-460c-8b18-b758e7c331bf",
      "documentation": "Get notification thread by ID",
      "method": "get",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "57e39dbf-9828-4943-8468-250d2aae5d07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "146f628d-f468-49df-94a9-32dd79e37c06",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c3378a2-9ca2-4bae-aa0a-0ccb96feafdf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2a1956d-619d-4b00-8d30-a919c388a072",
      "documentation": "Mark notification thread as read by ID",
      "method": "patch",
      "endpoint": "notifications/threads/:id",
      "responses": [
        {
          "uuid": "74a7ea56-0219-4a39-89c9-b56f735867f5",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f63bbd45-64ea-4c84-a7a3-b2d42d6cc87e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81e2e352-2861-4d38-90df-170e3b95ca11",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1018fef2-2217-426c-92b5-34806514c946",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "org/:org/repos",
      "responses": [
        {
          "uuid": "0eff3ce0-6b2b-4c08-b122-23a024ec0381",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c5df57-18bd-4a42-90aa-5d96a896367d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18402fcb-c9c8-4484-be57-70619e009ab4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2408e0c9-e1cf-4f0b-8c59-ff09c5740537",
      "documentation": "Get list of organizations",
      "method": "get",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "b526dc81-382e-48fe-a452-6cde77419ce1",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be343998-5d23-438b-af47-47381acd0463",
      "documentation": "Create an organization",
      "method": "post",
      "endpoint": "orgs",
      "responses": [
        {
          "uuid": "03e309c8-9e60-41bf-8616-5ddfad15830b",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2bc6b0a-bac1-46a1-94b5-ae16b9d5d6da",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "472983d8-827f-486e-9d66-e663ee68024e",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2b21cf7-578f-49be-9baa-412177186a0e",
      "documentation": "Delete an organization",
      "method": "delete",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "ec24ffba-a013-46c6-beea-7b151175b7c7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6890011-f938-435e-81f9-4edde804ba15",
      "documentation": "Get an organization",
      "method": "get",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "26b9b126-615e-4b67-944b-9604a6c6b124",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cf95088-9928-44ac-b654-476fa12a6e04",
      "documentation": "Edit an organization",
      "method": "patch",
      "endpoint": "orgs/:org",
      "responses": [
        {
          "uuid": "e1ba604d-52c9-4b0e-9e99-babb5455b722",
          "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"location\": \"\",\n  \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n  \"username\": \"\",\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organization",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6547dd7c-1a86-4326-aab8-60dce0403dd8",
      "documentation": "List an organization's webhooks",
      "method": "get",
      "endpoint": "orgs/:org/hooks",
      "responses": [
        {
          "uuid": "bc842d67-07e9-48d9-8c99-c2ec0a42ed0b",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4744571f-7d3d-4681-ae24-7eeec552d3f2",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "orgs/:org/hooks/",
      "responses": [
        {
          "uuid": "d47bdfa3-c4f2-4da1-9948-3928545dd4b4",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee192343-34e0-4c21-8275-27fe24fed7bf",
      "documentation": "Delete a hook",
      "method": "delete",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "a2fac1b5-862e-4592-a905-f8c72b99ea1c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f915921a-0370-464a-bd03-4d37590ffcda",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "6e416830-dd27-4d10-898b-0b0c76635cbf",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78d00da9-26d1-4b3d-a754-ca8ecfec9dcb",
      "documentation": "Update a hook",
      "method": "patch",
      "endpoint": "orgs/:org/hooks/:id",
      "responses": [
        {
          "uuid": "664470cf-0d31-48c1-9434-543afbb78db3",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daa8768a-02dd-434c-9814-67e1399447a7",
      "documentation": "List an organization's labels",
      "method": "get",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "fef96626-aeb0-4198-9fa7-f89f4fa207fd",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b5303b0-5f92-4a17-b047-940938ccbc85",
      "documentation": "Create a label for an organization",
      "method": "post",
      "endpoint": "orgs/:org/labels",
      "responses": [
        {
          "uuid": "4746b9bf-26ab-47ef-bac6-7ca5cd323fb3",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4f34452-ba9b-4469-8cc7-9440a54e9226",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6d95204-4f8f-4196-a5ab-13ba223d69e7",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "527dc05e-6830-4b08-9376-bcc4ad0695e8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "122d8cc1-a3e3-4a77-bc3d-4966736a2588",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "15bea5bf-f9b5-4898-b520-97c8aabbbe1c",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99f6bfa9-d312-43cd-902d-969a83d334e9",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "orgs/:org/labels/:id",
      "responses": [
        {
          "uuid": "b24175fe-bee3-469e-b3a0-814f55f3c3cf",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3608ff3e-84a6-45dc-a559-4e878e172a6a",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "89c66cbc-2202-46e8-ac87-fdecb61af8c0",
      "documentation": "List an organization's members",
      "method": "get",
      "endpoint": "orgs/:org/members",
      "responses": [
        {
          "uuid": "8897accf-f944-4ecf-aba7-1d2ef214cebd",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "807f67bc-f203-4426-a422-ac79f66d9513",
      "documentation": "Remove a member from an organization",
      "method": "delete",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "d51df3c3-7f9f-4c42-acc1-baeaab267c52",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "member removed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85d70247-4bbc-45fa-8066-164ce9f74807",
      "documentation": "Check if a user is a member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/members/:username",
      "responses": [
        {
          "uuid": "5f91ec39-75d2-4933-93c0-bf1c069a633a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3ce2937-d5a9-4926-87d1-2f5f4c84d669",
          "body": "",
          "latency": 0,
          "statusCode": 302,
          "label": "redirection to /orgs/{org}/public_members/{username}",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4131e322-f576-4de1-94ec-61c548381369",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75283ba7-ef97-4e05-a870-98e2eff1a23c",
      "documentation": "List an organization's public members",
      "method": "get",
      "endpoint": "orgs/:org/public_members",
      "responses": [
        {
          "uuid": "a270b01c-1eee-4c57-9e89-eea9d6dfdf72",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "327db094-e89b-418b-8790-05e92bab7083",
      "documentation": "Conceal a user's membership",
      "method": "delete",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "b4023bb9-f845-4269-9cc9-f48e225cc0c0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eea7df7-e764-4a74-a6d7-20e145bec840",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbabe1af-b5d1-44a8-bb5b-5e9c6d304cdd",
      "documentation": "Check if a user is a public member of an organization",
      "method": "get",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "913c8235-8b70-4922-ac27-65cd3a78563e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "user is a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54bdba2a-e7e9-49a5-ae74-8e52b4fe5b19",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "user is not a public member",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8510f7b-d27b-465e-b444-be039c2d97e9",
      "documentation": "Publicize a user's membership",
      "method": "put",
      "endpoint": "orgs/:org/public_members/:username",
      "responses": [
        {
          "uuid": "55848248-6d84-4db7-8d51-b428273e7a5a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "membership publicized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c0faaf4-72b6-476e-8614-473dc308a331",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7ce5bbd-0757-45da-b738-964e0cd3a6bc",
      "documentation": "List an organization's repos",
      "method": "get",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "d7936306-9390-4234-a77f-7debc428e6cd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f04919b-bf50-49e3-af37-ccec84c5938b",
      "documentation": "Create a repository in an organization",
      "method": "post",
      "endpoint": "orgs/:org/repos",
      "responses": [
        {
          "uuid": "efc13cf4-5d71-482b-9b4a-92b7d0183412",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8047b94-c649-4163-8ccc-227ed3154545",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1379f5a5-e440-4889-b732-b5706da181ea",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "094910d4-f028-4469-abcc-ce09a82db34d",
      "documentation": "List an organization's teams",
      "method": "get",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "2b7de977-75a4-4d7f-a9b6-36d7c2f18dcf",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c822c826-bbc4-4da2-8471-51105906c129",
      "documentation": "Create a team",
      "method": "post",
      "endpoint": "orgs/:org/teams",
      "responses": [
        {
          "uuid": "0bb4eb6e-f7c4-4f00-a493-81e961e60cd8",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08a53066-eeac-4ebd-baa5-95811f3c6fe4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77c2b845-eb2a-4899-b009-417fef3f3eb2",
      "documentation": "Search for teams within an organization",
      "method": "get",
      "endpoint": "orgs/:org/teams/search",
      "responses": [
        {
          "uuid": "c7da7f59-7758-4d08-941b-b3bed9710317",
          "body": "{\n  \"data\": [\n    {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    }\n  ],\n  \"ok\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c41a54a6-cda7-4298-82d2-bd93ce493c1a",
      "documentation": "Search for issues across the repositories that the user has access to",
      "method": "get",
      "endpoint": "repos/issues/search",
      "responses": [
        {
          "uuid": "2be3545e-6fda-414c-a2f2-77a460140aff",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6003d3a-8884-4cc1-9d68-8f95fcab4175",
      "documentation": "Migrate a remote git repository",
      "method": "post",
      "endpoint": "repos/migrate",
      "responses": [
        {
          "uuid": "4c6596e8-1b92-42f2-94d7-e48b375d1558",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57952c9e-923e-4557-bc86-9268c172ff67",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b8f0bf2-7ac2-4883-ac8b-f90db162b435",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df52b9ae-b465-4c37-b868-78a3e8ca97a2",
      "documentation": "Search for repositories",
      "method": "get",
      "endpoint": "repos/search",
      "responses": [
        {
          "uuid": "8fb79c78-a470-4ad4-a09d-9e3ec8c6b2d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f0e1ce6-8af7-4bbe-8997-f5310a6243c0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3be4959e-11cc-4239-9188-46661d169826",
      "documentation": "Delete a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "693ac5b5-2de8-48bc-8887-8f8b2212399a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3243089a-0f3b-416c-bdce-98b57bba18f9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf02d9c5-54dc-44b4-a2ad-729a0df8e8a2",
      "documentation": "Get a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "90e83005-1cc5-4422-b664-f9ae78250542",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7586b318-00e7-40d4-8763-a473bb1aae1b",
      "documentation": "Edit a repository's properties. Only fields that are set will be changed.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo",
      "responses": [
        {
          "uuid": "5b6f5691-3d86-418e-9bd8-6a7286a9379e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "891c68fc-15d2-44cf-87b0-a4f9f91d09ff",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ee02a30-e066-4415-a07d-ea28a1079e17",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "783c99c2-2a12-4291-944f-c77df6c54ef9",
      "documentation": "Get an archive of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/archive/:archive",
      "responses": [
        {
          "uuid": "3d63a78d-1298-48df-baf4-e31ca3e83407",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d711f3d-6bf3-45be-8079-eb7e5b7520df",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e160702c-9079-47f2-b282-0a1b760bb706",
      "documentation": "Return all users that have write access and can be assigned to issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/assignees",
      "responses": [
        {
          "uuid": "fcc883bc-a76b-4449-96fa-1013cee56a7d",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2edf6696-2070-40ec-a73b-a54adcf99343",
      "documentation": "List branch protections for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "16ee1afd-9417-4d2a-b6c0-29e0443db703",
          "body": "[\n  {\n    \"approvals_whitelist_teams\": [\n      \"\"\n    ],\n    \"approvals_whitelist_username\": [\n      \"\"\n    ],\n    \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n    \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n    \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n    \"branch_name\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n    \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n    \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n    \"enable_push\": {{faker 'random.boolean'}},\n    \"enable_push_whitelist\": {{faker 'random.boolean'}},\n    \"enable_status_check\": {{faker 'random.boolean'}},\n    \"merge_whitelist_teams\": [\n      \"\"\n    ],\n    \"merge_whitelist_usernames\": [\n      \"\"\n    ],\n    \"protected_file_patterns\": \"\",\n    \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n    \"push_whitelist_teams\": [\n      \"\"\n    ],\n    \"push_whitelist_usernames\": [\n      \"\"\n    ],\n    \"require_signed_commits\": {{faker 'random.boolean'}},\n    \"required_approvals\": {{faker 'random.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtectionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4229fd11-9375-4e92-8996-f8aae4efa500",
      "documentation": "Create a branch protections for a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branch_protections",
      "responses": [
        {
          "uuid": "84ccec85-6bf0-4fbc-8b44-7a641b1a4e16",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "437302d8-2052-48c6-bace-0465a4dbb73f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca69c069-f693-42b1-8834-ec5a358a6936",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d3153c1-ae8c-40e8-b52e-5d3a9c9f4a45",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "497ad813-c0a7-41d3-beea-09b1baa0682b",
      "documentation": "Delete a specific branch protection for the repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "5599e8bd-0a08-4d52-808a-62acd224ba4d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afd62439-5f3a-423f-83ad-9bcf29da5581",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2083c247-7197-43e3-81ea-2ebfb1b67b76",
      "documentation": "Get a specific branch protection for the repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "866efd0b-eee6-4871-96e2-ded3bc0ae1a8",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "040f5c3d-1fa0-46cf-ae33-cc86696030e4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99a5a54f-7c58-4a91-ba81-757b5a49af0d",
      "documentation": "Edit a branch protections for a repository. Only fields that are set will be changed",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/branch_protections/:name",
      "responses": [
        {
          "uuid": "2bfd2186-cbc9-422f-b087-f115dbc1dfbe",
          "body": "{\n  \"approvals_whitelist_teams\": [\n    \"\"\n  ],\n  \"approvals_whitelist_username\": [\n    \"\"\n  ],\n  \"block_on_official_review_requests\": {{faker 'random.boolean'}},\n  \"block_on_outdated_branch\": {{faker 'random.boolean'}},\n  \"block_on_rejected_reviews\": {{faker 'random.boolean'}},\n  \"branch_name\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"dismiss_stale_approvals\": {{faker 'random.boolean'}},\n  \"enable_approvals_whitelist\": {{faker 'random.boolean'}},\n  \"enable_merge_whitelist\": {{faker 'random.boolean'}},\n  \"enable_push\": {{faker 'random.boolean'}},\n  \"enable_push_whitelist\": {{faker 'random.boolean'}},\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"merge_whitelist_teams\": [\n    \"\"\n  ],\n  \"merge_whitelist_usernames\": [\n    \"\"\n  ],\n  \"protected_file_patterns\": \"\",\n  \"push_whitelist_deploy_keys\": {{faker 'random.boolean'}},\n  \"push_whitelist_teams\": [\n    \"\"\n  ],\n  \"push_whitelist_usernames\": [\n    \"\"\n  ],\n  \"require_signed_commits\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchProtection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a26b7454-8726-488e-8803-e6219a9b19f9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfdb4b92-a43c-45c9-9fee-5dfc3269c00e",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "140b847c-6a89-4c5e-b97c-b32f83aeae8c",
      "documentation": "List a repository's branches",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "f7fc354a-d749-498c-ac30-67e085e155f5",
          "body": "[\n  {\n    \"commit\": {\n      \"added\": [\n        \"\"\n      ],\n      \"author\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"committer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"id\": \"\",\n      \"message\": \"\",\n      \"modified\": [\n        \"\"\n      ],\n      \"removed\": [\n        \"\"\n      ],\n      \"timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"verification\": {\n        \"payload\": \"\",\n        \"reason\": \"\",\n        \"signature\": \"\",\n        \"signer\": {\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"name\": \"\",\n          \"username\": \"\"\n        },\n        \"verified\": {{faker 'random.boolean'}}\n      }\n    },\n    \"effective_branch_protection_name\": \"\",\n    \"enable_status_check\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"protected\": {{faker 'random.boolean'}},\n    \"required_approvals\": {{faker 'random.number'}},\n    \"status_check_contexts\": [\n      \"\"\n    ],\n    \"user_can_merge\": {{faker 'random.boolean'}},\n    \"user_can_push\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "BranchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77ada300-f569-48df-b40e-5526397ded34",
      "documentation": "Create a branch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/branches",
      "responses": [
        {
          "uuid": "7cf50d30-fccc-40fc-9a01-6a0a7f62ae96",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'random.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'random.boolean'}},\n  \"user_can_push\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fa82ff2-d646-4d12-b93f-a6b0db90b273",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The old branch does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64610a46-b451-4a40-87e4-fa6834f9e6c7",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The branch with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c6390e5-580a-469d-888e-40a9d5bec8c6",
      "documentation": "Delete a specific branch from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "ca1dcabc-670f-42c3-a1c3-7d5c6cdcdb4d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4ba6e68-e5b0-4e0f-af08-cb8039d61db2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35cfacb9-cb64-49b9-b9d0-6eef4f4d3951",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08178f24-2e52-43de-860a-39e007a7775f",
      "documentation": "Retrieve a specific branch from a repository, including its effective branch protection",
      "method": "get",
      "endpoint": "repos/:owner/:repo/branches/:branch",
      "responses": [
        {
          "uuid": "48ab50a8-6062-45b8-86e8-d47858e3aa79",
          "body": "{\n  \"commit\": {\n    \"added\": [\n      \"\"\n    ],\n    \"author\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"committer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"modified\": [\n      \"\"\n    ],\n    \"removed\": [\n      \"\"\n    ],\n    \"timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"verification\": {\n      \"payload\": \"\",\n      \"reason\": \"\",\n      \"signature\": \"\",\n      \"signer\": {\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\",\n        \"username\": \"\"\n      },\n      \"verified\": {{faker 'random.boolean'}}\n    }\n  },\n  \"effective_branch_protection_name\": \"\",\n  \"enable_status_check\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"protected\": {{faker 'random.boolean'}},\n  \"required_approvals\": {{faker 'random.number'}},\n  \"status_check_contexts\": [\n    \"\"\n  ],\n  \"user_can_merge\": {{faker 'random.boolean'}},\n  \"user_can_push\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Branch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "520a5841-5e70-4464-9687-853414df2ec9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d76a7101-ceab-41b7-81f1-7ae72a0c2e80",
      "documentation": "List a repository's collaborators",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators",
      "responses": [
        {
          "uuid": "6282e976-25b9-4fd7-a6f1-7c097ab74c29",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58ea28e4-8088-4366-bc78-0fee5f9a1db3",
      "documentation": "Delete a collaborator from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "9b9abc55-f3f9-442f-afa9-6954f54bc7e5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82a66fd4-4ebc-49d5-b81a-73ac0337684f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b78451d2-52c3-4aed-b53e-565c1c6213af",
      "documentation": "Check if a user is a collaborator of a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "e0bd55c9-d299-43ad-ac04-174c49f4074e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deaeca60-d354-4530-8222-dea4fdd73bd2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff028c8b-bf46-435b-8391-be7323881e1b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5c6e975-5bea-460f-afa8-f33de2c4dbc4",
      "documentation": "Add a collaborator to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/collaborators/:collaborator",
      "responses": [
        {
          "uuid": "e0b12b3d-7d73-495d-a3a8-2c97492fa4d7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3856976-6274-440f-9eec-bef4258325e8",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "528b0c07-a568-4391-843b-41a7ddb002cb",
      "documentation": "Get a list of all commits from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits",
      "responses": [
        {
          "uuid": "598f6f5a-07fd-4d69-bf4b-78b8066b741a",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "629533ed-b912-49c7-80f3-095007cc831c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "868d3802-2433-4cb2-88b7-0d7e3c3db85a",
          "body": "{\n  \"message\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "EmptyRepository",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd000361-60f9-496e-bd81-56127de43733",
      "documentation": "Get a commit's combined status, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/status",
      "responses": [
        {
          "uuid": "b38d9d1b-2ed9-4045-b895-3f9d34e2134f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d716cc6-9933-4cd1-a9b7-330a8b4041fa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92489e91-5824-4958-a019-429a6fe497c0",
      "documentation": "Get a commit's statuses, by branch/tag/commit reference",
      "method": "get",
      "endpoint": "repos/:owner/:repo/commits/:ref/statuses",
      "responses": [
        {
          "uuid": "37cd2f90-3acc-4a08-ac3d-8832c60b0cb5",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee23bf3b-0f40-4551-8483-f0767b013912",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e91c69bf-43b2-4782-a54b-d45488728430",
      "documentation": "Gets the metadata of all the entries of the root dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents",
      "responses": [
        {
          "uuid": "8d01ac76-c37b-4a2f-ae32-c6c003351da3",
          "body": "[\n  {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b612fb75-5e0a-497c-8c28-fcc66958ca83",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b671a95c-e96c-41d5-a614-621e094e4d02",
      "documentation": "Delete a file in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "79cf1eab-b99a-441d-a73e-4d89f53def57",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {},\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileDeleteResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cab7cdf-6a4d-43e5-9462-c5c4ae4ed1b5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "426beeab-af40-4392-bb3f-27f6dcb508d3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4b2af6e-f69e-4583-86f5-baa534d1514f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b17b6c6-99a9-4385-a039-21caa960a2d0",
      "documentation": "Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir",
      "method": "get",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "adadd122-1226-47a5-be4a-c24cd34b3ca2",
          "body": "{\n  \"_links\": {\n    \"git\": \"\",\n    \"html\": \"\",\n    \"self\": \"\"\n  },\n  \"content\": \"\",\n  \"download_url\": \"\",\n  \"encoding\": \"\",\n  \"git_url\": \"\",\n  \"html_url\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"submodule_git_url\": \"\",\n  \"target\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ContentsResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd0b9c27-66a6-4c52-8147-4b5458db2459",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45db451c-3843-4a1a-a66d-8bf59b507a7c",
      "documentation": "Create a file in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "b8fcef7c-e594-4616-80b7-23d101cc1492",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b844c0-6306-4ba0-bf26-4de0cdede22e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "834f8e14-9b57-40f4-8e0f-acc483056d42",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d112d98-77ad-424e-a227-a54de26642ad",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92ac8590-b189-41df-aacd-7134476f3a99",
      "documentation": "Update a file in a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/contents/:filepath",
      "responses": [
        {
          "uuid": "0943ce33-eff4-422f-83c0-b4364804e73f",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"message\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"content\": {\n    \"_links\": {\n      \"git\": \"\",\n      \"html\": \"\",\n      \"self\": \"\"\n    },\n    \"content\": \"\",\n    \"download_url\": \"\",\n    \"encoding\": \"\",\n    \"git_url\": \"\",\n    \"html_url\": \"\",\n    \"name\": \"\",\n    \"path\": \"\",\n    \"sha\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"submodule_git_url\": \"\",\n    \"target\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "FileResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc795afa-dbad-48fc-8f9b-d4e04b7f5110",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c3d746-ad66-418a-99aa-bd580c6257cb",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f7d0cfd-edcc-42d8-bd8f-19c4fe031d4c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d71cec22-1c7c-42ee-a1cb-b3e663a1e7a7",
      "documentation": "Get the EditorConfig definitions of a file in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/editorconfig/:filepath",
      "responses": [
        {
          "uuid": "a4893017-7bd4-4a56-8729-4d4da3dd658f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33ff7f2c-cef1-4d6c-b432-723f2cf028f3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3eca63f5-7324-4a11-9832-293a45c053dd",
      "documentation": "List a repository's forks",
      "method": "get",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "75a75e78-90a0-4690-8acb-52de54c5faeb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1552197e-ff15-4139-93b7-d2f91aeb0ec3",
      "documentation": "Fork a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/forks",
      "responses": [
        {
          "uuid": "dec1f2e2-ac63-4305-a056-73fe8087aadc",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2903e4c9-da9d-4786-b77b-a70b86434b33",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78113e71-82ad-41a5-87f5-055605eb64d4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8742dde6-4ece-41a1-9e81-df9af6c3afd5",
      "documentation": "Gets the blob of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/blobs/:sha",
      "responses": [
        {
          "uuid": "402ac49f-f32d-4338-b84b-050c79ac5ba2",
          "body": "{\n  \"content\": \"\",\n  \"encoding\": \"\",\n  \"sha\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitBlobResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4c9100-ec7d-4797-adb2-bd6c2891a3b9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b8dd4ba-e31a-4624-a3a3-af7de2789365",
      "documentation": "Get a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/commits/:sha",
      "responses": [
        {
          "uuid": "41c994c1-89d1-4809-98a6-2c16d8a67ef9",
          "body": "{\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"commit\": {\n    \"author\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"committer\": {\n      \"date\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\"\n    },\n    \"message\": \"\",\n    \"tree\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"url\": \"\"\n  },\n  \"committer\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"files\": [\n    {\n      \"filename\": \"\"\n    }\n  ],\n  \"html_url\": \"\",\n  \"parents\": [\n    {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"sha\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Commit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19b038dc-597f-42a7-8175-5a8fcdb59ecd",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d75f61f-40aa-4c85-8bd0-ce343f64b336",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be41cb0f-2550-45d7-89da-97dbd9b523d0",
      "documentation": "Get a note corresponding to a single commit from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/notes/:sha",
      "responses": [
        {
          "uuid": "dc55b62b-72d8-4aeb-a76c-197c52a25679",
          "body": "{\n  \"commit\": {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Note",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07b6cbe5-1760-4e2b-8b65-93ae7b7d0491",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d805b13f-5d9d-40d0-99fa-2a09b893c73d",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "807fa97c-1269-4eb3-809c-f68a19bc2981",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs",
      "responses": [
        {
          "uuid": "1e229e99-4812-46b2-b501-c3fabd45b6e1",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91dacb75-965b-44cb-9395-01b914825923",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43999419-cd7c-4432-ae58-40348c842736",
      "documentation": "Get specified ref or filtered repository's refs",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/refs/:ref",
      "responses": [
        {
          "uuid": "6c49d675-5177-4265-98e2-6e66e30f6e4e",
          "body": "[\n  {\n    \"object\": {\n      \"sha\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    },\n    \"ref\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReferenceList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62b8cc94-4046-42c4-8a14-7d095a4a5789",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcec8dde-9a02-48a8-ba08-9b22613bae67",
      "documentation": "Gets the tag object of an annotated tag (not lightweight tags)",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/tags/:sha",
      "responses": [
        {
          "uuid": "8af6ce05-2998-4655-a0fe-3f015709e9e3",
          "body": "{\n  \"message\": \"\",\n  \"object\": {\n    \"sha\": \"\",\n    \"type\": \"\",\n    \"url\": \"\"\n  },\n  \"sha\": \"\",\n  \"tag\": \"\",\n  \"tagger\": {\n    \"date\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"name\": \"\"\n  },\n  \"url\": \"\",\n  \"verification\": {\n    \"payload\": \"\",\n    \"reason\": \"\",\n    \"signature\": \"\",\n    \"signer\": {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"name\": \"\",\n      \"username\": \"\"\n    },\n    \"verified\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "AnnotatedTag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a56783eb-d8ee-40a6-9678-a43c0d12a3c0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3ef6372-14e2-44aa-8262-0b526cd508d2",
      "documentation": "Gets the tree of a repository.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/git/trees/:sha",
      "responses": [
        {
          "uuid": "2c71fb2a-f76a-4283-9da6-b19e565c9e77",
          "body": "{\n  \"page\": {{faker 'random.number'}},\n  \"sha\": \"\",\n  \"total_count\": {{faker 'random.number'}},\n  \"tree\": [\n    {\n      \"mode\": \"\",\n      \"path\": \"\",\n      \"sha\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"truncated\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitTreeResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b860593-6dda-4d13-8d7e-930bfab131af",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6cfd93ea-3cb0-4122-b369-f70b4e832ea5",
      "documentation": "List the hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "a84ae1be-ee61-4425-8ae2-9098bd293d83",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"config\": {},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "HookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b93564e-8ada-452e-ab83-a720eeea2b2b",
      "documentation": "Create a hook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks",
      "responses": [
        {
          "uuid": "dda5bf29-bac5-485c-86f9-d78893fb357e",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0c0a031-8f25-4dd6-80fd-0eed97d55500",
      "documentation": "List the Git hooks in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git",
      "responses": [
        {
          "uuid": "76669787-aff7-4ef0-8229-5ea4b3f1fb37",
          "body": "[\n  {\n    \"content\": \"\",\n    \"is_active\": {{faker 'random.boolean'}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHookList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9dda3bb7-cef8-41ef-ba73-a04d483a6ec6",
      "documentation": "Delete a Git hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "6d24bc2a-04d6-40ef-9f20-bcf8d1d3f9cb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aab9ff9-95c8-44d6-aeb0-b21e90c776fc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b75589ae-144d-47e1-8627-412a2c905c43",
      "documentation": "Get a Git hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "12f86437-451c-4c48-889f-542d29ec3282",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88eb9493-c491-4bac-b8be-b3e775d2f078",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68b8aca1-b22a-445b-bc80-f2559b565b40",
      "documentation": "Edit a Git hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/git/:id",
      "responses": [
        {
          "uuid": "b2525200-d3d5-4ad4-a912-5263e984ff9b",
          "body": "{\n  \"content\": \"\",\n  \"is_active\": {{faker 'random.boolean'}},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GitHook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89cbf36-da63-4980-b498-1be95959ccb0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27f7bdad-6f2a-4180-a3f6-74aa21e7faa7",
      "documentation": "Delete a hook in a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "e2cbd3ec-df1b-4789-a275-480ba30e812c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9605e783-5fc6-46ea-97f5-13a1af2d9bac",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbcf4312-1a30-4e6f-95d1-9dbe6a175440",
      "documentation": "Get a hook",
      "method": "get",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "04199aa4-4831-40d0-a4f8-7a9bc18f1d4d",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba0adf53-9c54-42a2-b72d-32a18fa5cc87",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aba6a03-5ca4-40d1-8206-c5f8c72ee8da",
      "documentation": "Edit a hook in a repository",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/hooks/:id",
      "responses": [
        {
          "uuid": "b5f2e36e-e111-4b25-bed0-65372a2ebdd7",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"config\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"type\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Hook",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2655579-bfc4-4082-afac-878e8a8306d0",
      "documentation": "Test a push webhook",
      "method": "post",
      "endpoint": "repos/:owner/:repo/hooks/:id/tests",
      "responses": [
        {
          "uuid": "2998c347-5c1b-4855-a5ee-71ea26771a40",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b860de1f-8b5d-41d5-aa7d-f7372dc8dcfb",
      "documentation": "Get available issue templates for a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issue_templates",
      "responses": [
        {
          "uuid": "519ba44e-328c-49fe-8d97-96e231f1bb71",
          "body": "[\n  {\n    \"about\": \"\",\n    \"content\": \"\",\n    \"file_name\": \"\",\n    \"labels\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"title\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueTemplates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d457fb67-1073-48a0-9ab1-293943faa3d1",
      "documentation": "List a repository's issues",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "79f190be-1886-4fd5-8869-64d009e625f0",
          "body": "[\n  {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "IssueList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b1d52e7-0985-4059-bfa2-089f58312f71",
      "documentation": "Create an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues",
      "responses": [
        {
          "uuid": "40f01d34-78e4-43ce-a198-7fe2b8b4ef94",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "988d14d6-2da9-49f2-b14a-d00e41795029",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "110270e9-b17d-4cdb-be26-32c3c26cf897",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ea45b9c-9109-493a-bd0e-7ee6a83f7e68",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54bee078-4385-4bcb-b5d6-49da02467553",
      "documentation": "List all comments in a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments",
      "responses": [
        {
          "uuid": "89d022de-87d3-4118-9830-752367d02c11",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a45e729-f3a8-42b4-b0f5-30e375076363",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "e574791f-2b45-47d1-b120-159c94e9c254",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6c0522b-39f9-42b2-b1db-b3669e8fc066",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fc912bc-bf74-446f-8e6e-8b2a5ba8a4be",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cd813fe-bb23-44e3-8510-fa49389528c3",
      "documentation": "Get a comment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "e970f823-b6b4-4f95-9445-b078a53888c0",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2e79798-d977-4a5d-b635-ac73144e5b1c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51793527-e7c1-4ae6-856c-29c727ae5c9e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f8e45bb-9577-4578-ba15-b1c55192e7a2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "923f04af-1f65-438e-b830-eabe6baf239e",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/comments/:id",
      "responses": [
        {
          "uuid": "2accdb21-da83-4202-8819-784489bed90a",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8860b97e-d976-4404-b46a-739502ee5046",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587f86b3-ff80-4396-adb0-a43ba72b7dd5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d97d8f51-faf9-403b-a452-6fd5b9e6d31f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02724288-81bb-458f-9052-fd3e7079465a",
      "documentation": "Remove a reaction from a comment of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "0be66cae-ba5d-4608-80d3-f8d36a4aac4f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4a11a6a-e384-4c1b-92b1-1917c34af46b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0094ab37-1969-43d2-aeeb-4aee3ee4b2ff",
      "documentation": "Get a list of reactions from a comment of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "9fe6c9d4-b0b2-48b8-bd68-5cb4c8c0be9a",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4ce6914-6cc4-4c96-95f4-4411d7c2769b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "871d50c2-6703-444d-bdca-468fab4a9e4a",
      "documentation": "Add a reaction to a comment of an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/comments/:id/reactions",
      "responses": [
        {
          "uuid": "d67c47cc-c2a1-45d1-9862-11d10e1351fa",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd19c7ac-163f-48d3-aeb0-4759d42d40ae",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f783b090-d6a1-457b-aaa1-263925548630",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "791d984f-9fd9-4780-8464-65b1642c946a",
      "documentation": "Get an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "b1843a71-2bbf-4371-a7f3-717e0606db30",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31655592-efa1-48ae-8779-3298bdba79f4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f18a7554-cf2b-455d-9249-eccf14dc3f42",
      "documentation": "Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index",
      "responses": [
        {
          "uuid": "06a98bef-d7ef-4a0f-a4f0-4d53a7fe1f67",
          "body": "{\n  \"assignee\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"assignees\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"body\": \"\",\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"comments\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"due_date\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_locked\": {{faker 'random.boolean'}},\n  \"labels\": [\n    {\n      \"color\": \"00aabb\",\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"milestone\": {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"number\": {{faker 'random.number'}},\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request\": {\n    \"merged\": {{faker 'random.boolean'}},\n    \"merged_at\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ref\": \"\",\n  \"repository\": {\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"owner\": \"\"\n  },\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98d409f2-c3da-4481-b101-183fc062b800",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25f34bf3-8b87-4e30-ab06-701fc8461d93",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66c2ca24-b086-4817-a4e0-fd9e43dedbe2",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87166b65-4a0a-4240-9d00-ddec71f49740",
      "documentation": "List all comments on an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "0c310dab-40e6-452e-a7ce-b9fca6a82151",
          "body": "[\n  {\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"issue_url\": \"\",\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc3f620a-cf22-496d-9856-1d7945628026",
      "documentation": "Add a comment to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/comments",
      "responses": [
        {
          "uuid": "18272768-aca1-4ac9-98f8-429d0d5a2b03",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0e37c02-8ca8-4596-abac-8b34128d30f9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec1f2690-98c4-41cd-96cd-b8beb08fe34e",
      "documentation": "Delete a comment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "ea2d0743-f50c-40ab-87e1-e603336f7beb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47b6a112-fb44-4058-b248-b9b7a5d25575",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94c14589-d959-4c25-a1d2-de4dd0a89673",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16282b4d-bab2-42c8-9877-90d3e64c7f9c",
      "documentation": "Edit a comment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/issues/:index/comments/:id",
      "responses": [
        {
          "uuid": "bb72b7f3-a166-4d2a-aa0d-ace5de8cde70",
          "body": "{\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"issue_url\": \"\",\n  \"original_author\": \"\",\n  \"original_author_id\": {{faker 'random.number'}},\n  \"pull_request_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3201d632-75b5-4332-a078-ae50fe4ba422",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "049a2735-21a3-4ae7-80a0-8cc13fc417bf",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0db6cb6-3ac8-4ff4-98d8-50bf83f53b43",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e52ece02-bfef-42ea-8469-81f4eccfa08e",
      "documentation": "Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/deadline",
      "responses": [
        {
          "uuid": "04800471-7ec0-4a1a-af44-541c533c1250",
          "body": "{\n  \"due_date\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "IssueDeadline",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e75f1de6-0fba-4ec7-8f1b-7c8c53da87f0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecf90070-c98c-45ea-a832-a9f0bfe28e79",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a58acc9-792e-4579-a739-8bc0482b5d0a",
      "documentation": "Remove all labels from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "b2d102e2-ed77-4b74-b6b0-eddf5a90be9b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e382033a-4185-4e09-b327-afb1f65aa641",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c36dfeba-be90-4e53-8ee7-d5c0e837f1ad",
      "documentation": "Get an issue's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "326cff27-4912-452d-8429-92e9faceeb08",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9f3f567-5cf5-4153-9691-97b6adcb4e09",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa0d1bd9-1ebc-4760-96f7-7ef5b88d5616",
      "documentation": "Add a label to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "cfeb0bc8-d84f-4482-8eb5-631f2de76c6c",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0673f05-2b14-4b2a-8d29-dc367d3c1de0",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbf5d01f-122b-46e6-a0cd-028b40bd501b",
      "documentation": "Replace an issue's labels",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/labels",
      "responses": [
        {
          "uuid": "d0cadada-995b-4247-996d-839eb284aad4",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11c4897b-1020-4571-ba8b-a38bee76c523",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27efbdba-362d-45db-96e5-9f302aba34dc",
      "documentation": "Remove a label from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/labels/:id",
      "responses": [
        {
          "uuid": "2ed02a67-4ba2-45e4-a18a-91e0793d06ee",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96aa21bf-0177-4d64-9b93-04d4f36b01b2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8bfbf70-dbd9-4ca8-9261-5b1a456f22f4",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29c1b010-0c79-494e-a56a-f3f0d249ba0b",
      "documentation": "Remove a reaction from an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "6114f56a-fd6e-4537-a212-f1d6d98701d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "134e3582-98f3-4126-8bae-cc5759a85a98",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cd035fe-c7c7-4cb1-a1bf-0e2112ffff17",
      "documentation": "Get a list reactions of an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "081b2019-3568-4cb0-8ee4-9a79c3227f57",
          "body": "[\n  {\n    \"content\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReactionList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6654e9d1-c581-4bf2-b2d6-e45a142ddbea",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2ce8e51-8c67-4d2c-98b2-ef22b91d2cc5",
      "documentation": "Add a reaction to an issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/reactions",
      "responses": [
        {
          "uuid": "719331ba-9dd9-4111-a30b-8a198e22f7fe",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab5a7337-b56b-403b-996c-7018d3b23a8c",
          "body": "{\n  \"content\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Reaction",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6510aba-ed1e-4b57-a4f2-5250b7ea5210",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1990369-d187-44fa-a2c3-e502e02f4cbb",
      "documentation": "Delete an issue's existing stopwatch.",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/delete",
      "responses": [
        {
          "uuid": "d7e5844a-2e0c-45a2-9af9-804d23a08ffe",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe11380e-2ba4-4f8a-87c5-3636ae5ef61e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03d81431-7085-4ecf-9d49-2a093426c118",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2afe89c-4c36-40bd-9cfb-53796d0488ed",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot cancel a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "738a8b5e-e389-4efc-805d-92ce0074a638",
      "documentation": "Start stopwatch on an issue.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/start",
      "responses": [
        {
          "uuid": "814b40ab-5a14-43c7-8a3f-bda04f2e09ae",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc2d896-0374-4327-98f1-b4782da4f005",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a04fa96-dde0-471a-99cb-7621157ff1e2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b479586-3e62-454b-bb6a-59049a93dcc6",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot start a stopwatch again if it already exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e614be8-3c3a-45f8-9826-39105e9b89c0",
      "documentation": "Stop an issue's existing stopwatch.",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/stopwatch/stop",
      "responses": [
        {
          "uuid": "2bf85f17-08d3-4bbb-8a03-f1878ebe4b4b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba6eb9a7-1e72-4f10-924e-bfbfdfeead5b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Not repo writer, user does not have rights to toggle stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12fa5ee5-b6f1-4511-9bd0-0bf122fd18ab",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0a3f7e3-85ac-44fd-adce-f76a0f114907",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Cannot stop a non existent stopwatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b641548-bc14-4c00-9078-78460f910eba",
      "documentation": "Get users who subscribed on an issue.",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions",
      "responses": [
        {
          "uuid": "788f213e-e77a-448a-b242-e13a047f4729",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c408ca24-a7bd-4803-8dba-13cb07ea6573",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55feda55-5a58-4302-a05a-325c153634f0",
      "documentation": "Check if user is subscribed to an issue",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/check",
      "responses": [
        {
          "uuid": "a1e4b0aa-738a-477f-9e8c-194b21ccffd8",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a23b53e-6e46-49f8-a4c4-09fed29aec8f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3c3c8e8-e016-4f44-a70f-5da94d0b997a",
      "documentation": "Unsubscribe user from issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "e058ca5e-583a-4d30-969d-401b2479ed29",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "635ff542-211e-49cf-96e3-9025e1bca5da",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Unsubscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4ddeb00-1070-4524-b062-337db26ecb86",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd536f3d-d492-451d-9e1d-fa70cc2bfe51",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55e0d60f-db15-45ff-8356-875248ee23ca",
      "documentation": "Subscribe user to issue",
      "method": "put",
      "endpoint": "repos/:owner/:repo/issues/:index/subscriptions/:user",
      "responses": [
        {
          "uuid": "bb80fdb3-8314-490f-896e-bd99c62e6eeb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Already subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ca24eb2-8e91-4565-a080-23f95700a288",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully Subscribed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f02bfd-1d53-4ad9-ad3f-cf46ed57ed0b",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "User can only subscribe itself if he is no admin",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e061b770-0131-4246-a7a9-fd8035989a05",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a3142fb-8084-4c9a-bb30-ccce89d2f836",
      "documentation": "Reset a tracked time of an issue",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "8793ad53-6e0f-41e5-80e1-af3c4bbd5ff1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e3e36d1-9dd3-461f-a7dc-daeb0b0b72d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bfb1ee3-4900-48a4-b7d2-335d7aa1153f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "925bfb92-b66e-4267-9d67-9fcb6538d50f",
      "documentation": "List an issue's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "9cfdade2-3d1f-415f-be41-b6dcbaaf66a2",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9125f875-1581-4977-8f01-785e065e2656",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4183c0be-db43-4317-bda4-e13ff9040a2d",
      "documentation": "Add tracked time to a issue",
      "method": "post",
      "endpoint": "repos/:owner/:repo/issues/:index/times",
      "responses": [
        {
          "uuid": "002e44c6-7635-4f42-86d9-4b39e8872ccd",
          "body": "{\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"issue\": {\n    \"assignee\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"assignees\": [\n      {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    ],\n    \"body\": \"\",\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"comments\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"due_date\": \"{{faker 'date.recent' 365}}\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_locked\": {{faker 'random.boolean'}},\n    \"labels\": [\n      {\n        \"color\": \"00aabb\",\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"milestone\": {\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"closed_issues\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"due_on\": \"{{faker 'date.recent' 365}}\",\n      \"id\": {{faker 'random.number'}},\n      \"open_issues\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"number\": {{faker 'random.number'}},\n    \"original_author\": \"\",\n    \"original_author_id\": {{faker 'random.number'}},\n    \"pull_request\": {\n      \"merged\": {{faker 'random.boolean'}},\n      \"merged_at\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"ref\": \"\",\n    \"repository\": {\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"owner\": \"\"\n    },\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  },\n  \"issue_id\": {{faker 'random.number'}},\n  \"time\": {{faker 'random.number'}},\n  \"user_id\": {{faker 'random.number'}},\n  \"user_name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTime",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b70b746f-1789-4951-a38d-7b033b8a15f2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "038419dd-c682-4654-9047-5a94daa9eb0e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4868e7a7-aef0-4e37-96e6-b5393dda88be",
      "documentation": "Delete specific tracked time",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/issues/:index/times/:id",
      "responses": [
        {
          "uuid": "2d5b1dda-ad5d-45dd-b870-30901237a53d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98dd8d4c-05a5-4716-9236-81057da48ce5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44cd9540-485f-4559-b724-19bd2b8ff7f2",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f83758ca-e275-41c9-8a91-d1011e6585cf",
      "documentation": "List a repository's keys",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "ae64bc22-0b68-43e7-9e4c-159293623bf9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3e94987-51ef-4960-9a0b-aab51a2bddb5",
      "documentation": "Add a key to a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/keys",
      "responses": [
        {
          "uuid": "91ad3d61-9b0a-4c99-b8f3-e88eacb820e4",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be47fddf-43db-4f62-9c10-f77a6de85244",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af2fad46-3672-4e45-92aa-d8b4ba321eb1",
      "documentation": "Delete a key from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "1be80a2e-99fa-40ff-be33-bb0b742be768",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86b3b1fb-6802-4eff-9c9e-f0c46636cee5",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fba7e3d0-2910-4c19-bae4-4c9f595eb4e5",
      "documentation": "Get a repository's key by id",
      "method": "get",
      "endpoint": "repos/:owner/:repo/keys/:id",
      "responses": [
        {
          "uuid": "98631ec3-ed5c-4e1e-91bf-44b041d8ce9a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "964f8291-527a-4471-ba3c-b46c3bd5898e",
      "documentation": "Get all of a repository's labels",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "27ad9536-f86b-48e0-bf5e-b363fefe2587",
          "body": "[\n  {\n    \"color\": \"00aabb\",\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "LabelList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8560b4b2-76f7-493a-ad30-fc83c7df78a0",
      "documentation": "Create a label",
      "method": "post",
      "endpoint": "repos/:owner/:repo/labels",
      "responses": [
        {
          "uuid": "805b564d-30d2-4245-a649-a67c5f7cf561",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8934bf1-8ee6-4f5a-973c-d14c11eae575",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0365b2c-7615-49c3-b3be-28e695663eba",
      "documentation": "Delete a label",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "7aa76df9-6c23-4042-a925-cd8a71928ad6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3bc7745-fc97-4f46-b516-7cea0ae7e25c",
      "documentation": "Get a single label",
      "method": "get",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "4c180977-29f7-4818-894f-05f40a4757f9",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7256a8db-e226-4b9d-914a-bf211fe7b1c8",
      "documentation": "Update a label",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/labels/:id",
      "responses": [
        {
          "uuid": "e5a5975d-3111-42db-8d31-0f72c1c3808e",
          "body": "{\n  \"color\": \"00aabb\",\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Label",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ac81289-68bb-4e17-8f73-320c75a172dc",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9d6c9eb-ed53-43a5-b868-f565b9938047",
      "documentation": "Get languages and number of bytes of code written",
      "method": "get",
      "endpoint": "repos/:owner/:repo/languages",
      "responses": [
        {
          "uuid": "90dababf-f908-4789-b2f2-c8ac7b742971",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "LanguageStatistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f65e972-1178-4d03-afed-0844b2604748",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67a0622d-a25a-426c-9f1c-5b658caa3bd1",
      "documentation": "Get all of a repository's opened milestones",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "cb077a32-0dda-4945-a112-395fa94e23a0",
          "body": "[\n  {\n    \"closed_at\": \"{{faker 'date.recent' 365}}\",\n    \"closed_issues\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"due_on\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"open_issues\": {{faker 'random.number'}},\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "MilestoneList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3ca981b-ad7d-4bab-8f4b-d4a27ef983b4",
      "documentation": "Create a milestone",
      "method": "post",
      "endpoint": "repos/:owner/:repo/milestones",
      "responses": [
        {
          "uuid": "a46236a2-a355-4225-9884-3a412c4a658c",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bf8e0da-d222-4903-b087-ce72307e6739",
      "documentation": "Delete a milestone",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "aec529bb-2cd9-44a4-9461-b368e616f8f6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b21a127f-de36-410b-bdbd-f17ca8ad8d7c",
      "documentation": "Get a milestone",
      "method": "get",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "107b6f39-d7fe-4b64-8c09-afdabe47ea47",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50db5961-adeb-4bcf-9a02-56b7fd36e92a",
      "documentation": "Update a milestone",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/milestones/:id",
      "responses": [
        {
          "uuid": "54bd7985-ef1f-498b-ac2b-f9bc046d61ad",
          "body": "{\n  \"closed_at\": \"{{faker 'date.recent' 365}}\",\n  \"closed_issues\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"due_on\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"open_issues\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Milestone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41cb7133-49cb-4e01-b77a-aec188aac269",
      "documentation": "Sync a mirrored repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/mirror-sync",
      "responses": [
        {
          "uuid": "edbcd8eb-dd48-497a-95c3-01688c195d59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "266841f9-8a6f-45ec-8575-e0829ee94f3a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "760881aa-032f-4d9b-b720-71f0f67ddb18",
      "documentation": "List users's notification threads on a specific repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "3d4c9584-dd2b-4d5d-8186-c8a2ca15790f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53e5b634-02f3-4b8a-84a9-aa9d9350d56b",
      "documentation": "Mark notification threads as read, pinned or unread on a specific repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/notifications",
      "responses": [
        {
          "uuid": "77bf08b9-d4bc-462e-a1b6-c014bfa49051",
          "body": "",
          "latency": 0,
          "statusCode": 205,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ce4bde4-5a55-47ed-8986-6390e31dcabb",
      "documentation": "List a repo's pull requests",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "c6ce202e-c44e-41d9-8a60-6f2264884822",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2b3feb0-c99b-4e27-9cce-4968ca33ec5a",
      "documentation": "Create a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls",
      "responses": [
        {
          "uuid": "7912af35-cb89-4ccf-a1af-2aec144d6fda",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff0617e3-4932-4372-be31-63d1d3ae21ff",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dca60d2-5f3c-465f-871a-f850c33d953f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b7c8225-4bf3-45bb-a4f9-1eeb98470022",
      "documentation": "Get a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "d7d2846d-7e66-4459-9586-42dd3096582a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cab49d65-8a71-4859-85a8-3cf6ef89e85b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bcc8769a-eba5-48f4-9da9-8de665c7946b",
      "documentation": "Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/pulls/:index",
      "responses": [
        {
          "uuid": "a9282572-a48b-4f02-b747-6711b3fc7556",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4086ceb1-4f9a-47aa-9ceb-273ef156d123",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b91d118c-3c5e-427c-99d2-8dc680cbd8fa",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27641298-f69b-49c5-a7ff-94e5d6189193",
          "body": "",
          "latency": 0,
          "statusCode": 412,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d72ae48-11f3-45f2-bb62-5b6923a02ba0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff0d52a8-0f31-432e-a72e-4e8fd77d6ffb",
      "documentation": "Get a pull request diff",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.diff",
      "responses": [
        {
          "uuid": "015bd097-01fa-4ca2-bcad-e3cc007081a7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92a05e4f-681a-45e9-905e-df45ba8749e5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "293b4b3b-3709-44c0-9238-2a71646e6e68",
      "documentation": "Get a pull request patch file",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index.patch",
      "responses": [
        {
          "uuid": "cc89ded1-eb0b-4ab8-a238-2f78010951e6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d83fa19f-a890-462a-9752-d1df322d6ca1",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d235db9-2dae-40fc-a53b-30fe42a6e1b7",
      "documentation": "Get commits for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/commits",
      "responses": [
        {
          "uuid": "fbd402cc-7946-4d26-9ff5-64ce8c67e465",
          "body": "[\n  {\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"commit\": {\n      \"author\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"committer\": {\n        \"date\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"name\": \"\"\n      },\n      \"message\": \"\",\n      \"tree\": {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      },\n      \"url\": \"\"\n    },\n    \"committer\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"files\": [\n      {\n        \"filename\": \"\"\n      }\n    ],\n    \"html_url\": \"\",\n    \"parents\": [\n      {\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"sha\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"sha\": \"\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-HasMore",
              "value": ""
            },
            {
              "key": "X-Page",
              "value": ""
            },
            {
              "key": "X-PageCount",
              "value": ""
            },
            {
              "key": "X-PerPage",
              "value": ""
            },
            {
              "key": "X-Total",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d82b407-12e9-4d5e-a907-d7c14e30da58",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "836a2b60-d663-4704-8771-940fb61e5186",
      "documentation": "Check if a pull request has been merged",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "e8def921-e214-4603-843b-ca67aea29651",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "pull request has been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "356064dd-2123-4920-a3f2-f7940997a8dc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "pull request has not been merged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06d0c904-3f93-4787-80c7-e9c11350faef",
      "documentation": "Merge a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/merge",
      "responses": [
        {
          "uuid": "07aaf63f-280b-4ca8-a6cd-e547288d3b8a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584160a3-1c48-4a61-a876-d5ff12403443",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df7d11f0-b1f9-4f9e-a05d-61fa0acd01de",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc92a1fa-c8cc-424e-891d-ac5a8b7e0179",
      "documentation": "cancel review requests for a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "59dc89d6-2846-4ade-9ce5-b081e34615dc",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5710d2ff-ef85-46be-8e8a-f5a8e96c455a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "940075f3-c47c-4692-b7de-6f746ef5078b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d805bd33-aa62-42b9-8940-88d1ae89dea3",
      "documentation": "create review requests for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/requested_reviewers",
      "responses": [
        {
          "uuid": "d7e345e5-eec8-405c-a289-e562336a62fb",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"official\": {{faker 'random.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'random.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eacac6c-426c-4c9f-bd9b-8c85285b88c4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd7d5fb-56e0-4e80-943d-3927e1b72c42",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "983d083f-8eae-4e69-8273-2573f8890464",
      "documentation": "List all reviews for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "227bf36d-0bbc-4a31-9ebc-c6949ce1cbd2",
          "body": "[\n  {\n    \"body\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"commit_id\": \"\",\n    \"dismissed\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"official\": {{faker 'random.boolean'}},\n    \"pull_request_url\": \"\",\n    \"stale\": {{faker 'random.boolean'}},\n    \"state\": \"\",\n    \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n    \"team\": {\n      \"can_create_org_repo\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"includes_all_repositories\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"organization\": {\n        \"avatar_url\": \"\",\n        \"description\": \"\",\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"location\": \"\",\n        \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n        \"username\": \"\",\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n      \"units\": [\n        \"repo.code\",\n        \"repo.issues\",\n        \"repo.ext_issues\",\n        \"repo.wiki\",\n        \"repo.pulls\",\n        \"repo.releases\",\n        \"repo.projects\",\n        \"repo.ext_wiki\"\n      ]\n    },\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReviewList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8d15465-110d-487c-9414-a39c51578afc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "702960c7-f697-4681-99e0-6e777996cb62",
      "documentation": "Create a review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews",
      "responses": [
        {
          "uuid": "48c117d2-2209-4898-b8db-9a33e4f4265e",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89ba92bd-8679-412c-8eeb-59598b660183",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfabdac9-1315-446c-a5c7-06b378fa13ea",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47446f1c-4e37-47ca-998d-5abc8036d402",
      "documentation": "Delete a specific review from a pull request",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "dfd3ab6f-65b9-4a98-8a7f-6367d9f481ef",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f12709b-aa8f-4c87-884e-3c44de724c7a",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a56f28c-aa71-4b1d-a704-88ce39d12514",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84f1c7c9-b457-4d23-8bd9-c4e7eb28d747",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "7d5e0e87-2fcf-4417-942f-1ecb9da6ae6a",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc247001-e54d-4837-9f6b-9a176279e41b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a5e4a07-624d-4aa3-9ff6-0f387f2c5487",
      "documentation": "Submit a pending review to an pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id",
      "responses": [
        {
          "uuid": "51e967a4-d269-42f5-9d4d-f9473779da4f",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee197083-6810-452c-bf7a-dc0068b0b000",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "859f3b16-742d-4b7d-b299-3b53c29295c0",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b76c2118-11ea-496c-ab2b-4ae43281822b",
      "documentation": "Get a specific review for a pull request",
      "method": "get",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/comments",
      "responses": [
        {
          "uuid": "f8506570-2394-4c8d-8973-78c8c7ab0695",
          "body": "[\n  {\n    \"body\": \"\",\n    \"commit_id\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"diff_hunk\": \"\",\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"original_commit_id\": \"\",\n    \"original_position\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"position\": {{faker 'random.number'}},\n    \"pull_request_review_id\": {{faker 'random.number'}},\n    \"pull_request_url\": \"\",\n    \"resolver\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PullCommentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03555d60-c9d8-4a8e-b4de-a1a8ae6c3c57",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bf05114-0b12-4adb-bdb5-3c66ae457c55",
      "documentation": "Dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/dismissals",
      "responses": [
        {
          "uuid": "0add5d74-0bcd-4c19-9534-b706169b352d",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a0ec060-9681-4e28-8279-9d8f4d844729",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2e98a91-8df7-4b58-a5f7-edd77412f7f3",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "238c4e2c-e259-4423-a87e-9060b2396585",
      "documentation": "Cancel to dismiss a review for a pull request",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/reviews/:id/undismissals",
      "responses": [
        {
          "uuid": "ad60eb5b-fa79-495f-9e3c-840796aba3a5",
          "body": "{\n  \"body\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"commit_id\": \"\",\n  \"dismissed\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"official\": {{faker 'random.boolean'}},\n  \"pull_request_url\": \"\",\n  \"stale\": {{faker 'random.boolean'}},\n  \"state\": \"\",\n  \"submitted_at\": \"{{faker 'date.recent' 365}}\",\n  \"team\": {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  },\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PullReview",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c33b230e-bc62-4702-8a73-d6e164dbb08d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d183f8-b8ea-419e-b142-2f66414b601f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39d985f1-028f-4098-a7f5-f366b5e598d1",
      "documentation": "Merge PR's baseBranch into headBranch",
      "method": "post",
      "endpoint": "repos/:owner/:repo/pulls/:index/update",
      "responses": [
        {
          "uuid": "2cc3ac41-41b6-4ea0-bf6f-2f33c0e5ef4d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3879748b-8dfc-4d83-9380-69c1ec4cd573",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3db0546-0260-4015-9d03-5c2c655ecba3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "984bc591-aa57-4abb-9d06-f805a567d5dc",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b57561c-5b26-473d-bdf1-89b15d984710",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87d5ba45-6168-47d1-9073-12377089bf5b",
      "documentation": "Get a file from a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/raw/:filepath",
      "responses": [
        {
          "uuid": "997bc662-1929-4d47-8937-9496ac7a4f3d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f5afeee-6f1b-4ee6-a81d-7529d3d7821a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c259cf09-48e1-4c68-a160-56b93aa7e790",
      "documentation": "List a repo's releases",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "5660553a-0d09-48f4-88f1-1b1c6126e917",
          "body": "[\n  {\n    \"assets\": [\n      {\n        \"browser_download_url\": \"\",\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"download_count\": {{faker 'random.number'}},\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"size\": {{faker 'random.number'}},\n        \"uuid\": \"\"\n      }\n    ],\n    \"author\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"body\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"draft\": {{faker 'random.boolean'}},\n    \"html_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"prerelease\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"tag_name\": \"\",\n    \"tarball_url\": \"\",\n    \"target_commitish\": \"\",\n    \"url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "ReleaseList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da2e4830-4f08-4c2e-8dc6-a4b9c87ff5d7",
      "documentation": "Create a release",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases",
      "responses": [
        {
          "uuid": "3fb2c43a-e1f7-4993-a6ca-ec840c02e51d",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf31a38e-4107-48d8-abf5-781b579557b7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9398dfc-d451-4f92-8dc5-9d86790fcbee",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65fcc26c-9e53-4cb1-a350-e3b2fb12aa5e",
      "documentation": "Delete a release by tag name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "5b2236d1-ecbc-49d5-805c-f352f170b91f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14182162-3165-4f27-b4d2-ce613c202adf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5596a1d4-04e0-4732-bb05-b27e461446fe",
      "documentation": "Get a release by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/tags/:tag",
      "responses": [
        {
          "uuid": "a55c261f-c58f-4a49-902a-79853cb02cbb",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71f3ed13-1eca-4f16-adfd-6b7300ac3f08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daa0968e-8a05-4f3d-903f-5262df2730a0",
      "documentation": "Delete a release",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "3d10c713-84b0-40a7-9ae9-f7b3d90a2446",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1abf957f-c01d-4146-86db-4b94d9f3ac33",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a165be4-8565-497f-be33-18db54bce019",
      "documentation": "Get a release",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "478fb39b-6814-4311-80bc-b999f0a5ec64",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a9de487-fb4d-4b92-b489-9fda462121a4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7afab425-9c8e-4bcd-afc1-8e8c3bab7cad",
      "documentation": "Update a release",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id",
      "responses": [
        {
          "uuid": "9d79ec19-1cee-49df-8efb-eab24297aced",
          "body": "{\n  \"assets\": [\n    {\n      \"browser_download_url\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"download_count\": {{faker 'random.number'}},\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"author\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"html_url\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"prerelease\": {{faker 'random.boolean'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"tag_name\": \"\",\n  \"tarball_url\": \"\",\n  \"target_commitish\": \"\",\n  \"url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Release",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8848702-48cf-4d6d-9dcc-c233f25154ff",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8be7949-bafb-46d0-baac-c08927586e6e",
      "documentation": "List release's attachments",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "4f489f47-3673-4082-bebe-4f5cdd859250",
          "body": "[\n  {\n    \"browser_download_url\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"download_count\": {{faker 'random.number'}},\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"uuid\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AttachmentList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "650785ca-9e4a-465b-b92e-8f010496a924",
      "documentation": "Create a release attachment",
      "method": "post",
      "endpoint": "repos/:owner/:repo/releases/:id/assets",
      "responses": [
        {
          "uuid": "32e21d57-9caf-404f-a5c5-1cb5e2b08944",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16bac22e-2df5-4a9a-8422-cc9dd1f20d5f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d99ddeec-560d-493d-883d-9f61b6769cb1",
      "documentation": "Delete a release attachment",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "b301a019-ea31-4d2e-97e2-d57ebb73c3f7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "948a0c93-944e-4afe-a88a-d49f75887e90",
      "documentation": "Get a release attachment",
      "method": "get",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "c69411d6-835a-4b82-a168-24645f1f66ad",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f443f585-0bb5-44b9-b8a0-ea344767a4c9",
      "documentation": "Edit a release attachment",
      "method": "patch",
      "endpoint": "repos/:owner/:repo/releases/:id/assets/:attachment_id",
      "responses": [
        {
          "uuid": "ea630e0b-0473-47af-b6c2-da55c175db79",
          "body": "{\n  \"browser_download_url\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"download_count\": {{faker 'random.number'}},\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Attachment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b823eed5-5d4a-494f-aa19-fbce10436985",
      "documentation": "Return all users that can be requested to review in this repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/reviewers",
      "responses": [
        {
          "uuid": "be3b59a6-cb74-438b-b856-16acd280c296",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9993873-b0a6-4547-90e9-5710bf6e2a2d",
      "documentation": "Get signing-key.gpg for given repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/signing-key.gpg",
      "responses": [
        {
          "uuid": "8f5488f6-4448-4d1d-8fda-829ad10290f1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59e568ca-cf1e-45dd-97c7-5db62bafb76b",
      "documentation": "List a repo's stargazers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/stargazers",
      "responses": [
        {
          "uuid": "aba496f8-74e4-4bc1-a631-9ffc61ad58f9",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85bffe9f-9961-4a11-bd10-3a5199fda112",
      "documentation": "Get a commit's statuses",
      "method": "get",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "8fe6d034-97bf-4bad-9b22-5c5da8781cd1",
          "body": "[\n  {\n    \"context\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"creator\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"status\": \"\",\n    \"target_url\": \"\",\n    \"updated_at\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "CommitStatusList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3340203-afd4-404b-b50a-c55c4a30219c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81db6796-0a8f-4b37-87b4-135aaacec2b1",
      "documentation": "Create a commit status",
      "method": "post",
      "endpoint": "repos/:owner/:repo/statuses/:sha",
      "responses": [
        {
          "uuid": "d98133fb-dc3a-48ce-bd67-e0fb658fdedc",
          "body": "{\n  \"context\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"creator\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"status\": \"\",\n  \"target_url\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "CommitStatus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1f3b45e-0143-4f3f-b522-f8a284b7d2fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea8c6a5a-44a0-4bbf-86f8-df88166a53ca",
      "documentation": "List a repo's watchers",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscribers",
      "responses": [
        {
          "uuid": "91356e9a-ca0b-437f-b5e5-84abae3c0a15",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f96d20be-a840-44b5-a93c-a6e2c333d616",
      "documentation": "Unwatch a repo",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "1068421c-c50f-4f82-b48f-1648a6fb6bd1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9349672b-a4e1-4c71-aceb-9b38b53481e8",
      "documentation": "Check if the current user is watching a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "b7ae6f5d-26ba-494b-9df7-92a84288df8b",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb685509-3c2e-4917-810e-b92222e6b660",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "User is not watching this repo or repo do not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fde7721e-80f2-4a57-9d23-d2eb89d4e65d",
      "documentation": "Watch a repo",
      "method": "put",
      "endpoint": "repos/:owner/:repo/subscription",
      "responses": [
        {
          "uuid": "30ef586c-1c5d-496f-83b7-9e1055c601ab",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"ignored\": {{faker 'random.boolean'}},\n  \"reason\": {},\n  \"repository_url\": \"\",\n  \"subscribed\": {{faker 'random.boolean'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "WatchInfo",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50e56c53-24b9-4539-b0aa-153458eaf471",
      "documentation": "List a repository's tags",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "adf1d25f-fdbf-46b5-9176-579651a53eb7",
          "body": "[\n  {\n    \"commit\": {\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"sha\": \"\",\n      \"url\": \"\"\n    },\n    \"id\": \"\",\n    \"message\": \"\",\n    \"name\": \"\",\n    \"tarball_url\": \"\",\n    \"zipball_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TagList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "017ead78-8416-44dd-9bb9-fb01e3b26698",
      "documentation": "Create a new git tag in a repository",
      "method": "post",
      "endpoint": "repos/:owner/:repo/tags",
      "responses": [
        {
          "uuid": "d386e8e1-0f0e-4953-880c-2b86f66dec68",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "887847d3-db9d-4092-9ea2-f89de57dcc20",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f216adb-1ce5-4a3e-a5c8-884a23301d25",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a77c316e-a1b9-4f95-94ef-8fc38d0bacd3",
      "documentation": "Delete a repository's tag by name",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "5119b116-c8d7-4a87-a061-5edbcf13b95c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2801e54-3371-4f8b-afd1-aae7cf0f4e04",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a68c2f8c-0ea0-4216-934d-9759dc9cfe55",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "APIConflict is a conflict empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44287fe7-4688-4186-9f46-f4c97b6d222f",
      "documentation": "Get the tag of a repository by tag name",
      "method": "get",
      "endpoint": "repos/:owner/:repo/tags/:tag",
      "responses": [
        {
          "uuid": "660751b3-0740-4904-ba4b-f40f7d177931",
          "body": "{\n  \"commit\": {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"sha\": \"\",\n    \"url\": \"\"\n  },\n  \"id\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"tarball_url\": \"\",\n  \"zipball_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce31c4b7-b2bc-4c78-b4c4-6ca333438c6a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffbd421d-c777-444a-996f-896964baa630",
      "documentation": "List a repository's teams",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams",
      "responses": [
        {
          "uuid": "b6f9e3d1-1f80-402d-96d4-80c948a17c65",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87a86639-743e-4b51-9c30-95affcfa98a6",
      "documentation": "Delete a team from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "8ffdaf1c-d5c9-4a7d-b61a-599baf073708",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04bde44d-de9d-406f-87f7-0e3e190e56aa",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ebd2997-bd0e-44d8-b486-37e15d4fdb03",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7933e223-ca36-4277-a437-749dc0b6a1b9",
      "documentation": "Check if a team is assigned to a repository",
      "method": "get",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "d894cb8b-3667-45dc-97f0-3b6b84d31986",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a08fc892-1518-410a-a7e5-2bb007777ff7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0e77d8e-387c-454d-98d4-dd8fca1716e3",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a02d3a6-fe32-459e-9095-85ca7bcebc39",
      "documentation": "Add a team to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/teams/:team",
      "responses": [
        {
          "uuid": "01885635-9000-48c0-b3d5-f8d1b21ca064",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfae82bf-3c5f-4f0f-9ec2-a4554e63d1af",
          "body": "",
          "latency": 0,
          "statusCode": 405,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "556a0af8-f456-49c7-a7a2-cc7f6dfb9dc7",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2efbba28-2b1d-454d-ad8b-d137ae99a153",
      "documentation": "List a repo's tracked times",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times",
      "responses": [
        {
          "uuid": "d071e2b4-e64d-4f26-8f04-c487625b41fd",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c36a71f-d774-4596-87f5-81a004332ab9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0b2ba3f-5605-418d-9d1e-00d500c1ed72",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69b0a965-750a-404b-9fea-54c215d87c9e",
      "documentation": "List a user's tracked times in a repo",
      "method": "get",
      "endpoint": "repos/:owner/:repo/times/:user",
      "responses": [
        {
          "uuid": "001c90ce-eea7-42fe-8660-bf809952dab3",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3f64815-a64a-4b8b-9e92-adb8c64b9e07",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83946681-5b39-4530-b48c-0755c7999469",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bc92236-de88-420c-97d6-093398eb6c79",
      "documentation": "Get list of topics that a repository has",
      "method": "get",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "a25bcdb6-f8a0-43f0-a46d-be9f29c9921e",
          "body": "{\n  \"topics\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicNames",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11cbf87f-22d3-4cfd-8340-257a5613f836",
      "documentation": "Replace list of topics for a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics",
      "responses": [
        {
          "uuid": "a7e8c4d9-cdb4-4426-b5dd-1ef65b0b0d2e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c77c6822-8077-4a33-a939-4409f6fe2faa",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4628e661-0c6b-4726-99a6-c6851226566e",
      "documentation": "Delete a topic from a repository",
      "method": "delete",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "93166b09-92e2-463c-8443-df49e343b6e4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5590272-7d8d-4ab7-b540-c522117e94d7",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "294cf41f-4ade-4f06-ab78-04c4a065bc9c",
      "documentation": "Add a topic to a repository",
      "method": "put",
      "endpoint": "repos/:owner/:repo/topics/:topic",
      "responses": [
        {
          "uuid": "058afdb3-52ea-4418-b47f-f635f68c55e7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71c5d797-075c-4f5b-ad42-2a5a59b72b60",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIInvalidTopicsError is error format response to invalid topics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "invalidTopics",
              "value": ""
            },
            {
              "key": "message",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fb8c940-71e8-4a72-bd90-d24e20650a4f",
      "documentation": "Transfer a repo ownership",
      "method": "post",
      "endpoint": "repos/:owner/:repo/transfer",
      "responses": [
        {
          "uuid": "c6196f2b-04dd-4917-ac79-e03c3ac3e842",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "352c1db4-b8f6-4c89-9910-d689e9f5c9c4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07a8a8bd-5d36-47b7-adbc-81a1d9b5aaf9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08f37571-dfa3-426a-b88c-f18a96fa73e2",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53450927-2fed-4f7c-b74c-d2caad6701cf",
      "documentation": "Create a repository using a template",
      "method": "post",
      "endpoint": "repos/:template_owner/:template_repo/generate",
      "responses": [
        {
          "uuid": "f3852f82-9cc9-4384-82d5-1127a3e19e48",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f036aa2-a024-4875-ad49-5121d1f50a26",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53424adf-4cd9-4b84-942d-5a6a6b5d99ef",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56aa7fdf-32db-472d-ae94-4a65e6a0a7d8",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5befcb2d-0dcd-40ed-ab93-4959a5e8d494",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3489a166-0ee5-43c0-8839-b050859b26f3",
      "documentation": "Get a repository by id",
      "method": "get",
      "endpoint": "repositories/:id",
      "responses": [
        {
          "uuid": "71759b79-1657-4fcf-a774-bd644b95c9de",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80b0e022-a446-4c48-b03e-45e79cdeaf2d",
      "documentation": "Get instance's global settings for api",
      "method": "get",
      "endpoint": "settings/api",
      "responses": [
        {
          "uuid": "132c9e1b-c062-4813-b4b5-0665400f7494",
          "body": "{\n  \"default_git_trees_per_page\": {{faker 'random.number'}},\n  \"default_max_blob_size\": {{faker 'random.number'}},\n  \"default_paging_num\": {{faker 'random.number'}},\n  \"max_response_items\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAPISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55caaa5e-aec7-4e4f-9347-e51810ff7e36",
      "documentation": "Get instance's global settings for Attachment",
      "method": "get",
      "endpoint": "settings/attachment",
      "responses": [
        {
          "uuid": "c75a8b38-08b5-441e-865e-7d28b55449cc",
          "body": "{\n  \"allowed_types\": \"\",\n  \"enabled\": {{faker 'random.boolean'}},\n  \"max_files\": {{faker 'random.number'}},\n  \"max_size\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralAttachmentSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a670935e-b3be-41fd-9862-1241b88e840d",
      "documentation": "Get instance's global settings for repositories",
      "method": "get",
      "endpoint": "settings/repository",
      "responses": [
        {
          "uuid": "d93608ce-67ef-4379-870d-f07d2d8058a9",
          "body": "{\n  \"http_git_disabled\": {{faker 'random.boolean'}},\n  \"lfs_disabled\": {{faker 'random.boolean'}},\n  \"migrations_disabled\": {{faker 'random.boolean'}},\n  \"mirrors_disabled\": {{faker 'random.boolean'}},\n  \"stars_disabled\": {{faker 'random.boolean'}},\n  \"time_tracking_disabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralRepoSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "169d1192-2727-4811-a24b-ad3fd997d860",
      "documentation": "Get instance's global settings for ui",
      "method": "get",
      "endpoint": "settings/ui",
      "responses": [
        {
          "uuid": "bdd27480-42fb-479e-a9e1-6534b8052e50",
          "body": "{\n  \"allowed_reactions\": [\n    \"\"\n  ],\n  \"custom_emojis\": [\n    \"\"\n  ],\n  \"default_theme\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GeneralUISettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "482f1b33-7763-4410-9101-69e03598e627",
      "documentation": "Get default signing-key.gpg",
      "method": "get",
      "endpoint": "signing-key.gpg",
      "responses": [
        {
          "uuid": "1fa3b911-82b6-45cb-b4f6-288c3d5d6f11",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "GPG armored public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0085c38c-716b-4eaa-8f96-3926e03e372e",
      "documentation": "Delete a team",
      "method": "delete",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "b99d7950-5108-4639-8b47-b1d7d2148836",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "team deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84b784a3-f0a1-4125-b554-8db61412f1d6",
      "documentation": "Get a team",
      "method": "get",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "cf4475ff-9f12-4573-8b22-4c41c871773d",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "998cedec-9f96-482b-aa47-113a232ff384",
      "documentation": "Edit a team",
      "method": "patch",
      "endpoint": "teams/:id",
      "responses": [
        {
          "uuid": "87e7affe-62be-45dd-961e-303f51e6c356",
          "body": "{\n  \"can_create_org_repo\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"includes_all_repositories\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"organization\": {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  },\n  \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n  \"units\": [\n    \"repo.code\",\n    \"repo.issues\",\n    \"repo.ext_issues\",\n    \"repo.wiki\",\n    \"repo.pulls\",\n    \"repo.releases\",\n    \"repo.projects\",\n    \"repo.ext_wiki\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Team",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a868cd36-d335-4554-8a98-25b8877156f5",
      "documentation": "List a team's members",
      "method": "get",
      "endpoint": "teams/:id/members",
      "responses": [
        {
          "uuid": "de9e982d-bafd-4170-a7b7-a1c40ba0c052",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "712a8281-563b-4590-abd2-beda16727236",
      "documentation": "Remove a team member",
      "method": "delete",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "b5f43946-14ab-4a85-a3a1-1a69e844b197",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ea9ae3f-910e-4600-9f1a-354523d9db20",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0db478b6-c2aa-4b6b-9cf3-b5dcb0c305e2",
      "documentation": "List a particular member of team",
      "method": "get",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "efa888ba-e5e6-460f-9936-1040dec70b52",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "004ec6d9-3e90-436b-93a5-2ce838b3dd35",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3eb1fb7-a933-4939-8917-24789e8d0eb8",
      "documentation": "Add a team member",
      "method": "put",
      "endpoint": "teams/:id/members/:username",
      "responses": [
        {
          "uuid": "3074bc8c-bc12-40c8-8c81-98e1fd6c9db2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04c6df1a-16bf-4332-8942-b0b65ce10a55",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d807e17-da31-47ec-a800-2d307d6499c5",
      "documentation": "List a team's repos",
      "method": "get",
      "endpoint": "teams/:id/repos",
      "responses": [
        {
          "uuid": "857e26d9-5de2-4391-aa5c-6148b9fb456e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9449f32c-7bd8-410c-ac17-5f02a73d0bc8",
      "documentation": "Remove a repository from a team",
      "method": "delete",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "214bcee3-c41d-4be2-a9ec-1fad2db0815a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24008d66-975c-44aa-bc62-77d8a4f73ba9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ac7804e-c182-4051-81cb-c711b476452a",
      "documentation": "Add a repository to a team",
      "method": "put",
      "endpoint": "teams/:id/repos/:org/:repo",
      "responses": [
        {
          "uuid": "d1052697-023f-43b3-9211-4838322f8283",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "764bad3c-b1a9-45c2-93e4-abfaab04948f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54daf139-e8cb-41e4-89e7-516c84fe8f07",
      "documentation": "search topics via keyword",
      "method": "get",
      "endpoint": "topics/search",
      "responses": [
        {
          "uuid": "3bb319a7-24c7-4f2f-83c1-135bb4e40966",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"repo_count\": {{faker 'random.number'}},\n    \"topic_name\": \"\",\n    \"updated\": \"{{faker 'date.recent' 365}}\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TopicListResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7ec4152-1a49-430c-a072-6480ee890333",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "102989cf-c268-4894-a83c-070b9e360db0",
      "documentation": "Get the authenticated user",
      "method": "get",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "09a31054-cb71-4029-b0d4-eb9c647c6545",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfc28266-cd3a-4ead-ba8a-403887141c64",
      "documentation": "List the authenticated user's oauth2 applications",
      "method": "get",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "e095399e-744e-49c3-b60b-ca559ebadbfc",
          "body": "[\n  {\n    \"client_id\": \"\",\n    \"client_secret\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"redirect_uris\": [\n      \"\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2ApplicationList represents a list of OAuth2 applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ce5e26d-aacd-4f1f-8a5d-7f325b13084d",
      "documentation": "creates a new OAuth2 application",
      "method": "post",
      "endpoint": "user/applications/oauth2",
      "responses": [
        {
          "uuid": "9b091495-aa2b-42a3-b1a0-6f9e44a98c62",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46939a2e-5170-4d95-9773-29ee90a1a3a7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4c626a1-0099-415a-a7e6-0d5108bd0731",
      "documentation": "delete an OAuth2 Application",
      "method": "delete",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "bfb51d2d-5ac4-4e92-a30d-04b9f8c82a42",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c36fdce-54bc-4662-97c9-8f2b67ee2e6a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c14b5ed-033b-45b7-97cb-efe61b65753d",
      "documentation": "get an OAuth2 Application",
      "method": "get",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "24d76211-dba6-4a15-99bd-de64ab3bab18",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f0da69-1643-40b7-885d-324c2d151431",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76ba4d7e-27e6-4486-9cd0-803908c8da64",
      "documentation": "update an OAuth2 Application, this includes regenerating the client secret",
      "method": "patch",
      "endpoint": "user/applications/oauth2/:id",
      "responses": [
        {
          "uuid": "0e357702-0a6a-4039-902e-73c5b2ed3346",
          "body": "{\n  \"client_id\": \"\",\n  \"client_secret\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"redirect_uris\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OAuth2Application",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdf27448-f357-40d9-904a-5dfd27ed2e38",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9817b5d-7051-4365-9f53-e4702806b9c1",
      "documentation": "Delete email addresses",
      "method": "delete",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "78298a5f-5077-46ad-a1bb-56093f6355d5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f9a61d8-46d0-449e-b49f-d8f804071c10",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f61aef5a-d433-4e7e-808e-324acc518702",
      "documentation": "List the authenticated user's email addresses",
      "method": "get",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "bcbe2fc6-b256-45c4-b39b-c86dd1331032",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'random.boolean'}},\n    \"verified\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "004abd35-300a-4c34-b637-6af5af04d8a3",
      "documentation": "Add email addresses",
      "method": "post",
      "endpoint": "user/emails",
      "responses": [
        {
          "uuid": "b556a24d-8507-45d0-91d2-0f87099d009f",
          "body": "[\n  {\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"primary\": {{faker 'random.boolean'}},\n    \"verified\": {{faker 'random.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "EmailList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fed3dda7-1d21-4d0f-9979-b8758b61fb5f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa058dad-58d3-4725-bab5-75bab31fb54e",
      "documentation": "List the authenticated user's followers",
      "method": "get",
      "endpoint": "user/followers",
      "responses": [
        {
          "uuid": "0af6b811-21ef-48f8-aa89-c484c1014900",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95d48a81-3803-4eb1-9221-44dfebe8c0b3",
      "documentation": "List the users that the authenticated user is following",
      "method": "get",
      "endpoint": "user/following",
      "responses": [
        {
          "uuid": "7db71fd6-9dce-4409-af14-bc01b0b1b147",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a730365-e910-4213-8c58-a3784f9253cd",
      "documentation": "Unfollow a user",
      "method": "delete",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "0507f2f2-7127-4103-844c-08f37285e50e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29caea1a-df63-4f5d-8002-3de132c97fae",
      "documentation": "Check whether a user is followed by the authenticated user",
      "method": "get",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "fcf1d06b-9f96-4a00-ace1-e85f6a79bac4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1fd6e93-d9df-426b-996a-078f0df6764a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80718d58-0acf-4d1e-810f-a1513d46bdee",
      "documentation": "Follow a user",
      "method": "put",
      "endpoint": "user/following/:username",
      "responses": [
        {
          "uuid": "eeeee88d-7009-4491-9d2b-03fc5c3e20b0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31e865e5-19a6-43a6-8350-4362d996a23e",
      "documentation": "Get a Token to verify",
      "method": "get",
      "endpoint": "user/gpg_key_token",
      "responses": [
        {
          "uuid": "ce3dc0e3-b7e3-4c65-8f12-c3d6ba8d08a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "APIString is a string response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10d02f62-2d93-4d2f-a490-3c96ec9f4920",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4d6f94a-a145-4f18-b03f-adee9fcfe0c5",
      "documentation": "Verify a GPG key",
      "method": "post",
      "endpoint": "user/gpg_key_verify",
      "responses": [
        {
          "uuid": "e66f8294-d87e-47e0-b0f7-1c9e8449ca6b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4b6ad66-fd2f-45c7-aafc-9cb57edf2704",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "239089bc-0fca-4cd4-a7ed-79dd27f59e1e",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33a18150-d7cc-4e1c-95e7-bd287b67363f",
      "documentation": "List the authenticated user's GPG keys",
      "method": "get",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "a9d9373e-4938-400b-829b-effadd322d60",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22d73b1e-d3f6-45ba-83e4-76c66ab4cd22",
      "documentation": "Create a GPG key",
      "method": "post",
      "endpoint": "user/gpg_keys",
      "responses": [
        {
          "uuid": "3ffba144-55c9-46eb-b421-98bde53e6b43",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1142ac9b-3229-47a4-83f6-31958eb101a2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38b34fd8-48b5-413c-a0d0-ab47f55b39e5",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90f3f199-090d-4900-b016-bf4b058c392a",
      "documentation": "Remove a GPG key",
      "method": "delete",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "34a99e09-c819-4f65-ae62-d99db94b6c8e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e6f40e5-08a3-41ef-a071-c58ecba850ea",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a63181-11bb-4e45-9d56-8411e1f46b92",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "134da15f-5058-44cb-9833-8a22f9804b6f",
      "documentation": "Get a GPG key",
      "method": "get",
      "endpoint": "user/gpg_keys/:id",
      "responses": [
        {
          "uuid": "304ecd25-6e44-42fa-9d86-ef69d39aed8c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37851276-e239-4690-88ab-e2444e48d3df",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bdf6f74-cff1-484f-84ff-2acaac504b0a",
      "documentation": "List the authenticated user's public keys",
      "method": "get",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "056cc295-ee97-41df-afd0-47ee5ace0008",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'random.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df6ad368-a421-44c0-bc1e-636ff17df16e",
      "documentation": "Create a public key",
      "method": "post",
      "endpoint": "user/keys",
      "responses": [
        {
          "uuid": "579084f5-b44d-4bd8-b31a-3280efb2fd42",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed7b0a5a-154a-46fc-8a46-4415dc2b631b",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "904a6c76-8807-43dd-bec7-35f0dc92446f",
      "documentation": "Delete a public key",
      "method": "delete",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "641cc9b6-1d47-45fc-b2d4-d2f2356682f3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "819c9617-1626-4edd-a164-4660b87640f4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "APIForbiddenError is a forbidden error response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f663c265-4414-4686-a40d-92e53af0939f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb436cc4-f086-4c47-a290-736789274376",
      "documentation": "Get a public key",
      "method": "get",
      "endpoint": "user/keys/:id",
      "responses": [
        {
          "uuid": "22fee34d-b833-4070-bb53-d63e1d612b87",
          "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"fingerprint\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"key_type\": \"\",\n  \"read_only\": {{faker 'random.boolean'}},\n  \"title\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02a6a737-f7c0-4e2f-889f-54154d82720c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad72bae5-8840-40a6-9e3f-70712b19b1fc",
      "documentation": "List the current user's organizations",
      "method": "get",
      "endpoint": "user/orgs",
      "responses": [
        {
          "uuid": "3d5d8ad6-e6bc-4539-bc9a-56dbe27c533a",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ecd4948a-6650-425b-a64f-976e1a3174b8",
      "documentation": "List the repos that the authenticated user owns",
      "method": "get",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "589dc419-c633-47b1-8a21-41ffa7a9909c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29fab0af-acd0-47c1-b0e1-85d1aa189a5c",
      "documentation": "Create a repository",
      "method": "post",
      "endpoint": "user/repos",
      "responses": [
        {
          "uuid": "d4cd918a-d3bc-4784-aaa7-a524ea9afba6",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08669d48-a16f-4e2c-be31-0fc07fe95051",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The repository with the same name already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30e612c0-fb33-46e2-aa41-dd91c5f05d4f",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIValidationError is error format response related to input validation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ffdb8fc-11dc-4984-947b-99fbf6d01d70",
      "documentation": "Get user settings",
      "method": "get",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "9c207d27-d74d-4a8e-b641-3d199b7290aa",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'random.boolean'}},\n    \"hide_email\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd71a701-e61b-4c5e-b870-9b673cbf92b9",
      "documentation": "Update user settings",
      "method": "patch",
      "endpoint": "user/settings",
      "responses": [
        {
          "uuid": "ff3b19ee-7da0-4660-a9b8-a56c7e8ded6e",
          "body": "[\n  {\n    \"description\": \"\",\n    \"diff_view_style\": \"\",\n    \"full_name\": \"\",\n    \"hide_activity\": {{faker 'random.boolean'}},\n    \"hide_email\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"location\": \"\",\n    \"theme\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserSettings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50c62ecf-2a88-463c-9110-cc8d08cc258b",
      "documentation": "The repos that the authenticated user has starred",
      "method": "get",
      "endpoint": "user/starred",
      "responses": [
        {
          "uuid": "1e692015-35ce-46b2-bce1-922355758112",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8b0223a-31fa-4458-95a0-0b9768e2448e",
      "documentation": "Unstar the given repo",
      "method": "delete",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "588105b8-9ce9-4ebc-9394-44c207077ac4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2545cb25-02c3-4f66-9cb9-b12b4c9718af",
      "documentation": "Whether the authenticated is starring the repo",
      "method": "get",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "c7b264c1-bc26-478d-b440-f8647aa67f15",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73f6c61b-bb20-47c5-b463-5bfee6d6e5f2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5a4421c-4a27-4257-8d9b-65278ecceb34",
      "documentation": "Star the given repo",
      "method": "put",
      "endpoint": "user/starred/:owner/:repo",
      "responses": [
        {
          "uuid": "018d382a-e014-4317-ba58-6c02efe9cc06",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "506256be-f7e3-44a2-9b01-7acd983caae5",
      "documentation": "Get list of all existing stopwatches",
      "method": "get",
      "endpoint": "user/stopwatches",
      "responses": [
        {
          "uuid": "d994892e-e01f-45fb-9dfd-8668c8423c7a",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"duration\": \"\",\n    \"issue_index\": {{faker 'random.number'}},\n    \"issue_title\": \"\",\n    \"repo_name\": \"\",\n    \"repo_owner_name\": \"\",\n    \"seconds\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "StopWatchList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49aadee9-73b9-4235-bc42-b5e5d22f7e19",
      "documentation": "List repositories watched by the authenticated user",
      "method": "get",
      "endpoint": "user/subscriptions",
      "responses": [
        {
          "uuid": "2f249318-6a99-42f4-9a93-b354631b015a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed78c3c3-048d-4003-a78c-27c9b3eb4cf7",
      "documentation": "List all the teams a user belongs to",
      "method": "get",
      "endpoint": "user/teams",
      "responses": [
        {
          "uuid": "3eb225b7-e8a6-4c15-81b6-e89b84bb8fc2",
          "body": "[\n  {\n    \"can_create_org_repo\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"includes_all_repositories\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"organization\": {\n      \"avatar_url\": \"\",\n      \"description\": \"\",\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"location\": \"\",\n      \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n      \"username\": \"\",\n      \"visibility\": \"\",\n      \"website\": \"\"\n    },\n    \"permission\": \"{{oneOf (array 'none' 'read' 'write' 'admin' 'owner')}}\",\n    \"units\": [\n      \"repo.code\",\n      \"repo.issues\",\n      \"repo.ext_issues\",\n      \"repo.wiki\",\n      \"repo.pulls\",\n      \"repo.releases\",\n      \"repo.projects\",\n      \"repo.ext_wiki\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TeamList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c0f2073-4cfe-4b47-8494-905868dbb8b6",
      "documentation": "List the current user's tracked times",
      "method": "get",
      "endpoint": "user/times",
      "responses": [
        {
          "uuid": "480f7fbc-3712-4393-9d80-4efe24e129cc",
          "body": "[\n  {\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"issue\": {\n      \"assignee\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      },\n      \"assignees\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"avatar_url\": \"\",\n          \"created\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"{{faker 'internet.email'}}\",\n          \"followers_count\": {{faker 'random.number'}},\n          \"following_count\": {{faker 'random.number'}},\n          \"full_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_admin\": {{faker 'random.boolean'}},\n          \"language\": \"\",\n          \"last_login\": \"{{faker 'date.recent' 365}}\",\n          \"location\": \"\",\n          \"login\": \"\",\n          \"prohibit_login\": {{faker 'random.boolean'}},\n          \"restricted\": {{faker 'random.boolean'}},\n          \"starred_repos_count\": {{faker 'random.number'}},\n          \"visibility\": \"\",\n          \"website\": \"\"\n        }\n      ],\n      \"body\": \"\",\n      \"closed_at\": \"{{faker 'date.recent' 365}}\",\n      \"comments\": {{faker 'random.number'}},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"due_date\": \"{{faker 'date.recent' 365}}\",\n      \"html_url\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_locked\": {{faker 'random.boolean'}},\n      \"labels\": [\n        {\n          \"color\": \"00aabb\",\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"milestone\": {\n        \"closed_at\": \"{{faker 'date.recent' 365}}\",\n        \"closed_issues\": {{faker 'random.number'}},\n        \"created_at\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"due_on\": \"{{faker 'date.recent' 365}}\",\n        \"id\": {{faker 'random.number'}},\n        \"open_issues\": {{faker 'random.number'}},\n        \"state\": \"\",\n        \"title\": \"\",\n        \"updated_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"number\": {{faker 'random.number'}},\n      \"original_author\": \"\",\n      \"original_author_id\": {{faker 'random.number'}},\n      \"pull_request\": {\n        \"merged\": {{faker 'random.boolean'}},\n        \"merged_at\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"ref\": \"\",\n      \"repository\": {\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"owner\": \"\"\n      },\n      \"state\": \"\",\n      \"title\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"url\": \"\",\n      \"user\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"avatar_url\": \"\",\n        \"created\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"{{faker 'internet.email'}}\",\n        \"followers_count\": {{faker 'random.number'}},\n        \"following_count\": {{faker 'random.number'}},\n        \"full_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_admin\": {{faker 'random.boolean'}},\n        \"language\": \"\",\n        \"last_login\": \"{{faker 'date.recent' 365}}\",\n        \"location\": \"\",\n        \"login\": \"\",\n        \"prohibit_login\": {{faker 'random.boolean'}},\n        \"restricted\": {{faker 'random.boolean'}},\n        \"starred_repos_count\": {{faker 'random.number'}},\n        \"visibility\": \"\",\n        \"website\": \"\"\n      }\n    },\n    \"issue_id\": {{faker 'random.number'}},\n    \"time\": {{faker 'random.number'}},\n    \"user_id\": {{faker 'random.number'}},\n    \"user_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "TrackedTimeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8a6676b-6ba0-413a-9e9c-1f34fda6e88b",
      "documentation": "Search for users",
      "method": "get",
      "endpoint": "users/search",
      "responses": [
        {
          "uuid": "eb4b5d65-335b-4597-9713-aeb67c08e94b",
          "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  ],\n  \"ok\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SearchResults of a successful search",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d498f842-ba4e-463f-b4e4-438bbd38514b",
      "documentation": "Check if one user is following another user",
      "method": "get",
      "endpoint": "users/:follower/following/:followee",
      "responses": [
        {
          "uuid": "a99fa81b-f57f-4cda-9a87-29364ec41796",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2313b54-b062-40b5-9eaa-6c0bc19dcd2c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e04b93c-6547-4f91-9739-772da3a97156",
      "documentation": "Get a user",
      "method": "get",
      "endpoint": "users/:username",
      "responses": [
        {
          "uuid": "278273fc-eb66-4a1d-b012-52503382ca23",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"avatar_url\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"followers_count\": {{faker 'random.number'}},\n  \"following_count\": {{faker 'random.number'}},\n  \"full_name\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"is_admin\": {{faker 'random.boolean'}},\n  \"language\": \"\",\n  \"last_login\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"login\": \"\",\n  \"prohibit_login\": {{faker 'random.boolean'}},\n  \"restricted\": {{faker 'random.boolean'}},\n  \"starred_repos_count\": {{faker 'random.number'}},\n  \"visibility\": \"\",\n  \"website\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52d4020e-ca43-45f3-9dc9-eb08aa006912",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "672697da-4edb-4c0b-8bcb-1e268f4b63ff",
      "documentation": "List the given user's followers",
      "method": "get",
      "endpoint": "users/:username/followers",
      "responses": [
        {
          "uuid": "e725c85c-596a-4c22-86f7-6dfb98819738",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f91319b4-f47f-4d16-b380-e15ff9fdb1c7",
      "documentation": "List the users that the given user is following",
      "method": "get",
      "endpoint": "users/:username/following",
      "responses": [
        {
          "uuid": "8e2ad081-c776-4c83-8183-99b92a8a17a0",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"avatar_url\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"followers_count\": {{faker 'random.number'}},\n    \"following_count\": {{faker 'random.number'}},\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_admin\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"last_login\": \"{{faker 'date.recent' 365}}\",\n    \"location\": \"\",\n    \"login\": \"\",\n    \"prohibit_login\": {{faker 'random.boolean'}},\n    \"restricted\": {{faker 'random.boolean'}},\n    \"starred_repos_count\": {{faker 'random.number'}},\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "272dff64-cf84-4d60-a484-a6b0cba99c4b",
      "documentation": "List the given user's GPG keys",
      "method": "get",
      "endpoint": "users/:username/gpg_keys",
      "responses": [
        {
          "uuid": "e05dedba-9e93-4569-b289-1e6d7f184d81",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f79793f2-d072-43e9-9f9f-e03f6812c9e1",
      "documentation": "Get a user's heatmap",
      "method": "get",
      "endpoint": "users/:username/heatmap",
      "responses": [
        {
          "uuid": "3728c33f-2b3b-43c0-9422-6e898adf7a94",
          "body": "[\n  {\n    \"contributions\": {{faker 'random.number'}},\n    \"timestamp\": {{faker 'random.number'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "UserHeatmapData",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eee2eab-4993-445b-af88-dd73f6a19677",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "def1c584-193a-423e-a48e-9ae6633b672b",
      "documentation": "List the given user's public keys",
      "method": "get",
      "endpoint": "users/:username/keys",
      "responses": [
        {
          "uuid": "bcdcfa49-b8c6-48b0-bb09-00f3343e0383",
          "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"fingerprint\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"key_type\": \"\",\n    \"read_only\": {{faker 'random.boolean'}},\n    \"title\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"active\": {{faker 'random.boolean'}},\n      \"avatar_url\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"followers_count\": {{faker 'random.number'}},\n      \"following_count\": {{faker 'random.number'}},\n      \"full_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_admin\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"last_login\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"login\": \"\",\n      \"prohibit_login\": {{faker 'random.boolean'}},\n      \"restricted\": {{faker 'random.boolean'}},\n      \"starred_repos_count\": {{faker 'random.number'}},\n      \"visibility\": \"\",\n      \"website\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "PublicKeyList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fafe2f1-2569-4a33-92ec-d58f48491b4e",
      "documentation": "List a user's organizations",
      "method": "get",
      "endpoint": "users/:username/orgs",
      "responses": [
        {
          "uuid": "f449f81d-5a00-42d3-a182-602e7b74d972",
          "body": "[\n  {\n    \"avatar_url\": \"\",\n    \"description\": \"\",\n    \"full_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"location\": \"\",\n    \"repo_admin_change_team_access\": {{faker 'random.boolean'}},\n    \"username\": \"\",\n    \"visibility\": \"\",\n    \"website\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OrganizationList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be162d3c-2ed9-4e95-b6df-60c1074b98b9",
      "documentation": "List the repos owned by the given user",
      "method": "get",
      "endpoint": "users/:username/repos",
      "responses": [
        {
          "uuid": "694dd94a-79c2-49b5-97ff-a2a5df57a132",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb3c729e-c076-462e-88db-ff1a8416dff3",
      "documentation": "The repos that the given user has starred",
      "method": "get",
      "endpoint": "users/:username/starred",
      "responses": [
        {
          "uuid": "794b816e-7522-436f-8599-1956062a84ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82ecd8ea-bdcb-4e30-a9fb-e3370540ae77",
      "documentation": "List the repositories watched by a user",
      "method": "get",
      "endpoint": "users/:username/subscriptions",
      "responses": [
        {
          "uuid": "3abe2e54-0d45-4e3c-b014-7068e08e3460",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67661c39-6551-4b60-8ebf-5ba03d34d715",
      "documentation": "List the authenticated user's access tokens",
      "method": "get",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "452fae37-8ba3-4662-bfdd-d0badabebb30",
          "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"sha1\": \"\",\n    \"token_last_eight\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "AccessTokenList represents a list of API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d6fafc5-e435-4d06-adc7-13d9d6d059e9",
      "documentation": "Create an access token",
      "method": "post",
      "endpoint": "users/:username/tokens",
      "responses": [
        {
          "uuid": "de637161-7bcc-4463-a5c1-fff76bc7f94e",
          "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"sha1\": \"\",\n  \"token_last_eight\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "AccessToken represents an API access token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03d3e032-40be-4643-a3ea-9244b734e350",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2427ff80-1e42-4705-93e0-001098352da1",
      "documentation": "delete an access token",
      "method": "delete",
      "endpoint": "users/:username/tokens/:token",
      "responses": [
        {
          "uuid": "15c54b4f-a13f-417a-b06d-2c0d0c341341",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "APIEmpty is an empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9ced41d-ccce-4f39-a246-2fd2b157fd9d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "APINotFound is a not found empty response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e0c9a13-5c48-4ffe-8b58-c6e237d89787",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "APIError is error format response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "message",
              "value": ""
            },
            {
              "key": "url",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98128b7a-3cf8-4bf4-aa4a-ac64c6103663",
      "documentation": "Returns the version of the Gitea application",
      "method": "get",
      "endpoint": "version",
      "responses": [
        {
          "uuid": "1f95a6e1-b298-49bc-b4b3-180e0d8de76c",
          "body": "{\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServerVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}