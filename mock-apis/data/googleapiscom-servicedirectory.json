{
  "uuid": "17eee561-5764-4a30-be3d-1cc0edf50682",
  "lastMigration": 19,
  "name": "Service Directory API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "089aed9f-e115-4e8d-bd1f-e75fe5e3b619",
      "documentation": "Deletes an endpoint.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "75946f93-5c9f-4e29-aef5-c3ec03a6fa84",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5425ada9-08e7-44f3-977d-5cf215c1aaa2",
      "documentation": "Gets an endpoint.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "ae9189e4-1776-4d97-b456-da22d59db89e",
          "body": "{\n  \"address\": \"\",\n  \"annotations\": {},\n  \"name\": \"\",\n  \"network\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61e7aaa3-8503-4f62-b637-21dd62e67452",
      "documentation": "Updates an endpoint.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "6c873d1b-32a3-4343-810b-82ec4d826a8e",
          "body": "{\n  \"address\": \"\",\n  \"annotations\": {},\n  \"name\": \"\",\n  \"network\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdc6e3a1-2b84-4197-a42b-7d8c9f001c2e",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "de25f2b0-7331-4299-9b34-9a600ca0b521",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3623759-92dc-4e1a-b7d3-68c92627bd10",
      "documentation": "Returns a service and its associated endpoints. Resolving a service is not considered an active developer method.",
      "method": "post",
      "endpoint": "v1/:name:resolve",
      "responses": [
        {
          "uuid": "f3e0bd3b-a2b5-4d2a-9dd2-a56f2b14531e",
          "body": "{\n  \"service\": {\n    \"annotations\": {},\n    \"endpoints\": [\n      {\n        \"address\": \"\",\n        \"annotations\": {},\n        \"name\": \"\",\n        \"network\": \"\",\n        \"port\": {{faker 'random.number'}}\n      }\n    ],\n    \"name\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be9a0a94-57fe-42d5-abb5-b4af5e6f4392",
      "documentation": "Lists all endpoints.",
      "method": "get",
      "endpoint": "v1/:parent/endpoints",
      "responses": [
        {
          "uuid": "b2657fb4-3fa1-4415-9030-4ac1423c730c",
          "body": "{\n  \"endpoints\": [\n    {\n      \"address\": \"\",\n      \"annotations\": {},\n      \"name\": \"\",\n      \"network\": \"\",\n      \"port\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45235452-2468-4b71-877e-7c21ec7b4fa9",
      "documentation": "Creates an endpoint, and returns the new endpoint.",
      "method": "post",
      "endpoint": "v1/:parent/endpoints",
      "responses": [
        {
          "uuid": "a6bc1336-0c9c-4337-bccf-8eab0e38c78a",
          "body": "{\n  \"address\": \"\",\n  \"annotations\": {},\n  \"name\": \"\",\n  \"network\": \"\",\n  \"port\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d850beb-dc27-4f94-80d6-04a388be844e",
      "documentation": "Lists all namespaces.",
      "method": "get",
      "endpoint": "v1/:parent/namespaces",
      "responses": [
        {
          "uuid": "5fab8c13-910b-49c8-94fb-d080b77782c8",
          "body": "{\n  \"namespaces\": [\n    {\n      \"labels\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a924aaa4-78f7-4f38-8c63-044d1e4375b0",
      "documentation": "Creates a namespace, and returns the new namespace.",
      "method": "post",
      "endpoint": "v1/:parent/namespaces",
      "responses": [
        {
          "uuid": "78101189-d2f0-404d-a76f-772976f5c112",
          "body": "{\n  \"labels\": {},\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d103f2e-b7e2-49e7-bc50-85289d10c622",
      "documentation": "Lists all services belonging to a namespace.",
      "method": "get",
      "endpoint": "v1/:parent/services",
      "responses": [
        {
          "uuid": "299ab7a5-5995-4761-8ee4-4cbd236ebeb5",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"services\": [\n    {\n      \"annotations\": {},\n      \"endpoints\": [\n        {\n          \"address\": \"\",\n          \"annotations\": {},\n          \"name\": \"\",\n          \"network\": \"\",\n          \"port\": {{faker 'random.number'}}\n        }\n      ],\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cbb89db-6f4c-4ac7-a387-9fe7b4af100f",
      "documentation": "Creates a service, and returns the new service.",
      "method": "post",
      "endpoint": "v1/:parent/services",
      "responses": [
        {
          "uuid": "475949a9-bf8e-471d-8acd-14b2b8b19be5",
          "body": "{\n  \"annotations\": {},\n  \"endpoints\": [\n    {\n      \"address\": \"\",\n      \"annotations\": {},\n      \"name\": \"\",\n      \"network\": \"\",\n      \"port\": {{faker 'random.number'}}\n    }\n  ],\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69d823f7-9dcc-4773-a448-9608b5135022",
      "documentation": "Gets the IAM Policy for a resource (namespace or service only).",
      "method": "post",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "3373c5fc-52f5-41f0-847a-1573e99ff1b6",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "148ecce3-ce6d-4087-a389-68e25bf66f55",
      "documentation": "Sets the IAM Policy for a resource (namespace or service only).",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "8a549852-09b1-496b-8382-4ce94a873c47",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06cc2853-b131-451f-a42d-c4258f0f2325",
      "documentation": "Tests IAM permissions for a resource (namespace or service only).",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "eaf328dd-ca82-467a-ba47-c4c6ef9d5b20",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}