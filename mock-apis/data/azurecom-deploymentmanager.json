{
  "uuid": "2e4b00aa-53eb-4a12-87be-dab5a8d86645",
  "lastMigration": 19,
  "name": "AzureDeploymentManager",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "223d9d3c-8c18-4cb5-beb1-83a37be02ca0",
      "documentation": "Lists the supported operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.DeploymentManager/operations",
      "responses": [
        {
          "uuid": "985fe10c-bb83-4ac8-b525-3482145104d8",
          "body": "{\n  \"value\": [\n    null\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The operations are successfully returned. The response code does not determine if the request which this operation corresponds to is successful. Check the response content for the status and any error information on failures.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33b15325-7c40-411f-a00a-cd2fc1fb1129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42973c9a-4533-4206-b333-1cfada368634",
      "documentation": "Lists the artifact sources in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources",
      "responses": [
        {
          "uuid": "66b2373b-4c68-4be6-b131-c6b88a2b23b6",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "463cd5ab-d87a-4470-9dc3-7731ae2bd20b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "720fd5e0-618a-47e9-953e-807975f60330",
      "documentation": "Deletes an artifact source.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "46daefb9-da45-424e-8aad-3abde6030e53",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The artifact source was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ea1829-512f-47fe-a9f8-345ce12b8c9d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The artifact source was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a951d18-2d08-40b7-9873-7f0d734084b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "009004c5-b299-4237-9c29-5a9a5495c390",
      "documentation": "Gets an artifact source.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "c5c6e3be-282e-4696-ab5e-d8db73b24bf2",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a9437ac-25b9-41c5-a1a8-406d09255332",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7f4b1a9-a2df-490d-ab20-d1ca208fde8b",
      "documentation": "Creates or updates an artifact source.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "864cfce0-8ddb-4308-b75c-3b8cee7b9cea",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "513b3bff-276c-484e-9703-0430b2a0e5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c5b66a6-3205-4356-a424-17f7e87bf96b",
      "documentation": "Lists the rollouts in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts",
      "responses": [
        {
          "uuid": "89340dda-ed70-4a86-a058-e9fbcd9b5a9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b050572-0f49-4c80-8c54-40f83235aedb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fa4326e-c689-461e-9411-7236d4d8c79d",
      "documentation": "Deletes a rollout resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "c76d01db-95a1-42c6-8ed6-c6ce0575726a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The rollout was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a47fef4d-b564-4bee-8f34-78f658e8f814",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The rollout was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "624a4501-3c4c-449d-8280-b92ec9d54f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de7c58de-6079-4068-83fb-f4da61ff9051",
      "documentation": "Gets detailed information of a rollout.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "47b89393-222b-4d19-815d-b14212bea810",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9814427f-f15a-4cb8-9fbc-663451cfe1c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cda1d43d-e006-4348-9b23-8f7728fbcdf0",
      "documentation": "Creates or updates a rollout.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "4ab2382f-5713-463a-b1df-5a9d1bc522a1",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "This is a long running operation. The operation returns a 201 if the request was successfully registered and basic validation is successful. The response includes an Azure-AsyncOperation header that contains the operation status URL. Clients are expected to poll the status URL for the status of the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Azure-AsyncOperation",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb3d410f-51c8-4ec6-885b-29edc99faeb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a92cd283-c206-4a6a-958c-532fac3793f4",
      "documentation": "Stops a running rollout.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName/cancel",
      "responses": [
        {
          "uuid": "b8b0a120-ed41-4387-95ac-e5c3830cfff1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "873ea5aa-7943-4e71-95d7-f1ec2b9cc3df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5df9ba1-6a69-47c1-9e1e-f81a9ac2e1dd",
      "documentation": "Restarts a failed rollout and optionally skips all succeeded steps.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName/restart",
      "responses": [
        {
          "uuid": "0a55fee5-1a08-4072-836d-cf8ea3233e66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d224db55-5bdf-4ad7-b10a-ce257a1bb724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84e80cbd-84aa-48c7-86d3-79a55904c841",
      "documentation": "Lists the service topologies in the resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies",
      "responses": [
        {
          "uuid": "f6d69861-be82-407b-9e99-5c234830cfcb",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8233be3-66bb-4581-8bb5-a22503022c12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4e80fc1-9d6a-4be3-aaf4-6afccd3ff4e7",
      "documentation": "Deletes the service topology.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "16d62766-5dbb-404b-bf24-0d404230f3fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The topology was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41c3a374-5a52-426e-a373-d4782b1d0cf7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The topology was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c428485b-d1d1-4c29-beb6-1eee829ba498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91fdfedf-de9d-475c-a9f4-67104f33f0e2",
      "documentation": "Gets the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "76266867-5b57-4072-ba0d-54bd515eea1d",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0f32611-737a-4829-9ef3-a470ed26fe52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e00271bd-e0aa-41de-a2bb-a2c7d62486f9",
      "documentation": "Creates or updates a service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "7898e050-3b92-49f6-844d-47cb4da76c22",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aba8a01f-c62b-477f-8df1-62134776d666",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard Error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d4dd7ea-f1c3-4477-b101-2c3763fe1ba0",
      "documentation": "Lists the services in the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services",
      "responses": [
        {
          "uuid": "21585ad8-8c37-43e2-8dc3-bbf6ca98dd52",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56117b2-5412-4e88-9e48-61ef368ca3f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e429b1f-b4e7-4239-94fc-af1de0e56fd3",
      "documentation": "Deletes the service.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "8a83b774-cf30-4c7d-a2e2-ccbc9964dada",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69685b4d-71a3-4cc9-8a83-fd48cc9ef56b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The service was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c0fe479-a674-4433-bb3c-d94a1900466b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52d43ace-e016-4e7c-8d80-e50db14c9f17",
      "documentation": "Gets the service.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "bbf69c4b-7028-465b-8965-53af89b43155",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb684d2a-446e-481c-8e53-0594ee21ad71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3c2d4ae-4a0f-4fb7-8638-9b12f7a8141c",
      "documentation": "Creates or updates a service in the service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "a79e5975-656a-4943-a4d7-8fe40405d926",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c75892a8-fac3-4e97-a982-2a53c6af7401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0be2a79e-366d-4be3-af73-96b673b0b65a",
      "documentation": "Lists the service units under a service in the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits",
      "responses": [
        {
          "uuid": "c7bf882d-46c6-49e9-9365-99b591a72fce",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2d014cc-3e22-4021-9086-540cbb769ef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94e9414d-998c-4d9d-adb6-f7b6c93582e2",
      "documentation": "Deletes the service unit.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "74f91f89-4aea-448a-832c-57a5805aa927",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service unit was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad364a0-a118-4819-bf3f-b2b092056cee",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The service unit was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99587922-a1b7-4c80-bb20-8af623773ba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b4d7b53-32e7-405d-9049-6b6ee5176950",
      "documentation": "Gets the service unit.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "a1690232-3e4e-4066-a4d2-68f3f206aa38",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c7e4fe-ff48-4d92-895f-5566f8122606",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6700df28-a256-4b28-9556-d8ec43117fe4",
      "documentation": "Creates or updates a service unit under the service in the service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "ee2508d5-326e-4526-82cf-bc245750e0cd",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Azure-AsyncOperation",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22b96d62-30e8-4629-9327-906d107c45ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c165730-1391-46be-b5a7-98366330c270",
      "documentation": "Lists the steps in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps",
      "responses": [
        {
          "uuid": "085a99f5-2105-4193-a7cb-e35d4b5fecbb",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9042dd5-e0bf-4f27-b8bf-f3e58ff4108e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c22f30e7-4256-4c50-834e-17ed0db34af7",
      "documentation": "Deletes the step.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "d9fab2bf-760d-4538-9f05-602ca5721abf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The step was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64b6548d-650e-4f94-8963-a9b98f94bf7d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The step was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8397f223-020d-45e4-a3c9-6f15cacfe76b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c84323d8-e722-4ab6-849c-0fd44739b079",
      "documentation": "Gets the step.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "843dfb3b-4733-4223-ae78-dde6915497f0",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4015577-f7fc-41fe-8758-4ed2863db886",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0821ba3f-780a-44a0-a099-2530df184495",
      "documentation": "Creates or updates a rollout step with the given step properties.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "9fe55da5-05cf-45e6-b12a-9e5b39110a8b",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "026fc3ea-7db0-486c-ad40-c8f143b31ae9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}