{
  "uuid": "25fa47b1-a294-42ac-bf9c-d39ea83125ff",
  "lastMigration": 19,
  "name": "AzureDeploymentManager",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "63476d8e-c715-4f97-a70a-c0e3fa9f4b60",
      "documentation": "Lists the supported operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.DeploymentManager/operations",
      "responses": [
        {
          "uuid": "495be28f-33a5-46f8-9a64-75e0d9b3cc52",
          "body": "{\n  \"value\": [\n    null\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The operations are successfully returned. The response code does not determine if the request which this operation corresponds to is successful. Check the response content for the status and any error information on failures.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8710606f-e7f5-456c-89ac-0e5ddb940d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80518ab5-e612-49f5-a80b-d11cec5f11cc",
      "documentation": "Lists the artifact sources in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources",
      "responses": [
        {
          "uuid": "6dbd4550-7bd7-4328-8a74-7763e96caa7d",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8c4b494-88dc-4cb4-bab9-9709ed0f5427",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f882c5c0-46d2-46f5-8f85-13b13f5677a0",
      "documentation": "Deletes an artifact source.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "1152e121-74ca-4fc3-9a1c-23b3ba938b0a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The artifact source was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc094c32-997e-4c68-98c0-20fc81131ab3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The artifact source was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f7b6cb8-4e96-4499-91ae-599cd7919b71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a877e1c-9971-4aa0-8238-2746490d1f43",
      "documentation": "Gets an artifact source.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "d8d166a8-a33f-4747-a327-a5fa05394614",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce320035-71cc-4002-9b3f-df5a65a1a69b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "707b1f9b-d6a6-48e4-8e30-eec87d149ce8",
      "documentation": "Creates or updates an artifact source.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/artifactSources/:artifactSourceName",
      "responses": [
        {
          "uuid": "e9396f3c-33ef-45dc-87eb-bf9940622617",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ded3337-d03b-4cfc-8d8c-6109d3fc8327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d9387f9-0712-428b-8fd7-321b9d2eb766",
      "documentation": "Lists the rollouts in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts",
      "responses": [
        {
          "uuid": "538b1710-69ae-497b-8a7d-ea5c251f34c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e2f1c19-2e52-4c04-bc62-d4b6ad1ec17a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f43d42e5-3065-4493-90f7-6a3b59b4b7a1",
      "documentation": "Deletes a rollout resource.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "16150d20-5140-48ad-8750-4ce83af33d30",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The rollout was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4b5036-f1f6-458d-a1e8-79a0499cf7e6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The rollout was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6824a611-7348-47a2-a58f-be97dc8d37e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b93af1ba-2eac-4562-a611-00ea9f50406c",
      "documentation": "Gets detailed information of a rollout.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "c07c0513-c229-4604-a95e-46010a0a83e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5001ed2-d8fa-46c9-9316-84d41b6dea25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1548ebdd-050d-4acf-9ccb-e57c521bf986",
      "documentation": "Creates or updates a rollout.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName",
      "responses": [
        {
          "uuid": "dcd01d2a-5cd0-4bb3-bae0-f7aa9d00677d",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "This is a long running operation. The operation returns a 201 if the request was successfully registered and basic validation is successful. The response includes an Azure-AsyncOperation header that contains the operation status URL. Clients are expected to poll the status URL for the status of the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Azure-AsyncOperation",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "590d4984-9147-481e-b69e-750e8fb0387c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8787aabd-f506-47d7-9782-76d81918074d",
      "documentation": "Stops a running rollout.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName/cancel",
      "responses": [
        {
          "uuid": "9f5b4092-4c4d-4a11-9066-fc6b4b71f1f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac9e00e8-0ddf-4186-9500-15206a6ea414",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88e460f8-4f2f-4289-bf54-0fb909728f80",
      "documentation": "Restarts a failed rollout and optionally skips all succeeded steps.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/rollouts/:rolloutName/restart",
      "responses": [
        {
          "uuid": "272c3c00-426e-4b72-9172-a1a44ae09ee5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60e5a481-5836-40fd-bfb7-8a1cea6d6c19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73317453-3557-4f7f-8290-31fda80a86f7",
      "documentation": "Lists the service topologies in the resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies",
      "responses": [
        {
          "uuid": "168a0047-7ab3-4280-87b8-f72b743194ba",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9380c531-97e6-4c5f-ad39-818e4d2b81b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b0b12a2-801c-4446-82ef-55eeb631a296",
      "documentation": "Deletes the service topology.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "a9becfa3-fb9e-4ebf-b180-a6275d03e15a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The topology was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "659b6814-13ae-4623-9362-648bdb06b79b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The topology was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d34a0b2-612e-4e79-9460-e203ded474d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "def75fdf-ebd2-4543-8221-549cc0a5326d",
      "documentation": "Gets the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "a2e49ae1-5397-49b5-8df6-0465c7f5ff6b",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "911cf632-7288-498c-a03f-b8761ad9da17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ec5e167-e2d7-465c-8540-ded45cd3c633",
      "documentation": "Creates or updates a service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName",
      "responses": [
        {
          "uuid": "0baca9c6-f18c-43a1-b84f-15d8d9e5e58b",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ac8ed89-46aa-45fe-ab72-2bedcb64ebf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard Error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9362364-4923-4009-a457-2446c322a251",
      "documentation": "Lists the services in the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services",
      "responses": [
        {
          "uuid": "9931a624-d912-4638-bc37-76d6d3551019",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d11581c3-4900-4cff-b234-3d73524d7954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1aefe22c-e4e3-4b3f-ac2e-cea2bdb99a92",
      "documentation": "Deletes the service.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "726dfe93-d6f6-4353-991a-e4c01fd8fcf3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8d7bae6-74dd-4b9a-b719-86c1c180045a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The service was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "878101da-6c37-46cb-bead-e25627f6be96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f8a92bd-60f8-4459-b913-1484f4432f53",
      "documentation": "Gets the service.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "ff44ae10-70d6-4176-a1d7-8c261660c50e",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "289a2505-018b-49c6-b24a-fa8391e6fa3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "483b4df1-5782-4752-8d90-4bc0f7471225",
      "documentation": "Creates or updates a service in the service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName",
      "responses": [
        {
          "uuid": "3530973f-3291-428c-bb2f-579cb5f2cb2c",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b86b7e57-27ac-4ff9-a315-57fa826bb347",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c633c209-e88e-4ad8-a976-2b9c08a44da5",
      "documentation": "Lists the service units under a service in the service topology.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits",
      "responses": [
        {
          "uuid": "a468d459-691a-433a-97f5-3bc1cf27351b",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b74feb50-4536-47dd-b20e-4e76fb3d270a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65ad4f75-d14b-47e9-ba3d-8e31c89b18e4",
      "documentation": "Deletes the service unit.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "f314cadc-6dcd-4cad-bd52-694b12a5fd1b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The service unit was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee6af340-d5e4-4ebc-bec4-177390245de4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The service unit was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2baf7702-c075-4215-891b-1832c22f77cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70696e8a-cb0e-49f4-a1bf-5c96a0679d37",
      "documentation": "Gets the service unit.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "9e7fbb30-a424-4861-b86d-2c6e39181454",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b68a0577-fd92-4f7d-952c-056515b3615a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "859c1686-1d17-41c6-9982-61155350b8cf",
      "documentation": "Creates or updates a service unit under the service in the service topology.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/serviceTopologies/:serviceTopologyName/services/:serviceName/serviceUnits/:serviceUnitName",
      "responses": [
        {
          "uuid": "b65102db-5ad2-4bc9-9e6f-a491b724fe17",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Azure-AsyncOperation",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3828a31-c6cc-45f5-aeb9-d3f1f9fb1cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c818c098-800c-4be1-a22d-e43c9f05d085",
      "documentation": "Lists the steps in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps",
      "responses": [
        {
          "uuid": "aca3dcd4-ff13-4159-96fa-b10008fa00c5",
          "body": "[\n  {\n    \"location\": \"\",\n    \"tags\": {}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81bd2d61-06b9-4fd5-b6df-e856c134e361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9182e212-2d44-4dfb-9ef2-10ca2aed6fb5",
      "documentation": "Deletes the step.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "f10bd33b-e531-4eb6-ac8d-f0d314ba95fb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The step was successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7fead57-8ade-48cc-8410-2a929ecb1085",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The step was not found and the operation is considered success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2369654b-f82f-4d21-8c8b-2c3e192cc5f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b7566cc-3b15-40b9-a9e6-37c9e1347ecc",
      "documentation": "Gets the step.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "cc501075-4e8e-495b-a5d9-f79b43dc6207",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b75ea00b-6200-4b7c-b774-cc3e79c04846",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82d10c91-8c0a-4381-9c84-a4ff4c617b0d",
      "documentation": "Creates or updates a rollout step with the given step properties.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DeploymentManager/steps/:stepName",
      "responses": [
        {
          "uuid": "330f79f6-1ec3-44ae-977c-657eaf97d59f",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13573195-2fbe-4228-a2a0-3ccce2961f62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "All non-success conditions are handled using the standard error contract.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}