{
  "uuid": "50aaa468-2c1c-4f4f-a9d6-ba24b4197dbe",
  "lastMigration": 19,
  "name": "MediaServicesManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d2355fc6-3018-4331-995f-ea83089d9382",
      "documentation": "Lists all of the available Media Services REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.Media/operations",
      "responses": [
        {
          "uuid": "6b7046b0-78a1-452c-b742-380d37ac9a62",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns a list of operations.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fff8ee22-ab4e-4883-8784-60eb6f8fda01",
      "documentation": "Checks whether the Media Service resource name is available. The name must be globally unique.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Media/CheckNameAvailability",
      "responses": [
        {
          "uuid": "b0b7015f-622a-4fe0-9f96-b30279fa8d90",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"{{oneOf (array 'None' 'Invalid' 'AlreadyExists')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns details about whether a Media Service resource name is available.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aa5a4a8-f580-4303-855c-c7c647a8f942",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "CheckNameAvailability of a Media Service failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67d138ff-e15b-4e0f-aad5-948cd41c919c",
      "documentation": "Lists all of the Media Services in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices",
      "responses": [
        {
          "uuid": "4d7f0c8c-bb69-4207-a891-75996b25eb53",
          "body": "{\n  \"value\": [\n    {\n      \"location\": \"West US\",\n      \"properties\": {\n        \"storageAccounts\": [\n          {\n            \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n            \"isPrimary\": true\n          }\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns a list of all of the Media Services accounts in a resource group.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1804e36-0677-41f0-a618-7d0c5e5d98f3",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00c83a7f-16b1-43d3-a9da-e7949b821d92",
      "documentation": "Deletes a Media Service.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "b7aaa01b-d6a2-49c5-8895-c9a8ae1c1659",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services account was deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b5be072-bda3-4153-8c4f-fa9ba40fadfd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content. The account name does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17404055-e3b7-4415-b8dd-45a8496950c1",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8299ca7-c011-40d9-8585-e5cdeb92575b",
      "documentation": "Gets a Media Service.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "3e1926ef-b517-48ed-a643-287f656f9e73",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. Returns the details of the Media Services account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73b428ac-840f-4e75-8b4c-33f9cd6addae",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Get Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7f8667f-9ee5-42eb-9e11-9411f0a41b2e",
      "documentation": "Updates a Media Service.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "f729d85e-595f-47dc-ad43-d71b0a7f326f",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services account was updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e14c7b96-8825-4b70-a6f1-f19261976591",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f203e38-3912-4aec-9799-9df66589ce80",
      "documentation": "Creates a Media Service.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName",
      "responses": [
        {
          "uuid": "0eb27395-a23b-443d-a0fa-8e9a42b25eff",
          "body": "{\n  \"location\": \"West US\",\n  \"properties\": {\n    \"storageAccounts\": [\n      {\n        \"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success. Returns the new Media Services account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed869d47-e862-4f2f-82d5-6ca5bd1a1c62",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Create Media Services failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "794943a8-9904-4b34-a2a1-b06eb211fc6e",
      "documentation": "Lists the keys for a Media Service.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/listKeys",
      "responses": [
        {
          "uuid": "62127541-b4d9-4fa5-8161-2714268cf402",
          "body": "{\n  \"primaryAuthEndpoint\": \"https://wamsprodglobal001acs.accesscontrol.windows.net/\",\n  \"primaryKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\",\n  \"scope\": \"urn:windowsazuremediaservices\",\n  \"secondaryAuthEndpoint\": \"https://wamsprodglobal002acs.accesscontrol.windows.net/\",\n  \"secondaryKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The keys for the Media Services account were listed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1caf5908-cb23-43e9-94dd-2314d7aed924",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List Media Service keys failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13c119c7-c034-4889-8e1b-eb189d66b34e",
      "documentation": "Regenerates a primary or secondary key for a Media Service.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/regenerateKey",
      "responses": [
        {
          "uuid": "5f67fe7a-b570-4367-8885-1dbb6849e9ac",
          "body": "{\n  \"key\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The Media Services key specified in the input was regenerated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d2aa181-65b2-4465-8e46-ee8d63bd2e1f",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Regenerate Media Service key failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "388d8c15-d306-4f5f-8f0e-d9a55d47b777",
      "documentation": "Synchronizes storage account keys for a storage account associated with the Media Service account.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:mediaServiceName/syncStorageKeys",
      "responses": [
        {
          "uuid": "2f5b781b-6042-4060-9cc1-978bf147b1e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success. The keys for the storage account were synchronized.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "937c5628-8b76-4998-99a1-5e5d1b832937",
          "body": "{\n  \"error\": {\n    \"code\": \"BadRequest\",\n    \"message\": \"Name availability check is not supported for type Microsoft.Media/mediaservices.\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Synch Media Service storage keys failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}