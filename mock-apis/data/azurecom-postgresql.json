{
  "uuid": "c44906d9-b791-4181-924f-64c501d0e54e",
  "lastMigration": 19,
  "name": "PostgreSQLManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "06865e7f-e5e8-446a-89a6-764ec14c142e",
      "documentation": "Lists all of the available REST API operations.",
      "method": "get",
      "endpoint": "providers/Microsoft.DBforPostgreSQL/operations",
      "responses": [
        {
          "uuid": "eaf38ea6-0df2-436f-a5a5-5dabe4d84b96",
          "body": "{\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\",\n      \"origin\": \"{{oneOf (array 'NotSpecified' 'user' 'system')}}\",\n      \"properties\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1b23d1e-c8c2-4268-8d36-fb9d067f7fa4",
      "documentation": "Check the availability of name for resource",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DBforPostgreSQL/checkNameAvailability",
      "responses": [
        {
          "uuid": "bcc02748-5cf6-459c-9cf6-dcf821157b10",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53ef24b3-152e-498e-906c-d2ce44fd99c3",
      "documentation": "List all the performance tiers at specified location in a given subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DBforPostgreSQL/locations/:locationName/performanceTiers",
      "responses": [
        {
          "uuid": "01136d34-f583-4148-b414-b816690cd41e",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"serviceLevelObjectives\": [\n        {\n          \"edition\": \"\",\n          \"hardwareGeneration\": \"\",\n          \"id\": \"\",\n          \"maxBackupRetentionDays\": {{faker 'random.number'}},\n          \"maxStorageMB\": {{faker 'random.number'}},\n          \"minBackupRetentionDays\": {{faker 'random.number'}},\n          \"minStorageMB\": {{faker 'random.number'}},\n          \"vCore\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82db0238-5dbc-4e69-9a93-0f85fe598946",
      "documentation": "List all the servers in a given subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.DBforPostgreSQL/servers",
      "responses": [
        {
          "uuid": "d78480fd-9d31-4d7a-9b59-6ea09b6166cd",
          "body": "{\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca8ee7d6-2a42-4f62-a6d7-d8fee2d21a1d",
      "documentation": "List all the servers in a given resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers",
      "responses": [
        {
          "uuid": "8196546d-aa7b-4741-97a9-dfeb39828a77",
          "body": "{\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa83543e-83b3-4821-9f35-561c6c96614c",
      "documentation": "Deletes a server.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName",
      "responses": [
        {
          "uuid": "a6585221-c453-41ce-94a6-697b39e14015",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54e6b2a9-797f-4f3e-acd2-7001c9b3a865",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37ab1f3b-ec08-49ed-b019-ea4a688830f8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "NoContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec3a021b-48f2-49e2-bf82-680b06a2aa55",
      "documentation": "Gets information about a server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName",
      "responses": [
        {
          "uuid": "241f9e0c-5303-402b-a8e3-d459e0e24fae",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a927b1d-3734-43df-b9a9-7c37db3165df",
      "documentation": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName",
      "responses": [
        {
          "uuid": "07ecc342-c8e1-4819-a2db-5e047e252ee4",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb7cc912-30d2-4a2c-b5da-131863827f51",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f668443-c411-4f29-8e2c-2a725468b094",
      "documentation": "Creates a new server, or will overwrite an existing server.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName",
      "responses": [
        {
          "uuid": "ba77d8e0-d99d-43d1-8637-16d82131d343",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "754eca58-1998-4679-8c34-fe905896a2b3",
          "body": "{\n  \"location\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75cdb80c-fc85-4802-a452-66f3f713d2e3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5dbe116-bd00-457b-941c-42f7f2bec22a",
      "documentation": "Deletes AAD Administrator.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/Administrators/activeDirectory",
      "responses": [
        {
          "uuid": "ff51784b-b57b-497c-9227-c3332c0ef33a",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e15e0525-fd0f-4a77-9288-30403d457115",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d15624b-b880-48f4-b961-54d2785b2c79",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 204,
          "label": "NoContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54bd75c4-952b-4539-ac4e-f8d05d2816a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c7dcbbf-9354-45dc-a7c7-23b07049109d",
      "documentation": "Gets information about a AAD server administrator.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/Administrators/activeDirectory",
      "responses": [
        {
          "uuid": "b2afffc7-3e42-45dc-af67-51a869dd49e5",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7066518e-6f0f-4e89-b510-ee498eecdbb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d99cb2cb-725c-431f-aaa4-96788ffd46bc",
      "documentation": "Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/Administrators/activeDirectory",
      "responses": [
        {
          "uuid": "0c96725b-020e-44e6-8490-dd25cbd4c799",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecef13eb-5758-4b6c-b747-a34324a6e0f4",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf373e8d-ddeb-4a74-99eb-2409c5b4b8fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4037f58e-95dc-4fcd-9965-3e80c7aaf6b8",
      "documentation": "List all the replicas for a given server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/Replicas",
      "responses": [
        {
          "uuid": "e3474713-7006-42d7-a22c-f1ce8e864b8a",
          "body": "{\n  \"value\": [\n    {\n      \"location\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4f6e133-8cfe-42ab-9560-ed6f22ba5d82",
      "documentation": "Returns a list of server Administrators.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/administrators",
      "responses": [
        {
          "uuid": "ff65a56d-1a2c-402c-b132-de1279a52861",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec95ebad-3c08-4901-a7a1-c7620e138be1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44e4b549-46ed-477b-9f0c-90d207648d19",
      "documentation": "List all the configurations in a given server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/configurations",
      "responses": [
        {
          "uuid": "e018e350-6d16-44cd-bb02-95d2aa3bcc47",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fcf70a8-fa65-4c77-9f24-5e01313b2d13",
      "documentation": "Gets information about a configuration of server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/configurations/:configurationName",
      "responses": [
        {
          "uuid": "5ed72a8a-02de-4acf-8fff-53b63dfb898f",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ad732ab-67f2-4f35-b8ac-03e0c636c45a",
      "documentation": "Updates a configuration of a server.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/configurations/:configurationName",
      "responses": [
        {
          "uuid": "7762ed2e-5359-4437-9186-c61b7af2153d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f02e8bf4-e389-472d-91d0-3def5bc6f885",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e47c099a-f5d4-42ba-b505-6ce598838a1f",
      "documentation": "List all the databases in a given server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/databases",
      "responses": [
        {
          "uuid": "8cce6bd3-1648-4bf0-af80-37e6a7b92c63",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84c50680-0e08-42f2-b19c-4eabaf25f966",
      "documentation": "Deletes a database.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/databases/:databaseName",
      "responses": [
        {
          "uuid": "109bb8ae-d3af-405e-b429-b5804aaf9c20",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e4dfe15-5187-498f-901d-24c4bd786b98",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a6ccaca-64d1-441a-8cb3-5f2c39d9b56c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "NoContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a1580d6-0089-47f0-857d-83cd4efed279",
      "documentation": "Gets information about a database.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/databases/:databaseName",
      "responses": [
        {
          "uuid": "dca0e3b6-d123-4f53-a176-681ab1188406",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b577c725-42c0-4a86-be28-71cff5a6c94e",
      "documentation": "Creates a new database or updates an existing database.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/databases/:databaseName",
      "responses": [
        {
          "uuid": "fc04acac-1fa1-4c19-8913-84d451df8c7c",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "053fd23a-f7bb-4e07-af39-e347af9d8e4c",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfa45056-4c7d-4885-b390-c2b08eefe149",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6dc2a7c4-3ca9-4d2b-ba80-3f5db755a21f",
      "documentation": "List all the firewall rules in a given server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/firewallRules",
      "responses": [
        {
          "uuid": "a285d586-dc2a-4cab-ac33-3369c376c423",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6793f30-56e0-4eed-9b31-1035174f93ff",
      "documentation": "Deletes a server firewall rule.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "a27cdfbf-d965-4eb0-bac1-41fba725d597",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "642b8fe6-02f5-4ee9-918e-b4cd28c384db",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c60fe78-506d-4232-8808-404e5588a6ef",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "NoContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62815e36-4552-43df-b51c-03caf984c76d",
      "documentation": "Gets information about a server firewall rule.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "cd60595b-eae2-49db-ab4c-3f52aab55a99",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d474a444-704b-4cc5-805b-d579067f50cf",
      "documentation": "Creates a new firewall rule or updates an existing firewall rule.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/firewallRules/:firewallRuleName",
      "responses": [
        {
          "uuid": "f5a7ff13-51e5-4927-b8ea-6e93fb1bf027",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faeafea7-e940-4b17-a6b3-f04a7f61e90d",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "856a198a-08ff-4e67-bd92-8e9b7167570c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a06e648a-56fd-4bf3-9c83-a193bba637f6",
      "documentation": "List all the log files in a given server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/logFiles",
      "responses": [
        {
          "uuid": "768c53f9-ba08-420f-a326-8b8a7b57bc4d",
          "body": "{\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83ca24b8-79a9-4701-af8e-d489a82fafcc",
      "documentation": "Restarts a server.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/restart",
      "responses": [
        {
          "uuid": "fcf83c51-804a-413e-a190-1660eee9bffb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26cc82a7-ac21-4660-aebf-274783f5e85c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "026a0aff-e45c-4ba0-bfcb-5b34cd206c18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "984bc21d-5223-4755-b77a-d6f0cd74fae7",
      "documentation": "Get a server's security alert policy.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/securityAlertPolicies/:securityAlertPolicyName",
      "responses": [
        {
          "uuid": "cb75e589-b36c-4bf1-92db-8f5e0c5b0bd6",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the server threat detection policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34b29f34-9553-4cbe-a449-946aa67bc08f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation of getting security alert policies failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d52daa55-71f0-432e-b5fd-31d96ffbb95f",
      "documentation": "Creates or updates a threat detection policy.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/securityAlertPolicies/:securityAlertPolicyName",
      "responses": [
        {
          "uuid": "74d405bc-e461-44ae-b058-25e17795c6fd",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the threat detection policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b6f98c-fb65-4b49-b6e0-26941ae1790c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Created request to set the server threat detection policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe929fd2-d239-46a0-8ad3-088ed67d155f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation of setting security alert policies failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a008823a-e546-4172-9ddf-c6f3858af383",
      "documentation": "Gets a list of virtual network rules in a server.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/virtualNetworkRules",
      "responses": [
        {
          "uuid": "7ffdc2bd-9dc3-4bf5-a8d5-1e45431fdb9d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved the list of virtual network rules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "652f468c-0214-4314-bac0-1f32a3fe7e52",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a71bc04-afa7-4348-ad8b-eed4eb5d405c",
      "documentation": "Deletes the virtual network rule with the given name.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "a5ba26f6-a816-4cdf-a254-7ca206425e30",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully deleted the virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "925ffdff-d525-4071-9155-f6920f490eb9",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1add462-f140-43fe-a85c-0698a32677d3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The specified virtual network rule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a6deb82-3491-4153-b4de-dd6627163d6c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7686a9c-26e8-4ccc-9107-4c17af1a8b8c",
      "documentation": "Gets a virtual network rule.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "b4a1ff44-748e-4a1e-83bd-125677ddf7a8",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully retrieved a specified virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f151457-ce66-418c-8a5b-cc8c5185de84",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "874a5ec2-280c-4109-a2eb-daa2736e98df",
      "documentation": "Creates or updates an existing virtual network rule.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.DBforPostgreSQL/servers/:serverName/virtualNetworkRules/:virtualNetworkRuleName",
      "responses": [
        {
          "uuid": "bbe05a17-3b93-4978-8af2-3f424bf54efa",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated a virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38a44705-c22c-4780-b8dc-c572f0f6a47c",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully created a virtual network rule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "257913ed-0750-478f-882a-055396267f6a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d9f84ae-79ad-4a63-826c-118c6dcc41cf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}