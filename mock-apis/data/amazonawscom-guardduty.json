{
  "uuid": "6dd10dbe-28d5-47ee-a1b4-0012acf04268",
  "lastMigration": 19,
  "name": "Amazon GuardDuty",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b126abe0-56cd-424f-a9ee-c62803794fe5",
      "documentation": "Accepts the invitation to be monitored by a GuardDuty administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/master",
      "responses": [
        {
          "uuid": "bf748618-7d12-4d9e-9594-cae00b16dd1f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcad0843-e10d-478d-a0e4-ef724ec6230a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61bc604b-4b4f-402e-a307-cc33c38bfd0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1b88e87-a6af-42ec-9a2b-22d6ffa18c6a",
      "documentation": "Provides the details for the GuardDuty administrator account associated with the current GuardDuty member account.",
      "method": "get",
      "endpoint": "detector/:detectorId/master",
      "responses": [
        {
          "uuid": "e63fdf78-6f0d-42ea-b998-8234369ed6e4",
          "body": "{\n  \"Master\": {\n    \"AccountId\": \"\",\n    \"InvitationId\": \"\",\n    \"RelationshipStatus\": \"\",\n    \"InvitedAt\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a02715-0a75-4861-9d47-a4f15f7af8e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb50194c-9141-45ee-add5-df84e2d1f1bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d510383d-8f6b-4918-8b2f-0519b1d9eb54",
      "documentation": "<p>Archives GuardDuty findings that are specified by the list of finding IDs.</p> <note> <p>Only the administrator account can archive findings. Member accounts don't have permission to archive findings from their accounts.</p> </note>",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/archive",
      "responses": [
        {
          "uuid": "d7543d70-c50b-4d6e-a6fa-ff9227e77e84",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "126bdf15-f19e-4865-81dc-68fb190d09a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c243354d-ab23-412c-8dd1-511e1579f5a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe38d31b-69c2-4548-82f9-fabe28813ba7",
      "documentation": "Creates a single Amazon GuardDuty detector. A detector is a resource that represents the GuardDuty service. To start using GuardDuty, you must create a detector in each Region where you enable the service. You can have only one detector per account per Region. All data sources are enabled in a new detector by default.",
      "method": "post",
      "endpoint": "detector",
      "responses": [
        {
          "uuid": "56443fdf-f0fc-40d3-aa0d-6bfbafab3ab7",
          "body": "{\n  \"DetectorId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b024f9b4-33a3-47e2-9ffb-6aece245775c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "978e315b-a34a-491a-bdb3-eaf5a4ecc34a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0086927f-7efa-405a-ba9f-7eecee5ec92f",
      "documentation": "Lists detectorIds of all the existing Amazon GuardDuty detector resources.",
      "method": "get",
      "endpoint": "detector",
      "responses": [
        {
          "uuid": "ca04d743-817b-4233-b811-5a89eb0b53b1",
          "body": "{\n  \"DetectorIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1eeed7c-4cc9-4022-ae96-f0d37943acbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba2fa53d-72e8-4862-b426-1a6d6ca886ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69b34600-003c-4d59-8133-34223e9a1a2b",
      "documentation": "Creates a filter using the specified finding criteria.",
      "method": "post",
      "endpoint": "detector/:detectorId/filter",
      "responses": [
        {
          "uuid": "2a8501bf-99cd-4625-b44c-6f4e25a566a3",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f30736a-f6ca-4b88-9b2d-9c802b9024c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b72cb89-db99-4c67-86c0-d130a157b4c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d11e77b5-a636-4d51-9f34-43f3daef212b",
      "documentation": "Returns a paginated list of the current filters.",
      "method": "get",
      "endpoint": "detector/:detectorId/filter",
      "responses": [
        {
          "uuid": "fb57708e-43b4-4870-89a2-d71966825880",
          "body": "{\n  \"FilterNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77db17c7-e179-4264-832a-c8437a7fa08e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9907861a-8ec7-483a-b0e8-45fdb806b0ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "292bebcb-6a92-4cbd-b78a-80de9c188d4f",
      "documentation": "Creates a new IPSet, which is called a trusted IP list in the console user interface. An IPSet is a list of IP addresses that are trusted for secure communication with AWS infrastructure and applications. GuardDuty doesn't generate findings for IP addresses that are included in IPSets. Only users from the administrator account can use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/ipset",
      "responses": [
        {
          "uuid": "7c378ea1-5759-4275-ae7c-e06064c62153",
          "body": "{\n  \"IpSetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3364647-dc86-4b2a-9b78-155dafc48a5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a15c8dc-e0d5-4550-96ec-2457e256ebfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fea6f905-97af-4419-9288-2da8edcf583b",
      "documentation": "Lists the IPSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the IPSets returned are the IPSets from the associated administrator account.",
      "method": "get",
      "endpoint": "detector/:detectorId/ipset",
      "responses": [
        {
          "uuid": "62dd3634-b90c-43b0-9967-8ec3c6ec79a0",
          "body": "{\n  \"IpSetIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "497ce4f6-a400-41de-a837-38add49ca841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff7dec3a-087f-4f82-b469-2ae32fc19604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8735b16d-4dbc-4c83-bb21-6971f7e61beb",
      "documentation": "<p>Creates member accounts of the current AWS account by specifying a list of AWS account IDs. This step is a prerequisite for managing the associated member accounts either by invitation or through an organization.</p> <p>When using <code>Create Members</code> as an organizations delegated administrator this action will enable GuardDuty in the added member accounts, with the exception of the organization delegated administrator account, which must enable GuardDuty prior to being added as a member.</p> <p>If you are adding accounts by invitation use this action after GuardDuty has been enabled in potential member accounts and before using <a href=\"https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html\"> <code>Invite Members</code> </a>.</p>",
      "method": "post",
      "endpoint": "detector/:detectorId/member",
      "responses": [
        {
          "uuid": "f4360cd3-0215-4da2-a199-7b06129c42d6",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8276b7e5-ce77-4f08-8da6-5c49ae3f277e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15275b4a-b654-470a-a99b-97899475ffed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23a9ef47-b948-42f1-a626-4a493c3afb7f",
      "documentation": "Lists details about all member accounts for the current GuardDuty administrator account.",
      "method": "get",
      "endpoint": "detector/:detectorId/member",
      "responses": [
        {
          "uuid": "8c5a4fb7-e163-4253-ba5f-21a57c529343",
          "body": "{\n  \"Members\": [\n    {\n      \"AccountId\": \"\",\n      \"DetectorId\": \"\",\n      \"MasterId\": \"\",\n      \"Email\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a96f987e-4870-4162-9d96-5cd20c70bb13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34b1d6f-d766-4f5a-840b-344944a69383",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4080249a-9673-44b6-916a-cd9429e17df4",
      "documentation": "Creates a publishing destination to export findings to. The resource to export findings to must exist before you use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/publishingDestination",
      "responses": [
        {
          "uuid": "b5bb7bcb-e365-4e51-a77d-f455bc9de8e4",
          "body": "{\n  \"DestinationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16ece4c2-6646-48ba-9120-205151a9ca56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb399538-d24d-4c9e-bc5e-20407b3b4983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73785b4e-e214-487d-bc2c-7f87c0700306",
      "documentation": "Returns a list of publishing destinations associated with the specified <code>dectectorId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/publishingDestination",
      "responses": [
        {
          "uuid": "d1e556da-2c17-487d-9ecf-3cb8208dcf0f",
          "body": "{\n  \"Destinations\": [\n    {\n      \"DestinationId\": \"\",\n      \"DestinationType\": \"\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79dbf840-98e0-4af9-9a6a-20c5239101cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fe0cbf4-0b74-42d8-b09d-cb46ac184b6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0960f44-6af8-44ca-bbd9-d2063006e025",
      "documentation": "Generates example findings of types specified by the list of finding types. If 'NULL' is specified for <code>findingTypes</code>, the API generates example findings of all supported finding types.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/create",
      "responses": [
        {
          "uuid": "188e2f63-8ef7-4c42-bd18-f24957fc5157",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f88ffdd5-12a2-486b-bfd1-4df88bf1cd22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "342a633b-ada9-4fa0-8376-2820427ad2be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72d30b0f-764d-4678-b5f2-1581df58dc4c",
      "documentation": "Creates a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets. Only users of the administrator account can use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/threatintelset",
      "responses": [
        {
          "uuid": "8ce97a66-3a5a-4a28-986b-6ff033a8ab21",
          "body": "{\n  \"ThreatIntelSetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c49eacd-f41f-4291-98bf-2359f4928e99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edb906af-0c4a-449d-a218-782630562724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e439784e-45a4-43bb-995b-79895215bba4",
      "documentation": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the ThreatIntelSets associated with the administrator account are returned.",
      "method": "get",
      "endpoint": "detector/:detectorId/threatintelset",
      "responses": [
        {
          "uuid": "ec462c28-7401-4063-b598-7d98d6b34057",
          "body": "{\n  \"ThreatIntelSetIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec17b27-5b55-4db9-9c42-52b11f4a26e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9952e659-c14d-4f8c-88e5-b8baa68a863a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d25546c-7325-4778-8534-825071f623e3",
      "documentation": "Declines invitations sent to the current member account by AWS accounts specified by their account IDs.",
      "method": "post",
      "endpoint": "invitation/decline",
      "responses": [
        {
          "uuid": "a0af3ee0-84f7-4a0f-bbd2-f3f15caf3f89",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80c449c6-e3f3-4d74-97ca-a343b8aa3903",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df7d3715-eaf5-417f-b176-b7f05795c58e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "259fff63-711a-475a-88e6-50e2855eda66",
      "documentation": "Deletes an Amazon GuardDuty detector that is specified by the detector ID.",
      "method": "delete",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "a2ecbf55-6202-46d2-938c-a2948cd173e7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48b42bff-6a2a-4dca-8689-f46736b1fc26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7ea2c2f-de20-4591-843c-79b2edf56ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de0afe12-854f-4614-9356-cf146e69a26c",
      "documentation": "Retrieves an Amazon GuardDuty detector specified by the detectorId.",
      "method": "get",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "0ecfc756-ecb6-4ab7-a173-f10df75445ab",
          "body": "{\n  \"CreatedAt\": \"\",\n  \"FindingPublishingFrequency\": \"\",\n  \"ServiceRole\": \"\",\n  \"Status\": \"\",\n  \"UpdatedAt\": \"\",\n  \"DataSources\": {\n    \"CloudTrail\": {\n      \"Status\": \"\"\n    },\n    \"DNSLogs\": {\n      \"Status\": \"\"\n    },\n    \"FlowLogs\": {\n      \"Status\": \"\"\n    },\n    \"S3Logs\": {\n      \"Status\": \"\"\n    }\n  },\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d47215d-b893-4da4-a512-9e15268042c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbc2a1ae-04fa-44db-916b-4b621b3260e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1c65d7f-1034-46c0-a01c-a23c9b096eca",
      "documentation": "Updates the Amazon GuardDuty detector specified by the detectorId.",
      "method": "post",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "b0aee2b8-4a76-418c-a4c7-9cdd116d0b47",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a21745d4-3f51-473b-a8d1-717d69ddaaad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e6caa2-08da-424f-8dee-3bc360f934a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19218df6-4051-42cd-bfc5-d6c272c67254",
      "documentation": "Deletes the filter specified by the filter name.",
      "method": "delete",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "d3430767-8480-418a-80f3-6418a93b6ea5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "992a8d52-8036-49cd-af40-43f8c9fd36dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9ce56cf-2469-454a-8290-0436e1224a57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3feb23f4-17f9-4bd7-81fb-da140c2d9298",
      "documentation": "Returns the details of the filter specified by the filter name.",
      "method": "get",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "e5e7e5eb-ff2c-424e-ab77-6ea158a42932",
          "body": "{\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"Action\": \"\",\n  \"Rank\": {{faker 'random.number'}},\n  \"FindingCriteria\": {\n    \"Criterion\": {}\n  },\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca3d3e09-2693-4b41-9f05-bc224fe2f07f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f285559-ee60-4953-bfc5-99b86790f6c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd49be2a-3231-4552-a2b9-2fe2983c0d01",
      "documentation": "Updates the filter specified by the filter name.",
      "method": "post",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "cf479ac8-c127-47f9-a947-af58724361ad",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0946d5dc-ae7c-45a2-9e84-e3f611721f0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60861740-3a3b-4f1d-aff1-2f426d5d1cb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e1be6bf-7af1-46d4-b05e-682fde20e4fc",
      "documentation": "Deletes the IPSet specified by the <code>ipSetId</code>. IPSets are called trusted IP lists in the console user interface.",
      "method": "delete",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "1fad82f2-41a1-48e5-a4e1-9cafa5cf64e0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28d4f496-ab03-432a-9fd6-3d0ee0623322",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3617a0d-a922-4166-9d8a-85fe4f1a36da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dacbcff4-6dd1-4bc4-8844-8113c3714a10",
      "documentation": "Retrieves the IPSet specified by the <code>ipSetId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "1743b616-f816-4708-abe2-80d5972beb60",
          "body": "{\n  \"Name\": \"\",\n  \"Format\": \"\",\n  \"Location\": \"\",\n  \"Status\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5455b2b-e1b1-4064-836c-3a7948a9f058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86ca2249-75b2-4fc1-9038-f3af9835422a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed40f3e3-3e48-4665-92a2-95428f0c638e",
      "documentation": "Updates the IPSet specified by the IPSet ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "c854650a-c7fd-489e-befa-5bbd4c7a89e7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51038baf-f7db-4aa3-8d46-74d7643d8574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64cfb9a0-5069-4ed5-a5e1-7483887dfa52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de830836-e839-43e9-b2cb-494943e94dbb",
      "documentation": "Deletes invitations sent to the current member account by AWS accounts specified by their account IDs.",
      "method": "post",
      "endpoint": "invitation/delete",
      "responses": [
        {
          "uuid": "f855aa18-482b-4861-bf9a-236cbc022c38",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d6d48c0-24e3-401c-b03c-9d1b51fb5d18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db379108-2661-40c9-b770-2a3128623ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee33e7cd-8162-4c2f-986c-967ef2565e86",
      "documentation": "Deletes GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/delete",
      "responses": [
        {
          "uuid": "a8695f35-0c70-44fb-95ee-08205d19e54a",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c14f457d-46b6-44d4-8e69-fff892da37e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "141db1fb-82d7-4861-9dd1-adcbc80197ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13724636-6377-434c-a011-8841793d6de3",
      "documentation": "Deletes the publishing definition with the specified <code>destinationId</code>.",
      "method": "delete",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "1e82b22c-5662-4621-9761-62d9a5044e54",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c07645f5-a092-421c-88d7-bb58f368c351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8121f181-289c-4f93-a5b5-096387165976",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a121add9-74ef-453b-bb22-6cd5f4e8547a",
      "documentation": "Returns information about the publishing destination specified by the provided <code>destinationId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "36bcd243-b31e-4931-b9ae-e4ef91b6b76f",
          "body": "{\n  \"DestinationId\": \"\",\n  \"DestinationType\": \"\",\n  \"Status\": \"\",\n  \"PublishingFailureStartTimestamp\": {{faker 'random.number'}},\n  \"DestinationProperties\": {\n    \"DestinationArn\": \"\",\n    \"KmsKeyArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10482568-c2f9-43a3-a234-de508b0dc1e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0d3fd02-2e2a-42f6-939c-b4d6c32eb5f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d63f8dc-9154-4135-8bde-b64f66d4cd5f",
      "documentation": "Updates information about the publishing destination specified by the <code>destinationId</code>.",
      "method": "post",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "e9b00309-c9d9-4b5e-8f26-7736dfedeec6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66431f23-ce38-4a2e-abed-d9257d6d28f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "928c156b-6e62-467c-bd6d-ad2452b8047f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f737e415-7aac-43cc-8ae8-ac1843496695",
      "documentation": "Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.",
      "method": "delete",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "d7ff7062-2c58-4ad0-a70f-5afa868de098",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaec9471-6fe2-4869-b7c0-781c80b5ee6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "281f3475-a9e5-4c9d-931f-3df258135ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "538dca5d-355c-4c92-a1a7-2f195f19aa14",
      "documentation": "Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.",
      "method": "get",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "bfc09198-4bc1-43b2-a4cd-98d98324918f",
          "body": "{\n  \"Name\": \"\",\n  \"Format\": \"\",\n  \"Location\": \"\",\n  \"Status\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d68f2f6-5691-4cbd-bcbf-5b063596bd92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "527869c8-ce23-4c4f-882e-0dd99424552d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92970dcc-8146-4498-995a-97cb41efeec8",
      "documentation": "Updates the ThreatIntelSet specified by the ThreatIntelSet ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "a42f3926-a683-445f-9d0b-9af8392d2b29",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd349bc9-c43f-4c1b-b5ba-2c7404483b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e8a78a3-71bc-4747-8a0c-83e0b6daa475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96510cfc-54d4-4a48-bca0-38551c8f852c",
      "documentation": "Returns information about the account selected as the delegated administrator for GuardDuty.",
      "method": "get",
      "endpoint": "detector/:detectorId/admin",
      "responses": [
        {
          "uuid": "557a2194-c0c1-4f63-8e5c-d58847aa5f42",
          "body": "{\n  \"AutoEnable\": {{faker 'random.boolean'}},\n  \"MemberAccountLimitReached\": {{faker 'random.boolean'}},\n  \"DataSources\": {\n    \"S3Logs\": {\n      \"AutoEnable\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c80dfa1-5a09-4969-8922-a22426514d57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c372394b-6f2c-4b66-9950-e8b0ad79c7b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36a9f1c2-1a1d-4949-85d9-f139755d5596",
      "documentation": "Updates the delegated administrator account with the values provided.",
      "method": "post",
      "endpoint": "detector/:detectorId/admin",
      "responses": [
        {
          "uuid": "8b3728af-a676-4e00-a633-6f9cbc68fc05",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99fd037b-161c-4b7e-8af6-9bc290e906fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c8fd526-5124-4664-82b4-e044bdf955a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7761eb7d-0487-4d68-b717-4aeb0cad1bd8",
      "documentation": "Disables an AWS account within the Organization as the GuardDuty delegated administrator.",
      "method": "post",
      "endpoint": "admin/disable",
      "responses": [
        {
          "uuid": "fd5326e1-b2e4-4754-8cbe-e1ed662143e3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4b883dd-5705-44e9-8a59-ff508dfce1d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eea045f-43d9-4438-9729-9677e19505b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "855a6a16-f393-4881-bd1c-b223c8fb5f34",
      "documentation": "Disassociates the current GuardDuty member account from its administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/master/disassociate",
      "responses": [
        {
          "uuid": "97c157f1-8ab6-40fd-a1e4-71eb51089264",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e64035f-fd9f-4ffc-9999-c3c2adb3f78a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69ccd915-09a5-4f75-bc14-5aa80c4022cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d721307c-0dd0-468e-82a5-82bbda7b7a1a",
      "documentation": "Disassociates GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/disassociate",
      "responses": [
        {
          "uuid": "406af240-46dd-4786-8303-9d0b810f0e4e",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbbb1281-90ca-46b2-b5b0-3c9200fc7de4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7557fbc0-08d4-47ee-9046-026fe05ed49a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da7305e5-d3e5-4500-b774-7544cc2411dc",
      "documentation": "Enables an AWS account within the organization as the GuardDuty delegated administrator.",
      "method": "post",
      "endpoint": "admin/enable",
      "responses": [
        {
          "uuid": "c486f2ab-802a-465b-9966-53e762895568",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77b8ae64-fce6-4903-b4fb-d4e1c5ee7406",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d84d36-875f-47fa-aeac-100918b93e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baec18a7-2d0e-40cd-91aa-5e4b829086d3",
      "documentation": "Describes Amazon GuardDuty findings specified by finding IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/get",
      "responses": [
        {
          "uuid": "86f6c4d3-dc83-4f07-9231-350367b7028a",
          "body": "{\n  \"Findings\": [\n    {\n      \"AccountId\": \"\",\n      \"Arn\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"CreatedAt\": \"\",\n      \"Description\": \"\",\n      \"Id\": \"\",\n      \"Partition\": \"\",\n      \"Region\": \"\",\n      \"Resource\": {\n        \"AccessKeyDetails\": {\n          \"AccessKeyId\": \"\",\n          \"PrincipalId\": \"\",\n          \"UserName\": \"\",\n          \"UserType\": \"\"\n        },\n        \"S3BucketDetails\": [\n          {\n            \"Arn\": \"\",\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n            \"Owner\": {\n              \"Id\": \"\"\n            },\n            \"Tags\": [\n              {\n                \"Key\": \"\",\n                \"Value\": \"\"\n              }\n            ],\n            \"DefaultServerSideEncryption\": {\n              \"EncryptionType\": \"\",\n              \"KmsMasterKeyArn\": \"\"\n            },\n            \"PublicAccess\": {\n              \"PermissionConfiguration\": {\n                \"BucketLevelPermissions\": {\n                  \"AccessControlList\": {\n                    \"AllowsPublicReadAccess\": {{faker 'random.boolean'}},\n                    \"AllowsPublicWriteAccess\": {{faker 'random.boolean'}}\n                  },\n                  \"BucketPolicy\": {\n                    \"AllowsPublicReadAccess\": {{faker 'random.boolean'}},\n                    \"AllowsPublicWriteAccess\": {{faker 'random.boolean'}}\n                  },\n                  \"BlockPublicAccess\": {\n                    \"IgnorePublicAcls\": {{faker 'random.boolean'}},\n                    \"RestrictPublicBuckets\": {{faker 'random.boolean'}},\n                    \"BlockPublicAcls\": {{faker 'random.boolean'}},\n                    \"BlockPublicPolicy\": {{faker 'random.boolean'}}\n                  }\n                },\n                \"AccountLevelPermissions\": {\n                  \"BlockPublicAccess\": {\n                    \"IgnorePublicAcls\": {{faker 'random.boolean'}},\n                    \"RestrictPublicBuckets\": {{faker 'random.boolean'}},\n                    \"BlockPublicAcls\": {{faker 'random.boolean'}},\n                    \"BlockPublicPolicy\": {{faker 'random.boolean'}}\n                  }\n                }\n              },\n              \"EffectivePermission\": \"\"\n            }\n          }\n        ],\n        \"InstanceDetails\": {\n          \"AvailabilityZone\": \"\",\n          \"IamInstanceProfile\": {\n            \"Arn\": \"\",\n            \"Id\": \"\"\n          },\n          \"ImageDescription\": \"\",\n          \"ImageId\": \"\",\n          \"InstanceId\": \"\",\n          \"InstanceState\": \"\",\n          \"InstanceType\": \"\",\n          \"OutpostArn\": \"\",\n          \"LaunchTime\": \"\",\n          \"NetworkInterfaces\": [\n            {\n              \"Ipv6Addresses\": [\n                \"\"\n              ],\n              \"NetworkInterfaceId\": \"\",\n              \"PrivateDnsName\": \"\",\n              \"PrivateIpAddress\": \"\",\n              \"PrivateIpAddresses\": [\n                {\n                  \"PrivateDnsName\": \"\",\n                  \"PrivateIpAddress\": \"\"\n                }\n              ],\n              \"PublicDnsName\": \"\",\n              \"PublicIp\": \"\",\n              \"SecurityGroups\": [\n                {\n                  \"GroupId\": \"\",\n                  \"GroupName\": \"\"\n                }\n              ],\n              \"SubnetId\": \"\",\n              \"VpcId\": \"\"\n            }\n          ],\n          \"Platform\": \"\",\n          \"ProductCodes\": [\n            {\n              \"Code\": \"\",\n              \"ProductType\": \"\"\n            }\n          ],\n          \"Tags\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        },\n        \"ResourceType\": \"\"\n      },\n      \"SchemaVersion\": \"\",\n      \"Service\": {\n        \"Action\": {\n          \"ActionType\": \"\",\n          \"AwsApiCallAction\": {\n            \"Api\": \"\",\n            \"CallerType\": \"\",\n            \"DomainDetails\": {\n              \"Domain\": \"\"\n            },\n            \"ErrorCode\": \"\",\n            \"RemoteIpDetails\": {\n              \"City\": {\n                \"CityName\": \"\"\n              },\n              \"Country\": {\n                \"CountryCode\": \"\",\n                \"CountryName\": \"\"\n              },\n              \"GeoLocation\": {\n                \"Lat\": {{faker 'random.float'}},\n                \"Lon\": {{faker 'random.float'}}\n              },\n              \"IpAddressV4\": \"\",\n              \"Organization\": {\n                \"Asn\": \"\",\n                \"AsnOrg\": \"\",\n                \"Isp\": \"\",\n                \"Org\": \"\"\n              }\n            },\n            \"ServiceName\": \"\"\n          },\n          \"DnsRequestAction\": {\n            \"Domain\": \"\"\n          },\n          \"NetworkConnectionAction\": {\n            \"Blocked\": {{faker 'random.boolean'}},\n            \"ConnectionDirection\": \"\",\n            \"LocalPortDetails\": {\n              \"Port\": {{faker 'random.number'}},\n              \"PortName\": \"\"\n            },\n            \"Protocol\": \"\",\n            \"LocalIpDetails\": {\n              \"IpAddressV4\": \"\"\n            },\n            \"RemoteIpDetails\": {\n              \"City\": {\n                \"CityName\": \"\"\n              },\n              \"Country\": {\n                \"CountryCode\": \"\",\n                \"CountryName\": \"\"\n              },\n              \"GeoLocation\": {\n                \"Lat\": {{faker 'random.float'}},\n                \"Lon\": {{faker 'random.float'}}\n              },\n              \"IpAddressV4\": \"\",\n              \"Organization\": {\n                \"Asn\": \"\",\n                \"AsnOrg\": \"\",\n                \"Isp\": \"\",\n                \"Org\": \"\"\n              }\n            },\n            \"RemotePortDetails\": {\n              \"Port\": {{faker 'random.number'}},\n              \"PortName\": \"\"\n            }\n          },\n          \"PortProbeAction\": {\n            \"Blocked\": {{faker 'random.boolean'}},\n            \"PortProbeDetails\": [\n              {\n                \"LocalPortDetails\": {\n                  \"Port\": {{faker 'random.number'}},\n                  \"PortName\": \"\"\n                },\n                \"LocalIpDetails\": {\n                  \"IpAddressV4\": \"\"\n                },\n                \"RemoteIpDetails\": {\n                  \"City\": {\n                    \"CityName\": \"\"\n                  },\n                  \"Country\": {\n                    \"CountryCode\": \"\",\n                    \"CountryName\": \"\"\n                  },\n                  \"GeoLocation\": {\n                    \"Lat\": {{faker 'random.float'}},\n                    \"Lon\": {{faker 'random.float'}}\n                  },\n                  \"IpAddressV4\": \"\",\n                  \"Organization\": {\n                    \"Asn\": \"\",\n                    \"AsnOrg\": \"\",\n                    \"Isp\": \"\",\n                    \"Org\": \"\"\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"Evidence\": {\n          \"ThreatIntelligenceDetails\": [\n            {\n              \"ThreatListName\": \"\",\n              \"ThreatNames\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"Archived\": {{faker 'random.boolean'}},\n        \"Count\": {{faker 'random.number'}},\n        \"DetectorId\": \"\",\n        \"EventFirstSeen\": \"\",\n        \"EventLastSeen\": \"\",\n        \"ResourceRole\": \"\",\n        \"ServiceName\": \"\",\n        \"UserFeedback\": \"\"\n      },\n      \"Severity\": {{faker 'random.float'}},\n      \"Title\": \"\",\n      \"Type\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4e2c13-0b63-4eb2-a100-60b2a8836313",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07c86f58-4fcd-466a-ba98-59b9335cf9a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "235a13c5-f633-467d-a6e4-198f4edffb54",
      "documentation": "Lists Amazon GuardDuty findings statistics for the specified detector ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/statistics",
      "responses": [
        {
          "uuid": "3870a9f2-11c6-4779-8550-439034e42f42",
          "body": "{\n  \"FindingStatistics\": {\n    \"CountBySeverity\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4acb3c5-0cda-4f79-9d0f-71e4e40e31ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a71d426-c58a-400c-8b0b-14c4978036d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cb3e1a9-bc70-4f57-a6a1-d050708711fe",
      "documentation": "Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.",
      "method": "get",
      "endpoint": "invitation/count",
      "responses": [
        {
          "uuid": "15df57a5-d267-4041-88c3-b970f2848521",
          "body": "{\n  \"InvitationsCount\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a80ba327-806d-4d03-bc00-144ac80019a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d0c049f-c99a-45bf-bf04-cebc47be5f30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d1bc4dd-d80d-4eb1-ba08-1b07055966e1",
      "documentation": "Describes which data sources are enabled for the member account's detector.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/detector/get",
      "responses": [
        {
          "uuid": "f23aa315-f4b8-4cde-9da4-8f61d6c11def",
          "body": "{\n  \"MemberDataSourceConfigurations\": [\n    {\n      \"AccountId\": \"\",\n      \"DataSources\": {\n        \"CloudTrail\": {\n          \"Status\": \"\"\n        },\n        \"DNSLogs\": {\n          \"Status\": \"\"\n        },\n        \"FlowLogs\": {\n          \"Status\": \"\"\n        },\n        \"S3Logs\": {\n          \"Status\": \"\"\n        }\n      }\n    }\n  ],\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c35a54a-3415-4d3b-88d7-94e1ec118748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13099475-d5c4-4729-950c-a4f6ad3e2cfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95d40668-90f7-4ae7-b9f6-02f3238bd0e4",
      "documentation": "Retrieves GuardDuty member accounts (of the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/get",
      "responses": [
        {
          "uuid": "a92a4b93-0a13-44d4-a0bc-c8ba8fb7cff9",
          "body": "{\n  \"Members\": [\n    {\n      \"AccountId\": \"\",\n      \"DetectorId\": \"\",\n      \"MasterId\": \"\",\n      \"Email\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ],\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6b76b7b-c4ad-4d65-9c22-63a97ea00a57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33934a8d-ac6e-47c8-b2b2-6e21a29b4117",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4478b654-5723-45af-a1d6-fb93d230a5d3",
      "documentation": "Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector ID. For newly enabled detectors or data sources the cost returned will include only the usage so far under 30 days, this may differ from the cost metrics in the console, which projects usage over 30 days to provide a monthly cost estimate. For more information see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/monitoring_costs.html#usage-calculations\">Understanding How Usage Costs are Calculated</a>.",
      "method": "post",
      "endpoint": "detector/:detectorId/usage/statistics",
      "responses": [
        {
          "uuid": "ed82b1b5-95c5-4a77-9987-aada1af765a1",
          "body": "{\n  \"UsageStatistics\": {\n    \"SumByAccount\": [\n      {\n        \"AccountId\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"SumByDataSource\": [\n      {\n        \"DataSource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"SumByResource\": [\n      {\n        \"Resource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"TopResources\": [\n      {\n        \"Resource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "310c3ca8-b22b-4141-8c11-b12289fdad55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "207d1e98-a2b3-4488-98e1-6aa2befc4472",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4ec6164-eb0a-4055-acfc-8c88bfcf865d",
      "documentation": "Invites other AWS accounts (created as members of the current AWS account by CreateMembers) to enable GuardDuty, and allow the current AWS account to view and manage these accounts' findings on their behalf as the GuardDuty administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/invite",
      "responses": [
        {
          "uuid": "d631f021-0f3e-49dd-9570-28c152601c45",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbabb80c-cec7-4a71-8801-ab8c71081d07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a655f330-584f-4ed4-bea3-69ce7ca33f1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "719d0d20-d105-48a4-aa7e-4fd162646bc6",
      "documentation": "Lists Amazon GuardDuty findings for the specified detector ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings",
      "responses": [
        {
          "uuid": "e3348a18-a4c2-4501-a18a-b4dab891021f",
          "body": "{\n  \"FindingIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86bd6669-e43c-412d-922a-5369fbe283e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66d768ef-44de-49ee-b6d5-96700c65a887",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "065c4a9e-7d77-4037-b274-1d6e82bd6cbc",
      "documentation": "Lists all GuardDuty membership invitations that were sent to the current AWS account.",
      "method": "get",
      "endpoint": "invitation",
      "responses": [
        {
          "uuid": "bd99f52e-0e14-43ce-8fd4-71535acca5fe",
          "body": "{\n  \"Invitations\": [\n    {\n      \"AccountId\": \"\",\n      \"InvitationId\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1640f91d-5060-41ed-9757-31a570da9a67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33ddf435-039c-46bf-8a33-39264479cf83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6bef94f6-0917-4279-9535-4e7b523b6968",
      "documentation": "Lists the accounts configured as GuardDuty delegated administrators.",
      "method": "get",
      "endpoint": "admin",
      "responses": [
        {
          "uuid": "727d1294-62ff-463f-b121-67fb6748a474",
          "body": "{\n  \"AdminAccounts\": [\n    {\n      \"AdminAccountId\": \"\",\n      \"AdminStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "172ba2ca-22f3-4db2-afa0-522f99f85c21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a50967e-6a88-4f8a-9f58-0b2417213f00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b15037d0-d31c-4571-9ac5-51ebe5e04c66",
      "documentation": "Lists tags for a resource. Tagging is currently supported for detectors, finding filters, IP sets, and threat intel sets, with a limit of 50 tags per resource. When invoked, this operation returns all assigned tags for a given resource.",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "ccc59e87-fdab-4691-9b52-70d7c7589236",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "befcb9e1-eff0-4542-93a6-9e7e3b7e1380",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3abe721e-64df-4155-aca6-2b9a9e9cbe4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "213c574a-c2d4-4d28-8898-d66abd9f5255",
      "documentation": "Adds tags to a resource.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "4e626e5e-9b45-4bf7-9485-664b47dd23b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c87f510-5fde-4511-b6e8-f1a227559643",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bacc6bba-8339-46de-937a-46f9a7c8fcb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e58df33-2edd-4133-bc68-c8a3acd35cd4",
      "documentation": "Turns on GuardDuty monitoring of the specified member accounts. Use this operation to restart monitoring of accounts that you stopped monitoring with the <code>StopMonitoringMembers</code> operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/start",
      "responses": [
        {
          "uuid": "a50de585-4c65-474c-978b-f50766bf31b4",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c7ae8fb-ea51-45d8-905e-2b9eebe5e588",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c44341e-ce83-445e-bff2-0d6e6a633751",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0930d73e-2f5b-4972-8ab3-571d4704444e",
      "documentation": "Stops GuardDuty monitoring for the specified member accounts. Use the <code>StartMonitoringMembers</code> operation to restart monitoring for those accounts.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/stop",
      "responses": [
        {
          "uuid": "dc662572-30ab-41cd-821d-abef35668353",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efca1a84-00ed-428b-bbad-d430ec3689ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6124e658-2611-4a2a-9b88-a911b8acf501",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b57f154a-ca4f-43d1-9676-1e5f66032ab3",
      "documentation": "Unarchives GuardDuty findings specified by the <code>findingIds</code>.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/unarchive",
      "responses": [
        {
          "uuid": "07e90ccd-a2e2-4466-a5f2-4ebe33748427",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1757ba04-c3f7-490f-a68f-0a0716a5e942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dca9aa34-5b1c-445d-8d39-f8bf998b566c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac354616-57b9-4993-b141-246170448d00",
      "documentation": "Removes tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "1f4fd6a8-98d0-4fd4-9226-f1de41b99797",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a16753f6-bada-4a71-a12c-e0fda6412b09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c14f281b-8e6c-4fbd-a7e2-f4ab53c39395",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2d54979-0556-4443-bca7-a7fdfa61547c",
      "documentation": "Marks the specified GuardDuty findings as useful or not useful.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/feedback",
      "responses": [
        {
          "uuid": "6a2fcff8-e255-4973-aaf9-af27d5f72ebc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a597985-84a6-466c-a949-3bbd48b25c3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "942af19c-1042-4dd5-b378-bb4e15decaa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8169e62f-7426-4443-91ce-544c0952c9bc",
      "documentation": "Contains information on member accounts to be updated.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/detector/update",
      "responses": [
        {
          "uuid": "2ef924ce-8989-4a6d-b185-ee1458922c7b",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfb2710c-d135-48d5-b814-65263c66a14f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a46cf24-8a49-4416-b24a-0887c172853b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}