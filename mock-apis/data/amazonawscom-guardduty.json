{
  "uuid": "9714cda0-369b-4726-8642-4b1ec395eae8",
  "lastMigration": 19,
  "name": "Amazon GuardDuty",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "170f6a2c-e7a5-4cc7-a292-b8347fb21fd7",
      "documentation": "Accepts the invitation to be monitored by a GuardDuty administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/master",
      "responses": [
        {
          "uuid": "8be6b912-6369-46c4-bd34-702e332fafa5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d44d835f-8658-4ee9-a210-ee4559f98cb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c35818b7-e776-475b-8ae5-4023262c8fea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b91a3bbd-6863-4598-a682-8fe42f646445",
      "documentation": "Provides the details for the GuardDuty administrator account associated with the current GuardDuty member account.",
      "method": "get",
      "endpoint": "detector/:detectorId/master",
      "responses": [
        {
          "uuid": "3e40e50f-4100-41f2-b4c6-ec825e6d4bfb",
          "body": "{\n  \"Master\": {\n    \"AccountId\": \"\",\n    \"InvitationId\": \"\",\n    \"RelationshipStatus\": \"\",\n    \"InvitedAt\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b052960-ab1f-4bdf-8538-2d478dd08692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4d0559e-a66a-4060-b1db-777267b958d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a92a6137-7689-42da-be3d-9b98770fd69d",
      "documentation": "<p>Archives GuardDuty findings that are specified by the list of finding IDs.</p> <note> <p>Only the administrator account can archive findings. Member accounts don't have permission to archive findings from their accounts.</p> </note>",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/archive",
      "responses": [
        {
          "uuid": "efd32605-7ada-4231-91f6-b6ba32fd921f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cae13ad-f9cc-4659-bd03-b6419a2549ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184ed862-3047-4534-bd70-9457a2c53d97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7a1aeda-02d1-4399-8436-6c301007fa0f",
      "documentation": "Creates a single Amazon GuardDuty detector. A detector is a resource that represents the GuardDuty service. To start using GuardDuty, you must create a detector in each Region where you enable the service. You can have only one detector per account per Region. All data sources are enabled in a new detector by default.",
      "method": "post",
      "endpoint": "detector",
      "responses": [
        {
          "uuid": "465d4cd2-018f-4fd5-9631-8bea920b733a",
          "body": "{\n  \"DetectorId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80227a4f-abd7-4a58-bec0-896a5221556c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d76a5a2a-104d-43e9-aec0-1fe0bed0e38b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9f4c669-3e65-41af-a39f-b5af8ff69985",
      "documentation": "Lists detectorIds of all the existing Amazon GuardDuty detector resources.",
      "method": "get",
      "endpoint": "detector",
      "responses": [
        {
          "uuid": "d2a198a7-d629-4c15-993c-e8c909c36662",
          "body": "{\n  \"DetectorIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32142d85-c246-4c75-8a76-a929dbba9ed8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54e2719a-bda0-4b86-b03c-ad6e0f9f0351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2172bb48-82e1-4b6d-83df-34cf71127f43",
      "documentation": "Creates a filter using the specified finding criteria.",
      "method": "post",
      "endpoint": "detector/:detectorId/filter",
      "responses": [
        {
          "uuid": "30de3eb0-4e7a-4678-9d71-7abb8cd56c08",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d686ef77-dc4a-440b-a011-42e5cde386d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94cb8e59-0737-4a84-a4ee-af4475807358",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed4337bc-0bce-4710-8077-2cee82b7f63e",
      "documentation": "Returns a paginated list of the current filters.",
      "method": "get",
      "endpoint": "detector/:detectorId/filter",
      "responses": [
        {
          "uuid": "3cb57781-64a9-4775-a22b-83e6b480bcfe",
          "body": "{\n  \"FilterNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4861b385-6288-433a-b172-1f0837383a2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80a259eb-d6f3-4e17-bdd2-169eadfbe4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "768b72fa-c127-4676-9ee9-b8e7c75381e2",
      "documentation": "Creates a new IPSet, which is called a trusted IP list in the console user interface. An IPSet is a list of IP addresses that are trusted for secure communication with AWS infrastructure and applications. GuardDuty doesn't generate findings for IP addresses that are included in IPSets. Only users from the administrator account can use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/ipset",
      "responses": [
        {
          "uuid": "52dda1f3-9cdf-4a6a-a6ab-1fbec6fe167e",
          "body": "{\n  \"IpSetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20dcc776-5601-4d98-b902-ec2c386b3ed3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3546fc0c-0ea3-42aa-b47d-4478401e8595",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "984071a1-ec78-4199-9d86-b7cfdd6c1833",
      "documentation": "Lists the IPSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the IPSets returned are the IPSets from the associated administrator account.",
      "method": "get",
      "endpoint": "detector/:detectorId/ipset",
      "responses": [
        {
          "uuid": "2a3bdf98-9715-435b-ac7f-a66dd4c39791",
          "body": "{\n  \"IpSetIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75cb9fe3-1a19-48d7-b9a8-9e11bbd17930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ee22855-4a09-4952-9731-fe5586e1ced2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25ac4327-be43-4d1b-af6d-33a5aae16ebe",
      "documentation": "<p>Creates member accounts of the current AWS account by specifying a list of AWS account IDs. This step is a prerequisite for managing the associated member accounts either by invitation or through an organization.</p> <p>When using <code>Create Members</code> as an organizations delegated administrator this action will enable GuardDuty in the added member accounts, with the exception of the organization delegated administrator account, which must enable GuardDuty prior to being added as a member.</p> <p>If you are adding accounts by invitation use this action after GuardDuty has been enabled in potential member accounts and before using <a href=\"https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html\"> <code>Invite Members</code> </a>.</p>",
      "method": "post",
      "endpoint": "detector/:detectorId/member",
      "responses": [
        {
          "uuid": "c8f85a13-083a-4a10-9197-626b20550019",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbebc29b-0459-43e2-89de-081f3d5d380e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6592e7b0-b108-4809-899f-978f831579c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce2c54aa-4f64-474a-99d7-be39da69fe02",
      "documentation": "Lists details about all member accounts for the current GuardDuty administrator account.",
      "method": "get",
      "endpoint": "detector/:detectorId/member",
      "responses": [
        {
          "uuid": "ace23db6-f7c4-4584-8579-58cfa37f27c7",
          "body": "{\n  \"Members\": [\n    {\n      \"AccountId\": \"\",\n      \"DetectorId\": \"\",\n      \"MasterId\": \"\",\n      \"Email\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa277ab3-a9ce-4757-8320-d2e94ea430d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f4581d8-c328-4aae-bf4a-473c40e7201f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "702c3fca-b8e7-452f-b49d-d447d1f72cc8",
      "documentation": "Creates a publishing destination to export findings to. The resource to export findings to must exist before you use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/publishingDestination",
      "responses": [
        {
          "uuid": "07f1539a-446b-4348-bfe4-57e43793fd88",
          "body": "{\n  \"DestinationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33acacd4-f7b8-4c3f-8022-edaf9d040b45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469b7f3a-fc71-4f7f-b206-9751c2490890",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78bccf33-7016-48e4-b46e-b8fef1933c2a",
      "documentation": "Returns a list of publishing destinations associated with the specified <code>dectectorId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/publishingDestination",
      "responses": [
        {
          "uuid": "90ce9571-493b-4b84-a518-4f0699c3e9e1",
          "body": "{\n  \"Destinations\": [\n    {\n      \"DestinationId\": \"\",\n      \"DestinationType\": \"\",\n      \"Status\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96791287-eaf5-4e66-a62c-d392ee1edf90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a16b46-9161-4834-927a-8bf1d76d1563",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc1d72d7-0d47-42c9-a5c1-73be6c49c85c",
      "documentation": "Generates example findings of types specified by the list of finding types. If 'NULL' is specified for <code>findingTypes</code>, the API generates example findings of all supported finding types.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/create",
      "responses": [
        {
          "uuid": "37c1276a-1c14-405e-baa6-f904d4e1ead8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcc93659-6cd4-4828-8a89-a783eebae6ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f20f1591-65cc-4de1-8ef4-c6a926498276",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4900b478-6946-43c5-9349-d3aa5fb67e05",
      "documentation": "Creates a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets. Only users of the administrator account can use this operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/threatintelset",
      "responses": [
        {
          "uuid": "10dee350-ddba-4988-ab87-4e4f5c89f852",
          "body": "{\n  \"ThreatIntelSetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63c2d60d-2a3f-443b-86b7-f204cab6e1ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87736d3c-8b17-4fbc-a415-50f673b7d2d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d786823b-ba38-41d5-9566-cea5a2ec637e",
      "documentation": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the ThreatIntelSets associated with the administrator account are returned.",
      "method": "get",
      "endpoint": "detector/:detectorId/threatintelset",
      "responses": [
        {
          "uuid": "186705f3-9c5c-41bf-9703-943b7b9f1fb6",
          "body": "{\n  \"ThreatIntelSetIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bf1ef08-4ec0-492b-9ca2-3642f01fbf8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fdd0536-8f09-467e-a834-aa4db274bd74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b626009-dce2-4584-96dd-205d34fa3b29",
      "documentation": "Declines invitations sent to the current member account by AWS accounts specified by their account IDs.",
      "method": "post",
      "endpoint": "invitation/decline",
      "responses": [
        {
          "uuid": "407b6932-59a0-4990-a9c3-c29e461e6549",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd52c7d0-077e-427b-b4b6-ee9641426767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f25d44e-d514-4be9-b022-6d7f70727e4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2b606f7-c40b-45e6-9eac-cf321dec9a02",
      "documentation": "Deletes an Amazon GuardDuty detector that is specified by the detector ID.",
      "method": "delete",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "183eaf93-fe1f-4b4f-8a07-4750a74667c4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab3452ac-5b40-456d-b581-fa1380f27882",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8bf603-7a26-40f6-b2d1-dbcec616b117",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15ce7eaa-7ba1-4be0-b06b-71e590b6b486",
      "documentation": "Retrieves an Amazon GuardDuty detector specified by the detectorId.",
      "method": "get",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "cdb1519a-04e7-4266-8a0d-cc2f71f172c4",
          "body": "{\n  \"CreatedAt\": \"\",\n  \"FindingPublishingFrequency\": \"\",\n  \"ServiceRole\": \"\",\n  \"Status\": \"\",\n  \"UpdatedAt\": \"\",\n  \"DataSources\": {\n    \"CloudTrail\": {\n      \"Status\": \"\"\n    },\n    \"DNSLogs\": {\n      \"Status\": \"\"\n    },\n    \"FlowLogs\": {\n      \"Status\": \"\"\n    },\n    \"S3Logs\": {\n      \"Status\": \"\"\n    }\n  },\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2bd3f2e-3a3b-49e8-bb67-9cf8ba224df5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0032065-6539-4f21-a34d-d6552d37d503",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fda8cb4-eeb7-41c2-93a5-25866c0e9b5c",
      "documentation": "Updates the Amazon GuardDuty detector specified by the detectorId.",
      "method": "post",
      "endpoint": "detector/:detectorId",
      "responses": [
        {
          "uuid": "629c7f64-adb3-40e2-ab13-dc705450e1d6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8efb7de-b4f9-42a8-b823-a5b6cf5d2992",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18f6fc91-2dc1-440e-8ccd-6e1a26733be1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ac2a14d-0f3f-4c4a-8155-73f5573148da",
      "documentation": "Deletes the filter specified by the filter name.",
      "method": "delete",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "a5c1f298-f3cc-4e4e-b6ee-31a2ff70cc34",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a956177a-4615-4204-8916-e6d448eb06e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41176eb7-7ef9-4c0d-a88c-b72351d215c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c71271ce-90e8-417b-975f-e0354f3a8f59",
      "documentation": "Returns the details of the filter specified by the filter name.",
      "method": "get",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "0a2d0364-2d03-4ce1-bbf3-da88c702c695",
          "body": "{\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"Action\": \"\",\n  \"Rank\": {{faker 'random.number'}},\n  \"FindingCriteria\": {\n    \"Criterion\": {}\n  },\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fa50d80-bf3e-4464-b134-f4055f796d83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a2ef388-d538-45b8-a93e-ed3861a587b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2250b859-3062-40a2-85b8-956e84ff1c59",
      "documentation": "Updates the filter specified by the filter name.",
      "method": "post",
      "endpoint": "detector/:detectorId/filter/:filterName",
      "responses": [
        {
          "uuid": "3fb01529-6dfc-445e-8dc6-734a919487b9",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c868277d-1248-4730-8820-02861fc7efb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ed2906-22ee-4f6c-bc2e-93b52274a2ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3146462a-87ed-4aa7-a483-e037e0d5ab11",
      "documentation": "Deletes the IPSet specified by the <code>ipSetId</code>. IPSets are called trusted IP lists in the console user interface.",
      "method": "delete",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "0ffdb402-205e-45b7-b422-c1dd838dd895",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "452a5ce2-a3c3-4c68-92e8-00ad397d6402",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68027a44-a719-4286-9c67-4836e4be2e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b68f45fd-7f30-4322-b3e9-ddfd21f24a2b",
      "documentation": "Retrieves the IPSet specified by the <code>ipSetId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "7e501c64-a122-4f1f-b55c-347e20961108",
          "body": "{\n  \"Name\": \"\",\n  \"Format\": \"\",\n  \"Location\": \"\",\n  \"Status\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b30479a-bddd-468b-8126-d46ebbf795d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e786d8e-d726-4cda-837c-27c9035a353f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cdcdf0e-d453-434e-b726-56bc874b7751",
      "documentation": "Updates the IPSet specified by the IPSet ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/ipset/:ipSetId",
      "responses": [
        {
          "uuid": "c95837d8-d03c-4e2f-81a5-10c872e4bf8d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d86f2a1d-6ea1-4037-9efa-7fef2eeb6b8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af0adf68-be2c-43d4-abf9-26749c4f84cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06c08da1-f28b-41d8-967c-64af68fa5b2c",
      "documentation": "Deletes invitations sent to the current member account by AWS accounts specified by their account IDs.",
      "method": "post",
      "endpoint": "invitation/delete",
      "responses": [
        {
          "uuid": "4c5e2dba-df1d-4332-8bc1-c1821c7b8b2e",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5edced94-2272-439d-a4eb-9bd40fd00438",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a02be04b-3ea1-4b46-a8eb-3293efa6d0c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d27e14b-928a-4a37-a978-49292a4aa479",
      "documentation": "Deletes GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/delete",
      "responses": [
        {
          "uuid": "eb3eff33-611b-4d1b-a032-68365c6327dd",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d03dfa6f-1129-4140-a3ea-d927c9bab3de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "035fb892-bb54-4afc-8553-df5b100d5685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35b719ee-2f3f-440c-ad20-5dbbb8d12db3",
      "documentation": "Deletes the publishing definition with the specified <code>destinationId</code>.",
      "method": "delete",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "f50c7da2-0fec-4473-8798-8dfab90e5244",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f244992a-a592-41c2-91ea-cb29aa25c015",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7bd2892-11b1-44ed-be5a-961375e8e932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b805ae4-89b1-4ed2-b5ce-9839eccc31ab",
      "documentation": "Returns information about the publishing destination specified by the provided <code>destinationId</code>.",
      "method": "get",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "b21e0642-5511-41ad-a2a4-9c6602db226a",
          "body": "{\n  \"DestinationId\": \"\",\n  \"DestinationType\": \"\",\n  \"Status\": \"\",\n  \"PublishingFailureStartTimestamp\": {{faker 'random.number'}},\n  \"DestinationProperties\": {\n    \"DestinationArn\": \"\",\n    \"KmsKeyArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69ce6d64-6d63-46fd-9b8d-04c33f470e7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1350e272-388c-42f4-b3ac-ca816459ab94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82cd329f-5e08-44ba-bd53-3ce35abfae53",
      "documentation": "Updates information about the publishing destination specified by the <code>destinationId</code>.",
      "method": "post",
      "endpoint": "detector/:detectorId/publishingDestination/:destinationId",
      "responses": [
        {
          "uuid": "50a347e8-4d20-4736-8469-01594a4f1f59",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a59dec-360d-4524-af38-52873c6d8a78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e82860af-b788-4149-bb01-528a10146ece",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a35bbf16-b02f-44c2-bab5-2ba4cade8452",
      "documentation": "Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.",
      "method": "delete",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "990b6413-6f63-497c-9a79-ab80c0f46d29",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "892f7448-8f50-4588-8175-1c96d75e9808",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d1af48b-d883-4c37-9d7a-f319d82ab4be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07704579-0d2d-4942-8905-d4a8acfda9de",
      "documentation": "Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.",
      "method": "get",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "61872709-4bd6-4cfc-87d0-a08098340e1d",
          "body": "{\n  \"Name\": \"\",\n  \"Format\": \"\",\n  \"Location\": \"\",\n  \"Status\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e472983e-78c0-4e65-aecd-b62e647ad5e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ff8ae5c-5cf8-4bd7-8574-9272a925d9eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "699b7e82-9573-402d-a858-d65850faef03",
      "documentation": "Updates the ThreatIntelSet specified by the ThreatIntelSet ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/threatintelset/:threatIntelSetId",
      "responses": [
        {
          "uuid": "2f9bf958-b9e6-4e8e-90cf-2e8e89189518",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9130c5e-8315-4f05-b19e-6f10b860994d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9773bc9-3a10-446a-8e9f-3db912354bb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8dab2806-ad43-4dc5-880c-949005d0d2d7",
      "documentation": "Returns information about the account selected as the delegated administrator for GuardDuty.",
      "method": "get",
      "endpoint": "detector/:detectorId/admin",
      "responses": [
        {
          "uuid": "c7a1984d-ebb0-4115-8824-f99d0cbefcec",
          "body": "{\n  \"AutoEnable\": {{faker 'random.boolean'}},\n  \"MemberAccountLimitReached\": {{faker 'random.boolean'}},\n  \"DataSources\": {\n    \"S3Logs\": {\n      \"AutoEnable\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b08d9e6a-490c-4932-8def-334f4f68f197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "426881a4-01e7-4bb0-a875-ee9c4a64678f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31e1441d-dd36-4974-ae53-3cda70c5bc2c",
      "documentation": "Updates the delegated administrator account with the values provided.",
      "method": "post",
      "endpoint": "detector/:detectorId/admin",
      "responses": [
        {
          "uuid": "a2c315a8-fb66-4917-818d-4c83c4d9fda3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3d4ae3e-3f6b-4024-83f0-1b38e938464a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc3b7ab-34bb-4104-b347-b22c68cfdf4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e560083-37bf-4188-8dd5-c3ff4492dd90",
      "documentation": "Disables an AWS account within the Organization as the GuardDuty delegated administrator.",
      "method": "post",
      "endpoint": "admin/disable",
      "responses": [
        {
          "uuid": "87b33902-3dcf-45f2-a7b3-ceeb36be02d4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baaad277-f11c-4e0c-8dc1-07d263e3f65f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88f75b70-6af7-4e0d-80ae-15451cf82352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b143242a-8c59-4b59-9428-d2d914a29e55",
      "documentation": "Disassociates the current GuardDuty member account from its administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/master/disassociate",
      "responses": [
        {
          "uuid": "223c07c5-22e0-4214-bc12-058b3368a827",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc11d6e1-071c-42b4-b1a3-dfca3a4ba358",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b20077b-e2a4-442c-84f8-31d021069863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65a721a7-68af-4dfb-826c-865934b2b0c4",
      "documentation": "Disassociates GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/disassociate",
      "responses": [
        {
          "uuid": "b755aead-1eca-48fa-9f71-3f460299945d",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "055ef926-d234-4651-85be-b742a15f7046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32c6ef17-26aa-44f3-92b2-ebe4cfe5e671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6002b2b-b23e-4c11-8445-a07e46756792",
      "documentation": "Enables an AWS account within the organization as the GuardDuty delegated administrator.",
      "method": "post",
      "endpoint": "admin/enable",
      "responses": [
        {
          "uuid": "61b74cc7-aeac-42c2-8976-190cbf18d70e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c857dfdc-d59d-4a83-93b9-3d48b4580356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "359d22a9-da92-4f26-bb24-610a04288a8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a33162fc-03ba-4b79-9c95-3ef6c8c9ae76",
      "documentation": "Describes Amazon GuardDuty findings specified by finding IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/get",
      "responses": [
        {
          "uuid": "7af7a062-1954-45c7-890a-f114cdc8abd8",
          "body": "{\n  \"Findings\": [\n    {\n      \"AccountId\": \"\",\n      \"Arn\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"CreatedAt\": \"\",\n      \"Description\": \"\",\n      \"Id\": \"\",\n      \"Partition\": \"\",\n      \"Region\": \"\",\n      \"Resource\": {\n        \"AccessKeyDetails\": {\n          \"AccessKeyId\": \"\",\n          \"PrincipalId\": \"\",\n          \"UserName\": \"\",\n          \"UserType\": \"\"\n        },\n        \"S3BucketDetails\": [\n          {\n            \"Arn\": \"\",\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n            \"Owner\": {\n              \"Id\": \"\"\n            },\n            \"Tags\": [\n              {\n                \"Key\": \"\",\n                \"Value\": \"\"\n              }\n            ],\n            \"DefaultServerSideEncryption\": {\n              \"EncryptionType\": \"\",\n              \"KmsMasterKeyArn\": \"\"\n            },\n            \"PublicAccess\": {\n              \"PermissionConfiguration\": {\n                \"BucketLevelPermissions\": {\n                  \"AccessControlList\": {\n                    \"AllowsPublicReadAccess\": {{faker 'random.boolean'}},\n                    \"AllowsPublicWriteAccess\": {{faker 'random.boolean'}}\n                  },\n                  \"BucketPolicy\": {\n                    \"AllowsPublicReadAccess\": {{faker 'random.boolean'}},\n                    \"AllowsPublicWriteAccess\": {{faker 'random.boolean'}}\n                  },\n                  \"BlockPublicAccess\": {\n                    \"IgnorePublicAcls\": {{faker 'random.boolean'}},\n                    \"RestrictPublicBuckets\": {{faker 'random.boolean'}},\n                    \"BlockPublicAcls\": {{faker 'random.boolean'}},\n                    \"BlockPublicPolicy\": {{faker 'random.boolean'}}\n                  }\n                },\n                \"AccountLevelPermissions\": {\n                  \"BlockPublicAccess\": {\n                    \"IgnorePublicAcls\": {{faker 'random.boolean'}},\n                    \"RestrictPublicBuckets\": {{faker 'random.boolean'}},\n                    \"BlockPublicAcls\": {{faker 'random.boolean'}},\n                    \"BlockPublicPolicy\": {{faker 'random.boolean'}}\n                  }\n                }\n              },\n              \"EffectivePermission\": \"\"\n            }\n          }\n        ],\n        \"InstanceDetails\": {\n          \"AvailabilityZone\": \"\",\n          \"IamInstanceProfile\": {\n            \"Arn\": \"\",\n            \"Id\": \"\"\n          },\n          \"ImageDescription\": \"\",\n          \"ImageId\": \"\",\n          \"InstanceId\": \"\",\n          \"InstanceState\": \"\",\n          \"InstanceType\": \"\",\n          \"OutpostArn\": \"\",\n          \"LaunchTime\": \"\",\n          \"NetworkInterfaces\": [\n            {\n              \"Ipv6Addresses\": [\n                \"\"\n              ],\n              \"NetworkInterfaceId\": \"\",\n              \"PrivateDnsName\": \"\",\n              \"PrivateIpAddress\": \"\",\n              \"PrivateIpAddresses\": [\n                {\n                  \"PrivateDnsName\": \"\",\n                  \"PrivateIpAddress\": \"\"\n                }\n              ],\n              \"PublicDnsName\": \"\",\n              \"PublicIp\": \"\",\n              \"SecurityGroups\": [\n                {\n                  \"GroupId\": \"\",\n                  \"GroupName\": \"\"\n                }\n              ],\n              \"SubnetId\": \"\",\n              \"VpcId\": \"\"\n            }\n          ],\n          \"Platform\": \"\",\n          \"ProductCodes\": [\n            {\n              \"Code\": \"\",\n              \"ProductType\": \"\"\n            }\n          ],\n          \"Tags\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        },\n        \"ResourceType\": \"\"\n      },\n      \"SchemaVersion\": \"\",\n      \"Service\": {\n        \"Action\": {\n          \"ActionType\": \"\",\n          \"AwsApiCallAction\": {\n            \"Api\": \"\",\n            \"CallerType\": \"\",\n            \"DomainDetails\": {\n              \"Domain\": \"\"\n            },\n            \"ErrorCode\": \"\",\n            \"RemoteIpDetails\": {\n              \"City\": {\n                \"CityName\": \"\"\n              },\n              \"Country\": {\n                \"CountryCode\": \"\",\n                \"CountryName\": \"\"\n              },\n              \"GeoLocation\": {\n                \"Lat\": {{faker 'random.float'}},\n                \"Lon\": {{faker 'random.float'}}\n              },\n              \"IpAddressV4\": \"\",\n              \"Organization\": {\n                \"Asn\": \"\",\n                \"AsnOrg\": \"\",\n                \"Isp\": \"\",\n                \"Org\": \"\"\n              }\n            },\n            \"ServiceName\": \"\"\n          },\n          \"DnsRequestAction\": {\n            \"Domain\": \"\"\n          },\n          \"NetworkConnectionAction\": {\n            \"Blocked\": {{faker 'random.boolean'}},\n            \"ConnectionDirection\": \"\",\n            \"LocalPortDetails\": {\n              \"Port\": {{faker 'random.number'}},\n              \"PortName\": \"\"\n            },\n            \"Protocol\": \"\",\n            \"LocalIpDetails\": {\n              \"IpAddressV4\": \"\"\n            },\n            \"RemoteIpDetails\": {\n              \"City\": {\n                \"CityName\": \"\"\n              },\n              \"Country\": {\n                \"CountryCode\": \"\",\n                \"CountryName\": \"\"\n              },\n              \"GeoLocation\": {\n                \"Lat\": {{faker 'random.float'}},\n                \"Lon\": {{faker 'random.float'}}\n              },\n              \"IpAddressV4\": \"\",\n              \"Organization\": {\n                \"Asn\": \"\",\n                \"AsnOrg\": \"\",\n                \"Isp\": \"\",\n                \"Org\": \"\"\n              }\n            },\n            \"RemotePortDetails\": {\n              \"Port\": {{faker 'random.number'}},\n              \"PortName\": \"\"\n            }\n          },\n          \"PortProbeAction\": {\n            \"Blocked\": {{faker 'random.boolean'}},\n            \"PortProbeDetails\": [\n              {\n                \"LocalPortDetails\": {\n                  \"Port\": {{faker 'random.number'}},\n                  \"PortName\": \"\"\n                },\n                \"LocalIpDetails\": {\n                  \"IpAddressV4\": \"\"\n                },\n                \"RemoteIpDetails\": {\n                  \"City\": {\n                    \"CityName\": \"\"\n                  },\n                  \"Country\": {\n                    \"CountryCode\": \"\",\n                    \"CountryName\": \"\"\n                  },\n                  \"GeoLocation\": {\n                    \"Lat\": {{faker 'random.float'}},\n                    \"Lon\": {{faker 'random.float'}}\n                  },\n                  \"IpAddressV4\": \"\",\n                  \"Organization\": {\n                    \"Asn\": \"\",\n                    \"AsnOrg\": \"\",\n                    \"Isp\": \"\",\n                    \"Org\": \"\"\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"Evidence\": {\n          \"ThreatIntelligenceDetails\": [\n            {\n              \"ThreatListName\": \"\",\n              \"ThreatNames\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"Archived\": {{faker 'random.boolean'}},\n        \"Count\": {{faker 'random.number'}},\n        \"DetectorId\": \"\",\n        \"EventFirstSeen\": \"\",\n        \"EventLastSeen\": \"\",\n        \"ResourceRole\": \"\",\n        \"ServiceName\": \"\",\n        \"UserFeedback\": \"\"\n      },\n      \"Severity\": {{faker 'random.float'}},\n      \"Title\": \"\",\n      \"Type\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8595908a-82c3-4b96-9386-efe59b539504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e559e231-d659-4d9f-9c86-848ea811fd00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b44631a4-2c29-4e15-bce5-b6f4fc91a15b",
      "documentation": "Lists Amazon GuardDuty findings statistics for the specified detector ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/statistics",
      "responses": [
        {
          "uuid": "d7306b42-c546-46ed-9461-84363d83ecda",
          "body": "{\n  \"FindingStatistics\": {\n    \"CountBySeverity\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4121a45-3711-4428-bc73-68627744d133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26bf4017-3477-493d-864d-bc8627539087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f049c8ef-a074-419d-a8a6-fd6dd72a9387",
      "documentation": "Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.",
      "method": "get",
      "endpoint": "invitation/count",
      "responses": [
        {
          "uuid": "081687e0-636f-4657-8860-b708801c35e4",
          "body": "{\n  \"InvitationsCount\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21645282-5688-411c-af7e-7a5b746e2462",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb9b7d3-750d-400b-aac8-9ce727d93d0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe23e73e-5cae-4b56-96e9-0bc332af3812",
      "documentation": "Describes which data sources are enabled for the member account's detector.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/detector/get",
      "responses": [
        {
          "uuid": "3092585b-7cbc-45d6-bbc9-cf5b14a39b27",
          "body": "{\n  \"MemberDataSourceConfigurations\": [\n    {\n      \"AccountId\": \"\",\n      \"DataSources\": {\n        \"CloudTrail\": {\n          \"Status\": \"\"\n        },\n        \"DNSLogs\": {\n          \"Status\": \"\"\n        },\n        \"FlowLogs\": {\n          \"Status\": \"\"\n        },\n        \"S3Logs\": {\n          \"Status\": \"\"\n        }\n      }\n    }\n  ],\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c0413d-1f2b-48a6-a16d-e3d572ee6298",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c14342ec-ae42-409d-be52-2f93df75f0c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1293a13d-644f-48f0-953a-973df96d697a",
      "documentation": "Retrieves GuardDuty member accounts (of the current GuardDuty administrator account) specified by the account IDs.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/get",
      "responses": [
        {
          "uuid": "04cc3035-612d-4d95-b4ba-55aadcef0505",
          "body": "{\n  \"Members\": [\n    {\n      \"AccountId\": \"\",\n      \"DetectorId\": \"\",\n      \"MasterId\": \"\",\n      \"Email\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\",\n      \"UpdatedAt\": \"\"\n    }\n  ],\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ecd0061-e117-4343-837e-b24b67964636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a040e3f7-47a2-4b2e-bf91-2a0b6ed7ac78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80d08c24-ab6e-4498-a002-3800a6eca40d",
      "documentation": "Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector ID. For newly enabled detectors or data sources the cost returned will include only the usage so far under 30 days, this may differ from the cost metrics in the console, which projects usage over 30 days to provide a monthly cost estimate. For more information see <a href=\"https://docs.aws.amazon.com/guardduty/latest/ug/monitoring_costs.html#usage-calculations\">Understanding How Usage Costs are Calculated</a>.",
      "method": "post",
      "endpoint": "detector/:detectorId/usage/statistics",
      "responses": [
        {
          "uuid": "a5612bd8-5776-44c0-8f8f-4584476c73e5",
          "body": "{\n  \"UsageStatistics\": {\n    \"SumByAccount\": [\n      {\n        \"AccountId\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"SumByDataSource\": [\n      {\n        \"DataSource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"SumByResource\": [\n      {\n        \"Resource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ],\n    \"TopResources\": [\n      {\n        \"Resource\": \"\",\n        \"Total\": {\n          \"Amount\": \"\",\n          \"Unit\": \"\"\n        }\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0935d7e3-7892-4d5d-a088-be6ba12926d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f08a92-a024-400b-aa31-03ce86203d51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3ff1a26-d34f-4c4f-a19e-ac7a7d450390",
      "documentation": "Invites other AWS accounts (created as members of the current AWS account by CreateMembers) to enable GuardDuty, and allow the current AWS account to view and manage these accounts' findings on their behalf as the GuardDuty administrator account.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/invite",
      "responses": [
        {
          "uuid": "05158918-a539-438f-a7c5-03af9ee847c7",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b708774a-e480-4d8a-bf89-ecd415da10c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f98dbb9f-cac9-4574-8d1f-d08c65a395eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79d66d75-78f8-4913-bd05-d3068a989ead",
      "documentation": "Lists Amazon GuardDuty findings for the specified detector ID.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings",
      "responses": [
        {
          "uuid": "d41607c0-d873-4e0a-bd4d-085ddc877846",
          "body": "{\n  \"FindingIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "702afb43-3316-42ca-b896-ade789daff15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb7998d9-8834-44f6-a017-c90894c4d08b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9b90e3c-774c-4eff-a912-de6103cce503",
      "documentation": "Lists all GuardDuty membership invitations that were sent to the current AWS account.",
      "method": "get",
      "endpoint": "invitation",
      "responses": [
        {
          "uuid": "6dbe5c4e-7cb8-48ec-9cb7-5ee95546b417",
          "body": "{\n  \"Invitations\": [\n    {\n      \"AccountId\": \"\",\n      \"InvitationId\": \"\",\n      \"RelationshipStatus\": \"\",\n      \"InvitedAt\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "671a1bbc-beac-4d9a-adbf-7ad4438fbbe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "355c58d4-8f82-41e6-986e-5e0c7c9fcb20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9406aef8-4a12-41ee-8148-cf3cefc8660d",
      "documentation": "Lists the accounts configured as GuardDuty delegated administrators.",
      "method": "get",
      "endpoint": "admin",
      "responses": [
        {
          "uuid": "61e99c55-882c-4ba5-a73c-ce166b272e8b",
          "body": "{\n  \"AdminAccounts\": [\n    {\n      \"AdminAccountId\": \"\",\n      \"AdminStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc85160-1fcf-406b-9cc0-d09f534a6810",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bb69012-72da-43f6-b1dd-de431b9c6e68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2826f55a-06ee-4278-9a40-87840b16ef1a",
      "documentation": "Lists tags for a resource. Tagging is currently supported for detectors, finding filters, IP sets, and threat intel sets, with a limit of 50 tags per resource. When invoked, this operation returns all assigned tags for a given resource.",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "77608c11-b710-48b9-829c-7f4fe0447f6b",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf62cb08-2db9-46b9-b1b8-167713cff9df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "274cb4de-db52-4116-8c1a-c35457c13f95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d94055bf-48e1-4571-ae9d-a0b6e3f88faf",
      "documentation": "Adds tags to a resource.",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "8358de91-f873-42ec-b920-b0268d4f4391",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83216bdc-4dc1-4eb0-90ba-2b5ee1a775ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44089af6-37f9-49d4-b1da-a07496f2a70b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56e8b276-49be-453f-bfee-015746f65367",
      "documentation": "Turns on GuardDuty monitoring of the specified member accounts. Use this operation to restart monitoring of accounts that you stopped monitoring with the <code>StopMonitoringMembers</code> operation.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/start",
      "responses": [
        {
          "uuid": "9dacb5c0-9265-4096-bf73-3b520e1c691c",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "188d79bf-e327-472d-b6ad-5360e679ca5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a731aaa-da36-4e43-855d-d3e52924cffd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da881dd4-54d2-4d1c-b9cf-745d8ded3605",
      "documentation": "Stops GuardDuty monitoring for the specified member accounts. Use the <code>StartMonitoringMembers</code> operation to restart monitoring for those accounts.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/stop",
      "responses": [
        {
          "uuid": "4ba4f0a5-c52c-430b-90e7-07b3b22ac29d",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51a692ac-7083-4813-a4df-c7c63fb37f47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2255362e-e286-4960-b0b7-75d5ce25ec1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10513a45-7a62-4e62-817b-2b236df188f4",
      "documentation": "Unarchives GuardDuty findings specified by the <code>findingIds</code>.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/unarchive",
      "responses": [
        {
          "uuid": "fb5f3d56-4e29-4be8-8e02-cf3062126816",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb6f3010-e71e-481c-b02e-0db65259de4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f1d4cbe-3072-47c3-8f7d-e6246bde38d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84afa211-65d0-460d-b4d8-a14cda8f260e",
      "documentation": "Removes tags from a resource.",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "13b1824b-053e-4c9e-bf51-c2faf299a0f5",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1ce5fa4-774a-41e5-b6e4-4c999029cc8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "466b7f1d-c78a-44b7-a59f-da8796466f9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f9f0008-260e-49c2-afd0-9c7dfd91c0dd",
      "documentation": "Marks the specified GuardDuty findings as useful or not useful.",
      "method": "post",
      "endpoint": "detector/:detectorId/findings/feedback",
      "responses": [
        {
          "uuid": "d28b2c49-a906-4753-ad07-ad5f82765551",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aa208c8-0e6f-4e09-99aa-ee616e710748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc41c945-86ca-4b59-bc21-8ed5d1358b85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ed69f5b-379d-44f1-9a42-a62d2730e43a",
      "documentation": "Contains information on member accounts to be updated.",
      "method": "post",
      "endpoint": "detector/:detectorId/member/detector/update",
      "responses": [
        {
          "uuid": "2a896812-57d3-4081-abd4-3f6470500971",
          "body": "{\n  \"UnprocessedAccounts\": [\n    {\n      \"AccountId\": \"\",\n      \"Result\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddfbe895-e715-4ec0-b5aa-8e1c964a118f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "488f8903-3011-4c97-aa3d-6880a489d43f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}