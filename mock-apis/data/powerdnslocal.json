{
  "uuid": "da2af5d5-436e-43cb-882c-e86912425f2e",
  "lastMigration": 19,
  "name": "PowerDNS Authoritative HTTP API",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7c3558c7-86b3-43cf-91f6-e1c84ff179bf",
      "documentation": "List all servers",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "8cb75880-65e6-4055-a518-34a4f667b64c",
          "body": "[\n  {\n    \"config_url\": \"\",\n    \"daemon_type\": \"\",\n    \"id\": \"\",\n    \"type\": \"\",\n    \"url\": \"\",\n    \"version\": \"\",\n    \"zones_url\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec75546b-47c4-411a-99cc-aaa4b075a84c",
      "documentation": "List a server",
      "method": "get",
      "endpoint": "servers/:server_id",
      "responses": [
        {
          "uuid": "dcb04692-a620-4c8a-aa8a-289467c27376",
          "body": "{\n  \"config_url\": \"\",\n  \"daemon_type\": \"\",\n  \"id\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"version\": \"\",\n  \"zones_url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efe10866-dfdd-44ea-bb10-d5031b4d217b",
      "documentation": "Flush a cache-entry by name",
      "method": "put",
      "endpoint": "servers/:server_id/cache/flush",
      "responses": [
        {
          "uuid": "519c06aa-08d7-4ad3-b861-0b4d4fefca5b",
          "body": "{\n  \"count\": {{faker 'random.number'}},\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Flush successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f750fccf-bdd5-48ea-b177-140c6af2a3ab",
      "documentation": "Returns all ConfigSettings for a single server",
      "method": "get",
      "endpoint": "servers/:server_id/config",
      "responses": [
        {
          "uuid": "07e91648-b986-45eb-8876-63a2ec881b78",
          "body": "[\n  {\n    \"name\": \"\",\n    \"type\": \"\",\n    \"value\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of config values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "854840ae-0481-4288-ad24-c6421fdeef94",
      "documentation": "Returns a specific ConfigSetting for a single server",
      "method": "get",
      "endpoint": "servers/:server_id/config/:config_setting_name",
      "responses": [
        {
          "uuid": "af46f5da-3da9-42b5-8c9e-d6018259d284",
          "body": "{\n  \"name\": \"\",\n  \"type\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of config values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be503f30-9f21-48f1-9d7d-ee399213612e",
      "documentation": "Search the data inside PowerDNS",
      "method": "get",
      "endpoint": "servers/:server_id/search-data",
      "responses": [
        {
          "uuid": "e19e30b5-add9-4101-b965-4b35451f22e8",
          "body": "[\n  {\n    \"content\": \"\",\n    \"disabled\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"object_type\": \"\",\n    \"ttl\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"zone\": \"\",\n    \"zone_id\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a JSON array with results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b277df10-0c18-43cf-910b-ca72735a8fca",
      "documentation": "Query statistics.",
      "method": "get",
      "endpoint": "servers/:server_id/statistics",
      "responses": [
        {
          "uuid": "28433b3d-1010-4ac3-aaed-8cdf0d9d85a2",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Statistic Items",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee3a1a2c-5ef0-4968-8d85-c946830bb825",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when a non-existing statistic name has been requested. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92aae77d-88b7-4d81-983b-096b5deeb7ca",
      "documentation": "Get all TSIGKeys on the server, except the actual key",
      "method": "get",
      "endpoint": "servers/:server_id/tsigkeys",
      "responses": [
        {
          "uuid": "28e9321a-eed8-429a-bb9b-0b17b7d78a26",
          "body": "[\n  {\n    \"algorithm\": \"\",\n    \"id\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of TSIGKey objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29c4b846-c898-4c72-a8d3-c41d2829001b",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error, keys could not be retrieved. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3f95e8f-d308-4200-979c-2ae14cf8bc93",
      "documentation": "Add a TSIG key",
      "method": "post",
      "endpoint": "servers/:server_id/tsigkeys",
      "responses": [
        {
          "uuid": "a7d811dd-de60-43a6-a8bd-2be22315e221",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0d57f48-df80-47d8-a0d7-656b364350d1",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. A key with this name already exists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25fce282-4bb5-4d83-a928-38e04587a2cd",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entry, the TSIGKey provided has issues.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a51d565-7d20-44e4-888f-3d3e0d648019",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. There was a problem creating the key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bcd80d0-eef4-48e4-99c4-90ae4543903d",
      "documentation": "Delete the TSIGKey with tsigkey_id",
      "method": "delete",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "a17931b5-cd04-4c68-9b4e-2dffc87f34c7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK, key was deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2776662-1ce9-4153-abbb-88e9e2f1701f",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69900c14-54e0-45bc-a218-b6c339401487",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31e2da86-71b7-4be1-a3f6-36c68210cabb",
      "documentation": "Get a specific TSIGKeys on the server, including the actual key",
      "method": "get",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "ae4f8c3c-17d5-4fa1-8637-80a8469e1453",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5c21e04-06a1-4278-b920-40b3aa511ead",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c004ab16-82aa-4a21-82f0-e2186846daf0",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error, keys could not be retrieved. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd99eddc-0644-4149-8f8f-2fe6eef45102",
      "documentation": "The TSIGKey at tsigkey_id can be changed in multiple ways:\n * Changing the Name, this will remove the key with tsigkey_id after adding.\n * Changing the Algorithm\n * Changing the Key\n\nOnly the relevant fields have to be provided in the request body.\n",
      "method": "put",
      "endpoint": "servers/:server_id/tsigkeys/:tsigkey_id",
      "responses": [
        {
          "uuid": "e1054cb4-7ab2-45ad-b62b-3edab8c7c98d",
          "body": "{\n  \"algorithm\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK. TSIGKey is changed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "903ca37a-8497-43f2-842b-bf7fffc64e0e",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found. The TSIGKey with the specified tsigkey_id does not exist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80708817-fc4a-4433-88ab-f4956b3c3536",
          "body": "{\n  \"error\": \"\",\n  \"errors\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. Contains error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e127875-7cc9-4b4e-8396-42a105047ead",
      "documentation": "List all Zones in a server",
      "method": "get",
      "endpoint": "servers/:server_id/zones",
      "responses": [
        {
          "uuid": "c2222969-ad91-4cf8-a1fb-a054be21fade",
          "body": "[\n  {\n    \"account\": \"\",\n    \"api_rectify\": {{faker 'random.boolean'}},\n    \"dnssec\": {{faker 'random.boolean'}},\n    \"edited_serial\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n    \"master_tsig_key_ids\": [\n      \"\"\n    ],\n    \"masters\": [\n      \"\"\n    ],\n    \"name\": \"\",\n    \"nameservers\": [\n      \"\"\n    ],\n    \"notified_serial\": {{faker 'random.number'}},\n    \"nsec3narrow\": {{faker 'random.boolean'}},\n    \"nsec3param\": \"\",\n    \"presigned\": {{faker 'random.boolean'}},\n    \"rrsets\": [\n      {\n        \"changetype\": \"\",\n        \"comments\": [\n          {\n            \"account\": \"\",\n            \"content\": \"\",\n            \"modified_at\": {{faker 'random.number'}}\n          }\n        ],\n        \"name\": \"\",\n        \"records\": [\n          {\n            \"content\": \"\",\n            \"disabled\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"ttl\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"serial\": {{faker 'random.number'}},\n    \"slave_tsig_key_ids\": [\n      \"\"\n    ],\n    \"soa_edit\": \"\",\n    \"soa_edit_api\": \"\",\n    \"type\": \"\",\n    \"url\": \"\",\n    \"zone\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of Zones",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71f0e076-e563-4274-8b55-9f621cfc7354",
      "documentation": "Creates a new domain, returns the Zone on creation.",
      "method": "post",
      "endpoint": "servers/:server_id/zones",
      "responses": [
        {
          "uuid": "2da1e394-3146-40c8-a21f-73605b9f3ac3",
          "body": "{\n  \"account\": \"\",\n  \"api_rectify\": {{faker 'random.boolean'}},\n  \"dnssec\": {{faker 'random.boolean'}},\n  \"edited_serial\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n  \"master_tsig_key_ids\": [\n    \"\"\n  ],\n  \"masters\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"nameservers\": [\n    \"\"\n  ],\n  \"notified_serial\": {{faker 'random.number'}},\n  \"nsec3narrow\": {{faker 'random.boolean'}},\n  \"nsec3param\": \"\",\n  \"presigned\": {{faker 'random.boolean'}},\n  \"rrsets\": [\n    {\n      \"changetype\": \"\",\n      \"comments\": [\n        {\n          \"account\": \"\",\n          \"content\": \"\",\n          \"modified_at\": {{faker 'random.number'}}\n        }\n      ],\n      \"name\": \"\",\n      \"records\": [\n        {\n          \"content\": \"\",\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"ttl\": {{faker 'random.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"serial\": {{faker 'random.number'}},\n  \"slave_tsig_key_ids\": [\n    \"\"\n  ],\n  \"soa_edit\": \"\",\n  \"soa_edit_api\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "A zone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29561162-c62c-43cc-8210-3bf95060f7fd",
      "documentation": "Deletes this zone, all attached metadata and rrsets.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "e74cb0a0-8374-4830-8699-8b1e955d53a9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bada979-1d3b-4bb1-afd7-84b046e35098",
      "documentation": "zone managed by a server",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "80602010-8217-4043-9819-6b38f389d741",
          "body": "{\n  \"account\": \"\",\n  \"api_rectify\": {{faker 'random.boolean'}},\n  \"dnssec\": {{faker 'random.boolean'}},\n  \"edited_serial\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"kind\": \"{{oneOf (array 'Native' 'Master' 'Slave')}}\",\n  \"master_tsig_key_ids\": [\n    \"\"\n  ],\n  \"masters\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"nameservers\": [\n    \"\"\n  ],\n  \"notified_serial\": {{faker 'random.number'}},\n  \"nsec3narrow\": {{faker 'random.boolean'}},\n  \"nsec3param\": \"\",\n  \"presigned\": {{faker 'random.boolean'}},\n  \"rrsets\": [\n    {\n      \"changetype\": \"\",\n      \"comments\": [\n        {\n          \"account\": \"\",\n          \"content\": \"\",\n          \"modified_at\": {{faker 'random.number'}}\n        }\n      ],\n      \"name\": \"\",\n      \"records\": [\n        {\n          \"content\": \"\",\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"ttl\": {{faker 'random.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"serial\": {{faker 'random.number'}},\n  \"slave_tsig_key_ids\": [\n    \"\"\n  ],\n  \"soa_edit\": \"\",\n  \"soa_edit_api\": \"\",\n  \"type\": \"\",\n  \"url\": \"\",\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Zone",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05d4a6ac-cc28-49b2-ac40-212fa451957d",
      "documentation": "Creates/modifies/deletes RRsets present in the payload and their comments. Returns 204 No Content on success.",
      "method": "patch",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "21194599-e103-458f-a04e-8fd4db7f3021",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d35286d-f78f-42fd-9a90-46f9db7f8987",
      "documentation": "Modifies basic zone data.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id",
      "responses": [
        {
          "uuid": "dac1dc36-630c-406e-a330-4ed2bfb7b2c0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Returns 204 No Content on success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18ee4a26-2837-416b-b450-d04b59ffcb1d",
      "documentation": "Retrieve slave zone from its master.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/axfr-retrieve",
      "responses": [
        {
          "uuid": "d538f3f4-a8e0-43c0-b564-4b96755b4565",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24051890-0e89-4b4d-ac71-cb83408ce671",
      "documentation": "Get all CryptoKeys for a zone, except the privatekey",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys",
      "responses": [
        {
          "uuid": "da1339e3-14d3-4350-a4f4-4599a463b6a6",
          "body": "[\n  {\n    \"active\": {{faker 'random.boolean'}},\n    \"algorithm\": \"\",\n    \"bits\": {{faker 'random.number'}},\n    \"dnskey\": \"\",\n    \"ds\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n    \"privatekey\": \"\",\n    \"published\": {{faker 'random.boolean'}},\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Cryptokey objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3e91663-644b-40aa-83f0-b22dcb415eff",
      "documentation": "Creates a Cryptokey",
      "method": "post",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys",
      "responses": [
        {
          "uuid": "b3664308-c052-4229-9c07-8e363f9577ae",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"algorithm\": \"\",\n  \"bits\": {{faker 'random.number'}},\n  \"dnskey\": \"\",\n  \"ds\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n  \"privatekey\": \"\",\n  \"published\": {{faker 'random.boolean'}},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fc8da96-9f73-4e8c-911d-61a8f49ebea4",
      "documentation": "This method deletes a key specified by cryptokey_id.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "883f53f3-4e6d-4df4-8fb0-eae251507ac0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15fa71da-5cf1-44fb-b206-d19759296ed9",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when something is wrong with the content of the request. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d3a33ce-64bb-4cb4-b204-994896c2e6ca",
      "documentation": "Returns all data about the CryptoKey, including the privatekey.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "f1959bb3-62f9-4e7c-aff1-6ddda39e6638",
          "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"algorithm\": \"\",\n  \"bits\": {{faker 'random.number'}},\n  \"dnskey\": \"\",\n  \"ds\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"keytype\": \"{{oneOf (array 'ksk' 'zsk' 'csk')}}\",\n  \"privatekey\": \"\",\n  \"published\": {{faker 'random.boolean'}},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Cryptokey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a12f3f0-73e1-4a2a-afd2-186f7944a04e",
      "documentation": "This method (de)activates a key from zone_name specified by cryptokey_id",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/cryptokeys/:cryptokey_id",
      "responses": [
        {
          "uuid": "2206eb8d-595e-4da2-a277-34a8a49504a7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fd4e4d1-cb58-40e1-9cd4-0fd041e8972c",
          "body": "",
          "latency": 0,
          "statusCode": 422,
          "label": "Returned when something is wrong with the content of the request. Contains an error message",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d7938fc-b5a4-4ba1-8926-14e38a181d12",
      "documentation": "Returns the zone in AXFR format.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/export",
      "responses": [
        {
          "uuid": "e2268f00-14df-4258-bc53-8b73afbea3a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ba9c3c9-6739-47b2-97f7-de72ac22143c",
      "documentation": "Get all the Metadata associated with the zone.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata",
      "responses": [
        {
          "uuid": "9ca11b2f-eb1a-49b6-b889-4064acdd5084",
          "body": "[\n  {\n    \"kind\": \"\",\n    \"metadata\": [\n      \"\"\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Metadata objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ca64878-1e78-43d6-9043-1d9718b1d569",
      "documentation": "Creates a set of metadata entries",
      "method": "post",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata",
      "responses": [
        {
          "uuid": "081bcd59-2e98-4f7d-b486-c89e2d5dbdf1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ed50313-c92f-4133-bb39-28fe44ca1bcc",
      "documentation": "Delete all items of a single kind of domain metadata.",
      "method": "delete",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "2c6c8db9-9443-4c13-9e6e-ad59367dee00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1d91405-c239-4395-85a2-a25a5e66f1c8",
      "documentation": "Get the content of a single kind of domain metadata as a Metadata object.",
      "method": "get",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "84711832-5a35-411f-a003-c68aef38e854",
          "body": "{\n  \"kind\": \"\",\n  \"metadata\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Metadata object with list of values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30c9e471-c998-45f1-8aed-21ee88ace1ef",
      "documentation": "Replace the content of a single kind of domain metadata.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/metadata/:metadata_kind",
      "responses": [
        {
          "uuid": "c61921ed-f07a-490b-b990-820da6ca0c77",
          "body": "{\n  \"kind\": \"\",\n  \"metadata\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Metadata object with list of values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d76d79a0-e237-4f46-8f6b-2ec156e2b0d2",
      "documentation": "Send a DNS NOTIFY to all slaves.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/notify",
      "responses": [
        {
          "uuid": "cb464b1a-1069-4a52-a652-4e41c64f8f65",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8233b19-335a-4e32-a5ef-172bd3c3c7ca",
      "documentation": "Rectify the zone data.",
      "method": "put",
      "endpoint": "servers/:server_id/zones/:zone_id/rectify",
      "responses": [
        {
          "uuid": "5188e1b0-7727-407b-a827-982f03432159",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}