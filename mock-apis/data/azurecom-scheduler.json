{
  "uuid": "396cf26e-9e76-42a1-b52b-58519b38705f",
  "lastMigration": 19,
  "name": "SchedulerManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1464d386-a129-45ae-8da7-39f7d7afd483",
      "documentation": "Gets all job collections under specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Scheduler/jobCollections",
      "responses": [
        {
          "uuid": "01ed9b88-d4e1-44ec-8619-11ef97d12cb3",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"quota\": {\n          \"maxJobCount\": {{faker 'random.number'}},\n          \"maxJobOccurrence\": {{faker 'random.number'}},\n          \"maxRecurrence\": {\n            \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n            \"interval\": {{faker 'random.number'}}\n          }\n        },\n        \"sku\": {\n          \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n        },\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collections have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f69d7011-c89f-4932-96ab-16da44a6bb76",
      "documentation": "Gets all job collections under specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections",
      "responses": [
        {
          "uuid": "2a38fe3a-04a3-4339-ba0a-1aee4e9813f6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"quota\": {\n          \"maxJobCount\": {{faker 'random.number'}},\n          \"maxJobOccurrence\": {{faker 'random.number'}},\n          \"maxRecurrence\": {\n            \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n            \"interval\": {{faker 'random.number'}}\n          }\n        },\n        \"sku\": {\n          \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n        },\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collections have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df9a42d0-6e71-4ba5-99fd-825f7bbcaaa6",
      "documentation": "Deletes a job collection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "a2ea3eb1-2bf8-454e-b20c-b3611a31239d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fe4be59-f712-47cc-9bf0-d06d6b6a336d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The delete operation for the job collection has been accepted and will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc24dba8-d195-4a5e-84fe-071a30714429",
      "documentation": "Gets a job collection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "71089a2d-e12a-4cc1-bcf7-d2ee52b608a9",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d38761f9-d16e-4311-922a-21893d2a1212",
      "documentation": "Patches an existing job collection.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "14f572af-f67c-4c54-bc52-187736b8da4f",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully patched.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b5eb332-8a74-4b98-a87f-43505e924fd9",
      "documentation": "Provisions a new job collection or updates an existing job collection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "2d58789a-7958-4be0-b55e-1de226655989",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2936720-dc49-456b-9647-c35a13c74420",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The job collection has been successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6923f7e-cd73-44f4-80eb-f2ab127ea961",
      "documentation": "Disables all of the jobs in the job collection.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/disable",
      "responses": [
        {
          "uuid": "b29680a8-9904-47a1-aa9f-82480a2bdd4f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All of the jobs in the job collection have been successfully disabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "721b69df-ad42-4b76-886a-0966c9bc3042",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the disable job collection operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f968ce4-b9ef-4a7b-a427-c71fe545f3e2",
      "documentation": "Enables all of the jobs in the job collection.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/enable",
      "responses": [
        {
          "uuid": "8aab9641-d124-4de6-9edf-5ceb4ac22d93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All of the jobs in the job collection have been successfully enabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afaf1123-0865-4b71-8c31-7eff6e7ca3c5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the enable job collection operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01fb148c-acb8-4f1c-a9ad-2d0c3b058035",
      "documentation": "Lists all jobs under the specified job collection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs",
      "responses": [
        {
          "uuid": "a7900ac6-dfaf-47a9-b741-8a13534ff545",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"action\": {\n          \"errorAction\": {\n            \"queueMessage\": {\n              \"message\": \"\",\n              \"queueName\": \"\",\n              \"sasToken\": \"\",\n              \"storageAccount\": \"\"\n            },\n            \"request\": {\n              \"authentication\": {\n                \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n              },\n              \"body\": \"\",\n              \"headers\": {},\n              \"method\": \"\",\n              \"uri\": \"\"\n            },\n            \"retryPolicy\": {\n              \"retryCount\": {{faker 'random.number'}},\n              \"retryInterval\": \"\",\n              \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n            },\n            \"serviceBusQueueMessage\": {\n              \"authentication\": {\n                \"sasKey\": \"\",\n                \"sasKeyName\": \"\",\n                \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n              },\n              \"brokeredMessageProperties\": {\n                \"contentType\": \"\",\n                \"correlationId\": \"\",\n                \"forcePersistence\": {{faker 'random.boolean'}},\n                \"label\": \"\",\n                \"messageId\": \"\",\n                \"partitionKey\": \"\",\n                \"replyTo\": \"\",\n                \"replyToSessionId\": \"\",\n                \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n                \"sessionId\": \"\",\n                \"timeToLive\": \"\",\n                \"to\": \"\",\n                \"viaPartitionKey\": \"\"\n              },\n              \"customMessageProperties\": {},\n              \"message\": \"\",\n              \"namespace\": \"\",\n              \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n            },\n            \"serviceBusTopicMessage\": {\n              \"authentication\": {\n                \"sasKey\": \"\",\n                \"sasKeyName\": \"\",\n                \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n              },\n              \"brokeredMessageProperties\": {\n                \"contentType\": \"\",\n                \"correlationId\": \"\",\n                \"forcePersistence\": {{faker 'random.boolean'}},\n                \"label\": \"\",\n                \"messageId\": \"\",\n                \"partitionKey\": \"\",\n                \"replyTo\": \"\",\n                \"replyToSessionId\": \"\",\n                \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n                \"sessionId\": \"\",\n                \"timeToLive\": \"\",\n                \"to\": \"\",\n                \"viaPartitionKey\": \"\"\n              },\n              \"customMessageProperties\": {},\n              \"message\": \"\",\n              \"namespace\": \"\",\n              \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n            },\n            \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n          },\n          \"queueMessage\": {\n            \"message\": \"\",\n            \"queueName\": \"\",\n            \"sasToken\": \"\",\n            \"storageAccount\": \"\"\n          },\n          \"request\": {\n            \"authentication\": {\n              \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n            },\n            \"body\": \"\",\n            \"headers\": {},\n            \"method\": \"\",\n            \"uri\": \"\"\n          },\n          \"retryPolicy\": {\n            \"retryCount\": {{faker 'random.number'}},\n            \"retryInterval\": \"\",\n            \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n          },\n          \"serviceBusQueueMessage\": {\n            \"authentication\": {\n              \"sasKey\": \"\",\n              \"sasKeyName\": \"\",\n              \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n            },\n            \"brokeredMessageProperties\": {\n              \"contentType\": \"\",\n              \"correlationId\": \"\",\n              \"forcePersistence\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"messageId\": \"\",\n              \"partitionKey\": \"\",\n              \"replyTo\": \"\",\n              \"replyToSessionId\": \"\",\n              \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n              \"sessionId\": \"\",\n              \"timeToLive\": \"\",\n              \"to\": \"\",\n              \"viaPartitionKey\": \"\"\n            },\n            \"customMessageProperties\": {},\n            \"message\": \"\",\n            \"namespace\": \"\",\n            \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n          },\n          \"serviceBusTopicMessage\": {\n            \"authentication\": {\n              \"sasKey\": \"\",\n              \"sasKeyName\": \"\",\n              \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n            },\n            \"brokeredMessageProperties\": {\n              \"contentType\": \"\",\n              \"correlationId\": \"\",\n              \"forcePersistence\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"messageId\": \"\",\n              \"partitionKey\": \"\",\n              \"replyTo\": \"\",\n              \"replyToSessionId\": \"\",\n              \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n              \"sessionId\": \"\",\n              \"timeToLive\": \"\",\n              \"to\": \"\",\n              \"viaPartitionKey\": \"\"\n            },\n            \"customMessageProperties\": {},\n            \"message\": \"\",\n            \"namespace\": \"\",\n            \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n          },\n          \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n        },\n        \"recurrence\": {\n          \"count\": {{faker 'random.number'}},\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n          \"interval\": {{faker 'random.number'}},\n          \"schedule\": {\n            \"hours\": [\n              {{faker 'random.number'}}\n            ],\n            \"minutes\": [\n              {{faker 'random.number'}}\n            ],\n            \"monthDays\": [\n              {{faker 'random.number'}}\n            ],\n            \"monthlyOccurrences\": [\n              {\n                \"Occurrence\": {{faker 'random.number'}},\n                \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n              }\n            ],\n            \"weekDays\": [\n              \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n            ]\n          }\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n        \"status\": {\n          \"executionCount\": {{faker 'random.number'}},\n          \"failureCount\": {{faker 'random.number'}},\n          \"faultedCount\": {{faker 'random.number'}},\n          \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n          \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3204507-5ec8-438e-9bd8-09788bdaef42",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "6aa1bccf-385a-4971-9915-7aab6a7f3f33",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b2cbbf4-1e84-40b2-9996-d613c1fcabbc",
      "documentation": "Gets a job.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "8be0c6ea-94be-4722-af20-4bc2d268000f",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f31de270-d93e-413e-8717-0ae3ee55a165",
      "documentation": "Patches an existing job.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "ec99eef6-0ca4-4ed3-a690-5883175b43c9",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully patched.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6812183e-ad90-4f7b-ba25-53d7b90f507d",
      "documentation": "Provisions a new job or updates an existing job.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "7aab0e1d-1d8c-49ca-adbb-6c6c903f099a",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "099d5552-4462-4fda-bcbf-0c33b649459b",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The job has been successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1383f5e4-edde-41c9-af85-cdf58173f58e",
      "documentation": "Lists job history.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName/history",
      "responses": [
        {
          "uuid": "d74de29b-7545-4ce8-b076-b7a5a688b916",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"actionName\": \"{{oneOf (array 'MainAction' 'ErrorAction')}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"expectedExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"message\": \"\",\n        \"repeatCount\": {{faker 'random.number'}},\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"status\": \"{{oneOf (array 'Completed' 'Failed' 'Postponed')}}\"\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job histories have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a501925-28b3-45f5-8b33-0968e6293aa5",
      "documentation": "Runs a job.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName/run",
      "responses": [
        {
          "uuid": "2c5ab09f-4540-41ce-84fe-53479c3a9959",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully run.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}