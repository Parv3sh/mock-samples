{
  "uuid": "4cefd226-44bf-4aa0-8a46-45cd72d9612c",
  "lastMigration": 19,
  "name": "SchedulerManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "df57e97f-6be6-489f-8f3f-e1211b55837b",
      "documentation": "Gets all job collections under specified subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Scheduler/jobCollections",
      "responses": [
        {
          "uuid": "e654798c-c15e-4aa6-a1fa-7896d2fa5cea",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"quota\": {\n          \"maxJobCount\": {{faker 'random.number'}},\n          \"maxJobOccurrence\": {{faker 'random.number'}},\n          \"maxRecurrence\": {\n            \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n            \"interval\": {{faker 'random.number'}}\n          }\n        },\n        \"sku\": {\n          \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n        },\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collections have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6a598e3-9e8b-494a-9d34-5ae0522adea4",
      "documentation": "Gets all job collections under specified resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections",
      "responses": [
        {
          "uuid": "d63fb94f-414f-4cfa-9ace-4f5f9275d645",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"quota\": {\n          \"maxJobCount\": {{faker 'random.number'}},\n          \"maxJobOccurrence\": {{faker 'random.number'}},\n          \"maxRecurrence\": {\n            \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n            \"interval\": {{faker 'random.number'}}\n          }\n        },\n        \"sku\": {\n          \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n        },\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n      },\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collections have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea419704-b230-4460-96a5-ff8dedb95706",
      "documentation": "Deletes a job collection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "b1775aac-b8e0-4e40-8cdb-35e0e008125a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c020f723-52b9-4e03-b7d8-e64c037effc7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The delete operation for the job collection has been accepted and will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b023b81b-4128-4a3e-b1da-05dd07abf975",
      "documentation": "Gets a job collection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "db319973-d901-4f90-918e-778465dd2abc",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f22bda3f-00ee-4bf0-b309-cd4a01e188ba",
      "documentation": "Patches an existing job collection.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "d95cd1b0-4492-4353-a74f-4600ec354b64",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully patched.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac8e97de-97ce-407f-9b6b-211a5cb0bf30",
      "documentation": "Provisions a new job collection or updates an existing job collection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName",
      "responses": [
        {
          "uuid": "7c583b32-5d62-485d-9469-4b9e97e7ba03",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job collection has been successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000b6b14-399b-429d-98e9-5d4b2f4b8c62",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"quota\": {\n      \"maxJobCount\": {{faker 'random.number'}},\n      \"maxJobOccurrence\": {{faker 'random.number'}},\n      \"maxRecurrence\": {\n        \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n        \"interval\": {{faker 'random.number'}}\n      }\n    },\n    \"sku\": {\n      \"name\": \"{{oneOf (array 'Standard' 'Free' 'P10Premium' 'P20Premium')}}\"\n    },\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Suspended' 'Deleted')}}\"\n  },\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The job collection has been successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25563879-efa4-41c5-a68f-aa1231287cd5",
      "documentation": "Disables all of the jobs in the job collection.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/disable",
      "responses": [
        {
          "uuid": "211e7ce7-ae61-49b7-bfd0-ac3f7af84d9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All of the jobs in the job collection have been successfully disabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83232740-162b-4d38-b5aa-aaabc5e5624b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the disable job collection operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f89072ed-e294-475b-8d08-6b13ddb58098",
      "documentation": "Enables all of the jobs in the job collection.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/enable",
      "responses": [
        {
          "uuid": "03e4cf89-90e8-4b23-bb74-cf0366c31d1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All of the jobs in the job collection have been successfully enabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df97f37b-a38d-4d86-b651-507ee8775cce",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the enable job collection operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dcd52df-d3f0-4a93-824b-3c0a21ba12c4",
      "documentation": "Lists all jobs under the specified job collection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs",
      "responses": [
        {
          "uuid": "be219240-20c2-440c-b9fa-e92b56d9be85",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"action\": {\n          \"errorAction\": {\n            \"queueMessage\": {\n              \"message\": \"\",\n              \"queueName\": \"\",\n              \"sasToken\": \"\",\n              \"storageAccount\": \"\"\n            },\n            \"request\": {\n              \"authentication\": {\n                \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n              },\n              \"body\": \"\",\n              \"headers\": {},\n              \"method\": \"\",\n              \"uri\": \"\"\n            },\n            \"retryPolicy\": {\n              \"retryCount\": {{faker 'random.number'}},\n              \"retryInterval\": \"\",\n              \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n            },\n            \"serviceBusQueueMessage\": {\n              \"authentication\": {\n                \"sasKey\": \"\",\n                \"sasKeyName\": \"\",\n                \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n              },\n              \"brokeredMessageProperties\": {\n                \"contentType\": \"\",\n                \"correlationId\": \"\",\n                \"forcePersistence\": {{faker 'random.boolean'}},\n                \"label\": \"\",\n                \"messageId\": \"\",\n                \"partitionKey\": \"\",\n                \"replyTo\": \"\",\n                \"replyToSessionId\": \"\",\n                \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n                \"sessionId\": \"\",\n                \"timeToLive\": \"\",\n                \"to\": \"\",\n                \"viaPartitionKey\": \"\"\n              },\n              \"customMessageProperties\": {},\n              \"message\": \"\",\n              \"namespace\": \"\",\n              \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n            },\n            \"serviceBusTopicMessage\": {\n              \"authentication\": {\n                \"sasKey\": \"\",\n                \"sasKeyName\": \"\",\n                \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n              },\n              \"brokeredMessageProperties\": {\n                \"contentType\": \"\",\n                \"correlationId\": \"\",\n                \"forcePersistence\": {{faker 'random.boolean'}},\n                \"label\": \"\",\n                \"messageId\": \"\",\n                \"partitionKey\": \"\",\n                \"replyTo\": \"\",\n                \"replyToSessionId\": \"\",\n                \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n                \"sessionId\": \"\",\n                \"timeToLive\": \"\",\n                \"to\": \"\",\n                \"viaPartitionKey\": \"\"\n              },\n              \"customMessageProperties\": {},\n              \"message\": \"\",\n              \"namespace\": \"\",\n              \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n            },\n            \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n          },\n          \"queueMessage\": {\n            \"message\": \"\",\n            \"queueName\": \"\",\n            \"sasToken\": \"\",\n            \"storageAccount\": \"\"\n          },\n          \"request\": {\n            \"authentication\": {\n              \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n            },\n            \"body\": \"\",\n            \"headers\": {},\n            \"method\": \"\",\n            \"uri\": \"\"\n          },\n          \"retryPolicy\": {\n            \"retryCount\": {{faker 'random.number'}},\n            \"retryInterval\": \"\",\n            \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n          },\n          \"serviceBusQueueMessage\": {\n            \"authentication\": {\n              \"sasKey\": \"\",\n              \"sasKeyName\": \"\",\n              \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n            },\n            \"brokeredMessageProperties\": {\n              \"contentType\": \"\",\n              \"correlationId\": \"\",\n              \"forcePersistence\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"messageId\": \"\",\n              \"partitionKey\": \"\",\n              \"replyTo\": \"\",\n              \"replyToSessionId\": \"\",\n              \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n              \"sessionId\": \"\",\n              \"timeToLive\": \"\",\n              \"to\": \"\",\n              \"viaPartitionKey\": \"\"\n            },\n            \"customMessageProperties\": {},\n            \"message\": \"\",\n            \"namespace\": \"\",\n            \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n          },\n          \"serviceBusTopicMessage\": {\n            \"authentication\": {\n              \"sasKey\": \"\",\n              \"sasKeyName\": \"\",\n              \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n            },\n            \"brokeredMessageProperties\": {\n              \"contentType\": \"\",\n              \"correlationId\": \"\",\n              \"forcePersistence\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"messageId\": \"\",\n              \"partitionKey\": \"\",\n              \"replyTo\": \"\",\n              \"replyToSessionId\": \"\",\n              \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n              \"sessionId\": \"\",\n              \"timeToLive\": \"\",\n              \"to\": \"\",\n              \"viaPartitionKey\": \"\"\n            },\n            \"customMessageProperties\": {},\n            \"message\": \"\",\n            \"namespace\": \"\",\n            \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n          },\n          \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n        },\n        \"recurrence\": {\n          \"count\": {{faker 'random.number'}},\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n          \"interval\": {{faker 'random.number'}},\n          \"schedule\": {\n            \"hours\": [\n              {{faker 'random.number'}}\n            ],\n            \"minutes\": [\n              {{faker 'random.number'}}\n            ],\n            \"monthDays\": [\n              {{faker 'random.number'}}\n            ],\n            \"monthlyOccurrences\": [\n              {\n                \"Occurrence\": {{faker 'random.number'}},\n                \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n              }\n            ],\n            \"weekDays\": [\n              \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n            ]\n          }\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n        \"status\": {\n          \"executionCount\": {{faker 'random.number'}},\n          \"failureCount\": {{faker 'random.number'}},\n          \"faultedCount\": {{faker 'random.number'}},\n          \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n          \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33663466-3c3b-4604-83d3-05c53481bf96",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "4045c335-3a95-455e-8261-42015c9d3ce5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe706646-ed35-4783-840c-243d6a4d177f",
      "documentation": "Gets a job.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "e7a2ac4d-921b-4145-95cc-e27a81dacc33",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0830fbe-05af-4656-8ff0-e830702e86d5",
      "documentation": "Patches an existing job.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "76b6e202-3394-4379-9299-a67dc8a69664",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully patched.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8340c32a-637e-445b-a4bf-e2671348a32e",
      "documentation": "Provisions a new job or updates an existing job.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName",
      "responses": [
        {
          "uuid": "96f76fea-505d-4a69-8473-27d6377b299a",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ccbada8-69d1-46c9-b15e-aea421734ed4",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"action\": {\n      \"errorAction\": {\n        \"queueMessage\": {\n          \"message\": \"\",\n          \"queueName\": \"\",\n          \"sasToken\": \"\",\n          \"storageAccount\": \"\"\n        },\n        \"request\": {\n          \"authentication\": {\n            \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n          },\n          \"body\": \"\",\n          \"headers\": {},\n          \"method\": \"\",\n          \"uri\": \"\"\n        },\n        \"retryPolicy\": {\n          \"retryCount\": {{faker 'random.number'}},\n          \"retryInterval\": \"\",\n          \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n        },\n        \"serviceBusQueueMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"serviceBusTopicMessage\": {\n          \"authentication\": {\n            \"sasKey\": \"\",\n            \"sasKeyName\": \"\",\n            \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n          },\n          \"brokeredMessageProperties\": {\n            \"contentType\": \"\",\n            \"correlationId\": \"\",\n            \"forcePersistence\": {{faker 'random.boolean'}},\n            \"label\": \"\",\n            \"messageId\": \"\",\n            \"partitionKey\": \"\",\n            \"replyTo\": \"\",\n            \"replyToSessionId\": \"\",\n            \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n            \"sessionId\": \"\",\n            \"timeToLive\": \"\",\n            \"to\": \"\",\n            \"viaPartitionKey\": \"\"\n          },\n          \"customMessageProperties\": {},\n          \"message\": \"\",\n          \"namespace\": \"\",\n          \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n        },\n        \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n      },\n      \"queueMessage\": {\n        \"message\": \"\",\n        \"queueName\": \"\",\n        \"sasToken\": \"\",\n        \"storageAccount\": \"\"\n      },\n      \"request\": {\n        \"authentication\": {\n          \"type\": \"{{oneOf (array 'NotSpecified' 'ClientCertificate' 'ActiveDirectoryOAuth' 'Basic')}}\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"method\": \"\",\n        \"uri\": \"\"\n      },\n      \"retryPolicy\": {\n        \"retryCount\": {{faker 'random.number'}},\n        \"retryInterval\": \"\",\n        \"retryType\": \"{{oneOf (array 'None' 'Fixed')}}\"\n      },\n      \"serviceBusQueueMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"serviceBusTopicMessage\": {\n        \"authentication\": {\n          \"sasKey\": \"\",\n          \"sasKeyName\": \"\",\n          \"type\": \"{{oneOf (array 'NotSpecified' 'SharedAccessKey')}}\"\n        },\n        \"brokeredMessageProperties\": {\n          \"contentType\": \"\",\n          \"correlationId\": \"\",\n          \"forcePersistence\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"messageId\": \"\",\n          \"partitionKey\": \"\",\n          \"replyTo\": \"\",\n          \"replyToSessionId\": \"\",\n          \"scheduledEnqueueTimeUtc\": \"{{faker 'date.recent' 365}}\",\n          \"sessionId\": \"\",\n          \"timeToLive\": \"\",\n          \"to\": \"\",\n          \"viaPartitionKey\": \"\"\n        },\n        \"customMessageProperties\": {},\n        \"message\": \"\",\n        \"namespace\": \"\",\n        \"transportType\": \"{{oneOf (array 'NotSpecified' 'NetMessaging' 'AMQP')}}\"\n      },\n      \"type\": \"{{oneOf (array 'Http' 'Https' 'StorageQueue' 'ServiceBusQueue' 'ServiceBusTopic')}}\"\n    },\n    \"recurrence\": {\n      \"count\": {{faker 'random.number'}},\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"frequency\": \"{{oneOf (array 'Minute' 'Hour' 'Day' 'Week' 'Month')}}\",\n      \"interval\": {{faker 'random.number'}},\n      \"schedule\": {\n        \"hours\": [\n          {{faker 'random.number'}}\n        ],\n        \"minutes\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthDays\": [\n          {{faker 'random.number'}}\n        ],\n        \"monthlyOccurrences\": [\n          {\n            \"Occurrence\": {{faker 'random.number'}},\n            \"day\": \"{{oneOf (array 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday')}}\"\n          }\n        ],\n        \"weekDays\": [\n          \"{{oneOf (array 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\"\n        ]\n      }\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'Enabled' 'Disabled' 'Faulted' 'Completed')}}\",\n    \"status\": {\n      \"executionCount\": {{faker 'random.number'}},\n      \"failureCount\": {{faker 'random.number'}},\n      \"faultedCount\": {{faker 'random.number'}},\n      \"lastExecutionTime\": \"{{faker 'date.recent' 365}}\",\n      \"nextExecutionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The job has been successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6070b815-5c4d-4bda-a0a8-8053fa929e36",
      "documentation": "Lists job history.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName/history",
      "responses": [
        {
          "uuid": "d9931e0f-0344-460a-87a3-612b6832a46d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"actionName\": \"{{oneOf (array 'MainAction' 'ErrorAction')}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"expectedExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"message\": \"\",\n        \"repeatCount\": {{faker 'random.number'}},\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"status\": \"{{oneOf (array 'Completed' 'Failed' 'Postponed')}}\"\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The job histories have been successfully returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd1a1886-24f2-4b5e-9c60-3f00ea383b06",
      "documentation": "Runs a job.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Scheduler/jobCollections/:jobCollectionName/jobs/:jobName/run",
      "responses": [
        {
          "uuid": "7eb68990-8418-4c27-a89a-35c724549d10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The job has been successfully run.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}