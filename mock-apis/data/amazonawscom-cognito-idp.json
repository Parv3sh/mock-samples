{
  "uuid": "804c16aa-ae67-4244-bb41-d885db5fe777",
  "lastMigration": 19,
  "name": "Amazon Cognito Identity Provider",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2261efe1-5962-4cda-be4c-3cc6eea5b590",
      "documentation": "Adds additional user attributes to the user pool schema.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AddCustomAttributes",
      "responses": [
        {
          "uuid": "0d4e7f0b-dc69-4b6f-9ef8-a16e38f246f0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c0db2ca-379b-4ad0-b2e8-277b561d5148",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6478acea-8dd3-4cbe-9243-be7ee9edaab8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3509b68-7693-430b-9b1f-4d9a5989db8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2407e4fb-258c-47a3-910d-536247a00aad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab06e76a-b2e4-4e9a-8b2e-5051125221d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe81ab52-e02d-49f8-be16-9cd4f8ce9d07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5be19213-3b49-4279-b0c9-1e642614bcfe",
      "documentation": "<p>Adds the specified user to the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminAddUserToGroup",
      "responses": [
        {
          "uuid": "0ede9644-e492-4340-bdd1-5a2d9269b683",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f479eec-6e24-4f5e-b70f-d1f0dafa9112",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "999e1c8d-7f29-479e-bc6f-ff38f2d24b35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f6d43bb-b84c-462a-a339-03cbc34c0764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f5d933d-248f-4a27-9ee1-2c52f7680c61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb53e718-5ffe-4ef3-b705-794c3ab0ed7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "997bfad0-0b14-4fe4-b17a-1edc804da4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3c1c783-caa9-4df1-9d5d-5e70a889b22c",
      "documentation": "<p>Confirms user registration as an admin without using a confirmation code. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminConfirmSignUp",
      "responses": [
        {
          "uuid": "f3a11d5b-c284-44b8-94e7-f21f10280305",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d39c3cf-79d9-4d92-9850-e75f8484cad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11086926-c5ff-43e2-8482-532564077f25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0ce1cdc-bc93-4fec-87ca-610651811d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c935f6e6-4f52-4556-9fa2-3965bce1d595",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0cae544-61c7-4169-829c-050da1ee21d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3dbc0db-dd5c-4583-8ee9-5acfbc06c293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ea3f281-0b24-4b03-ae44-22f25a5bbcf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ce61f78-d7ee-4c7d-88d9-9cf41dc206aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fbe9091-1ec7-4dde-a5f4-bbbd831b690b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f278c54-78a8-452c-bbe5-78e995404494",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "545c6a24-28d1-428a-a6b9-1c94185c39c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5147fa27-12cf-4475-9b6e-74721ed60fd2",
      "documentation": "<p>Creates a new user in the specified user pool.</p> <p>If <code>MessageAction</code> is not set, the default is to send a welcome message via email or phone (SMS).</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>This message is based on a template that you configured in your call to create or update a user pool. This template includes your custom sign-up instructions and placeholders for user name and temporary password.</p> <p>Alternatively, you can call <code>AdminCreateUser</code> with “SUPPRESS” for the <code>MessageAction</code> parameter, and Amazon Cognito will not send any email. </p> <p>In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until they sign in and change their password.</p> <p> <code>AdminCreateUser</code> requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminCreateUser",
      "responses": [
        {
          "uuid": "e360efe6-d6b9-4f01-9404-270ffc9315df",
          "body": "{\n  \"User\": {\n    \"Username\": \"\",\n    \"Attributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Enabled\": {{faker 'random.boolean'}},\n    \"UserStatus\": \"\",\n    \"MFAOptions\": [\n      {\n        \"DeliveryMedium\": \"\",\n        \"AttributeName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e2e01d8-84e7-4631-9b29-bdba69485182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29f772e2-5071-45c1-b466-c345b1c8fd63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e7885d-79a4-49df-8aed-8a7a4967d71c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3f6e575-1af9-4e3f-8015-97a0e54ef57d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21332201-aa29-4116-b46b-1eec68cf5cc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b607793-de5e-4bf4-9ba7-6ac97b0e611e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "877f547b-b639-40fb-865e-c09d9cc0d360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1303fdb-4b70-478f-9244-f79c57af53a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85fc4b71-a1bb-46ed-858f-f91e6139ceb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bb9f402-ba51-4e0e-a452-9ed96cbf2c7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a22650cb-ec19-4157-a812-9357c7361248",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d93157ac-e947-4071-9cb7-b1a1b1536b1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74b2cd0c-aa83-4556-8fd0-49737e00db7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a2e03b1-a906-41c6-b69f-472c7fba5a0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25bf9773-d763-430f-968c-aff76db7b0c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UnsupportedUserStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58f7903f-8696-4396-9559-a6845abeebe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e8f0689-14d1-431b-9a4f-ee1c484a0fba",
      "documentation": "<p>Deletes a user as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUser",
      "responses": [
        {
          "uuid": "98e8a81d-4443-4f33-a034-f5648deef2f6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31415c53-a057-4b39-93cc-803ab64a97e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62e9fa24-8e77-421b-b9b6-722560ab4deb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3100fee-50f8-4e51-841a-634804c4e2fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba32a893-7848-4dd1-959d-7280ea732121",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e66e9972-f7d1-4dfa-a772-fe5c8ab355d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90d51e5f-383a-4d2a-aa54-20e491f6beeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4091510-670c-4396-97c4-9a4afecb1600",
      "documentation": "<p>Deletes the user attributes in a user pool as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUserAttributes",
      "responses": [
        {
          "uuid": "4e1c6697-0bb7-4d1f-98d0-b5b9d564257f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c13613f-f55b-4ea8-9ab9-1d7f672220e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e33baab-e65c-4ca4-b5af-fc468d8e1b91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5921b220-52ca-4b0d-a0fb-d8dbf464cdd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a55928f-3dca-4aa1-b94a-dc4686d30bae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "848e39f2-05b0-4090-a9e0-18c5811a9a83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32d20a7b-3408-44d2-8d4c-21a2f65bd0bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a53b5151-429d-4c31-8597-880f847d6697",
      "documentation": "<p>Disables the user from signing in with the specified external (SAML or social) identity provider. If the user to disable is a Cognito User Pools native username + password user, they are not permitted to use their password to sign-in. If the user to disable is a linked external IdP user, any link between that user and an existing user is removed. The next time the external user (no longer attached to the previously linked <code>DestinationUser</code>) signs in, they must create a new user account. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html\">AdminLinkProviderForUser</a>.</p> <p>This action is enabled only for admin access and requires developer credentials.</p> <p>The <code>ProviderName</code> must match the value specified when creating an IdP for the pool. </p> <p>To disable a native username + password user, the <code>ProviderName</code> value must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>, with the <code>ProviderAttributeValue</code> being the name that is used in the user pool for the user.</p> <p>The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code> for social identity providers. The <code>ProviderAttributeValue</code> must always be the exact subject that was used when the user was originally linked as a source user.</p> <p>For de-linking a SAML identity, there are two scenarios. If the linked identity has not yet been used to sign-in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code> must be the same values that were used for the <code>SourceUser</code> when the identities were originally linked using <code> AdminLinkProviderForUser</code> call. (If the linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>, the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must be the subject of the SAML assertion.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableProviderForUser",
      "responses": [
        {
          "uuid": "9d98d6f8-cfa6-449e-b7e3-1c9a20bf8cba",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70216d57-fc18-45f7-98d7-7b6a58c4916e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37514e32-040f-472b-aa24-6da3987fb7fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6901e84-9cd0-4496-9bdc-562f8b2628ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a33428e-b361-4190-9b66-a30b02fda4fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8be86279-46d8-4acd-a673-7e12dd45c85f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e05d14b3-503c-4bd8-a65b-e9ad9f94a63d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6be4e54-2157-447d-bf72-0b709acdc07d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "329da460-de0e-409b-8d77-bc62af5ac89b",
      "documentation": "<p>Disables the specified user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableUser",
      "responses": [
        {
          "uuid": "66a04088-0390-487b-9bc1-59cb2cbd125c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7f869d5-ae36-4396-8915-76ef07ce54eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f341d35-60a6-41cd-ae35-e9eb99efeeec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "351f286d-afae-4e3f-8879-48fef47f1fe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31abea70-a548-4f14-b68e-9470774ba51b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d2bdf61-f256-4b89-b5a4-6c31244c9555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a69e9a4a-3560-4461-b35f-69c0dbe50673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ce4dff4-b8ae-41e8-b5c6-d109e50e9fdd",
      "documentation": "<p>Enables the specified user as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminEnableUser",
      "responses": [
        {
          "uuid": "ae27ac15-48c6-43dd-9422-85c7eeae543c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d90b6ea-931e-4752-a46f-750f62896044",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e818e1e-905a-42b4-bf5f-73c0959b93f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e77ed96-30c6-428f-b0f3-8cb8a49c6aac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42ebf3cb-c3b3-47ce-965f-0603907c120c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad642cf3-efd5-4c50-b7f9-d3c6b3c35ae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb01345-4c9a-4d43-a604-a57a6c71b546",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d1b4044-8c2f-4148-be00-73c546478e35",
      "documentation": "<p>Forgets the device, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminForgetDevice",
      "responses": [
        {
          "uuid": "4263008f-4e20-46f2-bea0-e42abd583de7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b90dc2f8-9b4f-4cb3-a318-acb6f3a8efab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "952b5127-003b-42a4-a63c-f6021f4feac7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61d8599c-e918-4069-be92-2a9c22c3be00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14cf5ee6-c987-467f-90f5-d1a3cd72fe57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1927dd7-bee3-4480-830f-ce6e942cf3b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6425004e-71cc-4c4c-8bfa-425e2e0d2c2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24a981c8-52a8-47dc-b311-4790566c7e58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05ec77ea-ca6a-4b57-9870-7f502319c395",
      "documentation": "<p>Gets the device, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetDevice",
      "responses": [
        {
          "uuid": "cb5bccfc-efb2-4702-8c94-e6fca616cbad",
          "body": "{\n  \"Device\": {\n    \"DeviceKey\": \"\",\n    \"DeviceAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "793389e1-c311-4e4c-ae9f-71d8f8d00738",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "189650a7-2fa9-4aeb-b008-41b2cfaf7a5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a35ed0cb-d0cb-4881-b572-4ef860af47af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa5dd4d3-383b-4a5d-8ca9-7491651f253e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de30885a-21a4-4359-b459-ad9050b41478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc000df4-ecf9-4dd3-b527-bfc959402206",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cf0765a-8597-4fab-8390-97ea3d2d50c5",
      "documentation": "<p>Gets the specified user by user name in a user pool as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetUser",
      "responses": [
        {
          "uuid": "9a0f93d2-a090-4ddb-862d-b7c59cf90aef",
          "body": "{\n  \"Username\": \"\",\n  \"UserAttributes\": [\n    {\n      \"Name\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n  \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Enabled\": {{faker 'random.boolean'}},\n  \"UserStatus\": \"\",\n  \"MFAOptions\": [\n    {\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ],\n  \"PreferredMfaSetting\": \"\",\n  \"UserMFASettingList\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bba2dfd-a3ec-47ba-9825-d1bd6ee7fc80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6a5429b-9ddd-433f-8f5f-41b183159dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "691ad27e-09d5-47f1-a908-e83b1a560487",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96e97715-fedd-4cca-b102-c9f541812874",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be494c19-72d0-455a-b340-f7cb12fdfd06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f31bb4ab-7da7-407b-92eb-3992b15f9f40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e04bee2-670c-47ee-9c54-e3602561e999",
      "documentation": "<p>Initiates the authentication flow, as an administrator.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminInitiateAuth",
      "responses": [
        {
          "uuid": "ad60bea0-642f-4140-a9b5-7263aa8c6f47",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68439a26-e1c2-4547-ac1b-15b264b462ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf0885ef-1126-4495-aa57-599cb8cfdd86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "157060d1-2840-4e38-af37-b31e16f9dbe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fe584d8-d064-4404-9f7c-ca1e351c26ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a15966c4-53c0-47a1-b1a3-eac23ce28dfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5adda287-59e1-4725-ac03-ffbec97e5ecc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ba8a9a4-7eec-440f-8654-c35f9c369012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7486f62d-fbde-4a2a-b1ff-feb055ff89ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6c76b54-a83b-4e1e-ac12-ffb2b1da8f31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c20ae87-c0fb-438c-a0f1-d761cc4108cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1956274-5a6e-4442-8c33-7a749a817dc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8324cf90-1d5c-4368-8a5a-d49b78e468ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00641905-c8fa-4ed8-8030-d72d58f1c9fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54147940-a324-43ed-9511-7b0529a1f0ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b2ea23-8d41-4f2f-8fd8-e0910eebd3d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4825e52-08b5-4a05-afa8-e97322b15efe",
      "documentation": "<p>Links an existing user account in a user pool (<code>DestinationUser</code>) to an identity from an external identity provider (<code>SourceUser</code>) based on a specified attribute name and value from the external identity provider. This allows you to create a link from the existing user account to an external federated user identity that has not yet been used to sign in, so that the federated user identity can be used to sign in as the existing user account. </p> <p> For example, if there is an existing user with a username and password, this API links that user to a federated user identity, so that when the federated user identity is used, the user signs in as the existing user account. </p> <note> <p>The maximum number of federated identities linked to a user is 5.</p> </note> <important> <p>Because this API allows a user with an external federated identity to sign in as an existing user in the user pool, it is critical that it only be used with external identity providers and provider attributes that have been trusted by the application owner.</p> </important> <p>This action is enabled only for admin access and requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminLinkProviderForUser",
      "responses": [
        {
          "uuid": "77a8eb42-86e5-490b-9c3f-8dab9a11100f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38055d03-7087-4a54-a71c-951fcbc0657e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4b101db-4ae3-4712-8cd2-3f57adcd17d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d96a420-ec7a-4c7c-8f99-c6c5ab1083dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b5d2357-b24b-478a-92a4-b01e3dd094a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1dce4f5-91e5-4299-9458-418de0495fbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1971c1f0-e62f-4686-ae35-3d2b01db089a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9c7b93e-3da9-4111-b069-793f3db602ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165b0022-d2ae-4c76-8938-723fddac468f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e60a7eb-6ca9-47ea-b00c-1ba2b65cfacd",
      "documentation": "<p>Lists devices, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListDevices",
      "responses": [
        {
          "uuid": "c456568f-b12e-4f3a-9b49-60baeac294cb",
          "body": "{\n  \"Devices\": [\n    {\n      \"DeviceKey\": \"\",\n      \"DeviceAttributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bef0f2b-1e1a-4b18-a90d-9cf51f864330",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d948e4-a534-46a5-9329-fbe2410a0f55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "550a192d-7b8e-4fcd-b817-fafcb68f8820",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0705d3bc-e9dc-4756-ab6a-f2a2ecb41604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19be19e9-265c-49df-84a6-752e895b14f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48dda2ce-a6c3-46b1-a876-e9f87d622a60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c022681-521f-407e-b5f3-fdc812077ad3",
      "documentation": "<p>Lists the groups that the user belongs to.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListGroupsForUser",
      "responses": [
        {
          "uuid": "ff392585-4031-4c68-8f77-143ac394eb15",
          "body": "{\n  \"Groups\": [\n    {\n      \"GroupName\": \"\",\n      \"UserPoolId\": \"\",\n      \"Description\": \"\",\n      \"RoleArn\": \"\",\n      \"Precedence\": {{faker 'random.number'}},\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "848cbce6-7d3b-4b9d-a7b3-e316afa70249",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26f880d1-f514-4932-97c1-6f73cb81fa0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e54ea14-b003-4d33-84fd-dd6133d3d8e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e29fcc4e-65cd-4501-9894-9afe35139496",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03c9ae00-e457-45bf-9f4e-8128cf345e07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358bc8ee-cfef-4349-9717-da61fe53d356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d1a6549-fd58-4e5e-b5ef-c0f775f0a35c",
      "documentation": "Lists a history of user activity and any risks detected as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListUserAuthEvents",
      "responses": [
        {
          "uuid": "202ceb1b-8a0d-4195-9715-58143173b207",
          "body": "{\n  \"AuthEvents\": [\n    {\n      \"EventId\": \"\",\n      \"EventType\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n      \"EventResponse\": \"\",\n      \"EventRisk\": {\n        \"RiskDecision\": \"\",\n        \"RiskLevel\": \"\",\n        \"CompromisedCredentialsDetected\": {{faker 'random.boolean'}}\n      },\n      \"ChallengeResponses\": [\n        {\n          \"ChallengeName\": \"\",\n          \"ChallengeResponse\": \"\"\n        }\n      ],\n      \"EventContextData\": {\n        \"IpAddress\": \"\",\n        \"DeviceName\": \"\",\n        \"Timezone\": \"\",\n        \"City\": \"\",\n        \"Country\": \"\"\n      },\n      \"EventFeedback\": {\n        \"FeedbackValue\": \"\",\n        \"Provider\": \"\",\n        \"FeedbackDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "225469b5-36e2-40d5-996a-07f71bb73d1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1db614f-9dbe-4010-a9df-511f424356b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afe98685-feb9-435d-9984-0d82394a4a91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "822751ee-5f6a-4030-8214-d6d71d63016d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db89b9ee-8dcb-4010-a2cd-89b29f137d5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e738b0d-18bb-4321-9747-a214b0e6b4a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11887fd0-9bff-41e9-bb32-76198a68c234",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "898db052-f818-47e6-9c86-0e190f3591bd",
      "documentation": "<p>Removes the specified user from the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup",
      "responses": [
        {
          "uuid": "ee618094-c8b8-4877-bbd3-9cb4b70f7e4a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef6e66c6-9c72-4040-94c9-853c6247cff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a43b6aa-3ba6-42b9-b671-1a26b09d04e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de42c022-67ec-4090-94bb-a319046dcd3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce0cf439-2368-433d-a876-40003470f1e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fff1c97-a06d-461b-ac5f-f8aedf2e4daf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "681fef51-91f0-4c91-b553-860113b5a11a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4da9a416-3639-4fbf-9bc6-cbdd0f5b81b0",
      "documentation": "<p>Resets the specified user's password in a user pool as an administrator. Works on any user.</p> <p>When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminResetUserPassword",
      "responses": [
        {
          "uuid": "4e058e8e-5b46-418b-b6d3-18915dbe4494",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9904295e-324d-49bd-b80e-e73ce6edb244",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2e13383-c029-4a5e-93af-67059cdee5e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cede11b-bdb7-4391-8b8e-fc830444528b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1121d02a-1b55-4064-b256-e9e562c3002f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22f08b8-3c63-483a-96a9-2aa3a20e31d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b08f95c4-328a-4c7a-aa33-788b619c7b1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "548ef76c-5ebf-465a-991c-d21bdfa1cf69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d424d67-f60a-40d7-a5fe-9f3142f220a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f32da57-aaf7-4640-ad0e-f5fbf77d2877",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c6732f7-f9a6-4c4d-a545-8605024300a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feca1ad1-1487-491c-9442-563710779b4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21f05071-e91b-432d-94ac-c10ba312e26e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a5ff65b-51ae-43c4-a820-370beffccd17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0096859f-eaae-4b0a-9ede-e16e7bd2934d",
      "documentation": "<p>Responds to an authentication challenge, as an administrator.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge",
      "responses": [
        {
          "uuid": "70165861-85a6-4d59-ae49-d4c0713ee0bc",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ff81d11-8616-4c61-85e9-ab11dd4630d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "285050e9-99d5-4cc2-9b7f-4c2bc3398dd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb2cbbb1-89f5-44c0-9621-18425b442677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc00323d-7581-4e89-b9be-e4e58b38e4d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0029cbf-072f-4cee-a30a-ef8d09c77aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0131635-ae36-4f77-927a-6d96f1e613d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acc71853-a8dc-477d-ba61-a9bcc030e592",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7f227b3-0876-4705-a045-1b1db69c52ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ece4877-a36f-4ee0-8bf4-636133269513",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "937b91a1-a550-472b-bc2a-d84273a5b0e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f26bff-9107-469e-b59a-28f6ea205bda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0442cc62-f244-4b5d-94de-03f2cabea032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f616348-d3cf-4212-90c9-440e80e89f8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47fbd4ce-8ad5-4ae0-8935-de202a745ecb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cea41e31-d768-491f-9ca3-bf33e62e501d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5716b4b5-f9fc-45fc-93ce-31587d596349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51108f69-82bb-41dd-be81-b0ac9cf94002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe1acb57-9070-415a-aadd-f20f7cdec036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f96bcd9-99a9-4fb9-b82e-bc71bc4855fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4740cf96-92eb-4a86-b32c-005f443bb3da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a957aac-73f0-42c4-ba21-8d955b0245ca",
      "documentation": "Sets the user's multi-factor authentication (MFA) preference, including which MFA options are enabled and if any are preferred. Only one factor can be set as preferred. The preferred MFA factor will be used to authenticate a user if multiple factors are enabled. If multiple options are enabled and no preference is set, a challenge to choose an MFA option will be returned during sign in.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserMFAPreference",
      "responses": [
        {
          "uuid": "106cf577-9abb-4483-822b-e63a6956a191",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53e332d7-5949-4123-a81e-ad017bce2d6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a6193f6-f710-499f-bb12-76e5533f3a03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61437371-aad3-493f-b132-71dda4192c5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "710fffdc-5ae3-49bb-9290-62079ce6296e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8433c846-f523-4b59-a52f-4cdc1abf6a73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45f16175-9015-46ed-adeb-647da723f377",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "606f570f-d2c6-4053-9fed-8db1adc66306",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "075f98c9-4afe-4831-a9ed-b8232dab6558",
      "documentation": "<p>Sets the specified user's password in a user pool as an administrator. Works on any user. </p> <p>The password can be temporary or permanent. If it is temporary, the user status will be placed into the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in, the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code> challenge. If the user does not sign in before it expires, the user will not be able to sign in and their password will need to be reset by an administrator. </p> <p>Once the user has set a new password, or the password is permanent, the user status will be set to <code>Confirmed</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserPassword",
      "responses": [
        {
          "uuid": "afafcc92-cddd-4476-8269-6368aa27541b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cece7b99-67fe-41c5-96a2-436a5ce99daf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7adf2438-57b1-406b-abe4-a6971cf63d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d5f4ac2-7cbf-433e-956b-2622406dc30a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4afe4f11-f371-43bb-a863-0e8857a755d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3846005-e032-4b61-8b64-18b10100b374",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a227e7f6-1e70-4361-a0de-76b7f7477a67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e68cd2af-0b85-4705-8de6-d58812e9c8dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0002425c-c730-4c5b-9357-ed7d553ddbab",
      "documentation": " <i>This action is no longer supported.</i> You can use it to configure only SMS MFA. You can't use it to configure TOTP software token MFA. To configure either type of MFA, use <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html\">AdminSetUserMFAPreference</a> instead.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserSettings",
      "responses": [
        {
          "uuid": "d9d930d9-abb4-4b49-a0a6-679dc5e4cf1b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e9001bc-80f0-4de7-b1d9-680454b1c47e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d1d843e-030c-47ba-af1c-3b84f53d5724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "948ebb72-60e7-48c7-919b-0c5d459be01b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d02432b5-4740-47e3-8fbb-eab15c3d1386",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff8413ee-2cc7-427f-9e70-6ff0ebe4a777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b1a1042-ab72-478e-8077-3f1d14234a62",
      "documentation": "Provides feedback for an authentication event as to whether it was from a valid user. This feedback is used for improving the risk evaluation decision for the user pool as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback",
      "responses": [
        {
          "uuid": "4a1f5606-c9a5-4dc4-88f0-abe3abbd97b3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b65781a6-a029-44ac-9abf-2126ca99bfbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3575c59a-3524-4b29-83c3-4c07ec34403c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4976e53-ee47-478a-ba95-8ca56298224b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "708ac04e-7908-4404-91e7-f868ce147d9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3042527-6ae3-4c82-85ce-b7e5e2a8f769",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "076e5572-d531-4b7f-86df-398f8f8ef01f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3edfbb9a-a434-4b2f-9e4f-327ffc202fff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1c9fb9e-5fc1-4a0a-a46e-0fc7c4a72198",
      "documentation": "<p>Updates the device status as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus",
      "responses": [
        {
          "uuid": "d72e50a4-6a9f-413b-9512-b6f4490f26d7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d97d50f6-7435-48a4-a77c-0a8ba09092b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a93350d-62d9-48ed-bbb6-9189cfbb3fb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "596bdfe9-f2ee-44d9-8f8a-bbcf80c53aa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "699a65cd-a13c-48ff-98c8-740d7b202107",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca49cb91-937f-47f5-acf3-dc81f7987a20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bd31d0c-5084-481b-b77e-94d18f411de0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7e70b90-c1e8-4775-88e7-3b14d94ae170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "404111c8-2841-456f-9792-ac78700a6fca",
      "documentation": "<p>Updates the specified user's attributes, including developer attributes, as an administrator. Works on any user.</p> <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute name.</p> <p>In addition to updating user attributes, this API can also be used to mark phone and email as verified.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateUserAttributes",
      "responses": [
        {
          "uuid": "9ee21b3b-4aea-42fc-b00f-fbe7f9ed8198",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "598cc572-a2a0-4a3e-987f-d358891c253f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71e336f2-84cd-4386-a46f-0333582b09f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ab52ef-3449-4136-a5b3-1cb13d1a33da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4edf335f-9b06-40b0-a862-1b05dd8c4337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87d16295-1ef6-4a6a-b167-ee780e17d9fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30b23d93-2f34-4cc1-94f2-b083e4ffc4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6b3ffe3-8cfa-41c9-b54e-bd6ea1d0eb10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95d6c76b-c70c-4513-aded-05eed1350db6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b86cf619-2353-44f8-9a5f-984dcf2b4df7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7051e07-247a-42c7-914b-4c40d7c1d483",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "683b3c27-809b-4345-aa6f-d5e2de613e53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a308e4b1-f78d-4e87-8006-7dc1d1f8ebda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e13031a-e3a1-4c9f-a63c-94832edf8aba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "696b1f09-85c3-47b4-991f-01ca4cedfdde",
      "documentation": "<p>Signs out users from all devices, as an administrator. It also invalidates all refresh tokens issued to a user. The user's current access and Id tokens remain valid until their expiry. Access and Id tokens expire one hour after they are issued.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUserGlobalSignOut",
      "responses": [
        {
          "uuid": "2a98f606-5ddf-48f3-aa90-441863edc7ad",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b1a833d-acbc-4d24-affa-40502bbb932b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbcfacf9-5da1-4b18-a506-700d3fbada0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d81b5397-5feb-4706-bd99-e0b452e47a52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8733ed7-0817-40b2-bad9-23238b0b9e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "462cfb30-33a9-41ab-8dca-e021cf846ee0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a40385d-d1f0-4d35-8c59-72088a36116f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a782e8ae-b34d-4247-8f3e-d58cd71041fc",
      "documentation": "<p>Returns a unique generated shared secret key code for the user account. The request takes an access token or a session string, but not both.</p> <note> <p>Calling AssociateSoftwareToken immediately disassociates the existing software token from the user account. If the user doesn't subsequently verify the software token, their account is essentially set up to authenticate without MFA. If MFA config is set to Optional at the user pool level, the user can then login without MFA. However, if MFA is set to Required for the user pool, the user will be asked to setup a new software token MFA during sign in.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AssociateSoftwareToken",
      "responses": [
        {
          "uuid": "74dcf4e5-a2f0-4031-9b05-f125ddac1d5d",
          "body": "{\n  \"SecretCode\": \"\",\n  \"Session\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4a59fd0-ec1f-4df8-bb33-fefd5ff2353b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52587c9f-de77-42f7-91bd-e05f976bb7ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acaa1391-3b42-40e7-b70c-695600eef186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1e8f589-18e1-480e-9d57-b7e191543a18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa3629d1-5266-4106-9edd-b7c7a81baa74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e58e4a6-f259-40b9-a112-1c8b957f0c84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fcaab27-719f-47c3-9ef5-73993ce2ad4c",
      "documentation": "Changes the password for a specified user in a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ChangePassword",
      "responses": [
        {
          "uuid": "8cd43193-f9ff-4b02-bb01-40b44f99d54a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "992e7f73-2c04-493d-8b2b-e37628dedb23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5615542a-0b62-4f25-bf86-fbb42cae1840",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73119580-ff33-4277-895a-7575f20f984c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9db73a93-47d1-4898-b342-9c71ad4b05fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f344465-ac38-4293-8815-40368cfca845",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85c22659-d22f-4f89-9211-aa89ac7e5b81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6675b3f3-b833-4b53-b537-6721f9ac39fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e65f301-0583-451d-b5db-1759e54c32b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37d7afc8-ee96-46d4-874b-7428a1790077",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "925c4190-624e-412c-b4a4-8a3cb58732bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d52bf861-fd6b-421c-bfdf-7cff9b15e30d",
      "documentation": "Confirms tracking of the device. This API call is the call that begins device tracking.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmDevice",
      "responses": [
        {
          "uuid": "6148ec50-ead3-4756-84bc-66a0fdc7a03c",
          "body": "{\n  \"UserConfirmationNecessary\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7438297-5541-4782-b052-e942eb59fefc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd3ea649-6de7-43a2-8abc-33b0fea51708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f109d035-1bc3-4539-884d-936dcb8dfabb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20c5644b-1a24-4b14-90ba-a39306fc258b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e21b326a-653f-48e9-a3f6-395bcf9dc6a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a712f4a-63a0-4a7b-84f6-c94dfea5a3b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c99fdedf-045f-44d0-986c-0ddc70d60fc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b07a130-a3f6-4d96-9ec5-e4b0992d3690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7aaad39-16b7-43f7-82eb-36a6e28626fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04152754-3136-4acf-b237-d675157601f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a8b8a0e-8053-4cbf-8eb7-c420ba385adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0934b4bd-e018-4a53-bc64-de3fca37d8d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f0ac21b-be9c-4333-b313-505e3607ff58",
      "documentation": "Allows a user to enter a confirmation code to reset a forgotten password.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmForgotPassword",
      "responses": [
        {
          "uuid": "aa0b1153-2b63-40c9-9b12-27fac1b1f0de",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79db34f5-ef1b-4812-b8db-4eeb683929fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bed915e-25dd-490c-ac1c-3c84fac583ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "703e6a8b-2aec-4f00-8486-7a35c9ac9ac9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "346f8e86-e26d-4430-9327-556e2fcbbd35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469d445f-6b3b-4d5f-ac4f-f87251300a3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11524f4c-ff98-4ba2-b24f-0a4bcb6a9e43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dfc3b93-3c5d-4de5-92a1-01fda76df9bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58366f4f-be73-43a5-b6d5-7221aae85a65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91b70009-e9c1-4f30-9210-808898620b23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac5e62f8-3d82-492a-ba29-ade42939ef44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d39af433-94f7-4b97-a73d-2e261a6e184e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e10050a5-d8d9-4ec6-af76-517a49ed8eef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6331ef4a-aa43-4616-8c64-c3ce1fc05010",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c52889b-8bb6-4888-a25c-2d5b0c08f2cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a22b2b8-b37f-48cc-97a7-3b7f28cae220",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17fde9a4-b622-4bb8-891c-98260e1fb32a",
      "documentation": "Confirms registration of a user and handles the existing alias from a previous user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmSignUp",
      "responses": [
        {
          "uuid": "f68a7aca-c2f5-4b46-8d3c-3225c44de2d1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a0c6b32-d2e2-437f-b097-29ae96d774c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30b66791-5358-40d1-9417-8c55a4dc9098",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9aef70f4-3366-4168-a34b-99231a2bc63b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae5404dc-f82c-4f21-9659-9678473160b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46443625-0db2-4ba4-8b51-6d75bccbc618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad1c34ab-46d2-42cd-8c60-956d199c159a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b68cd75-c33b-4a44-9ff4-bc55ab18997b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f560580-38cc-48f4-b883-01581bd4b7ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f917ead3-b2bf-4ba7-808d-91e9eca22350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b59d580d-0167-44e1-8d1f-4b83fc1068c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d1dab93-eaf9-4db8-bc39-e0abdcbf796e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "965fcb1b-e5da-4471-9c71-e156266581c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d76edc2-8bec-4b93-bd19-e97fd5e81ada",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "829ef777-0da7-4578-94e2-7257c60b36ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d0511dc-dc59-4852-bdb2-ef0b23dff9c4",
      "documentation": "<p>Creates a new group in the specified user pool.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateGroup",
      "responses": [
        {
          "uuid": "481dda1b-6941-4600-b5e8-dfd47405e03e",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "755c30c3-516f-4836-ae42-5c50c60ea0fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c84c9eda-0754-4ee1-895c-d74ae53865a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "GroupExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa80b37f-6d93-401b-9a00-fa5c0a3ae2e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c4dd545-c0f2-4d97-ad42-535ec396710a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9634308-5874-489f-8741-e770f130ef72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fdac527-5867-4ebd-be1d-0858029e180f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c65c052a-66b4-48d9-bfc1-eeb6e437e69b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61d95c78-820d-41d1-8771-6e1870b0bddd",
      "documentation": "Creates an identity provider for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateIdentityProvider",
      "responses": [
        {
          "uuid": "b546a3fc-97cc-4bd2-a86f-6e990ff6e1e0",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25403397-be08-4562-9246-60562d2fccfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e61fe9bc-83fd-4c6f-8f78-428fc8e94b90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4740d18f-3c9d-4025-997c-96e48087e1ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de08d803-465c-4c5f-8a30-a11eb27bbfe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdc5359-33ab-4cee-b09e-d65a23578f37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "724e4de0-ba47-4602-b75b-003572457a93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fc35a92-a211-4e8f-b2c6-1ec9cf5c7c0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f102e22-b8a0-4ee6-8b05-ec92c19cee15",
      "documentation": "Creates a new OAuth2.0 resource server and defines custom scopes in it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateResourceServer",
      "responses": [
        {
          "uuid": "99ffee4b-2e45-4dd4-b064-44cf70687bb0",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "199ad0bc-c481-4e40-80e6-feb3313313f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ffefb15-26ee-4202-9b16-7b0d2ed41f42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf86f30-42a9-4cef-8a78-490ea4359b2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9cc5ce1-fe79-43f9-b30e-5c279c37b3fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8d3a178-995c-4fca-a839-1934735bc5c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8b7a179-4009-455a-9ed7-0161cc84e80c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d341db74-5624-489f-b2f5-947ab34cc577",
      "documentation": "Creates the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserImportJob",
      "responses": [
        {
          "uuid": "3f46c972-407c-41c5-85a7-8329af36bed3",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "592dc610-7b75-45d7-89ad-6818f57cd1f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354f71ba-f8e4-4fc1-ac2e-cc8e368c929f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b34a83e-1439-4b44-8ba7-8d79c47596df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fda7b81a-2e70-48b4-849e-d7e129938d78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e0606d8-f67d-4dcb-9524-2a11053406fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cdd8b91-e7f2-406d-ab66-bfb67c65d203",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584b7de7-aea9-4a5f-8873-bceea84dd675",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0df904f6-3d0a-4549-9e5a-937221a40fef",
      "documentation": "<p>Creates a new Amazon Cognito user pool and sets the password policy for the pool.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPool",
      "responses": [
        {
          "uuid": "90559268-242c-4e65-b5ae-0c39c072b503",
          "body": "{\n  \"UserPool\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Policies\": {\n      \"PasswordPolicy\": {\n        \"MinimumLength\": {{faker 'random.number'}},\n        \"RequireUppercase\": {{faker 'random.boolean'}},\n        \"RequireLowercase\": {{faker 'random.boolean'}},\n        \"RequireNumbers\": {{faker 'random.boolean'}},\n        \"RequireSymbols\": {{faker 'random.boolean'}},\n        \"TemporaryPasswordValidityDays\": {{faker 'random.number'}}\n      }\n    },\n    \"LambdaConfig\": {\n      \"PreSignUp\": \"\",\n      \"CustomMessage\": \"\",\n      \"PostConfirmation\": \"\",\n      \"PreAuthentication\": \"\",\n      \"PostAuthentication\": \"\",\n      \"DefineAuthChallenge\": \"\",\n      \"CreateAuthChallenge\": \"\",\n      \"VerifyAuthChallengeResponse\": \"\",\n      \"PreTokenGeneration\": \"\",\n      \"UserMigration\": \"\",\n      \"CustomSMSSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"CustomEmailSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"KMSKeyID\": \"\"\n    },\n    \"Status\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"SchemaAttributes\": [\n      {\n        \"Name\": \"\",\n        \"AttributeDataType\": \"\",\n        \"DeveloperOnlyAttribute\": {{faker 'random.boolean'}},\n        \"Mutable\": {{faker 'random.boolean'}},\n        \"Required\": {{faker 'random.boolean'}},\n        \"NumberAttributeConstraints\": {\n          \"MinValue\": \"\",\n          \"MaxValue\": \"\"\n        },\n        \"StringAttributeConstraints\": {\n          \"MinLength\": \"\",\n          \"MaxLength\": \"\"\n        }\n      }\n    ],\n    \"AutoVerifiedAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"AliasAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email' 'preferred_username')}}\"\n    ],\n    \"UsernameAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"SmsVerificationMessage\": \"\",\n    \"EmailVerificationMessage\": \"\",\n    \"EmailVerificationSubject\": \"\",\n    \"VerificationMessageTemplate\": {\n      \"SmsMessage\": \"\",\n      \"EmailMessage\": \"\",\n      \"EmailSubject\": \"\",\n      \"EmailMessageByLink\": \"\",\n      \"EmailSubjectByLink\": \"\",\n      \"DefaultEmailOption\": \"\"\n    },\n    \"SmsAuthenticationMessage\": \"\",\n    \"MfaConfiguration\": \"\",\n    \"DeviceConfiguration\": {\n      \"ChallengeRequiredOnNewDevice\": {{faker 'random.boolean'}},\n      \"DeviceOnlyRememberedOnUserPrompt\": {{faker 'random.boolean'}}\n    },\n    \"EstimatedNumberOfUsers\": {{faker 'random.number'}},\n    \"EmailConfiguration\": {\n      \"SourceArn\": \"\",\n      \"ReplyToEmailAddress\": \"\",\n      \"EmailSendingAccount\": \"\",\n      \"From\": \"\",\n      \"ConfigurationSet\": \"\"\n    },\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    },\n    \"UserPoolTags\": {},\n    \"SmsConfigurationFailure\": \"\",\n    \"EmailConfigurationFailure\": \"\",\n    \"Domain\": \"\",\n    \"CustomDomain\": \"\",\n    \"AdminCreateUserConfig\": {\n      \"AllowAdminCreateUserOnly\": {{faker 'random.boolean'}},\n      \"UnusedAccountValidityDays\": {{faker 'random.number'}},\n      \"InviteMessageTemplate\": {\n        \"SMSMessage\": \"\",\n        \"EmailMessage\": \"\",\n        \"EmailSubject\": \"\"\n      }\n    },\n    \"UserPoolAddOns\": {\n      \"AdvancedSecurityMode\": \"\"\n    },\n    \"UsernameConfiguration\": {\n      \"CaseSensitive\": {{faker 'random.boolean'}}\n    },\n    \"Arn\": \"\",\n    \"AccountRecoverySetting\": {\n      \"RecoveryMechanisms\": [\n        {\n          \"Priority\": {{faker 'random.number'}},\n          \"Name\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7225f39-a43a-4018-beb3-3be23691dd84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c76b007-1959-4cde-9f85-29cbbb921062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0df0c56f-641a-4b52-98da-5a00de456ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41a7aaea-eda9-4364-bedb-407e2764a479",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eff6869-fdcb-4dc7-b31f-e24e04585b34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8aaea26-c88e-4d37-bc9a-bfca783d999c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b529d3-8c9c-4bca-b9b9-c046187afd6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6077f9ce-41ea-4d6e-806f-a949b28399b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ada5a1d7-87ff-4903-80d3-a113327e9554",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49299758-759f-4696-a708-85b049073253",
      "documentation": "<p>Creates the user pool client.</p> <p>When you create a new user pool client, token revocation is automatically enabled. For more information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\">RevokeToken</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolClient",
      "responses": [
        {
          "uuid": "182ad3cb-67ed-4a26-8c12-d4ba1167abd7",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a75fcf9-c49d-44ab-9fd0-87333048b2f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "254e9764-899c-468f-a392-a7ccc32613b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f8c900f-6466-4584-91cc-2bfd8e107b99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6009da3-dce7-4979-a787-082c723096cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3b78a12-6808-44ed-aa7c-e6b0545d4a29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a0241cb-1f16-4202-99e1-3eb7fcbfe7c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ScopeDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd947840-2f85-4f4e-b1db-ff099f778250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidOAuthFlowException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c63132e7-2005-4a12-b3f5-494361ba61d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e338475e-c87d-4ff5-99c3-2385853e7eed",
      "documentation": "Creates a new domain for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolDomain",
      "responses": [
        {
          "uuid": "1ef07e10-33b4-4805-9d34-bf22afba10c2",
          "body": "{\n  \"CloudFrontDomain\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb0811ee-0af6-45b0-9d34-9f0228aacced",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "640b80c5-45a1-47aa-a0a0-d3c4a1d935af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd848ced-ea3a-4c0f-874f-6cb55be70eeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b475bb7-17da-4517-9805-677c506ac16b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6cca237-195d-45e1-872c-8129036cbb27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "900c4221-6296-4f36-bd53-69c0fd8d0372",
      "documentation": "<p>Deletes a group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteGroup",
      "responses": [
        {
          "uuid": "534c7504-7cd6-4186-b59c-2ee2a17683d7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b490e30-5fd4-4f93-a892-726506dec801",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d05bb786-b94b-41d2-927b-01ea4e1f9417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a62f74-19c2-4c4c-ad0d-1737fba31ceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70e798c8-6844-48f3-b665-e4cc54150046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0a2dc0b-b117-4779-84f5-246394ed8639",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21beb1e2-2716-48fd-a9e7-43d50fb4b1d5",
      "documentation": "Deletes an identity provider for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteIdentityProvider",
      "responses": [
        {
          "uuid": "b8a3370a-c767-40b7-9689-c3268e420481",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "182a91d4-cb11-4614-a318-88c860c783d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e07dbeb-4150-47d6-b2fe-5a57b3982371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedIdentityProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59b41879-dfa2-4952-9251-68e2f1e21416",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6da91873-5dd9-4d6f-84b4-d5f6489fd40c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b738aa8-8bd0-4e8b-afd1-96ea728dcc18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cecfd1a4-a155-4bc4-bc1c-59ef426cd5e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "887ebeab-809d-4b90-8511-136ab6d8ab40",
      "documentation": "Deletes a resource server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteResourceServer",
      "responses": [
        {
          "uuid": "90503cb5-c19a-45d3-b31c-027b10450eb4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed4d207e-ccd3-42c9-9e01-c1dd55826de7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f344d4ed-9f7e-4fdc-bcca-46599bc9fcbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b01e3f84-2a6e-4ec4-ada0-bb986e583112",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c96d3867-0538-40c9-b97d-c552ce3e781a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f282d8e-3f8d-465e-bd4d-fcb3a25c10d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d30b7494-3f6f-40ed-8d3c-1b15fe4945b1",
      "documentation": "Allows a user to delete himself or herself.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUser",
      "responses": [
        {
          "uuid": "5a798cae-bc83-4d40-8098-50081adb1346",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cbff920-047a-41c5-b133-bd10fd311bdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7805f747-1680-4518-80b0-d838db6bf417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0cc6b43-9173-4f8e-b44f-e1700fd139a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c404c578-cf73-46c4-a97e-815a4694c5dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a967d47-f57f-4670-ab32-4f579bc733e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4de5b570-81ff-48d6-ae9b-e004519e4210",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "106d6d40-9585-4b22-91ca-d10b20daa84c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eb820cc-5906-4862-8115-9a639f8900f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f7dc447-d8f3-43a0-b945-87558789b346",
      "documentation": "Deletes the attributes for a user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserAttributes",
      "responses": [
        {
          "uuid": "e2c4a5f8-f11b-4c32-a690-3b8727cf91b8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4802ec4b-43e3-4b97-aefa-066ec40605b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7f675b8-73fe-4ac9-9712-c542cf2a54c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad7c476-f1d2-480b-b754-33316b566bb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41576804-43df-4bbc-86fd-6fcf4381ba74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "256e4a42-fff7-4dc5-b998-2d6d64e42076",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f690c809-0859-4c0e-9757-631088749221",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1052cd25-e7fa-468a-9285-e58874663eb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb820e12-720c-47cd-a921-006bdac0311f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "809b007b-5683-4985-8846-bcd317561d06",
      "documentation": "Deletes the specified Amazon Cognito user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPool",
      "responses": [
        {
          "uuid": "f9d35383-1bb0-4cae-8cde-69dd7b558e4c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8de3bc33-84a8-4ab3-adb0-6b00579c98a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b242a637-4e32-4166-9a96-f251f8c92502",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79e18dc0-9f1e-4480-b39b-afdd4e3b9d9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4cb7e23-6c5d-4cf4-b48f-e6692962fe94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1842388d-1c80-4b15-ab03-16cec7fe4551",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beaa2f85-9bf4-4d58-b344-d6cac897c101",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e67d7ec2-0306-4da8-bfb1-b174757333bb",
      "documentation": "Allows the developer to delete the user pool client.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolClient",
      "responses": [
        {
          "uuid": "5fd701ed-1fd0-4157-a7a0-de6cf8ed0d10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17837612-2432-44d9-acc2-6ec349d14002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "427549d9-747a-4c1b-b348-9e7bd10b0b0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7515bfb6-9e84-4bff-b851-898711c265de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82e0ecfe-47a8-4197-b992-93969130ae1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dbc968e-5232-4850-b26e-ce7ec207b7ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6838bf3-6c74-48f9-a422-89b84f74131e",
      "documentation": "Deletes a domain for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolDomain",
      "responses": [
        {
          "uuid": "b53061cd-6818-452b-843c-c3230a6e43d1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c54ad817-d493-49af-84d7-735345e20b2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5873ada8-152f-409e-a894-aa9d7cf9fe21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b437d86f-fed6-411f-98d1-0d5351453afd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57c05a16-2d68-49eb-8e46-24aae569c8cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b674f2eb-480f-4e9d-b792-bd2b3365ad3f",
      "documentation": "Gets information about a specific identity provider.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeIdentityProvider",
      "responses": [
        {
          "uuid": "6b71720c-1f5c-4fa7-a82f-61be04083d54",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "790fdc67-731a-4d6a-b3cc-eba9f68f4b34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c4e123d-2176-45b3-b9f9-0a98e4634634",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d11caff-d100-4e60-8460-5e903393e763",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdb5c3a8-e5ed-4c75-b9cb-2973a26a2983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ca347fa-ce03-47a6-98f7-29b1d15b5717",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93fbe305-90e2-46e5-a1f7-557c171e8ecb",
      "documentation": "Describes a resource server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeResourceServer",
      "responses": [
        {
          "uuid": "0c483a09-f71c-4f46-8782-e38c623f5d03",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26b7d38e-a64f-4e11-96c9-45f7227848d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48a7ae00-e6b0-4468-9f00-b6cacde50637",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99dbf8fa-5ebf-44fd-818b-66dfbcac8bee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84dd262b-4dc1-40d2-86b3-8e1232e94948",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28262a85-73e4-4cd7-bf56-5bd6de469fa9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e5e25cf-8dc8-4e0e-b6a5-d3a0cc0c6196",
      "documentation": "Describes the risk configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeRiskConfiguration",
      "responses": [
        {
          "uuid": "d441ba22-21ac-4c34-ac99-d229e02c56a7",
          "body": "{\n  \"RiskConfiguration\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"CompromisedCredentialsRiskConfiguration\": {\n      \"EventFilter\": [\n        \"{{oneOf (array 'SIGN_IN' 'PASSWORD_CHANGE' 'SIGN_UP')}}\"\n      ],\n      \"Actions\": {\n        \"EventAction\": \"\"\n      }\n    },\n    \"AccountTakeoverRiskConfiguration\": {\n      \"NotifyConfiguration\": {\n        \"From\": \"\",\n        \"ReplyTo\": \"\",\n        \"SourceArn\": \"\",\n        \"BlockEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"NoActionEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"MfaEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        }\n      },\n      \"Actions\": {\n        \"LowAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"MediumAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"HighAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        }\n      }\n    },\n    \"RiskExceptionConfiguration\": {\n      \"BlockedIPRangeList\": [\n        \"\"\n      ],\n      \"SkippedIPRangeList\": [\n        \"\"\n      ]\n    },\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c6e16e9-6ce5-4dc2-834a-0a895f6b9beb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae4d9922-0ff8-4474-821e-a4d6a9c53727",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27f621a8-f141-4e52-822c-0f8afc402c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56fe2595-5984-4a7d-a6c5-4eb8416fdeea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fac25e2d-0aa5-44e3-9248-3f3074c74b4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d90d4fb4-ad6d-4ad5-81b6-2fbe39ff4d30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae0ab410-23e0-4877-bef9-a204393390e6",
      "documentation": "Describes the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserImportJob",
      "responses": [
        {
          "uuid": "127accae-218e-4c22-a90c-348e3c724ec9",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "298c4c66-2589-4c96-bfb9-c5d994e74d41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "339cc333-c35d-4317-965e-ab1e06b7256e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed94ffc0-4f35-41ec-ae63-a90178e8fa1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44f69574-a759-417d-b664-1a9313258ea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af64d402-05c5-4b4f-b63e-85c93991e606",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9724a164-4295-43af-8ce3-60e8fc7d70e6",
      "documentation": "Returns the configuration information and metadata of the specified user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPool",
      "responses": [
        {
          "uuid": "40beff46-7d86-458b-b823-e0e8b115d7e4",
          "body": "{\n  \"UserPool\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Policies\": {\n      \"PasswordPolicy\": {\n        \"MinimumLength\": {{faker 'random.number'}},\n        \"RequireUppercase\": {{faker 'random.boolean'}},\n        \"RequireLowercase\": {{faker 'random.boolean'}},\n        \"RequireNumbers\": {{faker 'random.boolean'}},\n        \"RequireSymbols\": {{faker 'random.boolean'}},\n        \"TemporaryPasswordValidityDays\": {{faker 'random.number'}}\n      }\n    },\n    \"LambdaConfig\": {\n      \"PreSignUp\": \"\",\n      \"CustomMessage\": \"\",\n      \"PostConfirmation\": \"\",\n      \"PreAuthentication\": \"\",\n      \"PostAuthentication\": \"\",\n      \"DefineAuthChallenge\": \"\",\n      \"CreateAuthChallenge\": \"\",\n      \"VerifyAuthChallengeResponse\": \"\",\n      \"PreTokenGeneration\": \"\",\n      \"UserMigration\": \"\",\n      \"CustomSMSSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"CustomEmailSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"KMSKeyID\": \"\"\n    },\n    \"Status\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"SchemaAttributes\": [\n      {\n        \"Name\": \"\",\n        \"AttributeDataType\": \"\",\n        \"DeveloperOnlyAttribute\": {{faker 'random.boolean'}},\n        \"Mutable\": {{faker 'random.boolean'}},\n        \"Required\": {{faker 'random.boolean'}},\n        \"NumberAttributeConstraints\": {\n          \"MinValue\": \"\",\n          \"MaxValue\": \"\"\n        },\n        \"StringAttributeConstraints\": {\n          \"MinLength\": \"\",\n          \"MaxLength\": \"\"\n        }\n      }\n    ],\n    \"AutoVerifiedAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"AliasAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email' 'preferred_username')}}\"\n    ],\n    \"UsernameAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"SmsVerificationMessage\": \"\",\n    \"EmailVerificationMessage\": \"\",\n    \"EmailVerificationSubject\": \"\",\n    \"VerificationMessageTemplate\": {\n      \"SmsMessage\": \"\",\n      \"EmailMessage\": \"\",\n      \"EmailSubject\": \"\",\n      \"EmailMessageByLink\": \"\",\n      \"EmailSubjectByLink\": \"\",\n      \"DefaultEmailOption\": \"\"\n    },\n    \"SmsAuthenticationMessage\": \"\",\n    \"MfaConfiguration\": \"\",\n    \"DeviceConfiguration\": {\n      \"ChallengeRequiredOnNewDevice\": {{faker 'random.boolean'}},\n      \"DeviceOnlyRememberedOnUserPrompt\": {{faker 'random.boolean'}}\n    },\n    \"EstimatedNumberOfUsers\": {{faker 'random.number'}},\n    \"EmailConfiguration\": {\n      \"SourceArn\": \"\",\n      \"ReplyToEmailAddress\": \"\",\n      \"EmailSendingAccount\": \"\",\n      \"From\": \"\",\n      \"ConfigurationSet\": \"\"\n    },\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    },\n    \"UserPoolTags\": {},\n    \"SmsConfigurationFailure\": \"\",\n    \"EmailConfigurationFailure\": \"\",\n    \"Domain\": \"\",\n    \"CustomDomain\": \"\",\n    \"AdminCreateUserConfig\": {\n      \"AllowAdminCreateUserOnly\": {{faker 'random.boolean'}},\n      \"UnusedAccountValidityDays\": {{faker 'random.number'}},\n      \"InviteMessageTemplate\": {\n        \"SMSMessage\": \"\",\n        \"EmailMessage\": \"\",\n        \"EmailSubject\": \"\"\n      }\n    },\n    \"UserPoolAddOns\": {\n      \"AdvancedSecurityMode\": \"\"\n    },\n    \"UsernameConfiguration\": {\n      \"CaseSensitive\": {{faker 'random.boolean'}}\n    },\n    \"Arn\": \"\",\n    \"AccountRecoverySetting\": {\n      \"RecoveryMechanisms\": [\n        {\n          \"Priority\": {{faker 'random.number'}},\n          \"Name\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5698dc-b2f3-41b7-af4e-a9533bda86b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f566842b-6e0c-44a0-a0de-5a1eb8d1e2b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2aa9ac40-fa24-4db0-9045-c07a92a3168d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9884d17-0096-473f-94b0-1bac90794468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0f7144e-d7d4-49bb-ab53-25c416fea4af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8494f02-a1c5-4a4a-8235-90a27be9d467",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bda6967-1d3f-419b-9d74-e888c3d2119b",
      "documentation": "Client method for returning the configuration information and metadata of the specified user pool app client.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolClient",
      "responses": [
        {
          "uuid": "6243dad7-664a-4102-be21-fea8756390e9",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86cd7c43-6174-4cbc-ae45-4829f006d33f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12ca3f9-aea3-4bd8-bf3d-8672bc44bf09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e4e556a-54ed-4821-8163-19ed5c444959",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69d37edc-d50d-4c98-a49d-88d9a7b7c484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "883c0bda-3c06-459f-9a9f-db2450fb9961",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2d4eaeb-e9ac-4415-9bef-57b2876a11c3",
      "documentation": "Gets information about a domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolDomain",
      "responses": [
        {
          "uuid": "f01ba706-0567-45bc-80a0-85774820e732",
          "body": "{\n  \"DomainDescription\": {\n    \"UserPoolId\": \"\",\n    \"AWSAccountId\": \"\",\n    \"Domain\": \"\",\n    \"S3Bucket\": \"\",\n    \"CloudFrontDistribution\": \"\",\n    \"Version\": \"\",\n    \"Status\": \"\",\n    \"CustomDomainConfig\": {\n      \"CertificateArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "622bc270-c7de-4fde-8edd-adf50e67a06c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28c7ae74-adbe-4770-8894-5cd95f6fea1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cba271e-322f-44f7-9cc5-a7420993f3f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4a45021-c85c-4010-8216-286d4b18dc7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92da76f5-ab46-4dc6-8734-478432f9dc22",
      "documentation": "Forgets the specified device.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ForgetDevice",
      "responses": [
        {
          "uuid": "661a7e9c-be78-449f-b11b-088daa1cc476",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d8485c-633b-4986-a2ac-97a4912a4760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f374634-8d3a-4cac-a26b-03a48cc09cca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f87da61-3d9c-4dec-acf6-b06dcaa669b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9ae39e1-ead3-4a5b-b74c-5d04f22d4ac2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08bceb74-33f6-4d1c-9efa-648797c4d8d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af34d420-ae93-43ca-9c19-b5360d6ad118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cddca113-bab9-4ddb-984b-ae62a0467769",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07ba168b-6784-4765-8d3c-11bfbff0c635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "652fc30a-71b2-4c9f-bccc-ef3f72f1ac6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42809b37-c755-4649-82c9-fd025ad24560",
      "documentation": "<p>Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user's password. For the <code>Username</code> parameter, you can use the username or user alias. The method used to send the confirmation code is sent according to the specified AccountRecoverySetting. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html\">Recovering User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified phone number nor a verified email exists, an <code>InvalidParameterException</code> is thrown. To use the confirmation code for resetting the password, call <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html\">ConfirmForgotPassword</a>.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ForgotPassword",
      "responses": [
        {
          "uuid": "79bc73cf-499e-43e4-a175-f6bec68536b5",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae4de10b-e649-4463-a397-bc664b197d9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8ac4a1c-6aa1-4680-baa3-70f48689b25b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ebc9e0d-f2cb-48ee-b29a-714fa8c7520c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "669406a9-67be-48c7-b915-ed91cdd5ae7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16ff7635-41f6-4cac-8f0b-9957dd157539",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1125f3e0-bc12-4630-8517-ea2ec84d8d61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7af51759-e134-479f-933e-6753d8f2a75b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d62ae9a0-ab56-481a-846d-5e9c7ef841c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52a8cf93-65d7-4e9e-add2-f95be1c9af8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39648186-8b4e-4f46-9fd1-284e8b8cf350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6f41c8b-3262-473b-be6e-a9a139aaddb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "836214d8-3dd9-444c-9743-04bd1ddf6709",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c44e590c-bd8f-4420-895c-7aab8dd822a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93eedfd9-da4b-498e-bd66-f2883fc5a09d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcb1c0f1-1132-4ffb-9c33-34c0a3aee825",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd9717c6-2652-45bd-aa50-0dedd319a5e1",
      "documentation": "Gets the header information for the .csv file to be used as input for the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetCSVHeader",
      "responses": [
        {
          "uuid": "f17ce109-efd8-4b79-8d16-79057cfc7136",
          "body": "{\n  \"UserPoolId\": \"\",\n  \"CSVHeader\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27a6d82a-a4ca-414d-b067-75ef5992bd46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfd7b03e-032c-4075-82aa-cb2eb841c4a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "596902c0-77a6-4252-a04e-81b55d867672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bf6d299-c361-414c-8f6d-adf1bc7216f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5fa259e-d0e7-4a45-82b1-a0fdd13651c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3249d8b5-3942-4af7-8055-5692ba1ddc9d",
      "documentation": "Gets the device.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetDevice",
      "responses": [
        {
          "uuid": "4a00fd1f-7be2-4c2e-a86d-7ff2953b2f62",
          "body": "{\n  \"Device\": {\n    \"DeviceKey\": \"\",\n    \"DeviceAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "050f3302-ea33-4696-b535-96eaf27b07c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "317f8855-f450-45a8-a780-7877a5f450b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d050fafc-6c16-4cf8-b7af-610beda51dee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcf2029f-f2a4-4a12-94a0-03949d8d41d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4dcef32-b60a-4818-b3ae-ed88451f2623",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28c73981-74b4-4f24-929f-0ef58ce44db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1510aeed-d955-457f-ad63-90e289cf9188",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca81d486-1bab-4c7f-b3f4-725139b496a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "883eb755-5e00-4993-9827-3d1c1cf70914",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "498018e2-5634-4a05-8dfc-e2c6f2f06cc1",
      "documentation": "<p>Gets a group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetGroup",
      "responses": [
        {
          "uuid": "991de861-1e7c-47cb-b244-5ceeef672e6b",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b49b304-289b-4b5e-9027-17384661263d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "856be490-0cd7-488c-962b-75f4e1adde81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d36f8fff-363f-41f1-9ca8-f256c83198e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36870a3b-bac5-49bc-86ef-7f7c9d054561",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3979dfd2-6f97-48e5-9eb4-762d2aa397fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "138ca16c-e9b6-4bb2-894f-66c034286846",
      "documentation": "Gets the specified identity provider.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier",
      "responses": [
        {
          "uuid": "86cfd683-e6d3-4679-86cf-8046faf02ed9",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4969fefe-4d1f-49e3-b8c1-1458e1b95471",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74d0dcd0-df05-4bce-9b12-0aaa76fb3411",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d455983-afcf-4cf1-a40a-07191430f183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36fabbdf-b5c4-4de9-b668-86f6c6f4412f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e93878d-35d6-467d-b82a-e7f3a31cf4a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28ed9755-e665-40e2-ba6a-616d4249bf82",
      "documentation": "This method takes a user pool ID, and returns the signing certificate.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetSigningCertificate",
      "responses": [
        {
          "uuid": "3492b44b-1863-4afb-8b97-93f32d90cf6c",
          "body": "{\n  \"Certificate\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e831b581-8c93-4b6d-88ac-9719d8399edc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd818ffe-9f0b-497e-98f1-f5caa0265c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0115fcd-3f76-4fac-bc3e-5d52042d5704",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0dbf4b90-e2f1-420d-8f22-b5e5c9a37588",
      "documentation": "Gets the UI Customization information for a particular app client's app UI, if there is something set. If nothing is set for the particular client, but there is an existing pool level customization (app <code>clientId</code> will be <code>ALL</code>), then that is returned. If nothing is present, then an empty shape is returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUICustomization",
      "responses": [
        {
          "uuid": "dc63da1a-ed64-4727-9234-c305e7402b16",
          "body": "{\n  \"UICustomization\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"ImageUrl\": \"\",\n    \"CSS\": \"\",\n    \"CSSVersion\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c1d467c-fc52-4b3a-9325-b848dace405e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dc0c63a-173c-4614-9563-451071605f53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc4e27ea-21d6-4809-91a0-0a46df60d982",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c327673-07dc-4f2c-89e0-7f29af082486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a2d1bca-d34e-47be-87c0-9b947eaa1e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2101be2e-08ff-4bfb-b90a-6e213e4d6d78",
      "documentation": "Gets the user attributes and metadata for a user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUser",
      "responses": [
        {
          "uuid": "8bf562e6-674c-4c44-945f-30d04dc75721",
          "body": "{\n  \"Username\": \"\",\n  \"UserAttributes\": [\n    {\n      \"Name\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"MFAOptions\": [\n    {\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ],\n  \"PreferredMfaSetting\": \"\",\n  \"UserMFASettingList\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6016940-f58c-41ec-95d3-be3b2fc73afb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b097df-1813-4d64-96a8-9516a2b45055",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99bf2d9a-6db9-4e93-b08e-891620cdad13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad0020dc-2974-4a90-bda4-1c4eb8a5340b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dfdcbe4-b2b6-4721-9da5-a009b028a261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df2a1b9-5116-422b-8ff1-2b46b28c83cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b44db435-9df5-4337-a1fc-1dcfac8f2afe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eeff4ab-ea7a-4ed6-ac61-2c04551e90fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ceff06b-e526-42d9-8e5b-8be9579102a1",
      "documentation": "<p>Gets the user attribute verification code for the specified attribute name.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode",
      "responses": [
        {
          "uuid": "c54d390b-0c7f-408b-822c-916543c4f77e",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d082d51-f653-4a64-9a38-084c569bba27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65f5dbe7-26b1-48c2-87b5-db3760be741c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d63b3c8-2753-4b56-bd7d-6cd4d051fe36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92638e93-16a7-4476-9641-b34f58e8c091",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f17910de-b75b-4427-80a8-fa9898aa05c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2b43dd9-14c1-4861-84a7-6d9ddda42125",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec7e35f4-6637-4758-98c0-4db00b262ea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61b4b350-3d26-4dda-b2c2-c82a1c35458a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67614645-3aca-4f79-b834-127a09283381",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1c5758d-94bf-407b-b9c8-72a52d797e02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4606b090-9731-496c-9f0f-5fccaa8791cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0603955-9dca-4ee8-87b3-1fa27d797ba2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b491a144-6f7e-4731-9b5c-a9706975420a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e7b2944-4b1a-4378-a40c-3de4a84e3242",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2698169-f92f-471c-81a7-4d9b803236aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0b7872f-846d-4bc3-af7a-70917a63a6db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6df8c7f0-92a1-4f02-af03-2e3558a101fa",
      "documentation": "Gets the user pool multi-factor authentication (MFA) configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserPoolMfaConfig",
      "responses": [
        {
          "uuid": "d8c23216-0af0-4fb7-8444-2f0f76f3094d",
          "body": "{\n  \"SmsMfaConfiguration\": {\n    \"SmsAuthenticationMessage\": \"\",\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    }\n  },\n  \"SoftwareTokenMfaConfiguration\": {\n    \"Enabled\": {{faker 'random.boolean'}}\n  },\n  \"MfaConfiguration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b15c10c5-a4ff-4bcb-b5c7-41d32b103504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91c242cb-5440-4be9-8ace-be57e7c65a48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b45f36f1-7840-4f93-a01f-09f073d6cfd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "458d8a36-f8e2-487e-85a9-c624dc715eab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54f3fdf1-3587-480b-b238-610cea048123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5aac1c49-c7cc-4fb4-88bf-828d9dd1b6ca",
      "documentation": "Signs out users from all devices. It also invalidates all refresh tokens issued to a user. The user's current access and Id tokens remain valid until their expiry. Access and Id tokens expire one hour after they are issued.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GlobalSignOut",
      "responses": [
        {
          "uuid": "388b56f0-ff77-4d89-a667-4481ecdab7a6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f83b06e-60b8-42ef-a8db-c54a0a83daf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c46b0004-a416-4138-b1e3-c1e5a675540e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50b03a8d-af2c-45e9-a6b5-9bb1e7a82999",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "518288d7-03fe-407e-9c4e-e82534062021",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da5b741a-02a5-41eb-9b53-d9e4e3a777d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20c95860-b958-43d5-b9a5-426a7a74a6cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fde73dc-d693-462e-9aea-b5a421acd468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bca4ca75-7eca-4663-afff-6d29decd2237",
      "documentation": "<p>Initiates the authentication flow.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.InitiateAuth",
      "responses": [
        {
          "uuid": "2d315b33-b64a-4b89-87d8-77e468d98235",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fc45133-0c31-45dd-8404-d6b1ac9962e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50600cae-36d1-44b9-966f-28e40ca65624",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8fa8a94-100b-4795-b3ac-24a806214a78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83d5337a-34da-45b1-bd88-1ab8df8eb230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7766b6c-965a-406a-b2a5-9c396d38cbf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "913c74e6-c08d-4bba-b1d1-caed3ca02d1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce07d615-e823-4197-83cb-c3dcf4d6889d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8a1f5b6-8ad6-4678-9960-db639d19a40f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d49dd1f6-5ea0-4dfd-831e-6513b28e79b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9b93bd2-6c0d-4dd4-9368-d47fde12af7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0aa3367f-b849-4280-ba73-be4487f8d732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fe79c33-2259-4bcd-9764-3f2ad74b4d2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03f7a94c-eae1-4363-af53-327386fef536",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cf02789-6a48-4220-9187-1938a1bb7dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5423396c-b4d2-4d27-a159-8b1d3adf46d6",
      "documentation": "Lists the devices.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListDevices",
      "responses": [
        {
          "uuid": "0f93c5a2-0d2c-4b21-b164-9fec5ee90c67",
          "body": "{\n  \"Devices\": [\n    {\n      \"DeviceKey\": \"\",\n      \"DeviceAttributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2081164b-80e5-4c61-8706-4787a5a4ece0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e35904-6253-4166-b102-871a67612a88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b41bd1c0-065f-4e40-a01a-1072ae539809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d577ffb-7cba-4a2f-8f1f-4eeb145ff8dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df906bd4-6dde-4e08-9a68-a05a0e90f44b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c37d8dc8-9797-45b4-85cd-f593373cbe85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "263cdad6-cd54-4d68-b0ab-9f4ae00c9a29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1621174c-a755-4cda-a47c-78cb889d911a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1d34664-02ed-4491-92e5-11ac86163c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a533207-9af9-45d0-9c5e-184dd39fd98c",
      "documentation": "<p>Lists the groups associated with a user pool.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListGroups",
      "responses": [
        {
          "uuid": "17311401-9545-4696-b824-941688a410bb",
          "body": "{\n  \"Groups\": [\n    {\n      \"GroupName\": \"\",\n      \"UserPoolId\": \"\",\n      \"Description\": \"\",\n      \"RoleArn\": \"\",\n      \"Precedence\": {{faker 'random.number'}},\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67dd6074-f9a4-4751-9f1d-5f953c29c333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92082e9c-69f1-49a4-a43d-15c142a18183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96e274a9-fdec-4a98-ad8c-299e6b563b97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91d9098f-e48d-4a92-8ab9-ecddebd98c75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "049e73f8-16a8-40bc-b265-f558218bba8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9efe98f8-56a5-4138-bf9d-219eade9eeb0",
      "documentation": "Lists information about all identity providers for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListIdentityProviders",
      "responses": [
        {
          "uuid": "1452b94c-149d-4ae7-9e82-63a43a8fab08",
          "body": "{\n  \"Providers\": [\n    {\n      \"ProviderName\": \"\",\n      \"ProviderType\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1885e0e6-9742-495e-919d-dd3db04e3590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f892fa93-47af-4358-8a2b-93dc2bb86bbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5800e5f7-f1a3-4dd5-b6e8-d053d7e6462a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbe705ad-f6f9-476b-b885-2cad8796794d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12176777-ac0d-42cb-846c-1d9a7530804a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3da4e5ee-52f3-4bf7-ae92-e3a37c432dbe",
      "documentation": "Lists the resource servers for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListResourceServers",
      "responses": [
        {
          "uuid": "ea2e30f3-de8e-48ed-b519-b5f982be908f",
          "body": "{\n  \"ResourceServers\": [\n    {\n      \"UserPoolId\": \"\",\n      \"Identifier\": \"\",\n      \"Name\": \"\",\n      \"Scopes\": [\n        {\n          \"ScopeName\": \"\",\n          \"ScopeDescription\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95828e4c-354d-45e6-9883-c34c5738ce8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ce725f3-0339-4bd0-8215-665d33c8588b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ad4d311-7166-43f5-a333-0740cca73b89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "343507bb-db23-45fb-899e-89ab016e7672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca67416d-3010-4305-b72f-f92d4c31d2c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b471680-3663-465b-b5f9-6a333e9027d0",
      "documentation": "<p>Lists the tags that are assigned to an Amazon Cognito user pool.</p> <p>A tag is a label that you can apply to user pools to categorize and manage them in different ways, such as by purpose, owner, environment, or other criteria.</p> <p>You can use this action up to 10 times per second, per account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListTagsForResource",
      "responses": [
        {
          "uuid": "d1cba349-92d2-4758-963e-8ccfbe11493c",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24563265-ae36-4b78-adf5-012fb13d70a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60b60bce-6431-47cb-8f47-6bf1ed0f1e10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1626f57a-e7a1-4f8b-8f0f-79be3b237e63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be156be2-602f-4ded-8296-025425827f77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06ed4255-c161-4003-9a62-dab04d0c5711",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8c32f4a-af65-40ec-ae20-8db50f5902d7",
      "documentation": "Lists the user import jobs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserImportJobs",
      "responses": [
        {
          "uuid": "49cc7c1b-ee63-41bb-8b65-d67235462cb6",
          "body": "{\n  \"UserImportJobs\": [\n    {\n      \"JobName\": \"\",\n      \"JobId\": \"\",\n      \"UserPoolId\": \"\",\n      \"PreSignedUrl\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n      \"StartDate\": \"{{faker 'date.recent' 365}}\",\n      \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"CloudWatchLogsRoleArn\": \"\",\n      \"ImportedUsers\": {{faker 'random.number'}},\n      \"SkippedUsers\": {{faker 'random.number'}},\n      \"FailedUsers\": {{faker 'random.number'}},\n      \"CompletionMessage\": \"\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d85e23f6-e989-482a-b946-22a7c4d54c91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5a0c249-5df3-4464-93f0-e6922fee67ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5a4c171-f64e-488f-98ba-15a6bddef82b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "015b4419-2446-4b80-88a0-c36b1455e045",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9084ba67-1b7e-4b17-8cf0-94f92aac68ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1793cbc6-a6ec-4b85-8117-7c3b3a764e95",
      "documentation": "Lists the clients that have been created for the specified user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPoolClients",
      "responses": [
        {
          "uuid": "0341e846-ad24-4f13-b2dd-aad3eb526d20",
          "body": "{\n  \"UserPoolClients\": [\n    {\n      \"ClientId\": \"\",\n      \"UserPoolId\": \"\",\n      \"ClientName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b069aedf-1c9a-4ed3-80e3-4de82ae30a9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3285721b-7684-4ac1-a38c-7cbe41a98739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5104b0ad-ca2c-4b9d-b6bd-9a5b97fa15ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7683271-e285-4a52-8549-396581a019c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7653eeff-ed91-4fde-a70c-be7c6c3cd6e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16b36720-7626-4f58-94e1-699170ac2c2a",
      "documentation": "Lists the user pools associated with an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPools",
      "responses": [
        {
          "uuid": "06668879-a875-445d-910e-2b6a79299c0a",
          "body": "{\n  \"UserPools\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"LambdaConfig\": {\n        \"PreSignUp\": \"\",\n        \"CustomMessage\": \"\",\n        \"PostConfirmation\": \"\",\n        \"PreAuthentication\": \"\",\n        \"PostAuthentication\": \"\",\n        \"DefineAuthChallenge\": \"\",\n        \"CreateAuthChallenge\": \"\",\n        \"VerifyAuthChallengeResponse\": \"\",\n        \"PreTokenGeneration\": \"\",\n        \"UserMigration\": \"\",\n        \"CustomSMSSender\": {\n          \"LambdaVersion\": \"\",\n          \"LambdaArn\": \"\"\n        },\n        \"CustomEmailSender\": {\n          \"LambdaVersion\": \"\",\n          \"LambdaArn\": \"\"\n        },\n        \"KMSKeyID\": \"\"\n      },\n      \"Status\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7a20be2-1737-4f2d-b300-7f4a5c23126f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c366e81-eb3e-44bc-b204-b880175324b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a27f64b-6248-46bb-bea7-2632e8bc8c3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "288a28fd-f6e9-4c81-9a5e-4b6333f66ca9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa809826-df44-4627-ab61-3c5d38775b52",
      "documentation": "Lists the users in the Amazon Cognito user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsers",
      "responses": [
        {
          "uuid": "7b65bee5-3908-485d-8820-3f43e164b179",
          "body": "{\n  \"Users\": [\n    {\n      \"Username\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"UserStatus\": \"\",\n      \"MFAOptions\": [\n        {\n          \"DeliveryMedium\": \"\",\n          \"AttributeName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cb22d22-0b32-40b4-9aa6-0be8a71e2a35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3146dbe6-d72b-448b-bb7b-2ad69fb1ab5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c6bdf27-09c6-4aaa-aa6a-a8cb192bde70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bed7869-5110-46bc-8fba-48f4b3fa13bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4036dbb9-c5f5-47d8-90e1-eccd6a02a20e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be445da9-2a0c-4e8a-b4b9-16c786474ae7",
      "documentation": "<p>Lists the users in the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsersInGroup",
      "responses": [
        {
          "uuid": "f86828c1-52fc-40b0-946e-714c698169dd",
          "body": "{\n  \"Users\": [\n    {\n      \"Username\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"UserStatus\": \"\",\n      \"MFAOptions\": [\n        {\n          \"DeliveryMedium\": \"\",\n          \"AttributeName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a04b69c9-a2fb-4ffd-9aa7-523f2a795978",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99c11223-3a11-48b1-b7b0-f1d89ef002e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb0bd44f-aa54-489e-92fb-b07c79192fd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e50e53fb-a7aa-4bed-a41a-d05c98077673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66f7ff48-b45b-4732-ac59-2e8be076dec5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0dc94aa-b79e-4a86-bc3c-d70e11cde5c1",
      "documentation": "<p>Resends the confirmation (for confirmation of registration) to a specific user in the user pool.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ResendConfirmationCode",
      "responses": [
        {
          "uuid": "9e819d02-14c3-4371-a0af-d53fbd78736a",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed4f10fc-ef58-47f9-bf0b-1471c112cae4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f077358b-d99d-4b9c-8399-ace1c9aaf15e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c535c58-42a0-458e-8b7b-8a9ef199e333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23d9be70-43de-408c-ab43-9ec179605685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "658b1956-60ce-4015-a845-aea57768a302",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d84e8ea4-04fb-47ea-9069-293503e98d0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bab8ff8-b9b9-4e7e-b0e5-305561c2e7af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "974b9357-10b9-4707-92d8-91d40501e976",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9a8c32f-3cb8-4eee-9647-e5b73eaa8c45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41ad6dd2-a50e-4cfa-b633-9a47505d15eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7960a02c-1d18-45f6-af9f-494491712807",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e9a8f22-67b8-4bc6-9137-6423b51e0c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92e3f90c-d3c6-4bf5-9264-24a84a160685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa17a582-5c5f-4c17-99f5-9381f0964ac3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17fc62a4-6473-4fea-a46a-b7e02d07ba23",
      "documentation": "<p>Responds to the authentication challenge.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.RespondToAuthChallenge",
      "responses": [
        {
          "uuid": "c4c1411f-6256-4f47-b365-d2a0181942b8",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a030ab4-ca63-4783-b4ca-5cab2bc874d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbe2bc1d-a9b2-43ac-9911-8c41383e8325",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32fb87dd-f033-4abd-bfec-3c402a40607e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4be72899-f634-49ef-a307-ec4f98667ee8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ee1f83a-c18e-4e97-9d4a-a7f4fa59c277",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39f9475d-7169-442b-aa93-18f0650b7902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf2dce6e-008a-4cef-b902-f17367e43674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68982787-3f90-492c-a016-7702731e73ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4b240da-4892-4262-bcd1-75a5aeeda62a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc82221a-fdac-488c-92d3-4bee650d8f35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce5af2a8-e2c5-4581-8c49-cb8ef34f04c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f1fb58-3f81-4f2c-9bee-cf6692a47bc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72e9f104-822d-46dc-807e-c5431fa25255",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ca3aa6d-7460-4134-b7f9-9378fcbdef6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b044ee18-0994-4222-96bb-9069b131c0f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20b9bb57-5e3c-45af-b13e-8f7cb6efbf23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358f8b43-e88e-46db-8555-20088b3b163d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f233a2f-831f-4353-aab7-51a46eba23f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8ca3b02-468f-4e27-b36d-e3d548aad8e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec13033e-7f4f-4df4-9fe7-e2f9698376cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b21d851-53ab-4230-842e-86aa9108311a",
      "documentation": "Revokes all of the access tokens generated by the specified refresh token. After the token is revoked, you can not use the revoked token to access Cognito authenticated APIs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.RevokeToken",
      "responses": [
        {
          "uuid": "eb2a66c8-036f-4dc5-8a9d-e95588e4fc95",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d5c4891-2e9e-4ce0-8953-d350b6af5d79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dee972b3-521d-416b-b6e2-7968347034e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b374a12-2514-49b3-a400-3ca06849e51f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cc4765d-ce84-4225-ac31-23526a8342a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c38df1e9-68e4-4c99-a28c-e33abb229ee8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fccbbe31-4942-4af4-9147-ec8e3e658af1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedTokenTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "451652af-bf49-44f2-a1ef-0dbdde906fad",
      "documentation": "<p>Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code> or <code>ClientId</code>, pass null values for all four configuration types.</p> <p>To enable Amazon Cognito advanced security features, update the user pool to include the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetRiskConfiguration",
      "responses": [
        {
          "uuid": "81d39b6f-7fb5-4e3a-8dc3-0e3eb174e45f",
          "body": "{\n  \"RiskConfiguration\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"CompromisedCredentialsRiskConfiguration\": {\n      \"EventFilter\": [\n        \"{{oneOf (array 'SIGN_IN' 'PASSWORD_CHANGE' 'SIGN_UP')}}\"\n      ],\n      \"Actions\": {\n        \"EventAction\": \"\"\n      }\n    },\n    \"AccountTakeoverRiskConfiguration\": {\n      \"NotifyConfiguration\": {\n        \"From\": \"\",\n        \"ReplyTo\": \"\",\n        \"SourceArn\": \"\",\n        \"BlockEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"NoActionEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"MfaEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        }\n      },\n      \"Actions\": {\n        \"LowAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"MediumAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"HighAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        }\n      }\n    },\n    \"RiskExceptionConfiguration\": {\n      \"BlockedIPRangeList\": [\n        \"\"\n      ],\n      \"SkippedIPRangeList\": [\n        \"\"\n      ]\n    },\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5d57c13-17db-4931-a7c2-305ff7e25c50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d53e001-55c5-4596-8479-92894e7dcfa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a9dac78-d0c9-4a6c-acf8-b4f60c3b46d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54539508-0cb3-4d85-89eb-64e847049e65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37bade7e-6184-4a68-b55a-f0e0c57cb83b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83eb1aac-89c6-476a-8c28-cbe01f6f96cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ec4cd10-2fdb-4087-a13a-3bbeaf1906e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "752fdb5f-9a78-4fb5-b1bd-b2fecdcda7f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d614bb7f-b991-4f2f-8591-62f75e50e8a1",
      "documentation": "<p>Sets the UI customization information for a user pool's built-in app UI.</p> <p>You can specify app UI customization settings for a single client (with a specific <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to <code>ALL</code>). If you specify <code>ALL</code>, the default configuration will be used for every client that has no UI customization set previously. If you specify UI customization settings for a particular client, it will no longer fall back to the <code>ALL</code> configuration. </p> <note> <p>To use this API, your user pool must have a domain associated with it. Otherwise, there is no place to host the app's pages, and the service will throw an error.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUICustomization",
      "responses": [
        {
          "uuid": "bb505583-12e6-44c3-a02c-429264108b09",
          "body": "{\n  \"UICustomization\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"ImageUrl\": \"\",\n    \"CSS\": \"\",\n    \"CSSVersion\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a730e64d-8734-4d39-ae95-cb7bdad7a234",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d2f778b-061b-467a-a534-b8db20c819cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "595d87c7-728a-4563-9f52-9be7898f397b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d18d2238-1b07-4da0-850e-cd1f9d058025",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "692fda15-f215-4fa5-941f-765a0ff862c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93b868e7-5c81-40bb-b568-b7eb349cd0d7",
      "documentation": "Set the user's multi-factor authentication (MFA) method preference, including which MFA factors are enabled and if any are preferred. Only one factor can be set as preferred. The preferred MFA factor will be used to authenticate a user if multiple factors are enabled. If multiple options are enabled and no preference is set, a challenge to choose an MFA option will be returned during sign in. If an MFA type is enabled for a user, the user will be prompted for MFA during all sign in attempts, unless device tracking is turned on and the device has been trusted. If you would like MFA to be applied selectively based on the assessed risk level of sign in attempts, disable MFA for users and turn on Adaptive Authentication for the user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserMFAPreference",
      "responses": [
        {
          "uuid": "c8ef6791-3a18-4ec0-af03-29d0e390d200",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66080e52-0729-49e6-9394-891df57292e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4700912-dbea-42ed-a9ca-53dd72679a17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "808f71a2-314c-45b1-b3f3-8a80ebef4736",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75c71bac-f862-464c-beb8-dd69984a2e38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbd5a9f1-4f33-4274-88f6-69a84a432ae8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "490792f9-b143-47a1-a51e-af5efb0787a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d88c734d-f7c5-4264-97bc-2ded74fd2361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cae00bc-351d-4be0-836d-f826d963ee12",
      "documentation": "<p>Set the user pool multi-factor authentication (MFA) configuration.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserPoolMfaConfig",
      "responses": [
        {
          "uuid": "2c3c4d2d-bbe8-4bf4-ab18-dfa52c5239ff",
          "body": "{\n  \"SmsMfaConfiguration\": {\n    \"SmsAuthenticationMessage\": \"\",\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    }\n  },\n  \"SoftwareTokenMfaConfiguration\": {\n    \"Enabled\": {{faker 'random.boolean'}}\n  },\n  \"MfaConfiguration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64b7c16e-54d2-4966-89fc-a3cec053db74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a417592-983b-4ca3-aa1d-460cfd53221d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00cafbb0-7514-4933-8c84-b51a29ca6337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354fd766-d76a-4ffc-9f2c-b0e301791655",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efb3b318-d53e-4ccc-97b4-eb38a036b4ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f766c645-27af-494d-bc75-50ab10869adc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "069a5c3f-a4ce-46a0-a19d-c41163ea92b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0a3b03b-7f24-498f-a807-b63ba2dc6880",
      "documentation": " <i>This action is no longer supported.</i> You can use it to configure only SMS MFA. You can't use it to configure TOTP software token MFA. To configure either type of MFA, use <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html\">SetUserMFAPreference</a> instead.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserSettings",
      "responses": [
        {
          "uuid": "772de0b9-bb93-4e47-96b1-ff233361337c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44c2d848-ae34-46e0-9b0a-a6394855691f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f3ae2f0-f060-439e-b5f9-2ee09a920a70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6ad4901-18dc-4b4f-bed8-b95add4a1f7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d15e1758-39e3-4229-a3f2-dbd9ba6cbd5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b3b376e-166a-4a70-83d1-f8809f7d7b1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16d97e5b-8e03-4a42-83a3-745b294c5d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35d5dacf-4119-48fa-a612-02750b361725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78e04fce-80a6-48a9-b87f-c2a372411495",
      "documentation": "<p>Registers the user in the specified user pool and creates a user name, password, and user attributes.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SignUp",
      "responses": [
        {
          "uuid": "f72b7d67-93fe-4850-96ae-5e377daaf098",
          "body": "{\n  \"UserConfirmed\": {{faker 'random.boolean'}},\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  },\n  \"UserSub\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4733a25-67e3-4070-aa22-32948f015ef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4625f338-691f-42f9-9c27-f9aa062c3b58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8ecc156-a60c-495d-8580-f1d90f1d17b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ef1c00-372f-4746-8a68-4a68ba2bb0e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98feae7f-fd1a-42fb-8cad-4d489417b5c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5172d43-10f0-463f-8b52-2fbfa24d3bc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a38616e2-4b3d-4b21-bac3-a572d150938d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9f091fd-6025-4a10-96cc-def430b27af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9206709-0fa3-4ff2-9ec6-55d294374653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73463b13-3bc0-4f7c-9f44-344b626fd4c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7073eed9-ca9a-43fa-91f2-8c471a78e599",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61ec7723-5bf2-406d-a4e4-b6225918b3b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8061ff91-481a-4941-82e6-f63c546466be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d2de092-ecee-4666-b076-e1671610c644",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a95e2c1-ff6f-4e3e-a85a-81fcbb32e87b",
      "documentation": "Starts the user import.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.StartUserImportJob",
      "responses": [
        {
          "uuid": "e27f3f33-4631-4f79-a1ac-acb3c4ef5526",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a002818e-2be7-4fbc-956c-92492cc3d400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b27aeef2-4541-4b18-8059-79c2915f80bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b710687-b5f0-4a85-a9bb-557bcdbb7e2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "594c1db0-04d4-49b2-87e9-b5aaddb39353",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f75d60b0-97c6-40da-96a5-e7edbbfdb421",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b132c703-0398-4783-adeb-08d3b3ed2e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59d5b81a-6b96-4d64-88ce-d535048cbc13",
      "documentation": "Stops the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.StopUserImportJob",
      "responses": [
        {
          "uuid": "b592cca9-d1e9-4ae2-ac3f-16f18908b7aa",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4adddfd9-8a9e-436c-bf2a-ccdce641a66b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b7bf1da-5099-48fb-acf9-4b691af6ea0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc983f06-e88b-419b-9a21-41a7c7ed4ced",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fef913be-e7fd-41a1-9154-9af94956cf9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5288ee7-ee81-4a54-8f07-4192a383c0c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a8ee132-3689-4b0e-a296-f1eca558dc77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d1c7d3c-cccb-449a-9cc9-4547c6132e66",
      "documentation": "<p>Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria.</p> <p>Each tag consists of a key and value, both of which you define. A key is a general category for more specific values. For example, if you have two versions of a user pool, one for testing and another for production, you might assign an <code>Environment</code> tag key to both user pools. The value of this key might be <code>Test</code> for one user pool and <code>Production</code> for the other.</p> <p>Tags are useful for cost tracking and access control. You can activate your tags so that they appear on the Billing and Cost Management console, where you can track the costs associated with your user pools. In an IAM policy, you can constrain permissions for user pools based on specific tags or tag values.</p> <p>You can use this action up to 5 times per second, per account. A user pool can have as many as 50 tags.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.TagResource",
      "responses": [
        {
          "uuid": "b20604b0-bf2c-4592-89b1-71263e35344e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f34504f-05ef-4c2f-92a5-2dba49a9320a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a2d82e9-20aa-4cc5-80d6-44aed8853fd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5e3f1db-0eff-4290-87b7-4e55f40c2f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33a3cf22-7cf5-4464-a09e-31d5e7f7edbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d28223d-73b2-49cb-a425-bfdfad47ed67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63146e03-5725-4f50-ac67-b904a6261b34",
      "documentation": "Removes the specified tags from an Amazon Cognito user pool. You can use this action up to 5 times per second, per account",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UntagResource",
      "responses": [
        {
          "uuid": "7e77ec15-7dc8-46fd-b6b6-6d4a7bf0983c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "319da948-fc91-47b8-ada1-1494644201de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e9c72fb-8dea-4572-9ae8-2fe24f033eac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5e5e4b4-80c8-40e8-b998-1ba332698950",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30cc9690-7974-4e9b-8a00-f19b21a55d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30d5913d-3659-4f5b-b908-d6f9420fb33e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cac2336-b26e-4265-9335-0792296c899f",
      "documentation": "Provides the feedback for an authentication event whether it was from a valid user or not. This feedback is used for improving the risk evaluation decision for the user pool as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateAuthEventFeedback",
      "responses": [
        {
          "uuid": "ffa76ca2-ca98-4fa3-97a2-552f440a3c24",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "504cfe52-22c4-4c75-84f6-d893cee2d4b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a9c1f8d-b9e0-4ec1-a70c-c277ad62ff21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0e9436a-811e-4a4f-bc30-93c16229f00f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efe5d816-c4a7-4ae5-93fa-c885b89787ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6044e819-c808-4003-8abc-537c641e61d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cbbb43e-c549-460f-a038-44b0ddcba5e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae4fabf2-1e57-4e06-9580-e8d7edcde77d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e22e3dc-9b6d-4b17-9d8c-3862deeee3d3",
      "documentation": "Updates the device status.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateDeviceStatus",
      "responses": [
        {
          "uuid": "92354387-5551-49df-b684-a6aa98592407",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "222a6864-2114-4ea8-91f8-15dbc1f02e37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8440d17-dee4-44bc-92de-d02aa6270579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7324ac6-7e2f-467e-b8cb-95e1ed81cac7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b08b17-4124-436d-8f46-9b5861965c5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36f90509-b498-490a-887d-5afda23a8e99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "849e2678-4f7f-410b-a3f7-8d31140fe960",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5eef4b5-a2dc-4d90-a6f9-04d25ce7ae98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66a9908b-1181-44ec-9372-7b174551233e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57a764a7-3710-4961-869a-02714e7448f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ed9af92-f5ab-4d48-97f1-6de6751e57ad",
      "documentation": "<p>Updates the specified group with the specified attributes.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateGroup",
      "responses": [
        {
          "uuid": "0239f944-0670-4fb1-89c8-f7b0a56cf6de",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67e39dcb-cb52-461d-8dca-6195927cbe11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88395f9c-78bd-435a-bbbb-77d1b77364a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cc60013-4651-4b4d-a721-5536d99441fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbd0d8a6-8be8-4aa2-a9bb-5fe102965b1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be954c0e-429c-4358-bd2f-d9aafd42cd60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f56c1c72-3c0b-451a-9c47-8f9defd32e1c",
      "documentation": "Updates identity provider information for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateIdentityProvider",
      "responses": [
        {
          "uuid": "e99b3a0c-1262-450b-959e-1e00350eafe2",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb123357-f511-4a08-8a9e-f5b251451bd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fbfd384-4c56-483b-972a-103e400dd23b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedIdentityProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8456ac07-329c-4803-967e-6653f7fc1c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80e83aa2-b4f5-4cbf-9799-a83a99968280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ef7afaa-7083-4c00-9962-d0fded2ca9f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91c15867-5f7e-4d6a-9a96-73472cde5f84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77726114-ae7a-4ce2-9c4f-b644654939df",
      "documentation": "<p>Updates the name and scopes of resource server. All other fields are read-only.</p> <important> <p>If you don't provide a value for an attribute, it will be set to the default value.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateResourceServer",
      "responses": [
        {
          "uuid": "02c61eec-feee-4a82-9bcc-6a199a2c5a08",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "209bf04a-c76a-41b7-a916-06bbd14d2b4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d41b71f-cfe9-4ef3-9168-5b67238f5792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d164a9-79a4-480e-9721-4fba1ae056c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6fa3078-fb6d-471a-964a-bcf62f85659f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79bf381-3dca-4923-a53c-4b1b4ee9e348",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33f3470a-9ba9-45e9-a50c-ba768cb19b21",
      "documentation": "<p>Allows a user to update a specific attribute (one at a time).</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserAttributes",
      "responses": [
        {
          "uuid": "2b183eec-9554-468a-8476-c95263177a24",
          "body": "{\n  \"CodeDeliveryDetailsList\": [\n    {\n      \"Destination\": \"\",\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2a014a0-5df6-4cfa-8eed-69b3c4414370",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5ad8591-68d8-4ee9-97ee-2ad8013e0549",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6035030-2301-48df-a1e2-271a4411f356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "053dcfc9-9ca9-498c-8436-c7de7c393e69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bf2cd1c-7806-4ca8-a812-6edc51fd0f7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1a79651-32bd-4c1a-83fc-cc40e2d953c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fd900b9-a66e-4561-b601-3bdc113ec61d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ff68813-2c45-40d6-ac49-579bdc806b4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e59f7ad-55c5-4161-81e8-c5ac57ffb80b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5801d013-7b45-4b88-a1da-512df56cdfac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "586373bb-10e6-4547-bdfd-23f812590cc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb512495-e30b-4923-8417-611925165c9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40924118-f953-49bb-bac0-5bcb8168de52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91ab4eef-15ec-42f1-8357-4074849a8aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d85717-a646-44fd-81e2-dbda13111365",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72dbc900-6157-4bf6-a56a-80e240d442f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4f90c8b-1055-430f-bc51-9b39ba77e10a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20aa0fd5-22ab-47e0-9b71-79e5eb94dbe8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db581932-f6fb-4f50-ac1b-b55ebd842b36",
      "documentation": "<p>Updates the specified user pool with the specified attributes. You can get a list of the current user pool settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\">DescribeUserPool</a>. If you don't provide a value for an attribute, it will be set to the default value.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPool",
      "responses": [
        {
          "uuid": "8ef89cc6-d4f7-4eda-bec2-b46ce23f6578",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8dc9ec5-b8b7-4350-9aab-0b99f8daf0ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354f3526-8d1e-4381-9434-140e77bffdf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17135c9a-c334-482d-a02e-81deaef44405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d0a96be-471a-45c3-966b-08a67deff623",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bd4b02a-cfd9-4d3f-9f26-8cc1ba917b76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2695b3fd-9b58-4a23-92fe-535ea6f90591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e14d7a34-fdb9-4fda-b199-f9343eb31ee0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1b51c8f-9051-4199-896f-e6f104fc3407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c46c7e3-1585-4b58-be40-6a376e52c9be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "094b913e-bd6d-4cc8-b3ba-a31345001998",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2d0c763-115b-433c-9ff7-a60e5d63840f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60d56071-2933-4068-988e-e2345461fc87",
      "documentation": "<p>Updates the specified user pool app client with the specified attributes. You can get a list of the current user pool app client settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html\">DescribeUserPoolClient</a>.</p> <important> <p>If you don't provide a value for an attribute, it will be set to the default value.</p> </important> <p>You can also use this operation to enable token revocation for user pool clients. For more information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\">RevokeToken</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolClient",
      "responses": [
        {
          "uuid": "6d8be21e-c61e-4357-847f-c0b5922fd5b7",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c0d1e75-2379-435c-9471-2bbf6404eb58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4610367d-f5d2-46fb-9294-8cd1390b543f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17ecb259-e438-4e83-a371-ad21833ac38e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9536c156-2526-4fc4-b745-8bc370830e45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c382e29e-5304-44ae-a2ca-9b10da60d94b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "906314a9-3051-4cf9-922b-3c816099e341",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ScopeDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf19c5e8-4ce7-4e32-8c20-65146eeb6780",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidOAuthFlowException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cd50908-aa1c-447d-be05-0e0c9bdc1baf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "349ddee8-0a21-48b1-9a0f-f6523cf4f395",
      "documentation": "<p>Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your user pool.</p> <p>You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate to Amazon Cognito. You cannot use it to change the domain for a user pool.</p> <p>A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up and sign-in pages for your application. When you set up a custom domain, you provide a certificate that you manage with Certificate Manager (ACM). When necessary, you can use this operation to change the certificate that you applied to your custom domain.</p> <p>Usually, this is unnecessary following routine certificate renewal with ACM. When you renew your existing certificate in ACM, the ARN for your certificate remains the same, and your custom domain uses the new certificate automatically.</p> <p>However, if you replace your existing certificate with a new one, ACM gives the new certificate a new ARN. To apply the new certificate to your custom domain, you must provide this ARN to Amazon Cognito.</p> <p>When you add your new certificate in ACM, you must choose US East (N. Virginia) as the Region.</p> <p>After you submit your request, Amazon Cognito requires up to 1 hour to distribute your new certificate to your custom domain.</p> <p>For more information about adding a custom domain to your user pool, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html\">Using Your Own Domain for the Hosted UI</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolDomain",
      "responses": [
        {
          "uuid": "8b331152-1005-4370-a4ce-c6078dc65755",
          "body": "{\n  \"CloudFrontDomain\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fb7181f-6b71-44bb-90b0-51755b3bbb04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0c3201f-2dd8-416a-9dab-9a46c19bc82d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50f570be-839e-4d96-906c-3127bfdfdfbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b10c4d1-2dca-4113-b597-92f2b56aca7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eac961e-1492-44bc-83eb-8770267404fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "310b86fd-700d-4037-a644-c52d6a316084",
      "documentation": "Use this API to register a user's entered TOTP code and mark the user's software token MFA status as \"verified\" if successful. The request takes an access token or a session string, but not both.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.VerifySoftwareToken",
      "responses": [
        {
          "uuid": "0bae912e-c482-4fd6-bf32-389d4180efdf",
          "body": "{\n  \"Status\": \"\",\n  \"Session\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7029546-01df-4529-90ec-0ce1618dbc7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea8d6556-f27d-4f32-a2f1-cd6b1ce55a45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727219a0-3172-4ae8-86dc-9166e3e7840f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0fc84e8-62fe-4bde-ab41-69b95fa56574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4537e53-c9e5-4d27-93cb-5088e51167fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e63b38f-26c6-45de-91e6-daff377cb983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c1f7587-52c8-405c-910b-85918d8fa91d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb335e8f-8dc5-4b70-a951-840d276a4c5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db581ae7-8e60-45e0-b502-07b03cab6a63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b99a538-c5f7-4c47-bdcc-568e7a072202",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EnableSoftwareTokenMFAException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d1c5421-0234-4e9f-8611-d872a25397b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63dbaf8d-50e3-4f53-9e0e-948cc510acef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbe9a4a3-b40b-40ce-87c2-eac448de4306",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd72b70e-32c0-4ecb-8b8a-09e9a8a22f9c",
      "documentation": "Verifies the specified user attributes in the user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.VerifyUserAttribute",
      "responses": [
        {
          "uuid": "2e676f70-a200-4d43-8174-3a092b3e1e48",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3582b374-2acf-4610-bb15-351d45ae45b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a89e984b-b79e-4ab4-8569-55045f0bd5b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99816bed-bb33-4d64-9bb4-497232ef1fd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b40e39a9-b78a-470c-a6ed-9f1e7fce449f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d2324b3-c35d-466a-aea1-f636447cb635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0383adff-45f9-4d51-84cd-e80a9b92acde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ce7b41e-cdf5-49c0-ac19-e2b16288be9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e809eaa-c374-4bed-a797-67a68d49946c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f241b43d-7ea3-4ceb-9a3b-cd7c373b4cea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6015466-7a04-4451-b890-9ee8b51544cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dab5b5b-67c5-4d7e-93a3-f4e35ae72ce7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}