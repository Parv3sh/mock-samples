{
  "uuid": "99cac67b-cb70-4a69-9455-d7d79f9da5e4",
  "lastMigration": 19,
  "name": "Amazon Cognito Identity Provider",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "a1bb0abe-2568-4498-ac7e-2b1f14d1085a",
      "documentation": "Adds additional user attributes to the user pool schema.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AddCustomAttributes",
      "responses": [
        {
          "uuid": "66a08ce9-31d7-4d70-862a-3c55f7e24f0e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cf4d636-967c-45d9-a4a5-2206e7f31e12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fa22575-b989-4c43-a823-26941064994f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9edb314-3919-4e87-b52b-0cf28fea27c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f42c823-9d2a-40b3-8e43-174b3ac652af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09253be1-e786-4228-8c57-001ea64d9f0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "428cb11b-862f-4b6d-86c5-7c40fc5e886a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8d9456c-3a9f-43fd-8d49-ea4a7f74da66",
      "documentation": "<p>Adds the specified user to the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminAddUserToGroup",
      "responses": [
        {
          "uuid": "37777f37-be54-45d5-8fae-5d55554bcad1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db870a2c-da0e-46ef-a602-a7f3fb1b955d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9bc4f6f-6743-41a8-bf6d-39f918fda899",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b3d6ef-4e81-4bf7-8377-2ecc7297af19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61251359-7148-4233-8d3c-0390c7b46d43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21e123b5-a197-437a-8c34-2930dfb9e290",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09e2aec8-6fdf-4220-8be0-98e5770ddc89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95fdf5e6-0339-4124-989f-74ac3b6c637f",
      "documentation": "<p>Confirms user registration as an admin without using a confirmation code. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminConfirmSignUp",
      "responses": [
        {
          "uuid": "0d32c2bf-f7c6-4147-a971-cdb7d6ddb715",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abc51424-61c4-4a4d-b081-e24bc28e4580",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "910c467d-f1b9-49d2-ad8c-a39c6ce70287",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "886d87e8-3a41-4936-b779-9b77a2a547d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f04e0693-2218-4e04-b4be-f3fecca21226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22ef1b9b-b595-44c2-9332-afc215234e24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8849dad-d09e-46f3-addf-f7a0e092e034",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8ab197a-6ef8-4ad9-b69f-ea5812360197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587f4937-5acb-4523-96af-16b2bac0b225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea36e76f-fdd9-43b1-89b4-5e5d4d6c2141",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d0b392a-05ce-44d4-a661-b589709da390",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21c0c364-e146-4d5b-bf93-84eace689c52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75b4b4bd-86c5-4942-b44d-11319af1b68c",
      "documentation": "<p>Creates a new user in the specified user pool.</p> <p>If <code>MessageAction</code> is not set, the default is to send a welcome message via email or phone (SMS).</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>This message is based on a template that you configured in your call to create or update a user pool. This template includes your custom sign-up instructions and placeholders for user name and temporary password.</p> <p>Alternatively, you can call <code>AdminCreateUser</code> with “SUPPRESS” for the <code>MessageAction</code> parameter, and Amazon Cognito will not send any email. </p> <p>In either case, the user will be in the <code>FORCE_CHANGE_PASSWORD</code> state until they sign in and change their password.</p> <p> <code>AdminCreateUser</code> requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminCreateUser",
      "responses": [
        {
          "uuid": "c2cf5d61-ce07-45f2-bfdf-8213377002ae",
          "body": "{\n  \"User\": {\n    \"Username\": \"\",\n    \"Attributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Enabled\": {{faker 'random.boolean'}},\n    \"UserStatus\": \"\",\n    \"MFAOptions\": [\n      {\n        \"DeliveryMedium\": \"\",\n        \"AttributeName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b77e35a-cd39-424b-9611-f924fa147ae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfe78c69-cfdb-40fd-bcc4-d4bbe9a1a53b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cace819-5f6f-4439-b16f-0786c58b075c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5415c5d-ea2a-4b4a-a7e3-9eef5e0ee91a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4fb9ed4-8a69-47da-873b-00e7fd29f246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a4f3877-8f24-4c4a-8146-1e3b2728eddd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "702ee055-aad2-404d-b9be-dd38516429df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7fbeceb-caa9-4cdb-91b2-58e7bccf84cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ab1a100-bddb-4f0a-a615-6f31dda8e0cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "657f5385-7688-4c4b-88d7-54340506068e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9e15594-bc8f-485d-95e9-8d9202f4f1f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af3a115d-d590-4cfd-8359-e8ec5a5f95e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3a41d70-ba7e-4e6f-9e88-3709b7da0a4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "666dfcfb-f2cd-42d3-a36c-9f1c23058fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c553c0c1-e905-47f0-8391-d35af5ab8836",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UnsupportedUserStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f07abbff-ff39-40d7-94b5-e3de5d2adfb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17051d6f-1db5-4354-bcf9-503e568c3561",
      "documentation": "<p>Deletes a user as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUser",
      "responses": [
        {
          "uuid": "dcc66c44-eb09-47c0-9b08-7382cf943bb0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6914e184-44cb-4c65-a9e6-a921903a93a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "060f056b-13b4-4673-8620-b6a246153725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2da86a04-9a8e-461f-b72a-78e21b13d170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8267c41d-c12e-48e5-8578-6609160505ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02d8d6bb-5c6c-4346-9a17-8b651f8d0af7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f559a6fd-8c40-4f8a-af85-257d1d4031e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "065a4117-36f9-4252-9ed2-e12c2f4c5776",
      "documentation": "<p>Deletes the user attributes in a user pool as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDeleteUserAttributes",
      "responses": [
        {
          "uuid": "dd60e24b-1a10-4f07-af72-d823d48fbcf2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2616c380-9353-4f49-87b5-b15ba7defda7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0715af5a-ecb9-497b-9fcd-2d0a4ae8a186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64390328-27db-4046-80af-78923f7c5086",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6d0debe-4717-43c3-91a6-8cc276546d1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5349e81b-76e3-4d1e-af46-0542b60c6dfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dece2c3-fd2e-4966-a8f2-08a1c33afa3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92d18505-9f69-4d45-959e-100b0649feef",
      "documentation": "<p>Disables the user from signing in with the specified external (SAML or social) identity provider. If the user to disable is a Cognito User Pools native username + password user, they are not permitted to use their password to sign-in. If the user to disable is a linked external IdP user, any link between that user and an existing user is removed. The next time the external user (no longer attached to the previously linked <code>DestinationUser</code>) signs in, they must create a new user account. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html\">AdminLinkProviderForUser</a>.</p> <p>This action is enabled only for admin access and requires developer credentials.</p> <p>The <code>ProviderName</code> must match the value specified when creating an IdP for the pool. </p> <p>To disable a native username + password user, the <code>ProviderName</code> value must be <code>Cognito</code> and the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code>, with the <code>ProviderAttributeValue</code> being the name that is used in the user pool for the user.</p> <p>The <code>ProviderAttributeName</code> must always be <code>Cognito_Subject</code> for social identity providers. The <code>ProviderAttributeValue</code> must always be the exact subject that was used when the user was originally linked as a source user.</p> <p>For de-linking a SAML identity, there are two scenarios. If the linked identity has not yet been used to sign-in, the <code>ProviderAttributeName</code> and <code>ProviderAttributeValue</code> must be the same values that were used for the <code>SourceUser</code> when the identities were originally linked using <code> AdminLinkProviderForUser</code> call. (If the linking was done with <code>ProviderAttributeName</code> set to <code>Cognito_Subject</code>, the same applies here). However, if the user has already signed in, the <code>ProviderAttributeName</code> must be <code>Cognito_Subject</code> and <code>ProviderAttributeValue</code> must be the subject of the SAML assertion.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableProviderForUser",
      "responses": [
        {
          "uuid": "5004261e-bb1b-4111-8c7d-0a8989e4fc3e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "706e590e-ba52-49ce-80dd-520737c5a2fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75c79f16-8e76-4be8-ba92-a6f37efa296b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d507074f-3108-47c1-b909-5c79acf27c93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0a664b7-af38-4490-90af-6cb5772008ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b5d25a5-0d0e-411c-b77b-3719cd4af094",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "221cf42f-1bca-41a3-aff4-b041005c16b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "836048e9-3d93-4d26-b84d-000fd07f2a65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b80686df-5e37-4711-9c37-5b327372de86",
      "documentation": "<p>Disables the specified user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableUser",
      "responses": [
        {
          "uuid": "eb74e820-63cc-43bd-aa72-59cb3e68ea0a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03e89faf-49b9-46a7-9d0d-b53998e1d06c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee121256-4868-47b5-a306-4a958a880b42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6838dd6c-a19f-4799-9a96-9239dd772da4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80a74bc1-bdad-400b-9c7f-59b03247c9b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7120690-9751-4d41-b810-5ed1848bbc51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5f73ccb-b3a1-4b80-bbdf-b1c6ec4995f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ea391cc-1970-4b5c-8480-b2b06de17690",
      "documentation": "<p>Enables the specified user as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminEnableUser",
      "responses": [
        {
          "uuid": "14f30839-97d9-413d-897e-ddfd8ef51bb5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16cf0fe6-57c9-4220-8d2d-41cba6d6790c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2032c643-d8b7-4525-8d0a-4bcbb464496b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d18cc29b-7518-4be5-ac0a-fcbb0f55fc18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727942c5-a128-4f7a-89dc-53e8d0335bf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b325be5-2817-41ee-9972-ae9dc80134e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27144e8a-6ea2-4aea-81bb-0cfd4087527f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19517381-581b-44b8-b165-a764f0d1062a",
      "documentation": "<p>Forgets the device, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminForgetDevice",
      "responses": [
        {
          "uuid": "7fc2efb9-6a71-4d90-8ccb-847bdc1801a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5ce129b-669e-4f3e-85ce-51032d6ff1ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fdeb2ee-6812-4e44-944e-4a2deee089ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be1f3b08-d036-4e20-a8d3-11eb541d2e9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b29bb9a4-a8c9-496a-9e3e-37d3d0a4d390",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46ee7e52-00c7-4d83-ac4a-0d897cb45544",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2798bca-2447-4a33-a833-9add9b38b331",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d9b045a-a792-45ba-8ae2-139a907d10eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fba9afa9-54d0-456f-a841-9b899aa9db9d",
      "documentation": "<p>Gets the device, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetDevice",
      "responses": [
        {
          "uuid": "8cd7cf06-3257-4c0b-bd49-b0a6ef28d798",
          "body": "{\n  \"Device\": {\n    \"DeviceKey\": \"\",\n    \"DeviceAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a84430f-f3a4-490d-b13d-3e4f7476903d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bc90cc6-82ed-4290-8ef3-957bd09cc776",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0652d1a-51cf-4c3e-b814-166273cafe98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6735c0ef-d822-49c8-a752-072353ce219f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a45ca3e0-cbb5-4c4c-b624-ec257f64f1a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57a3dcd4-50fa-4fa7-83e6-5bc1afc2b9d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1be7e6c6-375d-4518-91db-dd859c5cb56c",
      "documentation": "<p>Gets the specified user by user name in a user pool as an administrator. Works on any user.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminGetUser",
      "responses": [
        {
          "uuid": "4273f453-753f-49a7-8049-6a73e8033737",
          "body": "{\n  \"Username\": \"\",\n  \"UserAttributes\": [\n    {\n      \"Name\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n  \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Enabled\": {{faker 'random.boolean'}},\n  \"UserStatus\": \"\",\n  \"MFAOptions\": [\n    {\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ],\n  \"PreferredMfaSetting\": \"\",\n  \"UserMFASettingList\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f47c842d-59de-4410-88c1-d69ed4e5c809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "003cc625-350e-4f5a-90a8-fede55d2cee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b12b5792-d1b3-4147-9062-13df214b0abe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a924ce10-062c-4ec7-adc3-59b47306aa73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0777c1de-8671-4339-8cfe-b0b339fd1203",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "809fa862-6ad1-4205-80aa-1ec9ad91ea00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaeaf1a5-dfa5-4b96-8f2a-21daedfa7e80",
      "documentation": "<p>Initiates the authentication flow, as an administrator.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminInitiateAuth",
      "responses": [
        {
          "uuid": "380b37bb-a034-4b49-ae34-b4fddb7ce7ba",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a32fbc07-df28-4848-bddf-8f0a6afd943a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27a3c31f-4e9b-4ceb-a3c4-94a951bd2b6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f80ef9b2-0365-40f8-832f-228b6138b3bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22ae94fe-e9c5-4d86-80a1-6885cb140529",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "949698a4-436d-44df-b8f4-6c48ef5d5f9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e25516f-f4ae-45fc-8644-ee80abaec50a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "307821cc-1cc9-4a6a-8af9-f375059ac2b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a5e6e81-e1bc-4c83-b873-d5d49e6a5032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aebaa715-e039-4e72-8281-af3a0706024a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0f0e3b5-48f3-45bd-8f26-635b1e1c8b8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7203f55d-7dba-4f00-b295-827cd58c6fa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b81ae96-c4dc-4696-ab48-3b97cc713e63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "681ca573-3739-4c54-9d2b-561300b98ea3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8e0525c-795e-47f5-acf0-5aabc5340ee4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24fff8d4-ae4f-4518-8742-094e456b4ca7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d4adb8d-c2f0-4441-a76f-605e48f793d7",
      "documentation": "<p>Links an existing user account in a user pool (<code>DestinationUser</code>) to an identity from an external identity provider (<code>SourceUser</code>) based on a specified attribute name and value from the external identity provider. This allows you to create a link from the existing user account to an external federated user identity that has not yet been used to sign in, so that the federated user identity can be used to sign in as the existing user account. </p> <p> For example, if there is an existing user with a username and password, this API links that user to a federated user identity, so that when the federated user identity is used, the user signs in as the existing user account. </p> <note> <p>The maximum number of federated identities linked to a user is 5.</p> </note> <important> <p>Because this API allows a user with an external federated identity to sign in as an existing user in the user pool, it is critical that it only be used with external identity providers and provider attributes that have been trusted by the application owner.</p> </important> <p>This action is enabled only for admin access and requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminLinkProviderForUser",
      "responses": [
        {
          "uuid": "4ca716ee-fb68-40a6-9cb3-5926b4cf4833",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bf82a56-c483-4655-b7db-c303668dab6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c971e2c-827e-424d-a989-48329c478d83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d634f2-fb8a-40a0-89b5-5f04af00c28b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7c85db6-cd05-4b28-b2ec-4354a2babb66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16d8a96c-6238-45ee-bd7f-71aee877185a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8a6fd16-a9d9-4909-a1ee-c79d8fc20568",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfa62290-d2c5-4499-9d33-82698c729a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70a62ad6-cf82-4e4b-8acf-f7ce6f00e99c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b9c570a-d2a0-4429-9e91-a3eba9cc0924",
      "documentation": "<p>Lists devices, as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListDevices",
      "responses": [
        {
          "uuid": "78698326-7119-4483-a8c3-c4624e0dc42b",
          "body": "{\n  \"Devices\": [\n    {\n      \"DeviceKey\": \"\",\n      \"DeviceAttributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d33cfb0-8cd5-41e6-9d9c-6e06b05d47ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "364ab919-cc8e-4945-9906-60ca7c28eb15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e39b24c-0271-41d6-940f-5640ad0bd1a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27ec3e59-aa8a-42d4-93cb-11526042c626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfa3294a-b7bb-44ea-aceb-72d9167380bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84ef5eec-a52d-4a77-befa-7246f988e709",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "300b796b-1558-4cae-bad9-e77360db6469",
      "documentation": "<p>Lists the groups that the user belongs to.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListGroupsForUser",
      "responses": [
        {
          "uuid": "2ff88e45-4ff1-4ea8-ac23-3f988e4d28db",
          "body": "{\n  \"Groups\": [\n    {\n      \"GroupName\": \"\",\n      \"UserPoolId\": \"\",\n      \"Description\": \"\",\n      \"RoleArn\": \"\",\n      \"Precedence\": {{faker 'random.number'}},\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93c06729-a102-4a07-b381-c7902c373701",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95965c4f-ef92-4e3e-8a2f-d7bd8d612c09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75bc31bb-7367-4d0f-82d5-186fe70b58cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa69adf8-c918-41f7-a1a2-411012a271ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77925fd1-3d0f-4632-95ba-05d72ebce1ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5156013d-797b-45f8-b0ca-818c227149c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31c24f1b-cb39-484e-bebf-9036aee43c24",
      "documentation": "Lists a history of user activity and any risks detected as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminListUserAuthEvents",
      "responses": [
        {
          "uuid": "9591919a-6c19-4516-8495-63957ac83a31",
          "body": "{\n  \"AuthEvents\": [\n    {\n      \"EventId\": \"\",\n      \"EventType\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n      \"EventResponse\": \"\",\n      \"EventRisk\": {\n        \"RiskDecision\": \"\",\n        \"RiskLevel\": \"\",\n        \"CompromisedCredentialsDetected\": {{faker 'random.boolean'}}\n      },\n      \"ChallengeResponses\": [\n        {\n          \"ChallengeName\": \"\",\n          \"ChallengeResponse\": \"\"\n        }\n      ],\n      \"EventContextData\": {\n        \"IpAddress\": \"\",\n        \"DeviceName\": \"\",\n        \"Timezone\": \"\",\n        \"City\": \"\",\n        \"Country\": \"\"\n      },\n      \"EventFeedback\": {\n        \"FeedbackValue\": \"\",\n        \"Provider\": \"\",\n        \"FeedbackDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efb4ff9c-cdfc-4f9f-8de3-98fad09dfed3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ca86c04-7c5d-47b6-81f7-7332de64a4fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f57e8fc9-bad0-4e18-b074-fa0e39609ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39357b7d-5713-42b1-99b9-5a94faa0759b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00554dd7-011f-430c-88fe-16158870c4e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1383fb6-f361-4558-b3f8-8c45c4b1f38b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c094cb-b6aa-4d99-96be-cc83058c8c88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2e0dfe9-0b76-43ef-9fab-e8071037b70a",
      "documentation": "<p>Removes the specified user from the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup",
      "responses": [
        {
          "uuid": "016dcdc1-e6c6-42f7-92b2-c31d83c65f4d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b62e91-4807-4477-8d0f-dff59ed288e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32981930-66a2-42ee-a1d6-f49ae0f1ad05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584090e8-5808-4066-8ec5-9eb4f9fc93ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a724c1b7-9bae-4ed8-9569-36de06e7626e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "412e4b4a-c4df-404b-86f0-efb4a9f4495c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d081fc77-b0a4-4efa-8b5a-853ffde9779a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f48da52b-2d50-4fe1-9ca5-75f57acf810f",
      "documentation": "<p>Resets the specified user's password in a user pool as an administrator. Works on any user.</p> <p>When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminResetUserPassword",
      "responses": [
        {
          "uuid": "3e4a441c-86df-4d15-9aeb-6a93501f083a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a13195f4-c0c6-4a9d-8b14-3fa204807ede",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a42ba3ee-6655-492a-81f2-22c8c6541584",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a71ee25-9f63-4c09-8d9c-3b05c627e80d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d3a0948-b24e-4252-87cd-4aed477b56ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82ed88c9-7431-4595-8236-80b39ee6d44c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4898bbc-297b-42f4-82c7-d6612ce9224c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "384dbce0-6d02-4e4d-ba65-d78ab6ee79f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15b6aca6-7a3d-46b2-a4cc-81d51edc63f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de52a9de-5f48-46ca-9d3c-a7258ee6277a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a2ac042-5ca7-4f0a-b721-e399e50b9c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c0ce576-3bf4-43c7-a599-924e4d76694a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1308f2-ae74-4e3f-80ce-cd876289c9d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e279574a-0db4-47fd-bd45-2c02958d97ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf015e8e-6f2b-4169-9c81-cbc137450c18",
      "documentation": "<p>Responds to an authentication challenge, as an administrator.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge",
      "responses": [
        {
          "uuid": "1f299c11-13a4-4277-a792-7c36e4a549b3",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c38bb05-8bb7-4d5c-9e54-daf779112fbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ad48e2e-eb1c-4830-995a-d69aabeb43c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "434138e3-cc17-4f50-95fa-2dd2b4e5498d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "762be6b2-f681-4d12-be65-6e66bd8edd4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b9c8f0e-2966-4753-9f09-1ce13bef28ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30832751-1997-4b8f-b21f-ca81d95392e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd7e52e5-bc38-4f61-90db-a7778bf556bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e90f163-dc3c-4bc5-ab64-8be2ef7ab017",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0487d81d-ab0e-41ef-ba7f-df86dd89d573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aab01c82-06a8-44d5-a91c-cd41273034d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adda48fe-713f-41d7-9882-e14555c887c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f6de8eb-1262-496c-93e0-541988253e9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "628de4e7-edc0-4950-ac44-633a54f59d0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67a78b81-55e9-4df3-bbc6-ec7fc62c4490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25934650-aa9d-49bf-abde-68dafc4358d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7610e51f-da76-4e34-bba2-03728b6251c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d4fc3db-408c-458e-9be9-07d62add5b61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4f9a35a-fbc3-4d96-9794-ebdb0dee0f99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a599d3e4-842a-46f8-9329-c05db1bfd72d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7f34ee5-e8be-4aa2-a12d-720d149916f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50391d53-173a-4eb0-ab41-108b9e9dad12",
      "documentation": "Sets the user's multi-factor authentication (MFA) preference, including which MFA options are enabled and if any are preferred. Only one factor can be set as preferred. The preferred MFA factor will be used to authenticate a user if multiple factors are enabled. If multiple options are enabled and no preference is set, a challenge to choose an MFA option will be returned during sign in.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserMFAPreference",
      "responses": [
        {
          "uuid": "9ac2bc9f-8b20-4ff2-965d-f24d689ef9d5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fabfa57c-573a-4957-8c4c-f44d3eeafe6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9b22363-942c-46e8-a23d-cfc5d98b81f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23a127e3-2a6b-4b0e-98b4-2818626bd6b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd869443-7d88-413a-9858-fcfcdb583e5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20ceb615-972a-4d84-b5e6-ce306018b753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5a3f24a-d846-4755-bad2-3ccc8b96bca3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6157c0d9-5e9a-4b80-b4d4-7a1fde198a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76761b86-f7be-47a4-8c2c-153eebbdc84b",
      "documentation": "<p>Sets the specified user's password in a user pool as an administrator. Works on any user. </p> <p>The password can be temporary or permanent. If it is temporary, the user status will be placed into the <code>FORCE_CHANGE_PASSWORD</code> state. When the user next tries to sign in, the InitiateAuth/AdminInitiateAuth response will contain the <code>NEW_PASSWORD_REQUIRED</code> challenge. If the user does not sign in before it expires, the user will not be able to sign in and their password will need to be reset by an administrator. </p> <p>Once the user has set a new password, or the password is permanent, the user status will be set to <code>Confirmed</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserPassword",
      "responses": [
        {
          "uuid": "e1ef1ded-1403-4280-a081-7a9506bb51e9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "860f8063-79f1-4565-9d79-32519188a171",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68703629-9b77-4b51-83d5-a950e06f4a82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6a5058e-0ec8-4802-8500-de13eaf54721",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9958c24e-03b3-4186-944b-b92a10bce49d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "851ccb77-9260-4975-99fa-1e0c76e7d849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bf3fa50-3c46-4ed6-abe8-955c4e1dbfc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f297f28-3710-473a-af2f-5e4c27aec67b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "357a9a46-a546-4989-a9e8-998c0a63aa32",
      "documentation": " <i>This action is no longer supported.</i> You can use it to configure only SMS MFA. You can't use it to configure TOTP software token MFA. To configure either type of MFA, use <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminSetUserMFAPreference.html\">AdminSetUserMFAPreference</a> instead.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminSetUserSettings",
      "responses": [
        {
          "uuid": "efe3cd9c-31b2-4963-81a4-74d0ce5678ff",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c480c5-5d7b-4b48-b00b-b8c37fc90012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b6077a2-fbef-432e-ad62-27ac06d8fd0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0c3e720-351c-4dfe-b70d-dfe15473823f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a2178e6-1c26-485f-97fa-68504d4b7333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "736794cc-73e3-45a4-85fa-f0b77d0ab061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2d75c8e-01f7-43a3-9d1c-26551ccc1dd2",
      "documentation": "Provides feedback for an authentication event as to whether it was from a valid user. This feedback is used for improving the risk evaluation decision for the user pool as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback",
      "responses": [
        {
          "uuid": "337a8764-6362-47e6-b627-16cdd9502e30",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc3be3ec-8e60-4287-b202-45218d155d8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "987daffd-15f2-41e7-92de-22314a1b06b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bcac86a-f376-4f7a-86e6-b4de3e240343",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d18bc19-5322-4f07-87eb-743d39f21d0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f34f92eb-06d3-46db-b4a1-6856dac213ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f98b7304-1a97-4123-b53b-4b7536b2d379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9570f394-9460-4428-9207-46e0369d5a35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9696708f-00d7-4f5f-842d-9eec4bac566b",
      "documentation": "<p>Updates the device status as an administrator.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus",
      "responses": [
        {
          "uuid": "abeb112a-12b2-47cd-9558-73eea8d7ebc4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8bd949d-3633-4e2d-b6d3-8366d8b6da31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33f0d2d9-d7e3-4136-b00f-195bf0e71b9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7239acc0-91eb-430b-9d02-f93ffab70981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7388b0b9-5b6d-4fce-bae3-35df04c12502",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23da779d-9e5c-49f0-ab1a-14b4995ccdf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63734fdf-29e5-4fe9-b9fa-d4178d581432",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e381dc0-86f8-4f8a-bdb0-5a605289540e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3998f086-dc4a-4f19-b688-9d800c4518e6",
      "documentation": "<p>Updates the specified user's attributes, including developer attributes, as an administrator. Works on any user.</p> <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute name.</p> <p>In addition to updating user attributes, this API can also be used to mark phone and email as verified.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUpdateUserAttributes",
      "responses": [
        {
          "uuid": "9e4ed1a3-8d52-4daa-b3b5-f70689e2114b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f895764-3e32-40ca-bf43-952a0f3fe5b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fe7aa5b-1425-4fd3-945b-245bc18f6eac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71881524-469f-48ef-b7fd-7519dc4a8e54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35b41b8e-7f85-4584-92b2-958f4768513e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4a320b3-226d-4877-a76d-85438360fc58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc59f657-5169-4a66-b2fa-5ac8bf7d1e86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5e28155-1a44-4855-9bb4-42f0bd29b7f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a838e85-9825-4711-8240-8403e349de33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00275c05-0841-4f87-a0bb-9af351a84cf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a0b2d50-674d-45a2-aed6-cd7d2e0317df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35c097a1-c5b0-41e6-b55b-0e1320919ecf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "397b0b94-802e-4d2a-a062-f582e5b98897",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e77b78b-da59-43be-bffe-f9b76e23f273",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cbed10b-cc5b-4cdc-bbb6-9617e6b7abcd",
      "documentation": "<p>Signs out users from all devices, as an administrator. It also invalidates all refresh tokens issued to a user. The user's current access and Id tokens remain valid until their expiry. Access and Id tokens expire one hour after they are issued.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AdminUserGlobalSignOut",
      "responses": [
        {
          "uuid": "8a30e259-5428-4fcf-b49d-7fa4caa3fdb2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44d16a79-9035-4fa2-bc64-326cb07f9f5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c93629af-eb61-48c0-b26e-5834db0cd1ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2de53087-3a0e-4743-8f2b-2178cef91375",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24b22a09-646a-449b-8073-a2ea90b4e4fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca40219a-8d12-48e7-a718-550a52bb8b79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46d946ae-e4e0-457f-817e-700ec2446fe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6becc5ad-f877-46a8-ad04-fc0739fd1cbb",
      "documentation": "<p>Returns a unique generated shared secret key code for the user account. The request takes an access token or a session string, but not both.</p> <note> <p>Calling AssociateSoftwareToken immediately disassociates the existing software token from the user account. If the user doesn't subsequently verify the software token, their account is essentially set up to authenticate without MFA. If MFA config is set to Optional at the user pool level, the user can then login without MFA. However, if MFA is set to Required for the user pool, the user will be asked to setup a new software token MFA during sign in.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.AssociateSoftwareToken",
      "responses": [
        {
          "uuid": "c4a9abb2-b4ac-412e-bfa7-e9b0eaa5560c",
          "body": "{\n  \"SecretCode\": \"\",\n  \"Session\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3484a376-2a65-427c-a2ec-ea991c464428",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae0800e3-1fa5-4736-abad-4ccb64dee02b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d7ca844-0f14-4b54-a100-556ede74cb85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abbcf3e8-ce85-4c95-9c5e-e20262b1e3dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c06b90bc-54e7-43ba-a05e-d70daca8610a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc952271-d506-4b14-9268-d6c6759b6336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ba49bfa-cd27-45d0-82f2-602eae7f6ff8",
      "documentation": "Changes the password for a specified user in a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ChangePassword",
      "responses": [
        {
          "uuid": "6ebbcf9f-2962-4ff4-80ba-bf15b1efa559",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3365228d-57ab-4c29-aaad-00193caed2b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c72b854b-9101-406c-9a66-62cea83dd3c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd2343dd-5f0a-4ee8-ad27-05a8f3f06c61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9790beb6-518a-4c76-b3f7-e82293427484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5474ba5f-502b-41d3-be9c-48225141eeca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "034f0fdb-61e9-4713-808f-76c27f83f1e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71ef4d4b-9358-4cad-a661-2dac4349cdcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd4f5ea6-5c96-4724-8a9a-c4eec5a5919f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4282e97e-3466-4bb0-8207-d7f4545f1171",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5db984-63e7-4a74-9f2d-ca82ffc0448a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8c9385f-ee1f-4551-9b6b-b03048074273",
      "documentation": "Confirms tracking of the device. This API call is the call that begins device tracking.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmDevice",
      "responses": [
        {
          "uuid": "3e455edb-b785-49a4-b9d5-c277e133c4ba",
          "body": "{\n  \"UserConfirmationNecessary\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f507b317-2bd1-427b-9293-6eed70b0051f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b0c5619-a67f-4a8c-843c-3b7e58838334",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bbdb594-a6e0-47b8-b3f8-953e6d8d175c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c478cedf-37c5-40af-9f83-5b0e327c083a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49ff9dc4-a64d-46f5-8c84-aa1107516a13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2879ab5-64b1-4637-9737-ff3475eb092b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4df48b7-24eb-49de-a422-9f4b91df6343",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff2599ff-4f4f-418e-ad1a-3ade60702608",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "743281a9-8ce2-4a80-9f8b-fb151700212c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c84bf2-6dd4-49b0-8b80-d71fae12c554",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1e9099b-7493-410f-bd47-ec9cc1e6016f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c2fe7a4-3efe-4820-a93a-6d1d89faed76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "560695d2-b3fa-495c-9851-731d556540e8",
      "documentation": "Allows a user to enter a confirmation code to reset a forgotten password.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmForgotPassword",
      "responses": [
        {
          "uuid": "ca1f7b38-d0d4-4289-9f91-45a7da8e6d47",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4487b917-6943-40a6-be50-889ac3d57dfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59cc979d-4bf5-41af-9f39-29517e6ee5f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "514642ca-d4ba-47c8-99df-1193fce57724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b9ab39b-4d6d-4daf-884f-78ebd8b8c6cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc4e2af5-90eb-4e20-9d4d-50b877c1483d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01ff579a-0bc0-491e-94ee-09a9565f97de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "162099a8-6e9c-46d5-b405-ce77b5bbc74b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6480928-53d7-4d0b-a5de-f47c190131dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cccd38f9-52f0-4481-bce9-95792dba96c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bdeed01-961e-420f-8b83-6f2711e01c75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dab01578-891f-4341-8c7f-2787db7da7f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b71e75c-5740-4a62-8ba8-83b272d6b5af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d4dde3-1a25-46e1-849b-fcf7f31f9ef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba165220-c7e1-4bac-befa-13b4d7dccdf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feb0dfbe-55d5-40a2-b65b-dfd5e24b96eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96fa2f51-5121-4af4-8dce-7f037f62a951",
      "documentation": "Confirms registration of a user and handles the existing alias from a previous user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ConfirmSignUp",
      "responses": [
        {
          "uuid": "5d66b402-819a-48be-ac35-d2b8846a21df",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2569214-0c20-4cf0-8fd3-5d6206a64a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba58af61-1ad5-4534-8a0d-44942cdddeaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b493e0a4-4c60-4538-81b5-00adb0a550cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16800726-c854-48cc-841a-818f7404b2b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "115b461b-3750-4bb0-8ec1-cc4d4b3fa163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f46f7ba-fefa-4b3e-b4a5-8b21dee66295",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyFailedAttemptsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e6090bd-a6c2-40e8-9c01-e032a88fdd20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39db420d-4fc0-47ec-9f90-ad216ca7f4ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "291b575b-77ec-44bf-ae90-5a84164d0d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "751dc1af-c4cf-43e7-bf26-2e4ad6b36eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b240931-75fb-4ad0-b83e-6df32b7b09de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af93d9b9-b9c8-4d9c-aada-e8439335d38d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "019b8b56-ec14-4afe-85f1-e20f19d9a3b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48e25f19-2ade-42cc-8c08-8c082d0a8de4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d591e435-8acd-4648-a1a5-fbf13d9e17e4",
      "documentation": "<p>Creates a new group in the specified user pool.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateGroup",
      "responses": [
        {
          "uuid": "2207e453-7e33-4d33-92c5-bd5bea2d8792",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f473ecf1-aa1d-4d8f-b98c-2f2f7f1278e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd38b26a-394c-417e-9cc1-3a7cd960660c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "GroupExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e290ce4-c86b-4a51-856c-d4f901b7058a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4319441e-91d4-4952-b255-81dec9627f93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aa961d8-944d-4532-9f8c-7bbb48d910d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1fdcc4b-9454-4340-aa52-b3ea40be24c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f9a3ec4-27f1-4056-a80f-9baf2243a65b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1ec8ce0-ba28-4875-8bc7-b72f8b4161c6",
      "documentation": "Creates an identity provider for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateIdentityProvider",
      "responses": [
        {
          "uuid": "ce528051-964c-447f-b108-1729ca807ba1",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "444c93c9-f4df-4bec-963b-a29ba76f5cd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac5ffe9b-382d-45c9-a1e2-9e369d2c64e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "173097e6-d9c0-4155-8756-60c09e65ba72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33afd54b-aed4-4a21-92f8-e36dc1f7e8c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ab1902d-594a-42c8-8d50-929e2af9422c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "918902af-d7c2-4681-bfbd-b883240e9e19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "786fd7e7-396c-4010-ab02-9566211a0469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e979a1f-a8d7-466b-bedf-856a5d327794",
      "documentation": "Creates a new OAuth2.0 resource server and defines custom scopes in it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateResourceServer",
      "responses": [
        {
          "uuid": "d08f839c-626f-4f17-a6b1-a64c43210200",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22565186-411e-49c2-a78f-732092fc8674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffe7f045-e94f-417f-a93b-7782f9b78c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eea0c20-e1cf-4388-9424-2178a30c253f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7637f11e-5ad3-4695-b0d8-485e378c176c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a35c61f0-4512-470f-9892-ef383b08db5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1e7f579-c78a-4ec7-83c0-ce506c62497d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90c0ec39-adc6-4d3b-897f-da0b68216ac8",
      "documentation": "Creates the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserImportJob",
      "responses": [
        {
          "uuid": "2be04901-9c3c-4448-a642-970edff907dd",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c63bcee2-2eed-47c0-b0ef-a1a3bf29c6f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17596f6f-06b4-46ea-aa84-5a5e776d7b26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cef20c9f-43e8-4f3d-a6ce-807a02a43401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a69cc53e-d2e8-450e-abe2-2674a0421c9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2086fe25-d0ca-4d64-8f22-789fb189ebbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b086eee-94ac-4519-af0b-8cadfa1ec8da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52ea1ce8-9d36-40fa-875a-eb6912b4af62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "602a4bb1-5a90-42af-8d0f-c9622b651b1d",
      "documentation": "<p>Creates a new Amazon Cognito user pool and sets the password policy for the pool.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPool",
      "responses": [
        {
          "uuid": "0e3a1698-7fb0-4c3c-aa6b-314785fdc04a",
          "body": "{\n  \"UserPool\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Policies\": {\n      \"PasswordPolicy\": {\n        \"MinimumLength\": {{faker 'random.number'}},\n        \"RequireUppercase\": {{faker 'random.boolean'}},\n        \"RequireLowercase\": {{faker 'random.boolean'}},\n        \"RequireNumbers\": {{faker 'random.boolean'}},\n        \"RequireSymbols\": {{faker 'random.boolean'}},\n        \"TemporaryPasswordValidityDays\": {{faker 'random.number'}}\n      }\n    },\n    \"LambdaConfig\": {\n      \"PreSignUp\": \"\",\n      \"CustomMessage\": \"\",\n      \"PostConfirmation\": \"\",\n      \"PreAuthentication\": \"\",\n      \"PostAuthentication\": \"\",\n      \"DefineAuthChallenge\": \"\",\n      \"CreateAuthChallenge\": \"\",\n      \"VerifyAuthChallengeResponse\": \"\",\n      \"PreTokenGeneration\": \"\",\n      \"UserMigration\": \"\",\n      \"CustomSMSSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"CustomEmailSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"KMSKeyID\": \"\"\n    },\n    \"Status\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"SchemaAttributes\": [\n      {\n        \"Name\": \"\",\n        \"AttributeDataType\": \"\",\n        \"DeveloperOnlyAttribute\": {{faker 'random.boolean'}},\n        \"Mutable\": {{faker 'random.boolean'}},\n        \"Required\": {{faker 'random.boolean'}},\n        \"NumberAttributeConstraints\": {\n          \"MinValue\": \"\",\n          \"MaxValue\": \"\"\n        },\n        \"StringAttributeConstraints\": {\n          \"MinLength\": \"\",\n          \"MaxLength\": \"\"\n        }\n      }\n    ],\n    \"AutoVerifiedAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"AliasAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email' 'preferred_username')}}\"\n    ],\n    \"UsernameAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"SmsVerificationMessage\": \"\",\n    \"EmailVerificationMessage\": \"\",\n    \"EmailVerificationSubject\": \"\",\n    \"VerificationMessageTemplate\": {\n      \"SmsMessage\": \"\",\n      \"EmailMessage\": \"\",\n      \"EmailSubject\": \"\",\n      \"EmailMessageByLink\": \"\",\n      \"EmailSubjectByLink\": \"\",\n      \"DefaultEmailOption\": \"\"\n    },\n    \"SmsAuthenticationMessage\": \"\",\n    \"MfaConfiguration\": \"\",\n    \"DeviceConfiguration\": {\n      \"ChallengeRequiredOnNewDevice\": {{faker 'random.boolean'}},\n      \"DeviceOnlyRememberedOnUserPrompt\": {{faker 'random.boolean'}}\n    },\n    \"EstimatedNumberOfUsers\": {{faker 'random.number'}},\n    \"EmailConfiguration\": {\n      \"SourceArn\": \"\",\n      \"ReplyToEmailAddress\": \"\",\n      \"EmailSendingAccount\": \"\",\n      \"From\": \"\",\n      \"ConfigurationSet\": \"\"\n    },\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    },\n    \"UserPoolTags\": {},\n    \"SmsConfigurationFailure\": \"\",\n    \"EmailConfigurationFailure\": \"\",\n    \"Domain\": \"\",\n    \"CustomDomain\": \"\",\n    \"AdminCreateUserConfig\": {\n      \"AllowAdminCreateUserOnly\": {{faker 'random.boolean'}},\n      \"UnusedAccountValidityDays\": {{faker 'random.number'}},\n      \"InviteMessageTemplate\": {\n        \"SMSMessage\": \"\",\n        \"EmailMessage\": \"\",\n        \"EmailSubject\": \"\"\n      }\n    },\n    \"UserPoolAddOns\": {\n      \"AdvancedSecurityMode\": \"\"\n    },\n    \"UsernameConfiguration\": {\n      \"CaseSensitive\": {{faker 'random.boolean'}}\n    },\n    \"Arn\": \"\",\n    \"AccountRecoverySetting\": {\n      \"RecoveryMechanisms\": [\n        {\n          \"Priority\": {{faker 'random.number'}},\n          \"Name\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb9183bf-8d71-4fae-ab3c-70f36260dd75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94b777b5-1ae8-4fc5-8082-68be17507604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6636babe-e127-4b7a-bb91-042c39f5e655",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b813e1-c859-4f5a-9705-29ad913cf4c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fed6afa8-e69d-44bf-b8bc-88513ebf92a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51f24a43-dbe0-4e49-855c-0d68635bc70f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d2ce537-8547-42c4-957c-49370a39f516",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bffc42f-9855-494f-807d-91ec16562455",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f2c4a1-f912-4026-afcb-fef6cce4da9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51b50482-ca94-43a8-b1c7-da43d3113baa",
      "documentation": "<p>Creates the user pool client.</p> <p>When you create a new user pool client, token revocation is automatically enabled. For more information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\">RevokeToken</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolClient",
      "responses": [
        {
          "uuid": "a9d67b0a-bcb9-4ec8-b4de-c0c4298a4e0c",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da0d0b3c-6d6e-47a0-a67b-25cd98ed88e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9956dadb-cbcd-43a4-b887-d0719cc7b112",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8519581-b0bd-46b0-a615-29600409cf10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b83f2d88-64ad-442b-8138-cf705fc96f10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86c80267-69b4-4f8c-aca2-3178f306b617",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6c5c5c6-4999-4b55-97a0-d0ba858ff9e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ScopeDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d17db4f-ec0e-49ab-9791-1d0d73d33b23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidOAuthFlowException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16433a19-a80d-4e95-bea9-be3faec7a6a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f7b7c5e-9f5d-4e21-baf9-a1748ae6c7d7",
      "documentation": "Creates a new domain for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.CreateUserPoolDomain",
      "responses": [
        {
          "uuid": "fa2fc939-dcd7-4a94-9596-a53a54930307",
          "body": "{\n  \"CloudFrontDomain\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5674eae-41c5-41bf-894c-ecc3852b7f42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1db7a1ac-4f77-4b45-a922-4a4c0108f465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12e04ff4-32f5-41b7-897c-7a204ea2fcab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb669377-b7dd-4fc9-a914-1b8dd937b368",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63bc23fe-84fd-42fe-9d6c-43da52741685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a503e8e2-3b7d-4ad8-9091-43ab2cbcb4ab",
      "documentation": "<p>Deletes a group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteGroup",
      "responses": [
        {
          "uuid": "84701bdb-0800-41bb-acc5-2225aba87350",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e97f990c-5dc5-4bb2-9785-5a61d0498404",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bb012aa-b47f-4fbf-b821-67c0689bf645",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e363e97f-de9e-4fb1-9af9-18a276933d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fd65992-26ba-46eb-b5bc-0e76156c97fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa1d0eaf-2695-4782-9e9f-7408032ca101",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "571357ed-984b-497e-b606-0314c6dfc7d5",
      "documentation": "Deletes an identity provider for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteIdentityProvider",
      "responses": [
        {
          "uuid": "a6c5db1e-3bea-4158-a145-4bd44f63a3fd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa7ec0ad-f633-4e54-b9b1-24d15b736c4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebc2d95e-09f5-4966-ada0-f183219bb7fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedIdentityProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5337b3b-11d5-496e-ad19-e885717ee77c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48a44454-6964-4802-8856-9023073f3761",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60524acf-cab6-49b8-bc68-6a662fea272b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "329229e4-7045-4524-9846-1f58ffa07724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02ef3118-cc03-4b6b-a4b4-d1137c4bec02",
      "documentation": "Deletes a resource server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteResourceServer",
      "responses": [
        {
          "uuid": "52d3ef78-d825-402f-85e3-d7f5c7acace5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af278f08-0005-480d-8af8-26b6fa4ff5fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4e6e82b-2c80-4689-b312-9f8c14b74fc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0623a77-b984-4e6e-86e8-a6d5a5727e20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfe644b4-42ba-4102-8d0e-9fb0ebca9adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bcc626f-7ad5-4372-b072-7b5ba9f8c423",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6b202f1-a5d1-4b25-a18e-76d569c96a0b",
      "documentation": "Allows a user to delete himself or herself.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUser",
      "responses": [
        {
          "uuid": "419674bd-aeb5-4a8f-9686-6446fc901a0e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2405959b-468c-4d56-8685-17d2d00ec7dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7892c989-646f-4fea-83a4-9378d83bfc0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2411a34f-274f-479f-b8e5-61757da28fd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14fe93ee-c795-4f94-82c6-ac61cbf7c13d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35b2d587-ce69-47ed-bce4-19d4510a5e36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "047c16db-ff26-42a0-bf3e-b3c1be79e986",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e42eef2-b34e-4061-96ac-862774a43569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca35f846-3bbe-4b5f-8423-226e32249ff4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f42b397-5c0f-49b2-a880-c6f77b2f0095",
      "documentation": "Deletes the attributes for a user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserAttributes",
      "responses": [
        {
          "uuid": "b13bb55c-c92a-4251-84ef-f1331181082a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a36c32a-33e2-4439-9cce-706b6671d28c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb4f532e-0754-4f6d-9daf-eaaf9f8ccfcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a889488-d9a3-4b2d-b6c0-61c2ea27212c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eaf345a-1066-491a-bb7c-327869ebc8b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f14fb47b-baa0-4752-8129-a979785eecb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c263dea7-e778-44dd-a734-ad0b82be648e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "045c12b0-1544-47f1-a42a-b64fee656fb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd04c265-5fa8-42ca-85f0-2da119c53819",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83081566-3dd4-449f-ab84-98dcca12a654",
      "documentation": "Deletes the specified Amazon Cognito user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPool",
      "responses": [
        {
          "uuid": "5a166091-3aef-4d7d-9863-93154a8bb60f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35c4fb25-fa60-4277-86f4-ddaae388839a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4a15c06-fd12-47a2-8224-3d723cd24071",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ee6d6e4-3415-4838-9115-e71f8857ccaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31cfdf26-22c9-479a-b772-e36fe44945eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ada9dad0-f477-4a07-9439-3c03978eb381",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80eb021a-c791-4c2d-92e9-7ed94ffe37e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39df929b-e761-4aa8-853a-bc53d89bd63f",
      "documentation": "Allows the developer to delete the user pool client.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolClient",
      "responses": [
        {
          "uuid": "fe6595c3-f492-459c-b270-f55d8b5b5aaf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5bf1ad-2720-44f7-969e-e2538841db6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "739aaa9e-76c3-4bcc-8232-7568b4058407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17aedc39-3427-472a-94a5-7d4a501f3832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3abe9df-9558-4532-b823-c77fbc1ad19c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eb9af78-bc9f-4acd-a2d1-406c14040f39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdacefa1-292f-454c-9c6c-b05163893176",
      "documentation": "Deletes a domain for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DeleteUserPoolDomain",
      "responses": [
        {
          "uuid": "93eb93bd-b9a9-4aee-9f4d-69b146d49e6b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b01567-ac8f-4129-a3bf-23ac4aed200d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3aab488-df2c-4e52-9822-eed5c6f6c77b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cb06333-6ca3-4cc2-b227-8f261f6d828c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f46d731-1ae1-49f2-bce5-71e5736fae4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6b133d2-94db-4aee-ac41-0468b0c7664e",
      "documentation": "Gets information about a specific identity provider.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeIdentityProvider",
      "responses": [
        {
          "uuid": "704ee6e9-6a77-4fef-9303-8b91bf575b37",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "793a7ba3-ef3b-42a5-af30-f9103d77ee91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83923918-0239-4384-9bc4-e3f8f0063828",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a719264f-8757-4243-8f80-bc83e68bca95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c0059ec-9310-41f8-bfca-61a02dc48da6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5e22ee9-f953-4937-80ec-aef5f94a7f8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35bc819b-c91f-42a1-904f-a75e85d0e174",
      "documentation": "Describes a resource server.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeResourceServer",
      "responses": [
        {
          "uuid": "35dcf664-cb13-42a5-a2dd-9751cf9bc2db",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ca5cf0-809c-438b-957f-49088b318ae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6fda8ce-a246-481b-80ee-65b0120f7496",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33629c60-3250-4c25-8d9e-5a2553c95518",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cd9c4d6-c1eb-4568-beb3-0c6177bc8c09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31d63ee9-d652-4a1e-b837-13011ebf0008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "592a06ec-3730-450b-8c5b-e61e02de4bf0",
      "documentation": "Describes the risk configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeRiskConfiguration",
      "responses": [
        {
          "uuid": "92440940-949f-4e31-adde-4de0492f5bb6",
          "body": "{\n  \"RiskConfiguration\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"CompromisedCredentialsRiskConfiguration\": {\n      \"EventFilter\": [\n        \"{{oneOf (array 'SIGN_IN' 'PASSWORD_CHANGE' 'SIGN_UP')}}\"\n      ],\n      \"Actions\": {\n        \"EventAction\": \"\"\n      }\n    },\n    \"AccountTakeoverRiskConfiguration\": {\n      \"NotifyConfiguration\": {\n        \"From\": \"\",\n        \"ReplyTo\": \"\",\n        \"SourceArn\": \"\",\n        \"BlockEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"NoActionEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"MfaEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        }\n      },\n      \"Actions\": {\n        \"LowAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"MediumAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"HighAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        }\n      }\n    },\n    \"RiskExceptionConfiguration\": {\n      \"BlockedIPRangeList\": [\n        \"\"\n      ],\n      \"SkippedIPRangeList\": [\n        \"\"\n      ]\n    },\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df8cdad8-8bb9-4379-b097-417d9f99a07e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d74f6061-75d7-4941-bf37-8c5f3faea9d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a397e90-188d-4548-9f18-9f04d6b45e48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3b7810c-034f-49a8-a851-968bf5e2b856",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2edf3dcc-f813-4810-8ce6-ce20e3b2b3f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d69d5371-d12f-4182-bf10-e1b8acb9cfe7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "364d93ec-e01f-43f5-b6d6-930c2e21fc1d",
      "documentation": "Describes the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserImportJob",
      "responses": [
        {
          "uuid": "44cac182-43ad-4d7c-a055-be46448180a5",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb57c117-5767-48a4-88ad-5087bd75741f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c16ec2de-3673-4b57-98c8-3d150dcf1a3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a224555-4006-4910-9002-29a72bfca09e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85246eee-7243-4ded-86c7-a552d1796163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92d5f07d-fd24-474a-8a7e-cbdbef62b5e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4921f7f-cd3d-4a56-be7c-ef40924e0a1a",
      "documentation": "Returns the configuration information and metadata of the specified user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPool",
      "responses": [
        {
          "uuid": "25de4ee1-c446-42e0-afeb-c88597bf3951",
          "body": "{\n  \"UserPool\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Policies\": {\n      \"PasswordPolicy\": {\n        \"MinimumLength\": {{faker 'random.number'}},\n        \"RequireUppercase\": {{faker 'random.boolean'}},\n        \"RequireLowercase\": {{faker 'random.boolean'}},\n        \"RequireNumbers\": {{faker 'random.boolean'}},\n        \"RequireSymbols\": {{faker 'random.boolean'}},\n        \"TemporaryPasswordValidityDays\": {{faker 'random.number'}}\n      }\n    },\n    \"LambdaConfig\": {\n      \"PreSignUp\": \"\",\n      \"CustomMessage\": \"\",\n      \"PostConfirmation\": \"\",\n      \"PreAuthentication\": \"\",\n      \"PostAuthentication\": \"\",\n      \"DefineAuthChallenge\": \"\",\n      \"CreateAuthChallenge\": \"\",\n      \"VerifyAuthChallengeResponse\": \"\",\n      \"PreTokenGeneration\": \"\",\n      \"UserMigration\": \"\",\n      \"CustomSMSSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"CustomEmailSender\": {\n        \"LambdaVersion\": \"\",\n        \"LambdaArn\": \"\"\n      },\n      \"KMSKeyID\": \"\"\n    },\n    \"Status\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"SchemaAttributes\": [\n      {\n        \"Name\": \"\",\n        \"AttributeDataType\": \"\",\n        \"DeveloperOnlyAttribute\": {{faker 'random.boolean'}},\n        \"Mutable\": {{faker 'random.boolean'}},\n        \"Required\": {{faker 'random.boolean'}},\n        \"NumberAttributeConstraints\": {\n          \"MinValue\": \"\",\n          \"MaxValue\": \"\"\n        },\n        \"StringAttributeConstraints\": {\n          \"MinLength\": \"\",\n          \"MaxLength\": \"\"\n        }\n      }\n    ],\n    \"AutoVerifiedAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"AliasAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email' 'preferred_username')}}\"\n    ],\n    \"UsernameAttributes\": [\n      \"{{oneOf (array 'phone_number' 'email')}}\"\n    ],\n    \"SmsVerificationMessage\": \"\",\n    \"EmailVerificationMessage\": \"\",\n    \"EmailVerificationSubject\": \"\",\n    \"VerificationMessageTemplate\": {\n      \"SmsMessage\": \"\",\n      \"EmailMessage\": \"\",\n      \"EmailSubject\": \"\",\n      \"EmailMessageByLink\": \"\",\n      \"EmailSubjectByLink\": \"\",\n      \"DefaultEmailOption\": \"\"\n    },\n    \"SmsAuthenticationMessage\": \"\",\n    \"MfaConfiguration\": \"\",\n    \"DeviceConfiguration\": {\n      \"ChallengeRequiredOnNewDevice\": {{faker 'random.boolean'}},\n      \"DeviceOnlyRememberedOnUserPrompt\": {{faker 'random.boolean'}}\n    },\n    \"EstimatedNumberOfUsers\": {{faker 'random.number'}},\n    \"EmailConfiguration\": {\n      \"SourceArn\": \"\",\n      \"ReplyToEmailAddress\": \"\",\n      \"EmailSendingAccount\": \"\",\n      \"From\": \"\",\n      \"ConfigurationSet\": \"\"\n    },\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    },\n    \"UserPoolTags\": {},\n    \"SmsConfigurationFailure\": \"\",\n    \"EmailConfigurationFailure\": \"\",\n    \"Domain\": \"\",\n    \"CustomDomain\": \"\",\n    \"AdminCreateUserConfig\": {\n      \"AllowAdminCreateUserOnly\": {{faker 'random.boolean'}},\n      \"UnusedAccountValidityDays\": {{faker 'random.number'}},\n      \"InviteMessageTemplate\": {\n        \"SMSMessage\": \"\",\n        \"EmailMessage\": \"\",\n        \"EmailSubject\": \"\"\n      }\n    },\n    \"UserPoolAddOns\": {\n      \"AdvancedSecurityMode\": \"\"\n    },\n    \"UsernameConfiguration\": {\n      \"CaseSensitive\": {{faker 'random.boolean'}}\n    },\n    \"Arn\": \"\",\n    \"AccountRecoverySetting\": {\n      \"RecoveryMechanisms\": [\n        {\n          \"Priority\": {{faker 'random.number'}},\n          \"Name\": \"\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f7346b1-9cd4-41eb-a86a-4e0649275819",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d65f805-a25d-44a7-bfd1-5c4bb5cb3e2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddc882c5-a0c6-4fd6-b5e5-315a1ddf1129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03578fbd-06ac-43bd-8c96-83b8ffe19e22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4923d44d-e136-4686-ba3b-a121c4baeddf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c86888a-151b-4298-bc1a-20873092fc7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7016a34-88c9-45cd-91f0-c6904f4d1475",
      "documentation": "Client method for returning the configuration information and metadata of the specified user pool app client.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolClient",
      "responses": [
        {
          "uuid": "4644c99f-0c95-46bd-a3d1-f1decd9c5ee0",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f1f26e0-b986-4db9-91ea-1bc4cb740263",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dcb46b1-f915-4911-bc07-b7746fa1cf44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a81c7ce-6318-4b35-badb-4d4827807c8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19110f25-4668-4ab7-b157-c5b320f4cae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "189c077c-be03-4ac7-ba18-b59502990f4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2437399-f76d-49ab-b0e4-d6d4451f023a",
      "documentation": "Gets information about a domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.DescribeUserPoolDomain",
      "responses": [
        {
          "uuid": "c423a8c2-2f10-4261-88e4-35d21e6f1c4f",
          "body": "{\n  \"DomainDescription\": {\n    \"UserPoolId\": \"\",\n    \"AWSAccountId\": \"\",\n    \"Domain\": \"\",\n    \"S3Bucket\": \"\",\n    \"CloudFrontDistribution\": \"\",\n    \"Version\": \"\",\n    \"Status\": \"\",\n    \"CustomDomainConfig\": {\n      \"CertificateArn\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6463a9d-1169-41b5-9ff7-0e94eeca47fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e63f1cf9-0d24-4ac1-837e-92ac226f6552",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8636502a-9982-4bb5-afaa-f81e2f1d0f27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ba27586-35bc-40e0-a146-075612a178e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28267e1d-70c9-42f4-8352-0e81de9cfcd5",
      "documentation": "Forgets the specified device.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ForgetDevice",
      "responses": [
        {
          "uuid": "2b3db706-1199-46a4-90c6-7fe9b6a4dbf7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "536971d8-4cf5-4282-bd96-45d88116d507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "305ec3ca-0f64-4048-b458-072acdeb0242",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12d6f8e3-0d74-4508-af8d-f47514938a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caae923f-cc1e-4978-84f4-039da05814bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584b520b-f80b-4de1-8693-8913a9db6bd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e24d2ce5-6398-4f04-9baa-d06f7a26347b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f041072-1552-4c2d-9b61-e2e6429eaca5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad7ac34-ff78-4740-b3d7-7efef0f6eadd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87c14126-46c8-49c9-9e7d-7425cbb0272d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3b8077b-ac13-4e43-8d25-6503e5edb57d",
      "documentation": "<p>Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user's password. For the <code>Username</code> parameter, you can use the username or user alias. The method used to send the confirmation code is sent according to the specified AccountRecoverySetting. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-recover-a-user-account.html\">Recovering User Accounts</a> in the <i>Amazon Cognito Developer Guide</i>. If neither a verified phone number nor a verified email exists, an <code>InvalidParameterException</code> is thrown. To use the confirmation code for resetting the password, call <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmForgotPassword.html\">ConfirmForgotPassword</a>.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ForgotPassword",
      "responses": [
        {
          "uuid": "631014af-2deb-44b6-a7bf-ff7979f5ba67",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0725f882-8b19-4e90-b11d-a26a059df814",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "261cd797-e57b-497c-b8c7-9b88111783ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7d01ece-252f-4b69-a9a1-167fe9e9b7b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f64e01-e837-4305-9394-659d8c3f1c02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "467cfafa-2851-4cc6-b409-712db1ae6efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3218013b-92d8-46ad-bf0c-002b88820dd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e203a23-4685-4b80-acd1-9106fded35f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd37c49-ec1c-4327-9954-4c305a571efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45e1642d-de8d-4637-83b6-0d1b8f8a452a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c78f00d-ad25-4644-8a85-cd332e2f0d32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "062682f7-c1b4-4533-a9ad-2c0fb4299a4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "633aacb3-e664-4635-842a-7cf7fdc2e368",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b74b5ea-209b-49d9-8077-7ce96c89022b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d999c2be-b894-4d1c-bbdc-b9b77839e9ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf7fb343-182a-4676-b300-2a0b91b2c4e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5472a53f-9d5a-49d4-bfed-2d2337939f35",
      "documentation": "Gets the header information for the .csv file to be used as input for the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetCSVHeader",
      "responses": [
        {
          "uuid": "2dca13f6-be8b-4dd3-b523-60e6194b58bc",
          "body": "{\n  \"UserPoolId\": \"\",\n  \"CSVHeader\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95baa2e6-8d30-42d0-97f8-bf789db1bf0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31ef1101-be44-4e59-8cf2-78b88b1d544d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "437b4d22-b3a6-4fde-8f8c-b52fdd7a517a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3b927e9-4d1a-4dfa-bc0d-be6c48043a3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94001478-2f22-40bf-84ed-a94c206cc98d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8301e8df-f936-4403-b7c1-1356f5fae398",
      "documentation": "Gets the device.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetDevice",
      "responses": [
        {
          "uuid": "5e65f84c-b8cc-48b8-b8a1-279aa4f360aa",
          "body": "{\n  \"Device\": {\n    \"DeviceKey\": \"\",\n    \"DeviceAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2092992e-20cb-4739-b809-cdffa3463cb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e53cb1de-dd49-49a6-a9e5-7628a4b35e1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4907a6bc-90a8-44ad-b403-52732a85aa68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8873e05-86d9-43d3-8e25-91c57d6a404b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc32bb2-efb9-4044-84a2-bcef63cfc872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "654de380-f154-4823-aa9b-b3654195c64f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "118f4ed1-0e61-4fc4-b99d-7c65ba5a0a28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35de6298-ad32-47c2-a489-270a76814367",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3613cc35-a450-4d42-a137-5aed51838d02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b50a3f5-8eed-49ed-8de0-6fd68323b0c3",
      "documentation": "<p>Gets a group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetGroup",
      "responses": [
        {
          "uuid": "71e16abf-4a19-49af-a1a5-4f0fbf9aba38",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdda6a26-2c32-4569-978a-9087177227f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec44d84e-b112-41e1-bb75-50f2a79ab153",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56415e8a-a0e7-4dc3-9257-72e9925d3f0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86cddeda-aad8-4562-b09b-f06019d1ec85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2702efd-bc0c-491c-819a-26941b55f7ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc0a69c1-2dc5-4e0d-9646-8fde498c0094",
      "documentation": "Gets the specified identity provider.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier",
      "responses": [
        {
          "uuid": "c0c6b6d5-c064-4558-918e-a476c1956bd4",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97170e61-4324-451c-97bc-6712082ffacb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53f26443-8758-45b4-ac5f-a8555f7726d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60a37724-73ff-4ab7-a641-f6612ed629a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb0307d4-6392-431a-bb69-29bd01f51b78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01da836a-eac5-48c7-8860-e12a2c14edb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffd7d597-83d8-44d4-a474-8ea607200f72",
      "documentation": "This method takes a user pool ID, and returns the signing certificate.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetSigningCertificate",
      "responses": [
        {
          "uuid": "7b396bb3-d723-4246-8268-fc726adfc1de",
          "body": "{\n  \"Certificate\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16798298-2936-405e-8ea1-8b9d38bcb639",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d62861-7721-4bfa-85e5-8a62d59941c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82684f6c-9138-4c79-a4e0-f0a7339d3be7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7596af7d-cc88-4f60-9a4a-a35a92861553",
      "documentation": "Gets the UI Customization information for a particular app client's app UI, if there is something set. If nothing is set for the particular client, but there is an existing pool level customization (app <code>clientId</code> will be <code>ALL</code>), then that is returned. If nothing is present, then an empty shape is returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUICustomization",
      "responses": [
        {
          "uuid": "1b6ca7a4-0848-402f-81b1-268a11787efb",
          "body": "{\n  \"UICustomization\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"ImageUrl\": \"\",\n    \"CSS\": \"\",\n    \"CSSVersion\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93287ff0-ad3c-4072-9d97-a11177bf1fbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb6b03d7-613c-4787-9cd6-d2e7e28d8351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86263134-6d02-4a1f-84ef-e756c5d66d06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2061a19-d597-4d48-a9e4-0b626538a2b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "298211e2-51c7-4054-afad-8c751ae53b78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc1663d8-afaa-4a58-8f58-5e2b2fe81aed",
      "documentation": "Gets the user attributes and metadata for a user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUser",
      "responses": [
        {
          "uuid": "b4541bbb-0e35-4e26-85ee-3807e6887ff3",
          "body": "{\n  \"Username\": \"\",\n  \"UserAttributes\": [\n    {\n      \"Name\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"MFAOptions\": [\n    {\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ],\n  \"PreferredMfaSetting\": \"\",\n  \"UserMFASettingList\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cd691d5-7702-4f4d-9ace-40bf0529c6ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfec65cd-2293-4a31-9fd4-8d171414f7fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0867db0e-9838-4ffe-b2a5-b5c2874eef11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91f2435b-ea7a-4bea-91e6-98a945668e79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "248f5096-d923-4578-8564-fc7833775002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63394863-35a7-44ee-a68b-5318dcda60cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f928069-2a46-4ec1-af7e-8e19a0a4b2b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184bbeda-4a25-4df7-85c0-9447e5731920",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31d1a2d1-a701-4d19-9544-3343c1baf68a",
      "documentation": "<p>Gets the user attribute verification code for the specified attribute name.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode",
      "responses": [
        {
          "uuid": "107706c9-41d8-4aa3-8ce0-837df822834e",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11f8ca7e-b33d-4f15-82a2-fdcadb5f2cdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8acf16d9-224c-43c5-b7e0-925c3b80d636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6ff99a2-d670-4315-80b3-4cea2e42fee3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "065a2fcd-a691-4933-8fa4-68c89c660c6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0639df8f-806a-4ab8-867d-80066cc837a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbbdc9cf-cc3f-4440-9995-4be96787a7f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56439883-cd27-4b55-b00f-a99528b76e71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04ac6d59-dfd3-47f1-822b-64bcfef07915",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cedaa591-a049-497a-9664-123b7fab4f4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9513c8f9-d721-4219-93fc-94dd4ea3d84e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be36a552-aa54-4432-8d22-0cf13f339ae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "996fa319-15a7-4ccb-99ff-081d29ed1dd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b0536c-df19-44bf-aa25-35c4d4255530",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab6e9feb-47e7-4547-a605-e8f65ac715d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f593a939-5c53-45ca-b2c6-e7861f95495d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f48ea16-9576-4ef9-80f6-72decd72f524",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b65ca65e-c8d8-4cab-b858-8f77a9be2fa8",
      "documentation": "Gets the user pool multi-factor authentication (MFA) configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GetUserPoolMfaConfig",
      "responses": [
        {
          "uuid": "7c0dfc99-9046-4f9a-b8b8-4a77a6c11258",
          "body": "{\n  \"SmsMfaConfiguration\": {\n    \"SmsAuthenticationMessage\": \"\",\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    }\n  },\n  \"SoftwareTokenMfaConfiguration\": {\n    \"Enabled\": {{faker 'random.boolean'}}\n  },\n  \"MfaConfiguration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2252acbe-d57a-45ec-8467-d193baa567e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75b01596-175d-4744-9642-e8b8b01c0ef0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed98567b-552c-41ce-a893-f88ea9e5b66b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8d6f738-3bd7-4c74-be7f-e23160490167",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e8eeb94-31b4-4a91-afaf-3a2528c95d29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33b308da-f52c-49e8-a59e-e2627dcc0bff",
      "documentation": "Signs out users from all devices. It also invalidates all refresh tokens issued to a user. The user's current access and Id tokens remain valid until their expiry. Access and Id tokens expire one hour after they are issued.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.GlobalSignOut",
      "responses": [
        {
          "uuid": "12731233-d81c-4b21-855a-364ec9b60d3d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e85754ae-52e0-40e9-b4d6-e3ea9cda934b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf76e1be-b3ad-4ae7-96c4-d1f229bb9da4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5149fa22-ded4-4a0c-95a3-89ab5faa3468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d0f1dbb-9f24-4cf9-8b01-5aa90c5d34f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "404fa557-fea0-462a-8fbe-58389725c0e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "778a3ace-e215-43ff-8a06-f8d22100644a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a12733e8-2bea-458f-9e13-ad170b6d92d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf6a77a8-a082-44e1-966f-081c9ceb6b94",
      "documentation": "<p>Initiates the authentication flow.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.InitiateAuth",
      "responses": [
        {
          "uuid": "d4a4aab3-dbb0-4130-af49-38fa6cbabf90",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd3d8b9d-49da-4ef8-9dce-2041c0d053c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a8e74a5-1972-4596-aeff-754d1a1f767b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5f1aecb-a054-418b-97db-46f9dff7ae79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1efc191f-5ed3-4f74-a35e-085fb16cd3da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3af8ae8-eb62-4f5d-adb4-c02dbab41906",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b19324c-05c4-461a-9da1-c3444195fae9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0958170d-b98f-43e1-acb6-a429a6639d19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cc5e869-95de-4fbb-975f-020eaeada404",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93524761-10e9-4b5a-9d57-b3757c1797c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e2ee2fc-30a5-47f5-9d5e-90157344d493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f778abde-ae36-471c-85f9-68f51eed0a0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8c72dbf-2426-4d69-8cf8-4f98aa23e439",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e484f851-083a-4004-bea5-f828e25e0611",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf13401-a056-4878-82a3-92a360a7d33b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7858bd89-3821-4c78-bd57-6f39e24a0f9d",
      "documentation": "Lists the devices.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListDevices",
      "responses": [
        {
          "uuid": "2ee5d832-4bf6-4bab-890d-26f828dbddf8",
          "body": "{\n  \"Devices\": [\n    {\n      \"DeviceKey\": \"\",\n      \"DeviceAttributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"DeviceCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DeviceLastAuthenticatedDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bd4cbaa-92b0-46a6-879e-71497dc0005e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f47d6e8-bd29-4910-b555-6a2e54b86814",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b880f0fa-0c26-4c0e-bfea-d8956265f54b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32eb3fff-11d0-443f-9350-0adfb2c7c8f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d05fe274-35dd-4e02-bd85-e5e40cb0dfc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05cc2f55-5d6d-403a-9734-9ff2a7bdb7cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8bba0e3-eb59-4e98-a113-885133a706af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e91587bd-9dcd-4b10-8ced-4308611f6e21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea21325-5ca9-413a-9c73-7b13eef7f516",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ef049bc-a17f-404c-a265-745f1c06a0ca",
      "documentation": "<p>Lists the groups associated with a user pool.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListGroups",
      "responses": [
        {
          "uuid": "c47c5c75-93c5-414b-af50-5549e952adff",
          "body": "{\n  \"Groups\": [\n    {\n      \"GroupName\": \"\",\n      \"UserPoolId\": \"\",\n      \"Description\": \"\",\n      \"RoleArn\": \"\",\n      \"Precedence\": {{faker 'random.number'}},\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1871fd41-8056-4d2c-a049-015ff1153027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06557eab-24ff-4b46-85b1-de83d75ee247",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8680f696-6388-4c18-89dc-ef1bcbc4a655",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ce1abc7-bf2e-4751-b843-e7a020751b0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc73a7af-e866-4578-8d0d-baaa75465ef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec3258ca-d331-4f88-8914-0e305dc36335",
      "documentation": "Lists information about all identity providers for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListIdentityProviders",
      "responses": [
        {
          "uuid": "743b289c-308d-4a3d-a613-4633fb5ae764",
          "body": "{\n  \"Providers\": [\n    {\n      \"ProviderName\": \"\",\n      \"ProviderType\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ba230f5-293b-4cd7-b6a3-2339a8bfc1d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fef8c4f-95ce-4aba-ab77-4aaaa870742d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31835b5c-360b-409a-9c8b-95c3eb446ee6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a77f3f74-1df0-4ae7-bbdb-c2e1484104e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1af398f-2060-4b43-93b2-754750bd6724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f946aae0-2f1b-4c08-b0b5-40610668c2c7",
      "documentation": "Lists the resource servers for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListResourceServers",
      "responses": [
        {
          "uuid": "1536ac7f-b7f5-4adb-9bd7-25513e317bb1",
          "body": "{\n  \"ResourceServers\": [\n    {\n      \"UserPoolId\": \"\",\n      \"Identifier\": \"\",\n      \"Name\": \"\",\n      \"Scopes\": [\n        {\n          \"ScopeName\": \"\",\n          \"ScopeDescription\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34532ebe-1241-40e2-b4ba-9ef592ee0fbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81c72545-aecf-4a13-8ac0-6bb35323560d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9d4da61-09a0-43e8-b087-a8973d9e2787",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a4cb670-b09b-4bb5-a354-9c6d75cd74f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1cec067-c4a3-4391-8486-d20d7225f4a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bcbd0707-14fa-4858-a87c-4c725d421166",
      "documentation": "<p>Lists the tags that are assigned to an Amazon Cognito user pool.</p> <p>A tag is a label that you can apply to user pools to categorize and manage them in different ways, such as by purpose, owner, environment, or other criteria.</p> <p>You can use this action up to 10 times per second, per account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListTagsForResource",
      "responses": [
        {
          "uuid": "90aa2efe-cc82-4c42-b4bf-3ebeff64f895",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36ac65a9-fbe4-46fb-83de-0633d30486a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5048de25-3d30-4bc4-aa84-89bcdbdaa902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da935a84-31bc-403a-a1fd-f88f3a86e4b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e133ae2-a547-4a82-9f63-6b8ddd90dd03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "397397bb-948d-4121-aa42-9dbc5a939831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "749cb568-52ea-4b94-8416-aee52bbbc84b",
      "documentation": "Lists the user import jobs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserImportJobs",
      "responses": [
        {
          "uuid": "50bcc051-5827-4da9-bcbf-6c8e6bbaa028",
          "body": "{\n  \"UserImportJobs\": [\n    {\n      \"JobName\": \"\",\n      \"JobId\": \"\",\n      \"UserPoolId\": \"\",\n      \"PreSignedUrl\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n      \"StartDate\": \"{{faker 'date.recent' 365}}\",\n      \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"CloudWatchLogsRoleArn\": \"\",\n      \"ImportedUsers\": {{faker 'random.number'}},\n      \"SkippedUsers\": {{faker 'random.number'}},\n      \"FailedUsers\": {{faker 'random.number'}},\n      \"CompletionMessage\": \"\"\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "756b334f-6de7-4ea7-baa9-5ffaab2e8e52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2df2de1-33b3-48b5-beb6-56415a93c22e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6a2d9f1-4ed6-413e-882e-1a63ae34a62b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1490059c-e142-4ff4-b8ce-064d90bd2b29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6685ee31-271c-4979-b12d-bdc632974ac0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "130e1954-deb5-43a7-ae53-d20250a36304",
      "documentation": "Lists the clients that have been created for the specified user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPoolClients",
      "responses": [
        {
          "uuid": "1684d84b-1b02-476e-971f-ef253c58e6e1",
          "body": "{\n  \"UserPoolClients\": [\n    {\n      \"ClientId\": \"\",\n      \"UserPoolId\": \"\",\n      \"ClientName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4367c129-ec89-4731-ba8b-7caa36f4c818",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bbcc8fb-4ad4-4ba8-8085-a4fb3b344ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dd2635f-dfff-40d5-8161-09a6ce7c3d67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1afa7b56-bfd3-4944-a1b2-78ca22e5b360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ce70fa8-4c46-4b87-aa3d-49e35fb0856e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7013aea2-f634-4303-ad6e-de161f67870f",
      "documentation": "Lists the user pools associated with an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUserPools",
      "responses": [
        {
          "uuid": "2aded144-1a8b-476e-b3fc-b6009416223a",
          "body": "{\n  \"UserPools\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"LambdaConfig\": {\n        \"PreSignUp\": \"\",\n        \"CustomMessage\": \"\",\n        \"PostConfirmation\": \"\",\n        \"PreAuthentication\": \"\",\n        \"PostAuthentication\": \"\",\n        \"DefineAuthChallenge\": \"\",\n        \"CreateAuthChallenge\": \"\",\n        \"VerifyAuthChallengeResponse\": \"\",\n        \"PreTokenGeneration\": \"\",\n        \"UserMigration\": \"\",\n        \"CustomSMSSender\": {\n          \"LambdaVersion\": \"\",\n          \"LambdaArn\": \"\"\n        },\n        \"CustomEmailSender\": {\n          \"LambdaVersion\": \"\",\n          \"LambdaArn\": \"\"\n        },\n        \"KMSKeyID\": \"\"\n      },\n      \"Status\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95c72b30-f758-4ea4-83e0-d34e3c93969a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a83ffe-51af-4819-bab9-04841effc25b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ed2675e-7eb5-4d9f-8167-4dfe6f804fa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ed301f1-e5a8-4cb6-b83c-47a229355c98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3ea82f8-f0a8-47a8-a026-05f03cebe83a",
      "documentation": "Lists the users in the Amazon Cognito user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsers",
      "responses": [
        {
          "uuid": "41ad6eec-f4eb-4947-a07f-577d1d70ed3c",
          "body": "{\n  \"Users\": [\n    {\n      \"Username\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"UserStatus\": \"\",\n      \"MFAOptions\": [\n        {\n          \"DeliveryMedium\": \"\",\n          \"AttributeName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"PaginationToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58cacb2d-23e4-4a04-845d-be886c3e7245",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a687e8e2-0495-472c-9896-f6b446b1730c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d38a363-327a-4e1e-99d3-f86efeae683e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00d9a7d7-8f50-4788-be6d-a0e459c1594a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a55d40f4-ab6b-42b6-840b-f75b68837177",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a41da80-2a95-4653-bce5-c65082f2f20a",
      "documentation": "<p>Lists the users in the specified group.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ListUsersInGroup",
      "responses": [
        {
          "uuid": "e9a62d99-28fa-4f1e-b094-56433502ae39",
          "body": "{\n  \"Users\": [\n    {\n      \"Username\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"UserCreateDate\": \"{{faker 'date.recent' 365}}\",\n      \"UserLastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"UserStatus\": \"\",\n      \"MFAOptions\": [\n        {\n          \"DeliveryMedium\": \"\",\n          \"AttributeName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87e1f139-fc56-4166-99cc-14fcffd9b231",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ea62f0d-922b-4ede-8ce0-f90de17a81ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a9b1ef3-15e9-4bb0-bc6a-beb9c0002047",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57876abb-27e9-490c-97e6-43b4957b6361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "741cc2f7-09cb-4176-8da0-b4b0a1d2ab22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db59fffa-2e71-44dc-9d88-10d147472c9d",
      "documentation": "<p>Resends the confirmation (for confirmation of registration) to a specific user in the user pool.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.ResendConfirmationCode",
      "responses": [
        {
          "uuid": "694f5892-4b6b-40c7-b404-7ff11140137c",
          "body": "{\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a6d49d6-08dc-4811-99d8-0c140c8ea2ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aee86a92-ff41-424e-a122-2e4d3db174c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "875f5fdf-51de-4655-ad49-37fd8d2f2e60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bfcda78-2993-4b6d-b26d-7d211e8a8840",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ec3bd10-7792-419e-a8fd-d44f0e0120eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c151ab5-12d5-4b03-b23d-85c8c1e67c32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef4675d3-b5d3-4dcb-85e5-6392510faa4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3338a443-fec7-4f56-a02e-2255e5e5f629",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09a2746e-4b18-4764-bb93-5a52ca5af3e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5a74d51-de31-40fb-b1a7-c68771800636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab86884a-fb90-49c1-b3b4-ee63ff9158a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d1ff120-14c7-4dc8-b42c-69a26a8e0629",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c464414-66b8-4104-b660-d4fb35e6738c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b7e39b7-3bd8-4a93-9d4e-3846ba4fb2f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d5fd7b3-84cf-4baa-94ed-03fe4edf569b",
      "documentation": "<p>Responds to the authentication challenge.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.RespondToAuthChallenge",
      "responses": [
        {
          "uuid": "44cd7250-5b5c-40c2-bc60-005efb400240",
          "body": "{\n  \"ChallengeName\": \"\",\n  \"Session\": \"\",\n  \"ChallengeParameters\": {},\n  \"AuthenticationResult\": {\n    \"AccessToken\": \"\",\n    \"ExpiresIn\": {{faker 'random.number'}},\n    \"TokenType\": \"\",\n    \"RefreshToken\": \"\",\n    \"IdToken\": \"\",\n    \"NewDeviceMetadata\": {\n      \"DeviceKey\": \"\",\n      \"DeviceGroupKey\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10e2d40d-2a59-4d0b-9435-46b5c8466eef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad3c08f-e48c-4259-a5f2-8f1d4f6facd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c5e4d26-b06d-4d79-b659-21af27a43a1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf2c1928-94fc-4aa1-84fd-e751a216919d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f232ca58-02b7-41b6-973d-baf966ab9870",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3afd106a-a294-488b-b86a-4daed12c735e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40b3d5d5-90f0-4777-93b6-0034d067737d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c25424a2-ff1f-4d88-851c-d5a260c90777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef4fdad6-a7b6-4a0d-bf41-c47cc7add6e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6eafebf-990b-4fab-b016-117ad21553b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18134c0e-039e-4136-93aa-540763988d5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8df1b139-88cf-4e25-81af-f3a2405393de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "MFAMethodNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5afaedd-c054-4fe7-ae8b-80a11df6b04e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae55ac01-a042-41f1-a431-bca06b6a688d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40c961de-06cd-4e9a-8992-4bc640b5b839",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acc20c30-e441-469f-9370-613b336ce793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3a3c42b-93a6-44f2-9dbc-617d23ca0f35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec62e709-5c30-4686-8a38-96f9dc3253ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ed3c619-e016-42d3-9a27-fd38e4993084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc5b8817-8703-4397-9abf-b7752db780df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10627ea7-56c6-4bc9-b89f-87beb6fbacda",
      "documentation": "Revokes all of the access tokens generated by the specified refresh token. After the token is revoked, you can not use the revoked token to access Cognito authenticated APIs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.RevokeToken",
      "responses": [
        {
          "uuid": "bc63fa8b-ad7b-4d32-a6c0-e805efa987ff",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e63c7dad-81c2-4e8d-846d-6e8a1e20d0f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca6c06a3-dbbf-4e11-87b7-edcc84c5442f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e974046-0078-4db5-b028-31c3b283a078",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnauthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd5c8424-dcd3-40a3-8115-b9e223efd001",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "965b7f10-82d1-476d-82ac-ec4b1d16d8e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d9b9f60-3c76-41c4-acec-71a5207a1b32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedTokenTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76d90abd-394f-4b12-8e14-9a0704e566fa",
      "documentation": "<p>Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code> or <code>ClientId</code>, pass null values for all four configuration types.</p> <p>To enable Amazon Cognito advanced security features, update the user pool to include the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetRiskConfiguration",
      "responses": [
        {
          "uuid": "458042b9-39b6-44ed-9592-5074973e3c98",
          "body": "{\n  \"RiskConfiguration\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"CompromisedCredentialsRiskConfiguration\": {\n      \"EventFilter\": [\n        \"{{oneOf (array 'SIGN_IN' 'PASSWORD_CHANGE' 'SIGN_UP')}}\"\n      ],\n      \"Actions\": {\n        \"EventAction\": \"\"\n      }\n    },\n    \"AccountTakeoverRiskConfiguration\": {\n      \"NotifyConfiguration\": {\n        \"From\": \"\",\n        \"ReplyTo\": \"\",\n        \"SourceArn\": \"\",\n        \"BlockEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"NoActionEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        },\n        \"MfaEmail\": {\n          \"Subject\": \"\",\n          \"HtmlBody\": \"\",\n          \"TextBody\": \"\"\n        }\n      },\n      \"Actions\": {\n        \"LowAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"MediumAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        },\n        \"HighAction\": {\n          \"Notify\": {{faker 'random.boolean'}},\n          \"EventAction\": \"\"\n        }\n      }\n    },\n    \"RiskExceptionConfiguration\": {\n      \"BlockedIPRangeList\": [\n        \"\"\n      ],\n      \"SkippedIPRangeList\": [\n        \"\"\n      ]\n    },\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7e0997e-92c2-4df2-af2e-fe0812093ba8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6be4d28-0e49-4eaa-8595-9467e90e3ca2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad29df0-c9f3-4781-8dbc-8f226e27669b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5662a5ac-5199-4e36-9234-abd59ac9f830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ec1403f-874f-467e-aee8-6a9541bf1ae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb1fd50b-93bb-4e77-820c-19566858363e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64971bd4-99c2-4918-9deb-853780ec2a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10a91884-10b8-444d-9d6b-62027f06df18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d421fd8-1a0b-4cf3-873d-dc44dda94567",
      "documentation": "<p>Sets the UI customization information for a user pool's built-in app UI.</p> <p>You can specify app UI customization settings for a single client (with a specific <code>clientId</code>) or for all clients (by setting the <code>clientId</code> to <code>ALL</code>). If you specify <code>ALL</code>, the default configuration will be used for every client that has no UI customization set previously. If you specify UI customization settings for a particular client, it will no longer fall back to the <code>ALL</code> configuration. </p> <note> <p>To use this API, your user pool must have a domain associated with it. Otherwise, there is no place to host the app's pages, and the service will throw an error.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUICustomization",
      "responses": [
        {
          "uuid": "9b1f842e-d3dc-4e80-9d04-c6d30160f5bb",
          "body": "{\n  \"UICustomization\": {\n    \"UserPoolId\": \"\",\n    \"ClientId\": \"\",\n    \"ImageUrl\": \"\",\n    \"CSS\": \"\",\n    \"CSSVersion\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eca81506-7d07-477c-8eb2-8545dd5078e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "779acc1c-f0a4-4a55-8c03-b76f770a3623",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5a78341-79c9-413f-adbe-b809365ea3da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9726aaca-b7fe-43b6-9d8d-4231572b595f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1df0fe0-c46b-465b-ab8b-f52b36795b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5c65b0d-e578-45a3-bd35-ac1268c44e01",
      "documentation": "Set the user's multi-factor authentication (MFA) method preference, including which MFA factors are enabled and if any are preferred. Only one factor can be set as preferred. The preferred MFA factor will be used to authenticate a user if multiple factors are enabled. If multiple options are enabled and no preference is set, a challenge to choose an MFA option will be returned during sign in. If an MFA type is enabled for a user, the user will be prompted for MFA during all sign in attempts, unless device tracking is turned on and the device has been trusted. If you would like MFA to be applied selectively based on the assessed risk level of sign in attempts, disable MFA for users and turn on Adaptive Authentication for the user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserMFAPreference",
      "responses": [
        {
          "uuid": "6d3ffd1c-ef1c-4c60-9cdb-5df020665be0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc632ab1-2f82-4d7d-9a65-3fe4b5af793f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7f58b6b-a01e-42c0-85dc-9dc4138d5ed5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9873db90-b14e-4846-90ea-8bc2d7930d0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4380e18f-4e61-4821-807a-1bac6f8a2997",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2afdf5dc-2dd0-45c7-a690-c50e423f29ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2389bd25-d5eb-4bd3-ace2-0798180d01c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "001a5e40-e876-4c9f-a2c0-57a92b91d8d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20095056-3c17-404e-924d-dda5f1a47560",
      "documentation": "<p>Set the user pool multi-factor authentication (MFA) configuration.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserPoolMfaConfig",
      "responses": [
        {
          "uuid": "24eb21dc-26df-4cbb-bc8f-4b87a35d57c6",
          "body": "{\n  \"SmsMfaConfiguration\": {\n    \"SmsAuthenticationMessage\": \"\",\n    \"SmsConfiguration\": {\n      \"SnsCallerArn\": \"\",\n      \"ExternalId\": \"\"\n    }\n  },\n  \"SoftwareTokenMfaConfiguration\": {\n    \"Enabled\": {{faker 'random.boolean'}}\n  },\n  \"MfaConfiguration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eb1da58-59a8-4342-9f0e-967aacec5ba0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "918e49c2-acbf-4410-98e4-7b3533733129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07fca9bf-a424-4da6-b2fb-5444462b196c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6231f2-75a7-4664-90c7-67fffb3094ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "449cf0fb-c215-4769-ade7-3832b169d5f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d6ac49b-7124-4fcd-a32e-e732e7ce53ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46b09499-af36-40bf-b18b-98dd4c1d1f20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f45047c-391e-4ba0-aa7f-9e2ceae60e4c",
      "documentation": " <i>This action is no longer supported.</i> You can use it to configure only SMS MFA. You can't use it to configure TOTP software token MFA. To configure either type of MFA, use <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserMFAPreference.html\">SetUserMFAPreference</a> instead.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SetUserSettings",
      "responses": [
        {
          "uuid": "31a9dab2-2846-49a6-a3a2-a6e6c9d55690",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49dc289a-c589-4afe-a903-5795d5d54635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b60cce-9e27-46c8-8baf-baaf639cc155",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba910294-243d-4d32-80f2-26818fdd5a5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1abc8ca-6465-4ce9-bd03-826f3e768aa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40825edf-0e4b-48de-a858-f4a3e1f4d8b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb48c5eb-3ff6-4e53-91a9-e0a761c2a280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c6d4559-a737-4fcd-827b-fffc3239696d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d14bf5b-fddf-4e20-8240-e6e9e094eedc",
      "documentation": "<p>Registers the user in the specified user pool and creates a user name, password, and user attributes.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.SignUp",
      "responses": [
        {
          "uuid": "ce275396-5129-4046-a911-8e76355cad89",
          "body": "{\n  \"UserConfirmed\": {{faker 'random.boolean'}},\n  \"CodeDeliveryDetails\": {\n    \"Destination\": \"\",\n    \"DeliveryMedium\": \"\",\n    \"AttributeName\": \"\"\n  },\n  \"UserSub\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b84fd91e-2cfd-4869-be93-63e3b7ce3204",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "615b6d69-1358-46f4-a609-e95bd22cb66b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcd94782-0669-4ed8-bcaf-cc4ad8077acf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e70cd7c5-6b1d-4026-9b57-f45ad3f3d34d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "484e0890-4889-4ae9-afd7-ed54f3d7856b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c85b039e-b62b-4e6c-9d85-e4c1f6a74390",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e077693-596e-433c-9a45-375590be33c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10d507a2-dddd-4bf9-a1c1-b23bb8496656",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UsernameExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43bca0fb-def3-4d19-9641-5bb648440a71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4bb6b1e-87da-4e61-8e1e-bb9f1b431535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "004e62fa-ecbc-4adc-b3b9-ea34e5768c31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f06386-a9c7-4f80-b3d6-665c6926704d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d2e8e14-a526-4129-9b8b-08b2dfb508ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f156f2d-15eb-47aa-bc98-c25a0783afe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9d6d8ed-21ed-4248-9a99-de05380c9880",
      "documentation": "Starts the user import.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.StartUserImportJob",
      "responses": [
        {
          "uuid": "f9587142-2d08-4050-9f91-fef66d594c70",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c7d5796-0c3f-49a9-b3fd-a1dd567f0775",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4ec6904-4f3e-4521-94af-cfce2d85f383",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd75135d-c0f7-4789-a636-14e5fcf2b873",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f51039b-0737-4272-a3d2-757a7bbf1ee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e09abc8-af00-4b42-8ab0-cd952d33bbd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27c6663a-3554-41ca-990a-b9860b79c699",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6ac3f33-759a-447f-bc82-ee5c49f788be",
      "documentation": "Stops the user import job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.StopUserImportJob",
      "responses": [
        {
          "uuid": "677814a4-3156-4b7d-a8af-7d74a69d6a7c",
          "body": "{\n  \"UserImportJob\": {\n    \"JobName\": \"\",\n    \"JobId\": \"\",\n    \"UserPoolId\": \"\",\n    \"PreSignedUrl\": \"\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"StartDate\": \"{{faker 'date.recent' 365}}\",\n    \"CompletionDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"CloudWatchLogsRoleArn\": \"\",\n    \"ImportedUsers\": {{faker 'random.number'}},\n    \"SkippedUsers\": {{faker 'random.number'}},\n    \"FailedUsers\": {{faker 'random.number'}},\n    \"CompletionMessage\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d55fcae8-243e-45ec-b89b-02f598c53aeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4c7d781-ad8a-4c45-8df6-cf705bbfca65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a32c805-28ae-4932-925f-ac68ef947732",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1382f783-909b-4a5d-b3d9-5d73dcb73ac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6356065c-3b58-40f6-8781-9599d8817904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionNotMetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b37ca0-b296-49a7-aef9-104c53dc7ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e4e8925-f512-46c8-94cb-ff67b9187d6b",
      "documentation": "<p>Assigns a set of tags to an Amazon Cognito user pool. A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria.</p> <p>Each tag consists of a key and value, both of which you define. A key is a general category for more specific values. For example, if you have two versions of a user pool, one for testing and another for production, you might assign an <code>Environment</code> tag key to both user pools. The value of this key might be <code>Test</code> for one user pool and <code>Production</code> for the other.</p> <p>Tags are useful for cost tracking and access control. You can activate your tags so that they appear on the Billing and Cost Management console, where you can track the costs associated with your user pools. In an IAM policy, you can constrain permissions for user pools based on specific tags or tag values.</p> <p>You can use this action up to 5 times per second, per account. A user pool can have as many as 50 tags.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.TagResource",
      "responses": [
        {
          "uuid": "53224dc4-1026-47e1-8884-4e0ea2350802",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4407f87-c137-48eb-b762-bf16f6bfed47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139d1bc4-c782-4228-b578-dc2e3b58adad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57da5d8a-2b5b-4dd8-9f61-3220fd9cfe74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d540bcb-ad18-4768-94c9-6c51db711aaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e46f92-4634-4244-9e83-3f56e4ef044d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceff5a12-d8bb-4a01-8928-8db87679f4d8",
      "documentation": "Removes the specified tags from an Amazon Cognito user pool. You can use this action up to 5 times per second, per account",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UntagResource",
      "responses": [
        {
          "uuid": "66c140e6-99c9-40b6-801d-42f69dca4f75",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f476c169-7916-403d-ac10-0dbe98c3dab0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17a51d2f-92fb-4da4-927a-17df51db9905",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d6e845-262a-4a7f-bcb1-47a9c2eacefa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb172a7a-3820-4e49-8673-5d6a3a19407f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b67b11ed-5a9c-4f62-afc8-68874ef8035b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "def45557-9ba6-4fe5-b5b5-16a18b2db2c5",
      "documentation": "Provides the feedback for an authentication event whether it was from a valid user or not. This feedback is used for improving the risk evaluation decision for the user pool as part of Amazon Cognito advanced security.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateAuthEventFeedback",
      "responses": [
        {
          "uuid": "b91d4d38-488f-4a69-9fb4-b62d07e19949",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "689d33c9-7852-4852-8f97-284451b7ff15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d390a004-6821-4e5d-afd3-7a43311eec01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d63ef5c-5834-4c3a-8977-be863064f83a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b523035e-83c6-4559-b059-6cc65ac93432",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5daa6149-8379-4a13-a8a1-63ae38f12694",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d68ad7c6-3281-4b8a-a652-7681c4b02624",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserPoolAddOnNotEnabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acff52c9-e711-42bf-add8-8dbd098bd09b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4db858a-234f-4229-b3c5-a7f730920fc8",
      "documentation": "Updates the device status.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateDeviceStatus",
      "responses": [
        {
          "uuid": "abb44af5-08f8-4149-b0ba-6c484dee2c63",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfde5e10-70f3-494d-b6c0-71ba1116216e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48fc8473-95b1-4e1c-a783-9b823ddf603e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88673f55-5d6d-4f06-916f-b000575352f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0c5c4f6-ce92-4e08-8ac8-ab1b623aa62f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c11d03f-79d2-4a0b-b9e6-0d8330882733",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c5072ff-56cf-47d2-b7aa-2e8c341436bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52bf38d0-8400-4f42-b6ac-b956f3a65f86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd9df9c3-ca02-47ef-b708-74da3226cfc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "508b9e64-029e-4731-921a-e1ad9c7d5fd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad358be7-091f-487e-a5c1-8d79278e99b1",
      "documentation": "<p>Updates the specified group with the specified attributes.</p> <p>Calling this action requires developer credentials.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateGroup",
      "responses": [
        {
          "uuid": "02f3ffe9-ad19-497e-9bb9-52b424b6b0e5",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"UserPoolId\": \"\",\n    \"Description\": \"\",\n    \"RoleArn\": \"\",\n    \"Precedence\": {{faker 'random.number'}},\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec851904-1970-4f12-8ea7-35d4632c237a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ede4eee-0b6e-440f-be49-04a6770037ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc4a8a4-8377-40a3-91d1-bf26975d97ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73e35b83-0af3-4112-95cf-3135059516db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "638444d8-cc04-4cc6-9e64-92dbf9945ab0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1276df8-8ab8-484c-a2ed-db67d94028e3",
      "documentation": "Updates identity provider information for a user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateIdentityProvider",
      "responses": [
        {
          "uuid": "57cae7f7-dc69-4293-b3a8-b2518d92da28",
          "body": "{\n  \"IdentityProvider\": {\n    \"UserPoolId\": \"\",\n    \"ProviderName\": \"\",\n    \"ProviderType\": \"\",\n    \"ProviderDetails\": {},\n    \"AttributeMapping\": {},\n    \"IdpIdentifiers\": [\n      \"\"\n    ],\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "525848aa-67eb-4e80-9b65-39c5d5ef23c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e3bc511-dafb-4fb5-bc8b-42fec41eaefb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedIdentityProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eeb49444-7c3f-4a41-8a53-ef487ceda404",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4831f96-2a50-49f2-b7c0-73c533361871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b3bf4fc-f4bf-462f-91c7-ce072119167e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c7cbce6-4c93-48e7-a18f-34a5f2bddd44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34ec1dd3-3bc8-431e-be02-1cf527f098de",
      "documentation": "<p>Updates the name and scopes of resource server. All other fields are read-only.</p> <important> <p>If you don't provide a value for an attribute, it will be set to the default value.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateResourceServer",
      "responses": [
        {
          "uuid": "1749c60b-5648-4081-b8ae-a233c2f06620",
          "body": "{\n  \"ResourceServer\": {\n    \"UserPoolId\": \"\",\n    \"Identifier\": \"\",\n    \"Name\": \"\",\n    \"Scopes\": [\n      {\n        \"ScopeName\": \"\",\n        \"ScopeDescription\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5416f1-fdbb-4c09-8c6a-cb0ec925e3a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5d1ccda-af2b-46f2-8297-042a706b2250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d497375-c4d9-4631-8a66-3e3fc35b03d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e89e7f7-edcc-4630-af9c-f5716282ba38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a945439-47e0-4cdc-b934-cee7cf72278e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c54ddc47-6cb3-47a3-bfec-d920a1534377",
      "documentation": "<p>Allows a user to update a specific attribute (one at a time).</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserAttributes",
      "responses": [
        {
          "uuid": "25f5e10b-fe62-498e-a702-8871c0a8bbde",
          "body": "{\n  \"CodeDeliveryDetailsList\": [\n    {\n      \"Destination\": \"\",\n      \"DeliveryMedium\": \"\",\n      \"AttributeName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8efd0f2d-9a5e-4990-9347-abd5efcf2a11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5483de45-3ba3-4e4c-a135-9f89bb9e3af6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4152dfe-6190-472e-8072-daa0f88b4228",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6695e7f4-be5c-457a-97be-a54473a837d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6389c7bd-2ed1-4381-a1e5-288e3f0869b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f2622d5-fa2e-491e-bdaf-3775b5e965ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnexpectedLambdaException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7956afea-5857-4dee-935e-1b98e26245c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserLambdaValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7a6966b-3c28-40da-b04b-070e5754beb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidLambdaResponseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a983b1b2-a38c-42a0-b3e9-c6a2f070f772",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79704d27-a291-4fa7-8f5b-845afbc8725a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "AliasExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a71240cb-8dbf-4ae6-91c9-8f03e67d7813",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a055c3-bcbc-4d9a-a750-3c4ccff99e87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7e8983d-82cc-493f-8288-1a77eeb1dbee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0250803b-1c0c-4bb6-89bc-9cc27d1d81ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "CodeDeliveryFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7040a382-de81-4097-ab42-ef20897880f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b2028d0-e496-4323-a3a4-a1600e812a7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c5aed97-d00d-44d9-a1c0-db3898a059e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a28270d5-6dde-4d33-85a6-82ce564cb23d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75875a92-4cdd-4b77-9dd1-8e53dcc4519d",
      "documentation": "<p>Updates the specified user pool with the specified attributes. You can get a list of the current user pool settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\">DescribeUserPool</a>. If you don't provide a value for an attribute, it will be set to the default value.</p> <note> <p>This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you’ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html\"> SMS message settings for Cognito User Pools</a> in the <i>Amazon Cognito Developer Guide</i>. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPool",
      "responses": [
        {
          "uuid": "04ed226f-0fdb-47fd-a0dd-5b3f9082f821",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ab601e2-c197-4aff-9d47-710a56bcdcc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d40bf68-d68f-4980-9235-d9dfbc39c947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab11061d-22f1-4b7d-814f-2f46e8e4b430",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4a5aba0-b342-4fb3-9eeb-2ba3724deeee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0274a4b0-bbbe-4f33-a88f-c93f2605f756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6c23469-48b0-4a52-b3e9-0ba745c6657b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UserImportInProgressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce30bae-1fec-402c-a8c6-4d18c8e28255",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9d3590-ba15-4ebb-9f89-05ae12069099",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidSmsRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94c0303d-15d5-495f-84f3-92c19d527ca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidSmsRoleTrustRelationshipException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef2db027-9d58-4be0-947a-6c5e02cad067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserPoolTaggingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55d8c0e9-0480-4c9d-b2ba-54adf90a3774",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidEmailRoleAccessPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59d86aa7-f9a2-4874-a04b-18f2ab47b909",
      "documentation": "<p>Updates the specified user pool app client with the specified attributes. You can get a list of the current user pool app client settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPoolClient.html\">DescribeUserPoolClient</a>.</p> <important> <p>If you don't provide a value for an attribute, it will be set to the default value.</p> </important> <p>You can also use this operation to enable token revocation for user pool clients. For more information about revoking tokens, see <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html\">RevokeToken</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolClient",
      "responses": [
        {
          "uuid": "66a0523b-ed1a-41db-96a1-ae61f123db48",
          "body": "{\n  \"UserPoolClient\": {\n    \"UserPoolId\": \"\",\n    \"ClientName\": \"\",\n    \"ClientId\": \"\",\n    \"ClientSecret\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"CreationDate\": \"{{faker 'date.recent' 365}}\",\n    \"RefreshTokenValidity\": {{faker 'random.number'}},\n    \"AccessTokenValidity\": {{faker 'random.number'}},\n    \"IdTokenValidity\": {{faker 'random.number'}},\n    \"TokenValidityUnits\": {\n      \"AccessToken\": \"\",\n      \"IdToken\": \"\",\n      \"RefreshToken\": \"\"\n    },\n    \"ReadAttributes\": [\n      \"\"\n    ],\n    \"WriteAttributes\": [\n      \"\"\n    ],\n    \"ExplicitAuthFlows\": [\n      \"{{oneOf (array 'ADMIN_NO_SRP_AUTH' 'CUSTOM_AUTH_FLOW_ONLY' 'USER_PASSWORD_AUTH' 'ALLOW_ADMIN_USER_PASSWORD_AUTH' 'ALLOW_CUSTOM_AUTH' 'ALLOW_USER_PASSWORD_AUTH' 'ALLOW_USER_SRP_AUTH' 'ALLOW_REFRESH_TOKEN_AUTH')}}\"\n    ],\n    \"SupportedIdentityProviders\": [\n      \"\"\n    ],\n    \"CallbackURLs\": [\n      \"\"\n    ],\n    \"LogoutURLs\": [\n      \"\"\n    ],\n    \"DefaultRedirectURI\": \"\",\n    \"AllowedOAuthFlows\": [\n      \"{{oneOf (array 'code' 'implicit' 'client_credentials')}}\"\n    ],\n    \"AllowedOAuthScopes\": [\n      \"\"\n    ],\n    \"AllowedOAuthFlowsUserPoolClient\": {{faker 'random.boolean'}},\n    \"AnalyticsConfiguration\": {\n      \"ApplicationId\": \"\",\n      \"ApplicationArn\": \"\",\n      \"RoleArn\": \"\",\n      \"ExternalId\": \"\",\n      \"UserDataShared\": {{faker 'random.boolean'}}\n    },\n    \"PreventUserExistenceErrors\": \"\",\n    \"EnableTokenRevocation\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ab89a13-00d2-44af-b80d-20857ce045bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "910a9bcf-fe01-4bb5-b463-ce0a333f0e89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3381955-1711-4374-ac41-97690181a39c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e368432f-3570-4dcd-91bf-6dfe55f28c43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30344e66-111b-4ed3-b9ea-f870b982d2e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30946fd8-5c25-40a5-89c1-9bc017e5cd90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ScopeDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d5d627f-8c54-4dd0-8c1a-f847dfcbe18a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidOAuthFlowException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abdda3ec-32d9-4934-9eae-41a9837079d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "735294ba-c95e-4926-8cb9-c2b01aaf0989",
      "documentation": "<p>Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your user pool.</p> <p>You can use this operation to provide the Amazon Resource Name (ARN) of a new certificate to Amazon Cognito. You cannot use it to change the domain for a user pool.</p> <p>A custom domain is used to host the Amazon Cognito hosted UI, which provides sign-up and sign-in pages for your application. When you set up a custom domain, you provide a certificate that you manage with Certificate Manager (ACM). When necessary, you can use this operation to change the certificate that you applied to your custom domain.</p> <p>Usually, this is unnecessary following routine certificate renewal with ACM. When you renew your existing certificate in ACM, the ARN for your certificate remains the same, and your custom domain uses the new certificate automatically.</p> <p>However, if you replace your existing certificate with a new one, ACM gives the new certificate a new ARN. To apply the new certificate to your custom domain, you must provide this ARN to Amazon Cognito.</p> <p>When you add your new certificate in ACM, you must choose US East (N. Virginia) as the Region.</p> <p>After you submit your request, Amazon Cognito requires up to 1 hour to distribute your new certificate to your custom domain.</p> <p>For more information about adding a custom domain to your user pool, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html\">Using Your Own Domain for the Hosted UI</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPoolDomain",
      "responses": [
        {
          "uuid": "dcc7d2e9-c2e9-4d0a-a6ce-6010647f728f",
          "body": "{\n  \"CloudFrontDomain\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2fe85c0-2557-4545-a01a-ab2aab20a71d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3a9668b-8140-4aa0-b9fe-b1dbcf13c5ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd003a45-154b-4404-a488-eb246ff282f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83bfee4a-636d-44ed-9869-2d588d49e97d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0ea8548-75ee-4b6c-a0cc-bebf5b3737c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ff51411-7105-4774-8e7d-97dc163ee94f",
      "documentation": "Use this API to register a user's entered TOTP code and mark the user's software token MFA status as \"verified\" if successful. The request takes an access token or a session string, but not both.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.VerifySoftwareToken",
      "responses": [
        {
          "uuid": "e378b4fc-d4ab-4a85-a096-cc9089b5ad4c",
          "body": "{\n  \"Status\": \"\",\n  \"Session\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25b651a4-fa8e-4022-88b5-2e11dff8da20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3522595d-3c7f-4198-9b74-e724d0107a55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff006284-82ef-49c2-87b3-d98f1964417c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidUserPoolConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daab638d-3cf7-448e-ba7e-d2c608854e12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "103c0ef7-31e3-4a28-add6-56b7fd848a17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc656ced-c56b-4a4c-a39d-cbae73ea2951",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "991fb86c-067f-4b0a-9e2b-fe76739cdb25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9120172e-fa55-49eb-82fd-3510fc3efdc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e702bc0a-5580-4ed4-9910-cbded489443d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e9f7700-1480-40dd-9ab9-0461d2f72a5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "EnableSoftwareTokenMFAException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bdc5978-d507-4c99-92ac-f7a2f90b1970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b73728f-7b98-4d35-985e-4f6a4cd767b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "SoftwareTokenMFANotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "573ef27b-3a18-4bc7-a1dc-87c408f0aa8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9737e7e-2e18-4c4f-bb51-7d30e2b6c886",
      "documentation": "Verifies the specified user attributes in the user pool.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSCognitoIdentityProviderService.VerifyUserAttribute",
      "responses": [
        {
          "uuid": "65167876-fc08-48bf-8bd2-9be030a35dc3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa5b9ee3-c8b3-41d7-af12-56227e52eee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5a184ad-780a-4f5a-8e32-3a2c83b8eac3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "762ab9a7-1fe3-4f85-8c17-d1d50c3d373a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CodeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1020944-42ac-4fdd-a1de-18eaedc299b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ExpiredCodeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cdb6e9a-4178-4083-a914-9a1b2d6ee04d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a810f43-af3e-487b-a283-c1e463626ef4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc9b8d36-5ee3-48d5-bfd0-db4bc3b715e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2d828fc-8b86-4c12-a691-e8ef7af36f4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "PasswordResetRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b2f17f9-095f-4200-993c-f5a8927d67f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UserNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd4e143f-0869-4ab9-a393-37f9e679e4d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UserNotConfirmedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88c28b73-a2b4-43ac-b183-0a36b0ad25c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}