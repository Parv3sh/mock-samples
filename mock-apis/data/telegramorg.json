{
  "uuid": "7b05c026-a45b-4c91-8145-b21639bed645",
  "lastMigration": 19,
  "name": "Telegram Bot API",
  "endpointPrefix": "bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9aa3cba0-6942-45f0-8be1-43de572342d1",
      "documentation": "Use this method to add a new sticker to a set created by the bot. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Animated stickers can be added to animated sticker sets and only to them. Animated sticker sets can have up to 50 stickers. Static sticker sets can have up to 120 stickers. Returns *True* on success.",
      "method": "post",
      "endpoint": "addStickerToSet",
      "responses": [
        {
          "uuid": "bc3c1997-ce4b-4faa-9ee5-813c5b58550f",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae303ff0-27c6-4d18-9d58-31c4a5468ebc",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "645319f1-2ed5-48b5-ba66-964700c1c2dc",
      "documentation": "Use this method to send answers to callback queries sent from [inline keyboards](/bots#inline-keyboards-and-on-the-fly-updating). The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, *True* is returned.\n\nAlternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via [@Botfather](https://t.me/botfather) and accept the terms. Otherwise, you may use links like `t.me/your_bot?start=XXXX` that open your bot with a parameter.",
      "method": "post",
      "endpoint": "answerCallbackQuery",
      "responses": [
        {
          "uuid": "2e694e29-ecb3-48ef-a1b8-ad45c536fd53",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddabfb61-b322-4d97-a718-9d8eb7c06c3c",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cdf4a64-bb34-4175-906f-4a30bc33471d",
      "documentation": "Use this method to send answers to an inline query. On success, *True* is returned.  \nNo more than **50** results per query are allowed.",
      "method": "post",
      "endpoint": "answerInlineQuery",
      "responses": [
        {
          "uuid": "4ce63a6c-1bf0-4a34-b115-7aa5fd209f9d",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcada1a4-3804-4f2e-9aec-e55d1c2b9373",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9a618b1-c70c-454c-a202-6e2fbf341b35",
      "documentation": "Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an [Update](https://core.telegram.org/bots/api/#update) with the field *pre\\_checkout\\_query*. Use this method to respond to such pre-checkout queries. On success, True is returned. **Note:** The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.",
      "method": "post",
      "endpoint": "answerPreCheckoutQuery",
      "responses": [
        {
          "uuid": "cfb600d9-074c-4bc0-a142-a69eff7b5932",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c84a00ac-81ac-47d4-8288-214f8b785256",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8eccab2-cf5c-466a-bca1-2f13b4080bd5",
      "documentation": "If you sent an invoice requesting a shipping address and the parameter *is\\_flexible* was specified, the Bot API will send an [Update](https://core.telegram.org/bots/api/#update) with a *shipping\\_query* field to the bot. Use this method to reply to shipping queries. On success, True is returned.",
      "method": "post",
      "endpoint": "answerShippingQuery",
      "responses": [
        {
          "uuid": "4d6515e6-19f7-4cf0-8faa-98b3749aa8a7",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a30266c1-8dee-4ba3-bdd7-b409426670f1",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a0e3e9c-6e3b-4ca6-b912-5dafa51be91b",
      "documentation": "Use this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn't launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "close",
      "responses": [
        {
          "uuid": "fada15ee-0d87-4633-b00a-8641d72fe774",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "368b14a6-5862-46d3-8988-511afc0f1d6e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0761f245-fb85-4545-bd87-b6efd6a42944",
      "documentation": "Use this method to copy messages of any kind. The method is analogous to the method [forwardMessages](https://core.telegram.org/bots/api/#forwardmessages), but the copied message doesn't have a link to the original message. Returns the [MessageId](https://core.telegram.org/bots/api/#messageid) of the sent message on success.",
      "method": "post",
      "endpoint": "copyMessage",
      "responses": [
        {
          "uuid": "5712ddb8-e380-49ca-ad7b-dd9cf3668613",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"message_id\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e037e4fc-2e67-4f96-808d-97220a9f0a17",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b240291-f00e-4555-9c53-e263c4e68be9",
      "documentation": "Use this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Returns *True* on success.",
      "method": "post",
      "endpoint": "createNewStickerSet",
      "responses": [
        {
          "uuid": "be11b0f0-90f8-441c-bd36-7a4a4e80c502",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b7b4575-5d7d-40de-9b2b-9af3f6379c4f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "498315d5-83df-4820-8b5a-73eb2b56d79c",
      "documentation": "Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatPhoto",
      "responses": [
        {
          "uuid": "7216a7be-572f-4975-a43a-f8a38c49fa81",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0da4911f-6c9c-42f0-95df-85aebac2febe",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "141ca4a5-32bf-4550-971a-10199c004463",
      "documentation": "Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatStickerSet",
      "responses": [
        {
          "uuid": "66d79b1b-b6c3-4a7b-8385-67cfdc2a1a8e",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "906aa05b-9fb2-4539-b8c3-4637074b4867",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d266321a-adac-4ec5-9dc9-05fb7027036b",
      "documentation": "Use this method to delete a message, including service messages, with the following limitations:  \n\\- A message can only be deleted if it was sent less than 48 hours ago.  \n\\- A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.  \n\\- Bots can delete outgoing messages in private chats, groups, and supergroups.  \n\\- Bots can delete incoming messages in private chats.  \n\\- Bots granted *can\\_post\\_messages* permissions can delete outgoing messages in channels.  \n\\- If the bot is an administrator of a group, it can delete any message there.  \n\\- If the bot has *can\\_delete\\_messages* permission in a supergroup or a channel, it can delete any message there.  \nReturns *True* on success.",
      "method": "post",
      "endpoint": "deleteMessage",
      "responses": [
        {
          "uuid": "f6adc0bf-ca1f-44ea-ab18-918d769caf87",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30258912-00c9-4b8d-8767-50eb55101a84",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99d2654e-2471-4058-b2d5-ea70359d0a2d",
      "documentation": "Use this method to delete a sticker from a set created by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteStickerFromSet",
      "responses": [
        {
          "uuid": "b544f6de-71e5-4b96-ac4b-437da95bc90b",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8206a5b8-1040-4c01-b438-6ccd671597ce",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "223305e0-db79-440b-bdf0-1a689854da1a",
      "documentation": "Use this method to remove webhook integration if you decide to switch back to [getUpdates](https://core.telegram.org/bots/api/#getupdates). Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteWebhook",
      "responses": [
        {
          "uuid": "ffc30ed4-c10f-49bc-9ce1-a88b1dccf0e2",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a412a07-9bc4-4b59-b4e7-56cef12b7821",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c4c9a7f-1916-46fe-8599-0e511ecc33b3",
      "documentation": "Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageCaption",
      "responses": [
        {
          "uuid": "7fdac838-b3f6-4596-ad55-eeb1feebb387",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60920fdb-c9ce-4439-8b32-6b0bdf8cd54f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70b67898-f4e2-496a-94b7-4bd28287d1f8",
      "documentation": "Use this method to edit live location messages. A location can be edited until its *live\\_period* expires or editing is explicitly disabled by a call to [stopMessageLiveLocation](https://core.telegram.org/bots/api/#stopmessagelivelocation). On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageLiveLocation",
      "responses": [
        {
          "uuid": "4ef668c6-ed70-4366-85fd-29b21b64212d",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b01c16a6-b020-4765-b731-42f8f0964a36",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c22064e-ede5-4a37-9eaa-768bfe1d8066",
      "documentation": "Use this method to edit animation, audio, document, photo, or video messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded. Use a previously uploaded file via its file\\_id or specify a URL. On success, if the edited message was sent by the bot, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageMedia",
      "responses": [
        {
          "uuid": "57a9da31-f347-4993-ad08-d4358e9239d0",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4463437-a655-4e9a-b89d-77f32d539d73",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4d5d90e-dad5-42d0-889f-442aeeb00226",
      "documentation": "Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageReplyMarkup",
      "responses": [
        {
          "uuid": "22134f27-40cc-44ec-b1b6-4e95bfcfd5b3",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8a50f94-1519-42f5-86df-c4d013638c1b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "462f8959-2b66-49b1-9851-db65eb9e4aa3",
      "documentation": "Use this method to edit text and [game](https://core.telegram.org/bots/api/#games) messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageText",
      "responses": [
        {
          "uuid": "77cddb9a-57f3-4962-9cec-83442b3eec97",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354c17dd-5b1b-4975-bc5a-20641838b3fe",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84e63c26-5326-46eb-9f02-4e9a55674040",
      "documentation": "Use this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as *String* on success.",
      "method": "post",
      "endpoint": "exportChatInviteLink",
      "responses": [
        {
          "uuid": "c28ceb57-613c-4932-99cf-6fa484147e82",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1128c77-5f7c-4bb2-a083-6deff903db2f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6d72162-54ba-4223-a1c8-dfef87a2c958",
      "documentation": "Use this method to forward messages of any kind. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "forwardMessage",
      "responses": [
        {
          "uuid": "55a9d5c2-f2cf-4946-a48b-59f04ba0ba95",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57f6b0b3-094f-4e01-ba82-5c9929ccbf52",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "428649e2-d009-45e8-b3da-f47fc4145db3",
      "documentation": "Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a [Chat](https://core.telegram.org/bots/api/#chat) object on success.",
      "method": "post",
      "endpoint": "getChat",
      "responses": [
        {
          "uuid": "5d197504-7c1d-435f-890f-5f7d1f6218dd",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96785acf-10f3-40b5-801b-36ff47965aa4",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7edfc370-f4aa-4528-9aab-654251fd3496",
      "documentation": "Use this method to get a list of administrators in a chat. On success, returns an Array of [ChatMember](https://core.telegram.org/bots/api/#chatmember) objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.",
      "method": "post",
      "endpoint": "getChatAdministrators",
      "responses": [
        {
          "uuid": "76e6af3e-e185-44ab-a95c-c866472f65ab",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"can_add_web_page_previews\": {{faker 'random.boolean'}},\n      \"can_be_edited\": {{faker 'random.boolean'}},\n      \"can_change_info\": {{faker 'random.boolean'}},\n      \"can_delete_messages\": {{faker 'random.boolean'}},\n      \"can_edit_messages\": {{faker 'random.boolean'}},\n      \"can_invite_users\": {{faker 'random.boolean'}},\n      \"can_pin_messages\": {{faker 'random.boolean'}},\n      \"can_post_messages\": {{faker 'random.boolean'}},\n      \"can_promote_members\": {{faker 'random.boolean'}},\n      \"can_restrict_members\": {{faker 'random.boolean'}},\n      \"can_send_media_messages\": {{faker 'random.boolean'}},\n      \"can_send_messages\": {{faker 'random.boolean'}},\n      \"can_send_other_messages\": {{faker 'random.boolean'}},\n      \"can_send_polls\": {{faker 'random.boolean'}},\n      \"custom_title\": \"\",\n      \"is_anonymous\": {{faker 'random.boolean'}},\n      \"is_member\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n      \"until_date\": {{faker 'random.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'random.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_bot\": {{faker 'random.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'random.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac17d78d-fbcd-41d6-b22e-1a332bab415d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b09d0f4-2fed-4612-a10a-0380510add5d",
      "documentation": "Use this method to get information about a member of a chat. Returns a [ChatMember](https://core.telegram.org/bots/api/#chatmember) object on success.",
      "method": "post",
      "endpoint": "getChatMember",
      "responses": [
        {
          "uuid": "f05de938-486c-4f96-af29-6c45aea8fefd",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_add_web_page_previews\": {{faker 'random.boolean'}},\n    \"can_be_edited\": {{faker 'random.boolean'}},\n    \"can_change_info\": {{faker 'random.boolean'}},\n    \"can_delete_messages\": {{faker 'random.boolean'}},\n    \"can_edit_messages\": {{faker 'random.boolean'}},\n    \"can_invite_users\": {{faker 'random.boolean'}},\n    \"can_pin_messages\": {{faker 'random.boolean'}},\n    \"can_post_messages\": {{faker 'random.boolean'}},\n    \"can_promote_members\": {{faker 'random.boolean'}},\n    \"can_restrict_members\": {{faker 'random.boolean'}},\n    \"can_send_media_messages\": {{faker 'random.boolean'}},\n    \"can_send_messages\": {{faker 'random.boolean'}},\n    \"can_send_other_messages\": {{faker 'random.boolean'}},\n    \"can_send_polls\": {{faker 'random.boolean'}},\n    \"custom_title\": \"\",\n    \"is_anonymous\": {{faker 'random.boolean'}},\n    \"is_member\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n    \"until_date\": {{faker 'random.number'}},\n    \"user\": {\n      \"can_join_groups\": {{faker 'random.boolean'}},\n      \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n      \"first_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_bot\": {{faker 'random.boolean'}},\n      \"language_code\": \"\",\n      \"last_name\": \"\",\n      \"supports_inline_queries\": {{faker 'random.boolean'}},\n      \"username\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b1a4f67-21fb-47cc-b3ba-a5140af81d3b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "801e6dd8-cc0a-4293-bae2-044275c1cfae",
      "documentation": "Use this method to get the number of members in a chat. Returns *Int* on success.",
      "method": "post",
      "endpoint": "getChatMembersCount",
      "responses": [
        {
          "uuid": "a7101a07-a696-41e5-b3fc-f775c2aef1fe",
          "body": "{\n  \"ok\": true,\n  \"result\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb189292-142d-48dc-87b9-751da885044e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a38d2686-971c-401c-a0ae-f1df82d59306",
      "documentation": "Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a [File](https://core.telegram.org/bots/api/#file) object is returned. The file can then be downloaded via the link `https://api.telegram.org/file/bot<token>/<file_path>`, where `<file_path>` is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling [getFile](https://core.telegram.org/bots/api/#getfile) again.",
      "method": "post",
      "endpoint": "getFile",
      "responses": [
        {
          "uuid": "db70123b-1a97-41a9-bc37-010bddedd6da",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'random.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dc91b83-df46-4bf5-a55b-78b56fa5892d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50a4443c-44fa-4a00-81fa-609088446045",
      "documentation": "Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. On success, returns an *Array* of [GameHighScore](https://core.telegram.org/bots/api/#gamehighscore) objects.\n\nThis method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.",
      "method": "post",
      "endpoint": "getGameHighScores",
      "responses": [
        {
          "uuid": "2b9fb2be-ecf0-4f8a-ba29-5199aa5639c6",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"position\": {{faker 'random.number'}},\n      \"score\": {{faker 'random.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'random.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_bot\": {{faker 'random.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'random.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0f4e385-b495-4242-b5fd-9e799153d4b7",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "454809d6-77c7-46ba-a147-37ef6e7291b8",
      "documentation": "A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a [User](https://core.telegram.org/bots/api/#user) object.",
      "method": "post",
      "endpoint": "getMe",
      "responses": [
        {
          "uuid": "3f20e8f9-2a67-48ce-8c06-92bdd55021da",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_join_groups\": {{faker 'random.boolean'}},\n    \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n    \"first_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_bot\": {{faker 'random.boolean'}},\n    \"language_code\": \"\",\n    \"last_name\": \"\",\n    \"supports_inline_queries\": {{faker 'random.boolean'}},\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac79d5ba-e2f9-4579-a269-70fd88920573",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60bb69e8-669d-4c49-a76c-667ffc1ea848",
      "documentation": "Use this method to get the current list of the bot's commands. Requires no parameters. Returns Array of [BotCommand](https://core.telegram.org/bots/api/#botcommand) on success.",
      "method": "post",
      "endpoint": "getMyCommands",
      "responses": [
        {
          "uuid": "2495a0a7-f772-44a3-9006-06001fcc2959",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"command\": \"\",\n      \"description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "728bf785-ca1a-403e-a354-f30d7a8ecc8b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93664c0d-1199-4ef2-be7e-c8da86ac2f4e",
      "documentation": "Use this method to get a sticker set. On success, a [StickerSet](https://core.telegram.org/bots/api/#stickerset) object is returned.",
      "method": "post",
      "endpoint": "getStickerSet",
      "responses": [
        {
          "uuid": "06752b06-1622-4aec-ac40-96b9f99da89f",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"contains_masks\": {{faker 'random.boolean'}},\n    \"is_animated\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"stickers\": [\n      {\n        \"emoji\": \"\",\n        \"file_id\": \"\",\n        \"file_size\": {{faker 'random.number'}},\n        \"file_unique_id\": \"\",\n        \"height\": {{faker 'random.number'}},\n        \"is_animated\": {{faker 'random.boolean'}},\n        \"mask_position\": {\n          \"point\": \"{{oneOf (array 'forehead' 'eyes' 'mouth' 'chin')}}\",\n          \"scale\": {{faker 'random.number'}},\n          \"x_shift\": {{faker 'random.number'}},\n          \"y_shift\": {{faker 'random.number'}}\n        },\n        \"set_name\": \"\",\n        \"thumb\": {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'random.number'}},\n          \"width\": {{faker 'random.number'}}\n        },\n        \"width\": {{faker 'random.number'}}\n      }\n    ],\n    \"thumb\": {\n      \"file_id\": \"\",\n      \"file_size\": {{faker 'random.number'}},\n      \"file_unique_id\": \"\",\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}}\n    },\n    \"title\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61697669-acf2-40e0-92fd-07b60ab41c0f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48b2d258-8df2-4460-8737-4c8b85a4a39f",
      "documentation": "Use this method to receive incoming updates using long polling ([wiki](https://en.wikipedia.org/wiki/Push_technology#Long_polling)). An Array of [Update](https://core.telegram.org/bots/api/#update) objects is returned.",
      "method": "post",
      "endpoint": "getUpdates",
      "responses": [
        {
          "uuid": "9edffbe4-b038-42a4-a79b-37ebc0041495",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "062a8be6-1909-4476-88b9-3e01deaf4343",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6950fbba-15f8-47d8-aa7a-914696d8f533",
      "documentation": "Use this method to get a list of profile pictures for a user. Returns a [UserProfilePhotos](https://core.telegram.org/bots/api/#userprofilephotos) object.",
      "method": "post",
      "endpoint": "getUserProfilePhotos",
      "responses": [
        {
          "uuid": "7dd90ee1-4b16-490b-9deb-9680b0510489",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"photos\": [\n      [\n        {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'random.number'}},\n          \"width\": {{faker 'random.number'}}\n        }\n      ]\n    ],\n    \"total_count\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b9d0673-6c29-42bc-ade5-16c1541ee4a2",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e7666f3-6e82-4524-9bfd-9de8f0dbb45b",
      "documentation": "Use this method to get current webhook status. Requires no parameters. On success, returns a [WebhookInfo](https://core.telegram.org/bots/api/#webhookinfo) object. If the bot is using [getUpdates](https://core.telegram.org/bots/api/#getupdates), will return an object with the *url* field empty.",
      "method": "post",
      "endpoint": "getWebhookInfo",
      "responses": [
        {
          "uuid": "a6e417aa-d3d6-4c53-bb84-86ca4e49dbbb",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allowed_updates\": [\n      \"\"\n    ],\n    \"has_custom_certificate\": {{faker 'random.boolean'}},\n    \"ip_address\": \"\",\n    \"last_error_date\": {{faker 'random.number'}},\n    \"last_error_message\": \"\",\n    \"max_connections\": {{faker 'random.number'}},\n    \"pending_update_count\": {{faker 'random.number'}},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "933a16b6-556c-42d4-a85f-c63c8e99296e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac68db5b-a562-44cb-b487-cfc9d3068900",
      "documentation": "Use this method to kick a user from a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless [unbanned](https://core.telegram.org/bots/api/#unbanchatmember) first. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "kickChatMember",
      "responses": [
        {
          "uuid": "b7fa086b-0b21-46b8-bd9f-bc6ff86a835c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "067b0126-256e-4910-ac28-8c704fd52fb8",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a5fd0c2-780f-4dac-8feb-572f9a897118",
      "documentation": "Use this method for your bot to leave a group, supergroup or channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "leaveChat",
      "responses": [
        {
          "uuid": "aa0068ae-dade-4c04-9c9b-d1bdf5c75f26",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9424920-afdb-4fa9-9d22-1e525b056d39",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce30b8fd-bc6e-4dd9-ae30-55029bf76225",
      "documentation": "Use this method to log out from the cloud Bot API server before launching the bot locally. You **must** log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "logOut",
      "responses": [
        {
          "uuid": "505dd232-5bd6-4674-b35a-4617aab32280",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf45416d-aa45-4885-8f07-10bb06e58c98",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9c0f20e-ce89-4939-a802-a2ca463e10b9",
      "documentation": "Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "pinChatMessage",
      "responses": [
        {
          "uuid": "8e5255a1-d766-4e50-9041-908c0a68424b",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cff0aee-2831-4fb4-af92-3684e481c22d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99341e80-1ebe-4d68-8a7c-db776d6c0367",
      "documentation": "Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass *False* for all boolean parameters to demote a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "promoteChatMember",
      "responses": [
        {
          "uuid": "c25f9a0f-7ddc-4a0f-9fa5-f36f6b776c80",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6fd3eeb-a5a1-4edb-aeb3-d0f2043015f5",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf717915-3f40-41ed-a44c-625e1b658977",
      "documentation": "Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass *True* for all permissions to lift restrictions from a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "restrictChatMember",
      "responses": [
        {
          "uuid": "5b9ffbc5-dd19-4da3-9dad-4dc8ff7c156c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70c99b3f-95da-4f15-b546-ee336cee813f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81a1edac-8eb0-46f8-9320-4a229f3a9500",
      "documentation": "Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendAnimation",
      "responses": [
        {
          "uuid": "aa8c6042-a472-42c7-9988-ac427bffa3f0",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "517d5d69-1ac2-482f-92d9-d07fbd64aa21",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8793098f-2d6b-4d2f-863a-425b94b4a52b",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\n\nFor sending voice messages, use the [sendVoice](https://core.telegram.org/bots/api/#sendvoice) method instead.",
      "method": "post",
      "endpoint": "sendAudio",
      "responses": [
        {
          "uuid": "ee6814eb-0233-4a52-8b6e-71907d470295",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e008f5-3114-4850-880e-1e0d06a85454",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba238297-f7d7-4cfd-9de9-5877f31e3bc7",
      "documentation": "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns *True* on success.\n\nExample: The [ImageBot](https://t.me/imagebot) needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use [sendChatAction](https://core.telegram.org/bots/api/#sendchataction) with *action* = *upload\\_photo*. The user will see a “sending photo” status for the bot.\n\nWe only recommend using this method when a response from the bot will take a **noticeable** amount of time to arrive.",
      "method": "post",
      "endpoint": "sendChatAction",
      "responses": [
        {
          "uuid": "24eca145-6eba-4faa-ab58-e04129278051",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5230068e-b094-49d0-b578-311bad05fd3a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30cd002f-dcae-48a5-a37a-3f5b461d4ed1",
      "documentation": "Use this method to send phone contacts. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendContact",
      "responses": [
        {
          "uuid": "ae62dbac-98b1-4830-b625-6d1b7d1b037c",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b356ec5-b179-4ebd-ae59-7ccbe018f7a1",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad0f2313-aaee-473a-a6ee-182067b8de46",
      "documentation": "Use this method to send an animated emoji that will display a random value. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendDice",
      "responses": [
        {
          "uuid": "20248fc2-b062-4412-bfb5-661e844f44ed",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7562b183-8da1-4ae6-b96f-fb34655ca343",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5048ec7-40b9-427e-adc3-08e7c5e8ae6c",
      "documentation": "Use this method to send general files. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendDocument",
      "responses": [
        {
          "uuid": "df51c805-16cb-4ca4-99cc-912e8f70fc4c",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f3cee9e-6c5b-4eb1-bdf4-cce89d08a299",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1d2c7b0-5ae6-473f-a6cd-c2afd22a9e0c",
      "documentation": "Use this method to send a game. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendGame",
      "responses": [
        {
          "uuid": "316a429c-0af3-4dd6-806f-f0e930c2dde5",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7bcd070-1e34-4a4a-a888-65d4c8d50a38",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd0c9543-0562-44dd-885f-7b095da98a71",
      "documentation": "Use this method to send invoices. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendInvoice",
      "responses": [
        {
          "uuid": "1b89f3db-412b-49b9-8663-30bda33a78a9",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ecdf3c6-2d9d-41d9-a313-aa57d9d69daa",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5da6b565-2017-419d-989d-9a88e576e4a0",
      "documentation": "Use this method to send point on the map. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendLocation",
      "responses": [
        {
          "uuid": "dad5be6d-4ef7-499f-be78-c029d0840fea",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d2bfb9a-59c6-4083-ad6d-11ea15dd725c",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48b27e43-f63c-4bd8-ad1b-bb45b8089043",
      "documentation": "Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of [Messages](https://core.telegram.org/bots/api/#message) that were sent is returned.",
      "method": "post",
      "endpoint": "sendMediaGroup",
      "responses": [
        {
          "uuid": "6587ce6a-f9a9-494d-a6bf-54f13c65b763",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b378814-f42d-446d-948b-0f38fc51f983",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa2ce971-5137-4fe6-8ddc-e46a9871556e",
      "documentation": "Use this method to send text messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendMessage",
      "responses": [
        {
          "uuid": "ed694b65-8e04-480c-a328-fe676ee98730",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d4610bf-1729-4d23-8ab3-6a0a5537370b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1fbfe1d-4418-47f1-88f3-f05856957252",
      "documentation": "Use this method to send photos. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPhoto",
      "responses": [
        {
          "uuid": "e6c3318c-0652-44c0-b8e8-1981a8738181",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65d7ca01-89c5-4d5e-96a2-52f079b5c67a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13025e88-ed6a-4781-a04d-a1dc7f7055e3",
      "documentation": "Use this method to send a native poll. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPoll",
      "responses": [
        {
          "uuid": "535506d4-c312-4398-a738-5f7e1626d5b3",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b10d1f2-2b3e-411a-9e7d-0b889881b062",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab03a153-8bb2-4705-920e-7ff2346abd71",
      "documentation": "Use this method to send static .WEBP or [animated](https://telegram.org/blog/animated-stickers) .TGS stickers. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendSticker",
      "responses": [
        {
          "uuid": "48c7f3f0-d967-4f75-85d4-552f07f123d6",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee347125-6ac1-46cd-aeb5-99dc1a6a3eeb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b398498a-c734-4194-99ec-d479787bc101",
      "documentation": "Use this method to send information about a venue. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVenue",
      "responses": [
        {
          "uuid": "79f0c13f-7a2d-4224-a568-31f5e9587219",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9040f6b6-3010-4774-936d-87f890238587",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29a54e78-7121-4ec9-88cb-c44e7cbe6eae",
      "documentation": "Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVideo",
      "responses": [
        {
          "uuid": "8900a8bd-1333-49a6-8885-a7325bbf2485",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ffe707-30e2-46a4-9d46-ac79d83886f3",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5d94265-dbd3-43fc-b1e9-4fe450a50b14",
      "documentation": "As of [v.4.0](https://telegram.org/blog/video-messages-and-telescope), Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVideoNote",
      "responses": [
        {
          "uuid": "4ddbe253-d447-4fae-be96-da3e6561c14b",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b81bc8e-6c48-45cc-9962-3b07a466047e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c39a17e-30b6-40d6-853b-da2a86ef7a98",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as [Audio](https://core.telegram.org/bots/api/#audio) or [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVoice",
      "responses": [
        {
          "uuid": "ae50b6de-e419-48e0-b96f-4cc93b68d81a",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6583f89-baa4-4c37-bc3d-86d38f22b6d7",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cb6f5d1-0173-4fc9-a36b-fea9347a1310",
      "documentation": "Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatAdministratorCustomTitle",
      "responses": [
        {
          "uuid": "2ac46f2e-6641-4c00-be0f-df6678dd8364",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a55d1a7-b305-4854-8316-09281b679027",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b38f60f3-e9e4-4407-8a97-fb952aa9d643",
      "documentation": "Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatDescription",
      "responses": [
        {
          "uuid": "f32b6829-4936-4211-b8af-2eb7b526e99c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66b0b885-5bba-46ab-a2d1-c46ca9615ee9",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a7cb1dd-c0f0-41c0-aaec-df061a5e3a76",
      "documentation": "Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the *can\\_restrict\\_members* admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPermissions",
      "responses": [
        {
          "uuid": "191c1c88-d7c0-4a43-8b70-3275f17664ad",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ed4c063-7bb6-4891-83e8-a2884e6e390f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a673ac02-796c-4f35-93ce-29cbe71eea50",
      "documentation": "Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPhoto",
      "responses": [
        {
          "uuid": "82235ef2-c61b-4e8d-aba0-2987c26222fe",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88dd757a-d836-4b75-b87d-d7da1191c462",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b6364ea-1f44-43f6-bc46-ee181563ceca",
      "documentation": "Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatStickerSet",
      "responses": [
        {
          "uuid": "705a12dc-b34c-4ed3-9dd4-686a549c47ba",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d446389f-fa59-4f86-8046-49ab5db4b01c",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d5b62ea-4669-4ac5-a3bd-edd37b50d52a",
      "documentation": "Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatTitle",
      "responses": [
        {
          "uuid": "37488403-111b-4179-b804-eee02d3b2bfc",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc167668-3ff3-4b26-ba92-a5bda4dd3109",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bf2fd37-135d-4257-a50d-cdba2b35ed22",
      "documentation": "Use this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited [Message](https://core.telegram.org/bots/api/#message), otherwise returns *True*. Returns an error, if the new score is not greater than the user's current score in the chat and *force* is *False*.",
      "method": "post",
      "endpoint": "setGameScore",
      "responses": [
        {
          "uuid": "f93dd7d0-1bb1-47ce-9c34-598cd2bae8e6",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df6de5d1-6111-4cdb-809a-f739ad849099",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d86bba0-ffa0-4548-b3ff-ed12ce7e8442",
      "documentation": "Use this method to change the list of the bot's commands. Returns *True* on success.",
      "method": "post",
      "endpoint": "setMyCommands",
      "responses": [
        {
          "uuid": "6ff3e8b1-9630-486d-a6b6-5bc8b2de9eb0",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0db86f52-8dbe-4b74-a6bc-0e912c1ab00c",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d87fa8a5-9129-4630-8deb-fc7581b791cb",
      "documentation": "Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns *True* on success.\n\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.",
      "method": "post",
      "endpoint": "setPassportDataErrors",
      "responses": [
        {
          "uuid": "19946c79-c5dc-4c29-91d2-edde72dd9abe",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18623eca-082f-4b9d-8811-148e5dfc4edd",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6e76108-7ad9-45eb-8e03-a967a4f8ffbf",
      "documentation": "Use this method to move a sticker in a set created by the bot to a specific position. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerPositionInSet",
      "responses": [
        {
          "uuid": "64b81cc1-9eb2-4a5c-acdc-ed1bae03d510",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5455dc3-2e7f-4680-96ae-d56affbc12dd",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84f43257-198b-4834-8f1c-dbd8391b8b50",
      "documentation": "Use this method to set the thumbnail of a sticker set. Animated thumbnails can be set for animated sticker sets only. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerSetThumb",
      "responses": [
        {
          "uuid": "131d5c67-bb0f-4ff4-b454-44ceeabad48c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a69e86f-0632-4207-b4f5-d71ab97b94a1",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09f41166-e489-4fbc-93e9-e766ae6fdae1",
      "documentation": "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized [Update](https://core.telegram.org/bots/api/#update). In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns *True* on success.\n\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. `https://www.example.com/<token>`. Since nobody else knows your bot's token, you can be pretty sure it's us.",
      "method": "post",
      "endpoint": "setWebhook",
      "responses": [
        {
          "uuid": "0fa17c46-5bc9-4eed-96d5-bd7bee4045ed",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "158a4e56-ac92-49af-a01f-b63a75a926df",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5428293f-a949-407a-b8a9-42401e970f74",
      "documentation": "Use this method to stop updating a live location message before *live\\_period* expires. On success, if the message was sent by the bot, the sent [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "stopMessageLiveLocation",
      "responses": [
        {
          "uuid": "86e91fea-c548-49a9-9d14-431ae1d7a2c4",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cad6f26b-0e9a-4e03-a53d-ef3e7faf5243",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "852148e0-7146-46ff-b439-dd644fdce429",
      "documentation": "Use this method to stop a poll which was sent by the bot. On success, the stopped [Poll](https://core.telegram.org/bots/api/#poll) with the final results is returned.",
      "method": "post",
      "endpoint": "stopPoll",
      "responses": [
        {
          "uuid": "b4d0c5b3-7532-49a2-837d-87183ae8fa23",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allows_multiple_answers\": {{faker 'random.boolean'}},\n    \"close_date\": {{faker 'random.number'}},\n    \"correct_option_id\": {{faker 'random.number'}},\n    \"explanation\": \"\",\n    \"explanation_entities\": [\n      {\n        \"language\": \"\",\n        \"length\": {{faker 'random.number'}},\n        \"offset\": {{faker 'random.number'}},\n        \"type\": \"{{oneOf (array 'mention' 'hashtag' 'cashtag' 'bot_command' 'url' 'email' 'phone_number' 'bold' 'italic' 'underline' 'strikethrough' 'code' 'pre' 'text_link' 'text_mention')}}\",\n        \"url\": \"\",\n        \"user\": {\n          \"can_join_groups\": {{faker 'random.boolean'}},\n          \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n          \"first_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_bot\": {{faker 'random.boolean'}},\n          \"language_code\": \"\",\n          \"last_name\": \"\",\n          \"supports_inline_queries\": {{faker 'random.boolean'}},\n          \"username\": \"\"\n        }\n      }\n    ],\n    \"id\": \"\",\n    \"is_anonymous\": {{faker 'random.boolean'}},\n    \"is_closed\": {{faker 'random.boolean'}},\n    \"open_period\": {{faker 'random.number'}},\n    \"options\": [\n      {\n        \"text\": \"\",\n        \"voter_count\": {{faker 'random.number'}}\n      }\n    ],\n    \"question\": \"\",\n    \"total_voter_count\": {{faker 'random.number'}},\n    \"type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bbbe6c0-8240-443f-bec6-8d1d26aa20ca",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db445291-62cf-4f05-b2eb-fba01c3e0c5b",
      "documentation": "Use this method to unban a previously kicked user in a supergroup or channel. The user will **not** return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be **removed** from the chat. If you don't want this, use the parameter *only\\_if\\_banned*. Returns *True* on success.",
      "method": "post",
      "endpoint": "unbanChatMember",
      "responses": [
        {
          "uuid": "cfaa1096-b4d6-44fa-8780-3b4cef6ebef8",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9180dc21-3801-4529-80c3-eef4651e564d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85171af9-6c12-4f3a-b740-641ace107bf2",
      "documentation": "Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinAllChatMessages",
      "responses": [
        {
          "uuid": "87be4137-1d64-4684-8e1b-6700c4dfe59c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d34e83b4-ee50-4f24-b205-d32b673258cb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72dc5091-226f-4450-8243-cc54e5c33d22",
      "documentation": "Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinChatMessage",
      "responses": [
        {
          "uuid": "29fa417b-a7f1-4260-a290-e4616b522064",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a945d2b0-b790-4160-8999-1b807d7c952d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af0221ea-a4b3-4c2d-b033-4dcba0610566",
      "documentation": "Use this method to upload a .PNG file with a sticker for later use in *createNewStickerSet* and *addStickerToSet* methods (can be used multiple times). Returns the uploaded [File](https://core.telegram.org/bots/api/#file) on success.",
      "method": "post",
      "endpoint": "uploadStickerFile",
      "responses": [
        {
          "uuid": "e7439b2b-ad1d-405c-be5e-69c925942822",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'random.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3245edd6-c729-4e2d-9f91-0082a177eeb0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}