{
  "uuid": "c5beedd9-6e94-462d-bd25-48c96c55c09a",
  "lastMigration": 19,
  "name": "Telegram Bot API",
  "endpointPrefix": "bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e0269ca9-a4e4-4494-9e6a-f746a01c8481",
      "documentation": "Use this method to add a new sticker to a set created by the bot. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Animated stickers can be added to animated sticker sets and only to them. Animated sticker sets can have up to 50 stickers. Static sticker sets can have up to 120 stickers. Returns *True* on success.",
      "method": "post",
      "endpoint": "addStickerToSet",
      "responses": [
        {
          "uuid": "8e1ad0f3-e582-487b-9b0c-06df037d4f1d",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2c71990-a5af-438c-b1e5-97d2f8459f04",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a9b24d8-0448-480c-ac30-579642fd39fd",
      "documentation": "Use this method to send answers to callback queries sent from [inline keyboards](/bots#inline-keyboards-and-on-the-fly-updating). The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, *True* is returned.\n\nAlternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via [@Botfather](https://t.me/botfather) and accept the terms. Otherwise, you may use links like `t.me/your_bot?start=XXXX` that open your bot with a parameter.",
      "method": "post",
      "endpoint": "answerCallbackQuery",
      "responses": [
        {
          "uuid": "89eaa2f7-70a8-4ef1-b60b-e3c32d5dc01c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "445d494d-9f39-499f-834a-3635e14548cf",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30a6d71f-fb92-4b70-acdd-20ff4eb34dee",
      "documentation": "Use this method to send answers to an inline query. On success, *True* is returned.  \nNo more than **50** results per query are allowed.",
      "method": "post",
      "endpoint": "answerInlineQuery",
      "responses": [
        {
          "uuid": "92ae2d4e-4a50-44d6-9d4e-3b1ce0caf073",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d39286c2-9a48-476b-8416-7595293ef539",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f0a4cb5-8f77-4d48-8c11-b6280e8c86fc",
      "documentation": "Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an [Update](https://core.telegram.org/bots/api/#update) with the field *pre\\_checkout\\_query*. Use this method to respond to such pre-checkout queries. On success, True is returned. **Note:** The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.",
      "method": "post",
      "endpoint": "answerPreCheckoutQuery",
      "responses": [
        {
          "uuid": "d34c855f-6c11-4776-aea0-b813486f0236",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fb62ce7-cf2a-4b40-ae1a-694e2bf11611",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5b56155-505b-4107-bb94-7dd2d4faa38c",
      "documentation": "If you sent an invoice requesting a shipping address and the parameter *is\\_flexible* was specified, the Bot API will send an [Update](https://core.telegram.org/bots/api/#update) with a *shipping\\_query* field to the bot. Use this method to reply to shipping queries. On success, True is returned.",
      "method": "post",
      "endpoint": "answerShippingQuery",
      "responses": [
        {
          "uuid": "c91ae860-e97a-44cc-9353-021c57b61b6e",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c46033d4-ae9a-409c-8eed-3eed8aa96b86",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6572ae5-15a1-4de3-9ef9-45c9db21be2b",
      "documentation": "Use this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn't launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "close",
      "responses": [
        {
          "uuid": "2834739d-f9b9-425f-8dbe-f2f78cba57ef",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a250742-6ebd-40df-b5f1-9505483fca77",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9538bff9-5ecd-44c6-9fea-e3a08b4d7894",
      "documentation": "Use this method to copy messages of any kind. The method is analogous to the method [forwardMessages](https://core.telegram.org/bots/api/#forwardmessages), but the copied message doesn't have a link to the original message. Returns the [MessageId](https://core.telegram.org/bots/api/#messageid) of the sent message on success.",
      "method": "post",
      "endpoint": "copyMessage",
      "responses": [
        {
          "uuid": "7a4b44d7-41ae-4b84-815b-734488171204",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"message_id\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bc54498-c9c6-4cfc-a4c1-69299de47326",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c7ad116-e0f0-46c1-b03c-b533e43d9acf",
      "documentation": "Use this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. You **must** use exactly one of the fields *png\\_sticker* or *tgs\\_sticker*. Returns *True* on success.",
      "method": "post",
      "endpoint": "createNewStickerSet",
      "responses": [
        {
          "uuid": "c675432b-acc6-4758-a2e4-ed02b0b6de64",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c83632d9-a193-4f7a-8d7b-44abbcdd2379",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "149ba35c-4385-4f73-93d3-dd38437f7c3f",
      "documentation": "Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatPhoto",
      "responses": [
        {
          "uuid": "9c51be74-85c6-45cb-b95b-821ad1c4cf4c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff4a7680-20d7-46f7-b069-5176129a605e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "259ce8d0-e348-402c-80b5-4f798467c799",
      "documentation": "Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteChatStickerSet",
      "responses": [
        {
          "uuid": "9b7fd1b2-d6f2-43bc-8d49-62c5c35c1a62",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "018e3b10-d6a4-439e-a9f8-0d076e8cc69c",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c70be225-86eb-4dcb-b590-dc40724121aa",
      "documentation": "Use this method to delete a message, including service messages, with the following limitations:  \n\\- A message can only be deleted if it was sent less than 48 hours ago.  \n\\- A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.  \n\\- Bots can delete outgoing messages in private chats, groups, and supergroups.  \n\\- Bots can delete incoming messages in private chats.  \n\\- Bots granted *can\\_post\\_messages* permissions can delete outgoing messages in channels.  \n\\- If the bot is an administrator of a group, it can delete any message there.  \n\\- If the bot has *can\\_delete\\_messages* permission in a supergroup or a channel, it can delete any message there.  \nReturns *True* on success.",
      "method": "post",
      "endpoint": "deleteMessage",
      "responses": [
        {
          "uuid": "0e84aaca-1951-48c0-8b5c-d6b08021ca16",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a3c6025-14a7-43e4-bfc4-1569f32916fd",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25ac15eb-0270-48a4-be84-dc87a4e9781f",
      "documentation": "Use this method to delete a sticker from a set created by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteStickerFromSet",
      "responses": [
        {
          "uuid": "a2d969cf-ed00-4c7d-a47b-c7d924c0d1e4",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ebcc0e-cc11-4492-9f60-6e1227a8b3cb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b610a249-35fb-43f2-83db-461918eee1dc",
      "documentation": "Use this method to remove webhook integration if you decide to switch back to [getUpdates](https://core.telegram.org/bots/api/#getupdates). Returns *True* on success.",
      "method": "post",
      "endpoint": "deleteWebhook",
      "responses": [
        {
          "uuid": "caa44c05-1ba0-4780-aed8-654fd25f48b6",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "305b321d-84e1-44b1-986e-b29ac39c0230",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c91baac-4b72-4df4-b240-f310827f65b4",
      "documentation": "Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageCaption",
      "responses": [
        {
          "uuid": "6a620881-7fdf-4e3f-af92-8ea9ca2cba99",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "546928ec-9467-46af-95af-a965684dc40b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7f3d7e5-2788-4837-adef-70e41a238773",
      "documentation": "Use this method to edit live location messages. A location can be edited until its *live\\_period* expires or editing is explicitly disabled by a call to [stopMessageLiveLocation](https://core.telegram.org/bots/api/#stopmessagelivelocation). On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageLiveLocation",
      "responses": [
        {
          "uuid": "6b13a45f-cae0-47c1-af4f-13e66ae2693e",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ab41fdb-64f9-4dc4-818f-e90f054cfb77",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8dab95cf-ac7e-41fe-b836-258602443314",
      "documentation": "Use this method to edit animation, audio, document, photo, or video messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded. Use a previously uploaded file via its file\\_id or specify a URL. On success, if the edited message was sent by the bot, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageMedia",
      "responses": [
        {
          "uuid": "91b54d43-d945-4e8d-b712-82782286dca5",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5431c3e1-a8be-4d22-9f6b-e772f92514a3",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dde9500-bcbc-4b4a-9ae3-59462c2bb18f",
      "documentation": "Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageReplyMarkup",
      "responses": [
        {
          "uuid": "7b7e6756-bb45-4212-afb9-ad4fbd7f9b30",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8481f7cf-da64-4e89-b6e0-d7af0eb0d7dc",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32600e71-1ba8-434a-8411-fce8df4b8812",
      "documentation": "Use this method to edit text and [game](https://core.telegram.org/bots/api/#games) messages. On success, if the edited message is not an inline message, the edited [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "editMessageText",
      "responses": [
        {
          "uuid": "ad623a73-8f60-4f88-9408-d74996201c21",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "217a497a-1938-4b86-8f4c-b65d17f67c9b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ca9e8eb-985b-45f5-99b6-b200c8ff1f8e",
      "documentation": "Use this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as *String* on success.",
      "method": "post",
      "endpoint": "exportChatInviteLink",
      "responses": [
        {
          "uuid": "191372cf-5769-4132-ba28-28cec8b780e0",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2e25d9d-a16a-4ba8-ab4f-195441c4ed83",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27ba7045-d48c-48cc-a33e-421109a2dcc6",
      "documentation": "Use this method to forward messages of any kind. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "forwardMessage",
      "responses": [
        {
          "uuid": "fd1d4403-5144-4398-86d7-4cf7a74025dd",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c382e771-2392-4b3d-9cd3-c9cf752ce57a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f453d25a-c4ef-409a-a855-15ac60d47cc7",
      "documentation": "Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a [Chat](https://core.telegram.org/bots/api/#chat) object on success.",
      "method": "post",
      "endpoint": "getChat",
      "responses": [
        {
          "uuid": "5e889b7a-5dfc-4bc2-8844-880e2a2f7bea",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c84b81-4898-4e03-b1be-77d8082beb40",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28e2c03e-8366-4586-9804-5183a1e687bd",
      "documentation": "Use this method to get a list of administrators in a chat. On success, returns an Array of [ChatMember](https://core.telegram.org/bots/api/#chatmember) objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.",
      "method": "post",
      "endpoint": "getChatAdministrators",
      "responses": [
        {
          "uuid": "18d23ecf-143a-4578-b0cf-32e24e32a15d",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"can_add_web_page_previews\": {{faker 'random.boolean'}},\n      \"can_be_edited\": {{faker 'random.boolean'}},\n      \"can_change_info\": {{faker 'random.boolean'}},\n      \"can_delete_messages\": {{faker 'random.boolean'}},\n      \"can_edit_messages\": {{faker 'random.boolean'}},\n      \"can_invite_users\": {{faker 'random.boolean'}},\n      \"can_pin_messages\": {{faker 'random.boolean'}},\n      \"can_post_messages\": {{faker 'random.boolean'}},\n      \"can_promote_members\": {{faker 'random.boolean'}},\n      \"can_restrict_members\": {{faker 'random.boolean'}},\n      \"can_send_media_messages\": {{faker 'random.boolean'}},\n      \"can_send_messages\": {{faker 'random.boolean'}},\n      \"can_send_other_messages\": {{faker 'random.boolean'}},\n      \"can_send_polls\": {{faker 'random.boolean'}},\n      \"custom_title\": \"\",\n      \"is_anonymous\": {{faker 'random.boolean'}},\n      \"is_member\": {{faker 'random.boolean'}},\n      \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n      \"until_date\": {{faker 'random.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'random.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_bot\": {{faker 'random.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'random.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3beb4f90-be07-4634-a1fd-39688c391c6e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0869832-2000-4cc2-b5bb-99cc406b6bc1",
      "documentation": "Use this method to get information about a member of a chat. Returns a [ChatMember](https://core.telegram.org/bots/api/#chatmember) object on success.",
      "method": "post",
      "endpoint": "getChatMember",
      "responses": [
        {
          "uuid": "aa2c8fe5-c388-4f90-bdb6-fc9d3dc86a80",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_add_web_page_previews\": {{faker 'random.boolean'}},\n    \"can_be_edited\": {{faker 'random.boolean'}},\n    \"can_change_info\": {{faker 'random.boolean'}},\n    \"can_delete_messages\": {{faker 'random.boolean'}},\n    \"can_edit_messages\": {{faker 'random.boolean'}},\n    \"can_invite_users\": {{faker 'random.boolean'}},\n    \"can_pin_messages\": {{faker 'random.boolean'}},\n    \"can_post_messages\": {{faker 'random.boolean'}},\n    \"can_promote_members\": {{faker 'random.boolean'}},\n    \"can_restrict_members\": {{faker 'random.boolean'}},\n    \"can_send_media_messages\": {{faker 'random.boolean'}},\n    \"can_send_messages\": {{faker 'random.boolean'}},\n    \"can_send_other_messages\": {{faker 'random.boolean'}},\n    \"can_send_polls\": {{faker 'random.boolean'}},\n    \"custom_title\": \"\",\n    \"is_anonymous\": {{faker 'random.boolean'}},\n    \"is_member\": {{faker 'random.boolean'}},\n    \"status\": \"{{oneOf (array 'creator' 'administrator' 'member' 'restricted' 'left' 'kicked')}}\",\n    \"until_date\": {{faker 'random.number'}},\n    \"user\": {\n      \"can_join_groups\": {{faker 'random.boolean'}},\n      \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n      \"first_name\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"is_bot\": {{faker 'random.boolean'}},\n      \"language_code\": \"\",\n      \"last_name\": \"\",\n      \"supports_inline_queries\": {{faker 'random.boolean'}},\n      \"username\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969759be-a6ac-49bb-9cf7-f008770ced49",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f09e32e-2cc8-4788-ae7d-2096eaa71786",
      "documentation": "Use this method to get the number of members in a chat. Returns *Int* on success.",
      "method": "post",
      "endpoint": "getChatMembersCount",
      "responses": [
        {
          "uuid": "aa91ee91-0edc-4908-8f16-1a6028935c11",
          "body": "{\n  \"ok\": true,\n  \"result\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8e6ffe0-bb8f-4e86-b076-a705f58bad28",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8de9f4cd-c497-4e86-a92c-538736866791",
      "documentation": "Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a [File](https://core.telegram.org/bots/api/#file) object is returned. The file can then be downloaded via the link `https://api.telegram.org/file/bot<token>/<file_path>`, where `<file_path>` is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling [getFile](https://core.telegram.org/bots/api/#getfile) again.",
      "method": "post",
      "endpoint": "getFile",
      "responses": [
        {
          "uuid": "7d66d098-5a47-4dc7-b8f1-84399acefcfe",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'random.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b86a46b-2de0-4d3b-96d1-2bcdb927a04f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa3b22d0-317b-4539-b5ce-840d1ee4e881",
      "documentation": "Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. On success, returns an *Array* of [GameHighScore](https://core.telegram.org/bots/api/#gamehighscore) objects.\n\nThis method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.",
      "method": "post",
      "endpoint": "getGameHighScores",
      "responses": [
        {
          "uuid": "1d2a88a2-a884-407d-88a7-3af7f5fd3bfd",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"position\": {{faker 'random.number'}},\n      \"score\": {{faker 'random.number'}},\n      \"user\": {\n        \"can_join_groups\": {{faker 'random.boolean'}},\n        \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n        \"first_name\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"is_bot\": {{faker 'random.boolean'}},\n        \"language_code\": \"\",\n        \"last_name\": \"\",\n        \"supports_inline_queries\": {{faker 'random.boolean'}},\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad18380-31a2-40f0-bae5-db55c238c1af",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d1f2c50-5bb4-4a30-ae64-88a20b63277b",
      "documentation": "A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a [User](https://core.telegram.org/bots/api/#user) object.",
      "method": "post",
      "endpoint": "getMe",
      "responses": [
        {
          "uuid": "f8374ae6-a38f-44ea-add3-4d0d3e74a4d5",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"can_join_groups\": {{faker 'random.boolean'}},\n    \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n    \"first_name\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"is_bot\": {{faker 'random.boolean'}},\n    \"language_code\": \"\",\n    \"last_name\": \"\",\n    \"supports_inline_queries\": {{faker 'random.boolean'}},\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c977d39-d286-4d87-b180-337608cd318a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "871eff62-b51a-4d89-acbd-9b8f59ec46c9",
      "documentation": "Use this method to get the current list of the bot's commands. Requires no parameters. Returns Array of [BotCommand](https://core.telegram.org/bots/api/#botcommand) on success.",
      "method": "post",
      "endpoint": "getMyCommands",
      "responses": [
        {
          "uuid": "3dfdab3a-737a-49f9-9230-bbd8674d3ecf",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    {\n      \"command\": \"\",\n      \"description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d39bbdc-0c5d-4ca5-9b69-c7d46c46a0c6",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c8309a6-0c38-4124-bad1-e28998e49410",
      "documentation": "Use this method to get a sticker set. On success, a [StickerSet](https://core.telegram.org/bots/api/#stickerset) object is returned.",
      "method": "post",
      "endpoint": "getStickerSet",
      "responses": [
        {
          "uuid": "4dc9b845-73c6-4f98-9d42-78e8d3364c84",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"contains_masks\": {{faker 'random.boolean'}},\n    \"is_animated\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"stickers\": [\n      {\n        \"emoji\": \"\",\n        \"file_id\": \"\",\n        \"file_size\": {{faker 'random.number'}},\n        \"file_unique_id\": \"\",\n        \"height\": {{faker 'random.number'}},\n        \"is_animated\": {{faker 'random.boolean'}},\n        \"mask_position\": {\n          \"point\": \"{{oneOf (array 'forehead' 'eyes' 'mouth' 'chin')}}\",\n          \"scale\": {{faker 'random.number'}},\n          \"x_shift\": {{faker 'random.number'}},\n          \"y_shift\": {{faker 'random.number'}}\n        },\n        \"set_name\": \"\",\n        \"thumb\": {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'random.number'}},\n          \"width\": {{faker 'random.number'}}\n        },\n        \"width\": {{faker 'random.number'}}\n      }\n    ],\n    \"thumb\": {\n      \"file_id\": \"\",\n      \"file_size\": {{faker 'random.number'}},\n      \"file_unique_id\": \"\",\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}}\n    },\n    \"title\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99e0c9a7-056e-4851-b03c-a67006d431cb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9564a0b4-6c7d-4315-80c4-95e1534bb8f5",
      "documentation": "Use this method to receive incoming updates using long polling ([wiki](https://en.wikipedia.org/wiki/Push_technology#Long_polling)). An Array of [Update](https://core.telegram.org/bots/api/#update) objects is returned.",
      "method": "post",
      "endpoint": "getUpdates",
      "responses": [
        {
          "uuid": "e6460da4-27b3-43a0-98b3-71052f63fd9f",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0bcafdb-d3a4-463a-96cc-a1a099ad0120",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59e71f84-b11e-400f-a5d4-88a08c20215d",
      "documentation": "Use this method to get a list of profile pictures for a user. Returns a [UserProfilePhotos](https://core.telegram.org/bots/api/#userprofilephotos) object.",
      "method": "post",
      "endpoint": "getUserProfilePhotos",
      "responses": [
        {
          "uuid": "a0cfded8-b9a7-438d-864e-d80b026959b8",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"photos\": [\n      [\n        {\n          \"file_id\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_unique_id\": \"\",\n          \"height\": {{faker 'random.number'}},\n          \"width\": {{faker 'random.number'}}\n        }\n      ]\n    ],\n    \"total_count\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ae1b29-ac57-4872-a4df-0cbc304d1765",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1dcfba1-33d2-4705-bd49-e2e2006e659f",
      "documentation": "Use this method to get current webhook status. Requires no parameters. On success, returns a [WebhookInfo](https://core.telegram.org/bots/api/#webhookinfo) object. If the bot is using [getUpdates](https://core.telegram.org/bots/api/#getupdates), will return an object with the *url* field empty.",
      "method": "post",
      "endpoint": "getWebhookInfo",
      "responses": [
        {
          "uuid": "9b1c8b90-96bc-4631-9d04-412095d375e1",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allowed_updates\": [\n      \"\"\n    ],\n    \"has_custom_certificate\": {{faker 'random.boolean'}},\n    \"ip_address\": \"\",\n    \"last_error_date\": {{faker 'random.number'}},\n    \"last_error_message\": \"\",\n    \"max_connections\": {{faker 'random.number'}},\n    \"pending_update_count\": {{faker 'random.number'}},\n    \"url\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36a56434-2e1c-4fad-9027-ab099ea06a83",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fc4c12b-0b94-4946-9d73-7d44bee544fe",
      "documentation": "Use this method to kick a user from a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless [unbanned](https://core.telegram.org/bots/api/#unbanchatmember) first. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "kickChatMember",
      "responses": [
        {
          "uuid": "d6e40911-d66e-4191-b310-84d6d67fe566",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ef8654d-3c6f-403c-9e6f-d0b1b2a76309",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e89914de-196f-493c-b655-8919a9e13ab1",
      "documentation": "Use this method for your bot to leave a group, supergroup or channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "leaveChat",
      "responses": [
        {
          "uuid": "9217f8d2-d251-46c6-8ddd-43e8d4808d25",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "345c9ad1-0e9c-4b8a-9e2f-7fea3974609d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd920091-e6b9-44d9-ad2f-1e88c5fdc587",
      "documentation": "Use this method to log out from the cloud Bot API server before launching the bot locally. You **must** log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns *True* on success. Requires no parameters.",
      "method": "post",
      "endpoint": "logOut",
      "responses": [
        {
          "uuid": "128fdd30-21fd-4ddb-82df-c7f9b27042dc",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "702ffb70-6c20-44e3-8bab-47a3f6c30498",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b8e7019-71ac-4133-9c90-356e925838c2",
      "documentation": "Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "pinChatMessage",
      "responses": [
        {
          "uuid": "32265af0-04a4-4f16-adcd-4b29b95da882",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3babc44e-a6ff-448b-83fe-ce6d66afa391",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c03ddda-78b8-472f-913e-35147a55816c",
      "documentation": "Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass *False* for all boolean parameters to demote a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "promoteChatMember",
      "responses": [
        {
          "uuid": "22132981-e3d8-4c52-8771-2fd093b06e45",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "978aed9c-5163-4456-8435-cd0d9fd29329",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1615a4c-102f-44b2-b3df-29846d08941f",
      "documentation": "Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass *True* for all permissions to lift restrictions from a user. Returns *True* on success.",
      "method": "post",
      "endpoint": "restrictChatMember",
      "responses": [
        {
          "uuid": "021d9219-7c1b-4630-9a9c-883d2b740ba4",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b261d652-1068-4fcf-b2ac-eb67932916d0",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0193293e-8129-41d0-8b63-a42f8593952b",
      "documentation": "Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendAnimation",
      "responses": [
        {
          "uuid": "89c02b0c-9839-458f-a3c3-907849b1d025",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "261488e4-a930-40e4-ace7-2e1656e72b9e",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8a0d664-4d47-4692-900c-b36d2d3e6ac9",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\n\nFor sending voice messages, use the [sendVoice](https://core.telegram.org/bots/api/#sendvoice) method instead.",
      "method": "post",
      "endpoint": "sendAudio",
      "responses": [
        {
          "uuid": "e17af5cc-884d-41a8-85ec-b07a2bf94b42",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82fde6b8-6bd7-4fc6-87c9-cd001cb22d28",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45bbf2ea-1d04-41fb-bea7-42b6160dae0a",
      "documentation": "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns *True* on success.\n\nExample: The [ImageBot](https://t.me/imagebot) needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use [sendChatAction](https://core.telegram.org/bots/api/#sendchataction) with *action* = *upload\\_photo*. The user will see a “sending photo” status for the bot.\n\nWe only recommend using this method when a response from the bot will take a **noticeable** amount of time to arrive.",
      "method": "post",
      "endpoint": "sendChatAction",
      "responses": [
        {
          "uuid": "826d13a1-6b03-4c2a-93a2-0a815c99f877",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8713d828-0576-4cb6-ac1d-dbd2ee8c8d42",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acca5bc2-8571-403a-81ea-159a8cfc64db",
      "documentation": "Use this method to send phone contacts. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendContact",
      "responses": [
        {
          "uuid": "a3be88fa-c1f8-4d26-ae5b-bee423dbe8c2",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c38b09fc-d4dd-456b-a40f-045660b46876",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e40b8a5e-d273-450b-9fdb-064dd5783273",
      "documentation": "Use this method to send an animated emoji that will display a random value. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendDice",
      "responses": [
        {
          "uuid": "5a6d1aa6-e55c-4b2c-9b6c-31f828fb0ebc",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51b3dc5d-fd39-4d34-bb85-f0acd56c313f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a9263bc-c235-44e7-ab9a-b5bdab742c7a",
      "documentation": "Use this method to send general files. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendDocument",
      "responses": [
        {
          "uuid": "899b4dcf-848e-4ba3-aac9-0076436729ec",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ed9bd77-c6b3-451e-8ee2-e3cced6a0442",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "199a8f6c-e64d-48e6-817d-4204a1d82c56",
      "documentation": "Use this method to send a game. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendGame",
      "responses": [
        {
          "uuid": "3a1ffb56-ee84-4f01-bf90-0a2ee48ad236",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a2bcd7f-cf77-4029-a3c4-2e5ecd93e66f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bac5cbc2-a04d-4874-9e04-b65f09420b33",
      "documentation": "Use this method to send invoices. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendInvoice",
      "responses": [
        {
          "uuid": "807523c2-9253-4ef4-b4e3-f0d7b38bbc60",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e7aac16-1b27-4041-b589-9e2755c3c606",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5091c6ac-a7df-4309-bb9b-78af1f199baf",
      "documentation": "Use this method to send point on the map. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendLocation",
      "responses": [
        {
          "uuid": "5700108a-a641-4424-a15a-5cee24fd2f78",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d08498-68a2-4be0-990b-f73a97653da2",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4b8418b-28fb-4dd1-97d5-75aaa158623b",
      "documentation": "Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of [Messages](https://core.telegram.org/bots/api/#message) that were sent is returned.",
      "method": "post",
      "endpoint": "sendMediaGroup",
      "responses": [
        {
          "uuid": "fc5635c1-9b8a-42d7-8765-0dd7fe396ac5",
          "body": "{\n  \"ok\": true,\n  \"result\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b667820-23eb-4e35-aa10-8ad53b7eb54b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1eacbd8-a50f-4d8a-9552-ab6b1666aee7",
      "documentation": "Use this method to send text messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendMessage",
      "responses": [
        {
          "uuid": "468f2d2b-fd56-43f8-9552-d55bcaea598a",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4addddb7-c595-49b8-a017-13a9dc536a6f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52e79a7f-391b-4e2e-9e1e-7c4572291026",
      "documentation": "Use this method to send photos. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPhoto",
      "responses": [
        {
          "uuid": "e3431de6-dd66-4809-9383-3ca8b92de62b",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "082207c5-1e4f-4bd7-b66d-19869c467280",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e3733ca-c444-4462-9a51-6708d13a647a",
      "documentation": "Use this method to send a native poll. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendPoll",
      "responses": [
        {
          "uuid": "40045157-df51-4ebe-be30-e3888468d46c",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a2495bc-000c-49fb-a4c0-0b63b31cba7f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04538e27-17dc-44af-a83a-34573f96a21b",
      "documentation": "Use this method to send static .WEBP or [animated](https://telegram.org/blog/animated-stickers) .TGS stickers. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendSticker",
      "responses": [
        {
          "uuid": "9e67bb73-7994-44de-93e7-00a21f0c9c08",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7defaf17-d8f4-4ef6-9090-1c80469fdf32",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86e662b0-0fb3-4845-98ba-f73e26bca4fb",
      "documentation": "Use this method to send information about a venue. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVenue",
      "responses": [
        {
          "uuid": "aa0ed624-d617-4173-9476-94168ece8cd0",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e39f5095-9e94-47ba-a416-c43749f8c57a",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8a20b6d-3847-4969-bcfc-908d65ea07dc",
      "documentation": "Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVideo",
      "responses": [
        {
          "uuid": "a73b9861-badd-45a3-98b8-b3a3d02cfcec",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b128b62-1516-4a50-b4d0-fa6cb0f79ee8",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "248e4f83-bae7-4146-92b7-95877c11d5fb",
      "documentation": "As of [v.4.0](https://telegram.org/blog/video-messages-and-telescope), Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned.",
      "method": "post",
      "endpoint": "sendVideoNote",
      "responses": [
        {
          "uuid": "1a62276b-c152-45fc-9af4-914b6792dc66",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e08607-c7d6-4a77-88a7-b6ae65ccfdeb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7440443a-ec9c-4d3d-a596-11b5bad0f55d",
      "documentation": "Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as [Audio](https://core.telegram.org/bots/api/#audio) or [Document](https://core.telegram.org/bots/api/#document)). On success, the sent [Message](https://core.telegram.org/bots/api/#message) is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.",
      "method": "post",
      "endpoint": "sendVoice",
      "responses": [
        {
          "uuid": "3213e428-0d95-43e6-bd95-746330cea60d",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b063243-1cc1-4b65-b674-37e2e9b90bda",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68c770a2-2859-4e89-a031-64090c9c7650",
      "documentation": "Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatAdministratorCustomTitle",
      "responses": [
        {
          "uuid": "0b49566f-67db-45f0-bf69-905abde0da24",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb414eb-5332-4876-94b6-6e57de7bda9b",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67017f5b-0cf2-497b-b86e-a012c4eea20d",
      "documentation": "Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatDescription",
      "responses": [
        {
          "uuid": "7b301ee1-d5ff-4191-b943-da8a0af501e9",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74f3dfe5-6843-43d1-91a3-c9496f3ca18f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11b89a50-ef19-4b98-bcf0-fa234aeaca13",
      "documentation": "Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the *can\\_restrict\\_members* admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPermissions",
      "responses": [
        {
          "uuid": "ad9b63e9-66f9-4283-ab90-dc195bc14f6c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9564a49a-5e09-45d6-9f86-4481f1c35f21",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c6163b0-852c-4c69-b08f-2346b0123756",
      "documentation": "Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatPhoto",
      "responses": [
        {
          "uuid": "037f6a09-4f71-4da0-ba9b-ef6af1f2c5c3",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f00a71be-7f31-43e6-8733-3a05870a9a41",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "407f30ab-5792-4dd7-8a63-e0457120e7a2",
      "documentation": "Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field *can\\_set\\_sticker\\_set* optionally returned in [getChat](https://core.telegram.org/bots/api/#getchat) requests to check if the bot can use this method. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatStickerSet",
      "responses": [
        {
          "uuid": "7dabdbdc-94f7-4b7b-baa4-8a125eab2805",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c131e65-2e4a-4b9a-833e-99595ea01376",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10bb612f-685e-467e-89f7-462943f98a91",
      "documentation": "Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns *True* on success.",
      "method": "post",
      "endpoint": "setChatTitle",
      "responses": [
        {
          "uuid": "0b8bb50d-91c9-4936-bc0a-4e9d7b6f299c",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f60e3d51-4198-4f72-851e-3a1d00726e86",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c45d387-cbc6-4730-a69f-7584d88af64e",
      "documentation": "Use this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited [Message](https://core.telegram.org/bots/api/#message), otherwise returns *True*. Returns an error, if the new score is not greater than the user's current score in the chat and *force* is *False*.",
      "method": "post",
      "endpoint": "setGameScore",
      "responses": [
        {
          "uuid": "fd041b53-a753-4f69-89f7-3dbd3eb6f219",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d6fc839-dbfa-4e81-9c49-b78bba9a004f",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "162e9331-97b2-4c26-b87c-bd7a332b0870",
      "documentation": "Use this method to change the list of the bot's commands. Returns *True* on success.",
      "method": "post",
      "endpoint": "setMyCommands",
      "responses": [
        {
          "uuid": "79dd66d5-52be-4587-82ff-0924357174c2",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61f60124-ebde-483b-b711-e1809271d012",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3b5b510-f438-4692-8929-63d5df5637b2",
      "documentation": "Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns *True* on success.\n\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.",
      "method": "post",
      "endpoint": "setPassportDataErrors",
      "responses": [
        {
          "uuid": "ddc6cf8a-2d89-4825-876b-56d9ca27a3d8",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "723be438-f876-43cc-a18f-ba8f77eb3c07",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c00e0ec1-33f7-4832-b14a-692a035d635b",
      "documentation": "Use this method to move a sticker in a set created by the bot to a specific position. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerPositionInSet",
      "responses": [
        {
          "uuid": "357b088d-28c8-45af-a662-665874eb3b5e",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f0aea1-befb-43d8-83af-88b120f09e28",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08964fb7-a5b4-4bfa-ae74-4fdddbc9b021",
      "documentation": "Use this method to set the thumbnail of a sticker set. Animated thumbnails can be set for animated sticker sets only. Returns *True* on success.",
      "method": "post",
      "endpoint": "setStickerSetThumb",
      "responses": [
        {
          "uuid": "7e5efecd-13b3-495f-bdd5-0735b098f3da",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57bdf23e-5047-4f37-8503-d14ed953aa93",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00527bcb-61d7-45f5-90d1-a5e7e3ff4d83",
      "documentation": "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized [Update](https://core.telegram.org/bots/api/#update). In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns *True* on success.\n\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. `https://www.example.com/<token>`. Since nobody else knows your bot's token, you can be pretty sure it's us.",
      "method": "post",
      "endpoint": "setWebhook",
      "responses": [
        {
          "uuid": "b0bcb715-31e8-4b66-8b05-59e634f185f3",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eac850b6-5b30-47b2-93a0-9ea5bc919e71",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19a3a3cc-4719-4903-8ab8-ddefa4b3d759",
      "documentation": "Use this method to stop updating a live location message before *live\\_period* expires. On success, if the message was sent by the bot, the sent [Message](https://core.telegram.org/bots/api/#message) is returned, otherwise *True* is returned.",
      "method": "post",
      "endpoint": "stopMessageLiveLocation",
      "responses": [
        {
          "uuid": "1f883b95-73af-4a5a-a794-a81c777e15a5",
          "body": "{\n  \"ok\": true,\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f57d5544-6c5f-4802-81ff-755e2b8af19d",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e90448b7-11b5-4de0-a2e1-04502fa0add4",
      "documentation": "Use this method to stop a poll which was sent by the bot. On success, the stopped [Poll](https://core.telegram.org/bots/api/#poll) with the final results is returned.",
      "method": "post",
      "endpoint": "stopPoll",
      "responses": [
        {
          "uuid": "abcf4c7b-0ae4-4aa7-a804-5cc2cffa5267",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"allows_multiple_answers\": {{faker 'random.boolean'}},\n    \"close_date\": {{faker 'random.number'}},\n    \"correct_option_id\": {{faker 'random.number'}},\n    \"explanation\": \"\",\n    \"explanation_entities\": [\n      {\n        \"language\": \"\",\n        \"length\": {{faker 'random.number'}},\n        \"offset\": {{faker 'random.number'}},\n        \"type\": \"{{oneOf (array 'mention' 'hashtag' 'cashtag' 'bot_command' 'url' 'email' 'phone_number' 'bold' 'italic' 'underline' 'strikethrough' 'code' 'pre' 'text_link' 'text_mention')}}\",\n        \"url\": \"\",\n        \"user\": {\n          \"can_join_groups\": {{faker 'random.boolean'}},\n          \"can_read_all_group_messages\": {{faker 'random.boolean'}},\n          \"first_name\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"is_bot\": {{faker 'random.boolean'}},\n          \"language_code\": \"\",\n          \"last_name\": \"\",\n          \"supports_inline_queries\": {{faker 'random.boolean'}},\n          \"username\": \"\"\n        }\n      }\n    ],\n    \"id\": \"\",\n    \"is_anonymous\": {{faker 'random.boolean'}},\n    \"is_closed\": {{faker 'random.boolean'}},\n    \"open_period\": {{faker 'random.number'}},\n    \"options\": [\n      {\n        \"text\": \"\",\n        \"voter_count\": {{faker 'random.number'}}\n      }\n    ],\n    \"question\": \"\",\n    \"total_voter_count\": {{faker 'random.number'}},\n    \"type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a231d873-2439-454a-a37a-670fcbec4e26",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ad77f54-3eea-4e9f-b179-88aeaade046a",
      "documentation": "Use this method to unban a previously kicked user in a supergroup or channel. The user will **not** return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be **removed** from the chat. If you don't want this, use the parameter *only\\_if\\_banned*. Returns *True* on success.",
      "method": "post",
      "endpoint": "unbanChatMember",
      "responses": [
        {
          "uuid": "616dd645-45ca-4911-a0f7-f02329f055a5",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be7c6c75-07cd-4a17-a58d-70518d0e8425",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ae43a90-4698-48a0-9dfe-776af6165877",
      "documentation": "Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinAllChatMessages",
      "responses": [
        {
          "uuid": "35d3a3b0-b75b-44d1-acd8-1504e68d0870",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fca70bef-0817-4067-8d54-9b717bddf5bb",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93ab4198-c4e3-4746-a05a-92fb8700e5ce",
      "documentation": "Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can\\_pin\\_messages' admin right in a supergroup or 'can\\_edit\\_messages' admin right in a channel. Returns *True* on success.",
      "method": "post",
      "endpoint": "unpinChatMessage",
      "responses": [
        {
          "uuid": "dd3a0e25-637f-4dba-a47e-96eb44820ee9",
          "body": "{\n  \"ok\": true,\n  \"result\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe12e4e8-7b1e-4063-b37c-8631dc6d34c2",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeaf854a-571f-4582-bf3f-1e4519d8e85d",
      "documentation": "Use this method to upload a .PNG file with a sticker for later use in *createNewStickerSet* and *addStickerToSet* methods (can be used multiple times). Returns the uploaded [File](https://core.telegram.org/bots/api/#file) on success.",
      "method": "post",
      "endpoint": "uploadStickerFile",
      "responses": [
        {
          "uuid": "589731f0-7e1b-4df1-a611-98e175305e00",
          "body": "{\n  \"ok\": true,\n  \"result\": {\n    \"file_id\": \"\",\n    \"file_path\": \"\",\n    \"file_size\": {{faker 'random.number'}},\n    \"file_unique_id\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd07803e-0103-40bc-b955-a360d469c2a5",
          "body": "{\n  \"description\": \"\",\n  \"error_code\": {{faker 'random.number'}},\n  \"ok\": {{faker 'random.boolean'}},\n  \"parameters\": {\n    \"migrate_to_chat_id\": {{faker 'random.number'}},\n    \"retry_after\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}