{
  "uuid": "43427d9f-5ff0-4c00-8a77-905e4fb87a87",
  "lastMigration": 19,
  "name": "Twilio - Events",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7f66ade4-d934-4ef6-97cd-ab7b6b41e020",
      "documentation": "Fetch a specific schema with its nested versions.",
      "method": "get",
      "endpoint": "v1/Schemas/:Id",
      "responses": [
        {
          "uuid": "1394b60d-a60a-4114-8c86-58fcbb88acc3",
          "body": "{\n  \"id\": \"\",\n  \"latest_version\": {{faker 'random.number'}},\n  \"latest_version_date_created\": \"{{faker 'date.recent' 365}}\",\n  \"links\": {},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e63e299a-6a25-4fdf-b59b-f764bcca2b07",
      "documentation": "Retrieve a paginated list of versions of the schema.",
      "method": "get",
      "endpoint": "v1/Schemas/:Id/Versions",
      "responses": [
        {
          "uuid": "811f1d22-b46d-4f48-99b6-5f0267b653a5",
          "body": "{\n  \"meta\": {\n    \"first_page_url\": \"\",\n    \"key\": \"\",\n    \"next_page_url\": \"\",\n    \"page\": {{faker 'random.number'}},\n    \"page_size\": {{faker 'random.number'}},\n    \"previous_page_url\": \"\",\n    \"url\": \"\"\n  },\n  \"schema_versions\": [\n    {\n      \"date_created\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"\",\n      \"raw\": \"\",\n      \"schema_version\": {{faker 'random.number'}},\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbb0ff55-a38d-4ec7-af29-f673db4238b7",
      "documentation": "Fetch a specific schema and version.",
      "method": "get",
      "endpoint": "v1/Schemas/:Id/Versions/:SchemaVersion",
      "responses": [
        {
          "uuid": "b6212730-7fac-4bbe-a215-5534373e84c7",
          "body": "{\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"raw\": \"\",\n  \"schema_version\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93dcd442-8162-4eab-a90a-dc61119022dc",
      "documentation": "Retrieve a paginated list of Sinks belonging to the account used to make the request.",
      "method": "get",
      "endpoint": "v1/Sinks",
      "responses": [
        {
          "uuid": "32034c45-043b-4089-bf98-4eea1d68a3e0",
          "body": "{\n  \"meta\": {\n    \"first_page_url\": \"\",\n    \"key\": \"\",\n    \"next_page_url\": \"\",\n    \"page\": {{faker 'random.number'}},\n    \"page_size\": {{faker 'random.number'}},\n    \"previous_page_url\": \"\",\n    \"url\": \"\"\n  },\n  \"sinks\": [\n    {\n      \"date_created\": \"{{faker 'date.recent' 365}}\",\n      \"date_updated\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"links\": {},\n      \"sid\": \"\",\n      \"sink_configuration\": {},\n      \"sink_type\": \"{{oneOf (array 'kinesis' 'webhook' 'segment')}}\",\n      \"status\": \"{{oneOf (array 'initialized' 'validating' 'active' 'failed')}}\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9dbe531-7f89-4ae4-a7f5-ca5b06933714",
      "documentation": "Create a new Sink",
      "method": "post",
      "endpoint": "v1/Sinks",
      "responses": [
        {
          "uuid": "b0af34fc-d0a1-46b8-aa4e-2e0a5ec26c30",
          "body": "{\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_configuration\": {},\n  \"sink_type\": \"{{oneOf (array 'kinesis' 'webhook' 'segment')}}\",\n  \"status\": \"{{oneOf (array 'initialized' 'validating' 'active' 'failed')}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "193c3f80-70fc-4362-8b0a-fd83f1fb1576",
      "documentation": "Delete a specific Sink.",
      "method": "delete",
      "endpoint": "v1/Sinks/:Sid",
      "responses": [
        {
          "uuid": "288e4384-d1a1-4f66-86a9-978f2c8dd58c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The resource was deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1aec9e9a-a3a5-430b-97ea-150bf22349b4",
      "documentation": "Fetch a specific Sink.",
      "method": "get",
      "endpoint": "v1/Sinks/:Sid",
      "responses": [
        {
          "uuid": "5373fac9-6478-4fc8-bf6e-7d4931a50180",
          "body": "{\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_configuration\": {},\n  \"sink_type\": \"{{oneOf (array 'kinesis' 'webhook' 'segment')}}\",\n  \"status\": \"{{oneOf (array 'initialized' 'validating' 'active' 'failed')}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fabd0d2-3e51-4bb3-a45b-32780c037fa4",
      "documentation": "Update a specific Sink",
      "method": "post",
      "endpoint": "v1/Sinks/:Sid",
      "responses": [
        {
          "uuid": "e4f9580f-6485-465c-a274-4f879062c4fc",
          "body": "{\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_configuration\": {},\n  \"sink_type\": \"{{oneOf (array 'kinesis' 'webhook' 'segment')}}\",\n  \"status\": \"{{oneOf (array 'initialized' 'validating' 'active' 'failed')}}\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae589acf-32f6-4660-a5ee-6c85e6102b03",
      "documentation": "Create a new Sink Test Event for the given Sink.",
      "method": "post",
      "endpoint": "v1/Sinks/:Sid/Test",
      "responses": [
        {
          "uuid": "23fbbc27-1135-443c-a91c-21a6e464b0b9",
          "body": "{\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7c5a816-30ae-473c-8f3a-919fbfec8fec",
      "documentation": "Validate that a test event for a Sink was received.",
      "method": "post",
      "endpoint": "v1/Sinks/:Sid/Validate",
      "responses": [
        {
          "uuid": "3f73f52a-2e8a-4793-9368-98c07c64e58d",
          "body": "{\n  \"result\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "329ea00c-2239-4fde-8db7-43409eb00d7c",
      "documentation": "Retrieve a paginated list of Subscriptions belonging to the account used to make the request.",
      "method": "get",
      "endpoint": "v1/Subscriptions",
      "responses": [
        {
          "uuid": "95b74a25-0d10-40b3-a57b-c94729e65feb",
          "body": "{\n  \"meta\": {\n    \"first_page_url\": \"\",\n    \"key\": \"\",\n    \"next_page_url\": \"\",\n    \"page\": {{faker 'random.number'}},\n    \"page_size\": {{faker 'random.number'}},\n    \"previous_page_url\": \"\",\n    \"url\": \"\"\n  },\n  \"subscriptions\": [\n    {\n      \"account_sid\": \"\",\n      \"date_created\": \"{{faker 'date.recent' 365}}\",\n      \"date_updated\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"links\": {},\n      \"sid\": \"\",\n      \"sink_sid\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aaa557f4-c0ba-4492-aa98-637c6562180a",
      "documentation": "Create a new Subscription.",
      "method": "post",
      "endpoint": "v1/Subscriptions",
      "responses": [
        {
          "uuid": "7ea56c08-7f76-426f-990b-6df1276f990f",
          "body": "{\n  \"account_sid\": \"\",\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_sid\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34558c25-d64f-48db-9eff-41e93d89ee06",
      "documentation": "Delete a specific Subscription.",
      "method": "delete",
      "endpoint": "v1/Subscriptions/:Sid",
      "responses": [
        {
          "uuid": "62fb50f5-9774-41db-8da9-bf732608da73",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The resource was deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "edfe5a34-d71b-4edd-a8ba-aaaec5e0bb1c",
      "documentation": "Fetch a specific Subscription.",
      "method": "get",
      "endpoint": "v1/Subscriptions/:Sid",
      "responses": [
        {
          "uuid": "ffb85d58-653e-481e-8c54-05b39b12e237",
          "body": "{\n  \"account_sid\": \"\",\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_sid\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09e059fa-48e9-429c-9932-c185eb27a0d0",
      "documentation": "Update a Subscription.",
      "method": "post",
      "endpoint": "v1/Subscriptions/:Sid",
      "responses": [
        {
          "uuid": "d25017c6-9f67-4b0d-8979-04e296dd318b",
          "body": "{\n  \"account_sid\": \"\",\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"sid\": \"\",\n  \"sink_sid\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e36cde06-a554-4b73-86b8-e79621b55db6",
      "documentation": "Retrieve a list of all Subscribed Event types for a Subscription.",
      "method": "get",
      "endpoint": "v1/Subscriptions/:SubscriptionSid/SubscribedEvents",
      "responses": [
        {
          "uuid": "ca684c18-4301-476b-9c75-525a3edfa8dc",
          "body": "{\n  \"meta\": {\n    \"first_page_url\": \"\",\n    \"key\": \"\",\n    \"next_page_url\": \"\",\n    \"page\": {{faker 'random.number'}},\n    \"page_size\": {{faker 'random.number'}},\n    \"previous_page_url\": \"\",\n    \"url\": \"\"\n  },\n  \"types\": [\n    {\n      \"account_sid\": \"\",\n      \"schema_version\": {{faker 'random.number'}},\n      \"subscription_sid\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8c3a201-ae9d-408a-ad89-83a80aedb410",
      "documentation": "Create a new Subscribed Event type for the subscription",
      "method": "post",
      "endpoint": "v1/Subscriptions/:SubscriptionSid/SubscribedEvents",
      "responses": [
        {
          "uuid": "6247e285-262e-400e-a1d1-f3b803d7a9f6",
          "body": "{\n  \"account_sid\": \"\",\n  \"schema_version\": {{faker 'random.number'}},\n  \"subscription_sid\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28bf9994-78c4-4061-b756-b64dd196835e",
      "documentation": "Remove an event type from a subscription.",
      "method": "delete",
      "endpoint": "v1/Subscriptions/:SubscriptionSid/SubscribedEvents/:Type",
      "responses": [
        {
          "uuid": "aee4c6d4-87ee-490e-82df-554cc3a0462f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The resource was deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14c85d39-4551-4cb7-acb4-06b1e954faa7",
      "documentation": "Read an Event for a Subscription.",
      "method": "get",
      "endpoint": "v1/Subscriptions/:SubscriptionSid/SubscribedEvents/:Type",
      "responses": [
        {
          "uuid": "7e6d9af2-c581-4d6d-9e06-984de41bf415",
          "body": "{\n  \"account_sid\": \"\",\n  \"schema_version\": {{faker 'random.number'}},\n  \"subscription_sid\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b5de7f0-f605-4b93-b3d8-5f4adc41e187",
      "documentation": "Update an Event for a Subscription.",
      "method": "post",
      "endpoint": "v1/Subscriptions/:SubscriptionSid/SubscribedEvents/:Type",
      "responses": [
        {
          "uuid": "9aaf48c0-4f15-45ef-92c6-2244018838aa",
          "body": "{\n  \"account_sid\": \"\",\n  \"schema_version\": {{faker 'random.number'}},\n  \"subscription_sid\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79563efd-0525-4812-9e27-7bdda91b4df7",
      "documentation": "Retrieve a paginated list of all the available Event Types.",
      "method": "get",
      "endpoint": "v1/Types",
      "responses": [
        {
          "uuid": "c3d437f8-a335-4c76-851e-e4234ddc5640",
          "body": "{\n  \"meta\": {\n    \"first_page_url\": \"\",\n    \"key\": \"\",\n    \"next_page_url\": \"\",\n    \"page\": {{faker 'random.number'}},\n    \"page_size\": {{faker 'random.number'}},\n    \"previous_page_url\": \"\",\n    \"url\": \"\"\n  },\n  \"types\": [\n    {\n      \"date_created\": \"{{faker 'date.recent' 365}}\",\n      \"date_updated\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"links\": {},\n      \"schema_id\": \"\",\n      \"type\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b503684e-8925-48f9-8372-676fa8874004",
      "documentation": "Fetch a specific Event Type.",
      "method": "get",
      "endpoint": "v1/Types/:Type",
      "responses": [
        {
          "uuid": "f0ffa064-e378-4e17-b012-112d8e63c649",
          "body": "{\n  \"date_created\": \"{{faker 'date.recent' 365}}\",\n  \"date_updated\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"links\": {},\n  \"schema_id\": \"\",\n  \"type\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}