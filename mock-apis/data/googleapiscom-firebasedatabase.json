{
  "uuid": "c1e01281-9ce2-4400-bb51-a8ef015762e8",
  "lastMigration": 19,
  "name": "Firebase Realtime Database Management API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6c71c24a-713f-41c0-b306-11e3c9a0b5cf",
      "documentation": "Marks a DatabaseInstance to be deleted. The DatabaseInstance will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state.",
      "method": "delete",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "13ebb8b7-bbe9-4de0-9ba1-ac8df103441a",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f256adbc-c257-4f99-9717-148499e225e9",
      "documentation": "Gets the DatabaseInstance identified by the specified resource name.",
      "method": "get",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "f57122c4-ce06-4c6b-a7b8-b8150a65650a",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb53e253-9ad0-458d-8bdf-c2547b050bd9",
      "documentation": "Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console.",
      "method": "post",
      "endpoint": "v1beta/:name:disable",
      "responses": [
        {
          "uuid": "41e7d585-8f9c-4845-ab0d-c2d194d53ce4",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07d2a159-0bfe-4dce-9b7b-ea7712b4bafc",
      "documentation": "Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE.",
      "method": "post",
      "endpoint": "v1beta/:name:reenable",
      "responses": [
        {
          "uuid": "4d73c3cd-9e9e-4e27-82c7-84475b5973cf",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6548b1a5-37b3-49a2-b257-87c5da5cbfe0",
      "documentation": "Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads.",
      "method": "get",
      "endpoint": "v1beta/:parent/instances",
      "responses": [
        {
          "uuid": "0c8d7267-f513-48f2-bf1e-4584bc8fbef7",
          "body": "{\n  \"instances\": [\n    {\n      \"databaseUrl\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n      \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d16ee505-9299-4b2b-9ac2-6ed328a4f579",
      "documentation": "Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems.",
      "method": "post",
      "endpoint": "v1beta/:parent/instances",
      "responses": [
        {
          "uuid": "82b488f7-8568-4230-baa2-579dcaf8c5dc",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}