{
  "uuid": "2445fc5e-6ae3-41f1-aa5b-5d6df300adf1",
  "lastMigration": 19,
  "name": "Firebase Realtime Database Management API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "28b5595a-2d37-4037-aad0-9b4d76a06973",
      "documentation": "Marks a DatabaseInstance to be deleted. The DatabaseInstance will be purged within 30 days. The default database cannot be deleted. IDs for deleted database instances may never be recovered or re-used. The Database may only be deleted if it is already in a DISABLED state.",
      "method": "delete",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "b5ff01d5-b506-4abd-8bbd-3de40fb827f9",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34ce4bfd-fd36-4024-9a7c-4f3d702abbe2",
      "documentation": "Gets the DatabaseInstance identified by the specified resource name.",
      "method": "get",
      "endpoint": "v1beta/:name",
      "responses": [
        {
          "uuid": "819fcc10-eeec-42f7-80fc-c14c6ede2db9",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1b138fc-4a79-4ea8-becb-40884ef075a1",
      "documentation": "Disables a DatabaseInstance. The database can be re-enabled later using ReenableDatabaseInstance. When a database is disabled, all reads and writes are denied, including view access in the Firebase console.",
      "method": "post",
      "endpoint": "v1beta/:name:disable",
      "responses": [
        {
          "uuid": "41873515-445f-4088-8fe4-8b15c2cce377",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c916da4-3b9a-444d-b7d6-459a90fa0846",
      "documentation": "Enables a DatabaseInstance. The database must have been disabled previously using DisableDatabaseInstance. The state of a successfully reenabled DatabaseInstance is ACTIVE.",
      "method": "post",
      "endpoint": "v1beta/:name:reenable",
      "responses": [
        {
          "uuid": "c80fc0b9-90d7-4ffd-8db7-6f2eb1592981",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73886c93-6601-4d56-9db5-e32d2ea8c784",
      "documentation": "Restores a DatabaseInstance that was previously marked to be deleted. This may only be used on a DatabaseInstance in the DELETED state. Purged DatabaseInstance's may not be recovered.",
      "method": "post",
      "endpoint": "v1beta/:name:undelete",
      "responses": [
        {
          "uuid": "e9406b39-bec9-4f56-bae4-bebf732edd8b",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb480ec8-3252-4926-aa05-bcc6e164bb78",
      "documentation": "Lists each DatabaseInstance associated with the specified parent project. The list items are returned in no particular order, but will be a consistent view of the database instances when additional requests are made with a `pageToken`. The resulting list contains instances in any STATE. The list results may be stale by a few seconds. Use GetDatabaseInstance for consistent reads.",
      "method": "get",
      "endpoint": "v1beta/:parent/instances",
      "responses": [
        {
          "uuid": "ee4e749b-13e0-4e0f-a5df-aa4d2ba9bd27",
          "body": "{\n  \"instances\": [\n    {\n      \"databaseUrl\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n      \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "939f29b8-686b-4c0c-ba1d-4aed7549f3c9",
      "documentation": "Requests that a new DatabaseInstance be created. The state of a successfully created DatabaseInstance is ACTIVE. Only available for projects on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo. Note that it might take a few minutes for billing enablement state to propagate to Firebase systems.",
      "method": "post",
      "endpoint": "v1beta/:parent/instances",
      "responses": [
        {
          "uuid": "ba9788cd-580f-4319-9c29-6d3a8a7bec11",
          "body": "{\n  \"databaseUrl\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"state\": \"{{oneOf (array 'LIFECYCLE_STATE_UNSPECIFIED' 'ACTIVE' 'DISABLED' 'DELETED')}}\",\n  \"type\": \"{{oneOf (array 'DATABASE_INSTANCE_TYPE_UNSPECIFIED' 'DEFAULT_DATABASE' 'USER_DATABASE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}