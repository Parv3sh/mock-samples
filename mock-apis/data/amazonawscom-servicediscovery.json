{
  "uuid": "756d655a-8722-4d7e-80cf-40c406b945c4",
  "lastMigration": 19,
  "name": "AWS Cloud Map",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fd71c56e-fe8c-4c44-bfaa-fc9441270271",
      "documentation": "<p>Creates an HTTP namespace. Service instances registered using an HTTP namespace can be discovered using a <code>DiscoverInstances</code> request but can't be discovered using DNS.</p> <p>For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreateHttpNamespace",
      "responses": [
        {
          "uuid": "55bbc238-c254-4c24-bd08-551ddd4ac7d5",
          "body": "{\n  \"OperationId\": \"httpvoqozuhfet5kzxoxg-a-response-example\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4da39f5b-8411-42ef-b7fa-67a4ef181f7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "118adc6c-49a0-4dc3-a6bb-28752c611c28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb903f36-54b5-431f-b3ed-a16631c743d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6eefa7f-d856-4568-a299-b71cb189578e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3d1c105-29d3-42ee-8104-1da34ccc04dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d08ecd5-8b17-4c3c-8095-a54c2c97d251",
      "documentation": "Creates a private namespace based on DNS, which is visible only inside a specified Amazon VPC. The namespace defines your service naming scheme. For example, if you name your namespace <code>example.com</code> and name your service <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>. Service instances that are registered using a private DNS namespace can be discovered using either a <code>DiscoverInstances</code> request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreatePrivateDnsNamespace",
      "responses": [
        {
          "uuid": "3f9df7ac-b72d-4654-b797-54d41eb7067d",
          "body": "{\n  \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23da5e14-9608-4964-aeaf-cebaa5c4b953",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "984bf764-1b93-4d1f-a92f-31b6d1543c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eec502de-68be-498a-8567-1b34338570b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34ec711-8dc3-4f35-b943-6c02ecc97223",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2175b0c8-affd-455c-895e-ce91ef0a8118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e1583df-ef2e-4b3e-91fb-c51472bcbb87",
      "documentation": "Creates a public namespace based on DNS, which is visible on the internet. The namespace defines your service naming scheme. For example, if you name your namespace <code>example.com</code> and name your service <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>. You can discover instances that were registered with a public DNS namespace by using either a <code>DiscoverInstances</code> request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreatePublicDnsNamespace",
      "responses": [
        {
          "uuid": "c875ff35-6606-4c9c-adcc-544762b7bd2d",
          "body": "{\n  \"OperationId\": \"dns2voqozuhfet5kzxoxg-a-response-example\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61b5b59d-dd09-45d0-a03f-61af85acf171",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "654d0847-2a02-479f-9023-8d2af5f4fcc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c40c7b2-7b85-4f8c-b9ad-562c6a626173",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4696a48e-f9df-4311-aebf-589f9a745817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f82742a8-6108-4d6a-9d1d-4c42f5aa8bad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "173b00be-8fa7-4836-96b0-06b865c3f2f0",
      "documentation": "<p>Creates a service. This action defines the configuration for the following entities:</p> <ul> <li> <p>For public and private DNS namespaces, one of the following combinations of DNS records in Amazon Route 53:</p> <ul> <li> <p> <code>A</code> </p> </li> <li> <p> <code>AAAA</code> </p> </li> <li> <p> <code>A</code> and <code>AAAA</code> </p> </li> <li> <p> <code>SRV</code> </p> </li> <li> <p> <code>CNAME</code> </p> </li> </ul> </li> <li> <p>Optionally, a health check</p> </li> </ul> <p>After you create the service, you can submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request, and Cloud Map uses the values in the configuration to create the specified entities.</p> <p>For the current quota on the number of instances that you can register using the same namespace and using the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreateService",
      "responses": [
        {
          "uuid": "6886457a-639f-444c-a1b4-9b7a772e6533",
          "body": "{\n  \"Service\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita\",\n    \"CreateDate\": 1587081768.334,\n    \"CreatorRequestId\": \"567c1193-6b00-4308-bd57-ad38a8822d25\",\n    \"DnsConfig\": {\n      \"DnsRecords\": [\n        {\n          \"TTL\": 60,\n          \"Type\": \"A\"\n        }\n      ],\n      \"NamespaceId\": \"ns-ylexjili4cdxy3xm\",\n      \"RoutingPolicy\": \"MULTIVALUE\"\n    },\n    \"Id\": \"srv-p5zdwlg5uvvzjita\",\n    \"Name\": \"myservice\",\n    \"NamespaceId\": \"ns-ylexjili4cdxy3xm\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6387aa86-d8d5-4c1d-82b7-3a79f9d5ff81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be36d8d2-5d2e-4eb2-9192-3e91084d2bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a652cddb-3680-489d-ba2c-a120a42208aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3fcac8a-63a4-4cf5-bdc8-ec69cd50fe1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80a718e2-bcec-42e6-8112-a62a5325553f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe15bb00-cf69-4a6a-953b-76468ba6ef7c",
      "documentation": "Deletes a namespace from the current account. If the namespace still contains one or more services, the request fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeleteNamespace",
      "responses": [
        {
          "uuid": "57fa5e4d-2d6b-4dd5-b5dd-d9e9932f2af1",
          "body": "{\n  \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k98y6drk\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "321e3f8b-34b0-4511-98ae-0a7d1e78ec17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c581d70-c056-4140-bae0-138083193bd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f71de05-9efc-41fa-badd-3b8f760ae84a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b40f6d90-2793-4fff-8574-49c996ef2116",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "540b3c4b-a500-4c5d-b6ce-8e091e7c2054",
      "documentation": "Deletes a specified service. If the service still contains one or more registered instances, the request fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeleteService",
      "responses": [
        {
          "uuid": "d72decf6-ab8c-462c-87ab-1d3dcdf8f674",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11289db4-b6b4-4490-9466-73ab25f70962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a368b66a-4719-4bcf-bc43-c2ae4df833ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e999bb70-3b33-40e0-bd33-69e746d7a916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9fd21f7-6e57-40c1-b0b3-51ebbd9886c1",
      "documentation": "Deletes the Amazon Route 53 DNS records and health check, if any, that Cloud Map created for the specified instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeregisterInstance",
      "responses": [
        {
          "uuid": "3b920910-fb22-4815-ad6d-6167f85a7261",
          "body": "{\n  \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k98rnaiq\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13de6dce-6390-4479-8268-e76386972868",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6059d645-c3fa-4423-910c-749767d79fe1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a726bb2f-8ea2-4c00-b123-51192329566f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3202694-c2d9-410b-9e19-3b93251939f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0552f795-4625-4fe1-b82e-fdfbf9ecd516",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50c333ac-008f-4bdd-ad76-a0eff0bf544b",
      "documentation": "Discovers registered instances for a specified namespace and service. You can use <code>DiscoverInstances</code> to discover instances for any type of namespace. For public and private DNS namespaces, you can also use DNS queries to discover instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DiscoverInstances",
      "responses": [
        {
          "uuid": "1844f43f-41f6-4e7e-843c-1b817abd3214",
          "body": "{\n  \"Instances\": [\n    {\n      \"Attributes\": {\n        \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n        \"AWS_INSTANCE_PORT\": \"808\"\n      },\n      \"HealthStatus\": \"UNKNOWN\",\n      \"InstanceId\": \"myservice-53\",\n      \"NamespaceName\": \"example.com\",\n      \"ServiceName\": \"myservice\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b290ae-47e2-4139-9a20-3a366577ac91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef5ab2bc-0671-4001-9a4f-1b9aa9e1cbf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45cd1b31-bc7f-4981-99eb-12387257f19b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c820e0e-5b49-45e7-8869-f2147506d2ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RequestLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c33d8fdd-f011-4b76-9653-2ec2fe944f15",
      "documentation": "Gets information about a specified instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetInstance",
      "responses": [
        {
          "uuid": "5babd25c-0a9c-4191-8ac4-de814dfc69fb",
          "body": "{\n  \"Instance\": {\n    \"Attributes\": {\n      \"AWS_INSTANCE_IPV4\": \"192.0.2.44\",\n      \"AWS_INSTANCE_PORT\": \"80\",\n      \"color\": \"green\",\n      \"region\": \"us-west-2\",\n      \"stage\": \"beta\"\n    },\n    \"Id\": \"i-abcd1234\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05e42683-635e-47f7-b7e0-21fc750c3f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce410ada-fbbe-49fa-bfc9-26e1193ae658",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89083142-43c3-40d2-80d7-a47514a2644d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d938945-4302-4f6e-8d98-978d26be94ff",
      "documentation": "<p>Gets the current health status (<code>Healthy</code>, <code>Unhealthy</code>, or <code>Unknown</code>) of one or more instances that are associated with a specified service.</p> <note> <p>There's a brief delay between when you register an instance and when the health status for the instance is available. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetInstancesHealthStatus",
      "responses": [
        {
          "uuid": "873d4fe5-e000-4d54-82b4-1eea8125b79e",
          "body": "{\n  \"Status\": {\n    \"i-abcd1234\": \"HEALTHY\",\n    \"i-abcd1235\": \"UNHEALTHY\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7def4913-c888-468e-b000-34146c43863a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daaf403b-12c4-4685-b598-4b47fe32ebe3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bedfe645-3095-4c06-acaa-df3b743c7793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac7f0d8c-d362-4020-91a4-992de0fa4e46",
      "documentation": "Gets information about a namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetNamespace",
      "responses": [
        {
          "uuid": "2eecdf5f-f2aa-442c-b0db-0da393fa11e5",
          "body": "{\n  \"Namespace\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2: 123456789120:namespace/ns-e1tpmexample0001\",\n    \"CreateDate\": \"20181118T211712Z\",\n    \"CreatorRequestId\": \"example-creator-request-id-0001\",\n    \"Description\": \"Example.com AWS Cloud Map HTTP Namespace\",\n    \"Id\": \"ns-e1tpmexample0001\",\n    \"Name\": \"example-http.com\",\n    \"Properties\": {\n      \"DnsProperties\": {},\n      \"HttpProperties\": {\n        \"HttpName\": \"example-http.com\"\n      }\n    },\n    \"Type\": \"HTTP\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c625ee19-6db5-4ae5-8138-63b01ecfc097",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f19cb461-f731-4460-8679-dc5f4a681695",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "336cb846-2642-4323-9a06-d4936a321f65",
      "documentation": "<p>Gets information about any operation that returns an operation ID in the response, such as a <code>CreateService</code> request.</p> <note> <p>To get a list of operations that match specified criteria, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html\">ListOperations</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetOperation",
      "responses": [
        {
          "uuid": "b660bd07-a4b9-4ea4-bc50-9956472ad405",
          "body": "{\n  \"Operation\": {\n    \"CreateDate\": 1587055860.121,\n    \"Id\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\",\n    \"Status\": \"SUCCESS\",\n    \"Targets\": {\n      \"NAMESPACE\": \"ns-ylexjili4cdxy3xm\"\n    },\n    \"Type\": \"CREATE_NAMESPACE\",\n    \"UpdateDate\": 1587055900.469\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6772996b-15f6-4d08-b1a7-820aa511c563",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed651b5-9a84-4e39-92f8-32a416773772",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40325e82-1468-4273-9fbb-cec75b8a606a",
      "documentation": "Gets the settings for a specified service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetService",
      "responses": [
        {
          "uuid": "f8a14f99-c89d-4667-adcb-4ef8605b611d",
          "body": "{\n  \"Service\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789120:service/srv-e4anhexample0004\",\n    \"CreateDate\": \"20181118T211707Z\",\n    \"CreatorRequestId\": \"example-creator-request-id-0004\",\n    \"Description\": \"Example.com AWS Cloud Map HTTP Service\",\n    \"HealthCheckConfig\": {\n      \"FailureThreshold\": 3,\n      \"ResourcePath\": \"/\",\n      \"Type\": \"HTTPS\"\n    },\n    \"Id\": \"srv-e4anhexample0004\",\n    \"Name\": \"example-http-service\",\n    \"NamespaceId\": \"ns-e4anhexample0004\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82b5086e-24c2-4824-a8f1-9f6dedadf70c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4f014e8-7e86-483c-9e1e-ee811d41dbfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44cc7d32-c6f4-4764-bf39-80516ec11c22",
      "documentation": "Lists summary information about the instances that you registered by using a specified service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListInstances",
      "responses": [
        {
          "uuid": "029826a6-5451-40eb-b2b4-f48e96b6bd80",
          "body": "{\n  \"Instances\": [\n    {\n      \"Attributes\": {\n        \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n        \"AWS_INSTANCE_PORT\": \"808\"\n      },\n      \"Id\": \"i-06bdabbae60f65a4e\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1a34e58-29d6-46c5-a424-4a4204a0b742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a3880fd-af1a-484c-9632-6146243985b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "955cc2d8-b1e5-473b-9e5d-2ccc17de5efb",
      "documentation": "Lists summary information about the namespaces that were created by the current account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListNamespaces",
      "responses": [
        {
          "uuid": "a111ecef-be2d-4f8f-a228-2d6798bb9ee9",
          "body": "{\n  \"Namespaces\": [\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-a3ccy2e7e3a7rile\",\n      \"CreateDate\": 1585354387.357,\n      \"Id\": \"ns-a3ccy2e7e3a7rile\",\n      \"Name\": \"local\",\n      \"Properties\": {\n        \"DnsProperties\": {\n          \"HostedZoneId\": \"Z06752353VBUDTC32S84S\"\n        },\n        \"HttpProperties\": {\n          \"HttpName\": \"local\"\n        }\n      },\n      \"Type\": \"DNS_PRIVATE\"\n    },\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-pocfyjtrsmwtvcxx\",\n      \"CreateDate\": 1586468974.698,\n      \"Description\": \"My second namespace\",\n      \"Id\": \"ns-pocfyjtrsmwtvcxx\",\n      \"Name\": \"My-second-namespace\",\n      \"Properties\": {\n        \"DnsProperties\": {},\n        \"HttpProperties\": {\n          \"HttpName\": \"My-second-namespace\"\n        }\n      },\n      \"Type\": \"HTTP\"\n    },\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-ylexjili4cdxy3xm\",\n      \"CreateDate\": 1587055896.798,\n      \"Id\": \"ns-ylexjili4cdxy3xm\",\n      \"Name\": \"example.com\",\n      \"Properties\": {\n        \"DnsProperties\": {\n          \"HostedZoneId\": \"Z09983722P0QME1B3KC8I\"\n        },\n        \"HttpProperties\": {\n          \"HttpName\": \"example.com\"\n        }\n      },\n      \"Type\": \"DNS_PRIVATE\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee3dbe44-5081-43ca-b02a-cee871cafafd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be4fd09e-0c48-47ce-8874-73b1774da4e2",
      "documentation": "Lists operations that match the criteria that you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListOperations",
      "responses": [
        {
          "uuid": "d0786be8-76f6-4d00-9b8a-b4ec8b71b4da",
          "body": "{\n  \"Operations\": [\n    {\n      \"Id\": \"76yy8ovhpdz0plmjzbsnqgnrqvpv2qdt-kexample\",\n      \"Status\": \"SUCCESS\"\n    },\n    {\n      \"Id\": \"prysnyzpji3u2ciy45nke83x2zanl7yk-dexample\",\n      \"Status\": \"SUCCESS\"\n    },\n    {\n      \"Id\": \"ko4ekftir7kzlbechsh7xvcdgcpk66gh-7example\",\n      \"Status\": \"PENDING\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29f0f118-d16b-4395-983f-027310f85a0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8184ec4d-642e-447c-a652-90cdae34d86c",
      "documentation": "Lists summary information for all the services that are associated with one or more specified namespaces.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListServices",
      "responses": [
        {
          "uuid": "e65eae31-a08d-4269-b2c3-b61a5bd4fda6",
          "body": "{\n  \"Services\": [\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita\",\n      \"CreateDate\": 1587081768.334,\n      \"DnsConfig\": {\n        \"DnsRecords\": [\n          {\n            \"TTL\": 60,\n            \"Type\": \"A\"\n          }\n        ],\n        \"RoutingPolicy\": \"MULTIVALUE\"\n      },\n      \"Id\": \"srv-p5zdwlg5uvvzjita\",\n      \"Name\": \"myservice\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67422a2c-5fec-4e00-8352-026cc169b2b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "120be1d3-da58-40a1-b1c0-bdcc75cc24c8",
      "documentation": "Lists tags for the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListTagsForResource",
      "responses": [
        {
          "uuid": "d8f5d89e-4088-442c-85a9-de645cde7994",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"Project\",\n      \"Value\": \"Zeta\"\n    },\n    {\n      \"Key\": \"Department\",\n      \"Value\": \"Engineering\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19106352-a58d-412c-a072-7bb16b5e126d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00b52589-70d4-439f-bce5-7f451b56436d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0746b6ea-cc27-4c97-befc-a0e1bd3ee8f1",
      "documentation": "<p>Creates or updates one or more records and, optionally, creates a health check based on the settings in a specified service. When you submit a <code>RegisterInstance</code> request, the following occurs:</p> <ul> <li> <p>For each DNS record that you define in the service that's specified by <code>ServiceId</code>, a record is created or updated in the hosted zone that's associated with the corresponding namespace.</p> </li> <li> <p>If the service includes <code>HealthCheckConfig</code>, a health check is created based on the settings in the health check configuration.</p> </li> <li> <p>The health check, if any, is associated with each of the new or updated records.</p> </li> </ul> <important> <p>One <code>RegisterInstance</code> request must complete before you can submit another request and specify the same service ID and instance ID.</p> </important> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html\">CreateService</a>.</p> <p>When Cloud Map receives a DNS query for the specified DNS name, it returns the applicable value:</p> <ul> <li> <p> <b>If the health check is healthy</b>: returns all the records</p> </li> <li> <p> <b>If the health check is unhealthy</b>: returns the applicable value for the last healthy instance</p> </li> <li> <p> <b>If you didn't specify a health check configuration</b>: returns all the records</p> </li> </ul> <p>For the current quota on the number of instances that you can register using the same namespace and using the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.RegisterInstance",
      "responses": [
        {
          "uuid": "6020101a-ebc0-4c01-a9a9-e3cbb4eee7e1",
          "body": "{\n  \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k95yg2u7\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbf9cc67-0edf-4e2b-a094-69026d89bd35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "701ff83d-2024-435f-a348-9b2ea41118b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c7dadfc-efe6-45d8-ab97-834115c2b68f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7aae3a8-4b42-4967-ae17-e91a7e64938f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "311c0702-33e6-46e8-9094-c1bd1a9cae13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb76d03e-8777-4f45-bad0-d7d470b62152",
      "documentation": "Adds one or more tags to the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.TagResource",
      "responses": [
        {
          "uuid": "1e3c5393-27dc-4aa1-b10c-61ced2aef3b5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca942824-5053-440e-a783-4f3d86d62e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac4e1db8-ca30-4a12-8718-cb53424552fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8c11bb5-c268-47f7-b9c9-293ee71edd2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26a0e790-3541-4b72-94b0-92d0b2b39707",
      "documentation": "Removes one or more tags from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UntagResource",
      "responses": [
        {
          "uuid": "18fa6f91-6daa-4105-a833-0e0af4d5e841",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd90e9ba-f4b0-4e86-8eac-553189f81ef5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba208c71-4d77-4a72-87e1-f68cd94e3db8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20a84793-f756-4a6b-ac52-6840f7fa107a",
      "documentation": "Updates an HTTP namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateHttpNamespace",
      "responses": [
        {
          "uuid": "8bbd7add-381c-45ff-9bb1-0acd3937f4bb",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "facb804f-ed35-4911-a421-5882aa187af2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dff16bf-2fd4-4560-a416-bcfb2ddad2e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c07e8ff4-216e-4de3-b0a5-58b596b46adf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0101e823-9412-4a84-93f1-b398af2a5a52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f175e866-1f53-449a-87f8-03a67798dd46",
      "documentation": "<p>Submits a request to change the health status of a custom health check to healthy or unhealthy.</p> <p>You can use <code>UpdateInstanceCustomHealthStatus</code> to change the status only for custom health checks, which you define using <code>HealthCheckCustomConfig</code> when you create a service. You can't use it to change the status for Route 53 health checks, which you define using <code>HealthCheckConfig</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html\">HealthCheckCustomConfig</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus",
      "responses": [
        {
          "uuid": "b2471774-622a-497d-8225-793cc6e7d04a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df50033-1b71-4fc1-96df-f0b08a1fc75f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98a95a89-489d-44a4-a589-b016062e89c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43731c9a-bc7b-40f7-8328-5d381516b30d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CustomHealthNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26ff528a-e291-49a7-8a8e-b4a7baec8347",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abc07d34-5880-424a-beaa-1d8885b08e6e",
      "documentation": "Updates a private DNS namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePrivateDnsNamespace",
      "responses": [
        {
          "uuid": "85f9245a-6acd-45e2-9ddd-574af88cf744",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dac8fb31-6bfa-43ee-a9bd-1c12f1220ef3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d943e074-729c-43ad-830d-1666a11788a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db20dbac-775e-4554-baa3-c5fbb5564fc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6756a89-e77b-4352-93cf-a2cf11c5aee4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e78a161c-1aa3-4550-b9dd-10543ac77c74",
      "documentation": "Updates a public DNS namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePublicDnsNamespace",
      "responses": [
        {
          "uuid": "a3e38132-aca3-4569-8e17-b21a042c3707",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d2e64bf-09ab-4e94-a65e-bca1d78e3bef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bca995f6-1846-467f-9dec-c01e01b538ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b482a4ab-8185-40e9-b80a-76c8c9896e18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f2a7b37-bbda-41a0-be79-885089104575",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb086ef6-b8c7-4b17-b546-df8b7f7366fd",
      "documentation": "<p>Submits a request to perform the following operations:</p> <ul> <li> <p>Update the TTL setting for existing <code>DnsRecords</code> configurations</p> </li> <li> <p>Add, update, or delete <code>HealthCheckConfig</code> for a specified service</p> <note> <p>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration.</p> </note> </li> </ul> <p>For public and private DNS namespaces, note the following:</p> <ul> <li> <p>If you omit any existing <code>DnsRecords</code> or <code>HealthCheckConfig</code> configurations from an <code>UpdateService</code> request, the configurations are deleted from the service.</p> </li> <li> <p>If you omit an existing <code>HealthCheckCustomConfig</code> configuration from an <code>UpdateService</code> request, the configuration isn't deleted from the service.</p> </li> </ul> <p>When you update settings for a service, Cloud Map also updates the corresponding settings in all the records and health checks that were created by using the specified service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateService",
      "responses": [
        {
          "uuid": "afc2dd04-c154-46ef-8a85-dd44c0ac7e5b",
          "body": "{\n  \"OperationId\": \"m35hsdrkxwjffm3xef4bxyy6vc3ewakx-jdn3y5g5\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25d28a4e-2e85-4630-ba31-2dc796c18868",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b064b347-3fd0-44dc-abb0-02cc83ba368f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e132bd1-db89-4e70-8116-c8ae211965f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}