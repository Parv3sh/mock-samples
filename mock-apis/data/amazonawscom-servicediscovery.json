{
  "uuid": "8d7283c0-b0a6-43c1-a4b7-55fd73518e73",
  "lastMigration": 19,
  "name": "AWS Cloud Map",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "56ea7b51-51b8-40e5-8e57-e10a5c0e184f",
      "documentation": "<p>Creates an HTTP namespace. Service instances registered using an HTTP namespace can be discovered using a <code>DiscoverInstances</code> request but can't be discovered using DNS.</p> <p>For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreateHttpNamespace",
      "responses": [
        {
          "uuid": "63acd935-7533-4ff8-aa2c-466f61e90b3e",
          "body": "{\n  \"OperationId\": \"httpvoqozuhfet5kzxoxg-a-response-example\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acbc64f8-90d0-4ca4-a489-c727e0dda92d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57b808da-32d3-4f17-a445-925a468f821f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32c41c0f-f1ef-4e20-b777-3da7ed7a2538",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2a2129b-b501-4a4c-94d3-a4bb8884b473",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "537f20d3-7dd9-4ab5-9107-801fc2dfa7e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e0d7dae-4584-4c4c-a704-e50e5033d892",
      "documentation": "Creates a private namespace based on DNS, which is visible only inside a specified Amazon VPC. The namespace defines your service naming scheme. For example, if you name your namespace <code>example.com</code> and name your service <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>. Service instances that are registered using a private DNS namespace can be discovered using either a <code>DiscoverInstances</code> request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreatePrivateDnsNamespace",
      "responses": [
        {
          "uuid": "4a32c6d7-715a-4964-b607-2930c23238be",
          "body": "{\n  \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e53434e-c2be-43be-a221-36b47b7b20aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2ce4142-69e0-4cd3-bc44-ed0cd285f8db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9474d04a-7a13-4df3-b353-aabf0af775c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb53590c-6133-4633-ae8f-c02093b8a3fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90f3d340-c814-4593-a3f2-d0d7f850b23b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a99f1ac8-8205-4b33-9e81-9aee93a5618b",
      "documentation": "Creates a public namespace based on DNS, which is visible on the internet. The namespace defines your service naming scheme. For example, if you name your namespace <code>example.com</code> and name your service <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>. You can discover instances that were registered with a public DNS namespace by using either a <code>DiscoverInstances</code> request or using DNS. For the current quota on the number of namespaces that you can create using the same account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreatePublicDnsNamespace",
      "responses": [
        {
          "uuid": "57287808-0683-4c30-8977-cccee682d7f8",
          "body": "{\n  \"OperationId\": \"dns2voqozuhfet5kzxoxg-a-response-example\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6080d2b-7f34-4413-bcc3-496ba3583720",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d6256e9-fcc3-4c38-9ffc-27e5a31ae2ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa857aac-841e-40c0-b8d7-eaec831ac23d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d202c99-e7d8-486f-8c2b-e3e16e0394d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05be5647-8779-4a6a-ba73-1e6c53924381",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9d657cd-d400-488c-a678-18b066cd32b3",
      "documentation": "<p>Creates a service. This action defines the configuration for the following entities:</p> <ul> <li> <p>For public and private DNS namespaces, one of the following combinations of DNS records in Amazon Route 53:</p> <ul> <li> <p> <code>A</code> </p> </li> <li> <p> <code>AAAA</code> </p> </li> <li> <p> <code>A</code> and <code>AAAA</code> </p> </li> <li> <p> <code>SRV</code> </p> </li> <li> <p> <code>CNAME</code> </p> </li> </ul> </li> <li> <p>Optionally, a health check</p> </li> </ul> <p>After you create the service, you can submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request, and Cloud Map uses the values in the configuration to create the specified entities.</p> <p>For the current quota on the number of instances that you can register using the same namespace and using the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.CreateService",
      "responses": [
        {
          "uuid": "bd096b7f-854f-48ed-8290-6dea54e5f14b",
          "body": "{\n  \"Service\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita\",\n    \"CreateDate\": 1587081768.334,\n    \"CreatorRequestId\": \"567c1193-6b00-4308-bd57-ad38a8822d25\",\n    \"DnsConfig\": {\n      \"DnsRecords\": [\n        {\n          \"TTL\": 60,\n          \"Type\": \"A\"\n        }\n      ],\n      \"NamespaceId\": \"ns-ylexjili4cdxy3xm\",\n      \"RoutingPolicy\": \"MULTIVALUE\"\n    },\n    \"Id\": \"srv-p5zdwlg5uvvzjita\",\n    \"Name\": \"myservice\",\n    \"NamespaceId\": \"ns-ylexjili4cdxy3xm\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29462444-25c4-442a-a662-415fff307c3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad9614b-0c6e-4a34-903e-18f13967179f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49112e1c-fb86-4ee8-b0d8-4ff9989236d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35ea9a73-57f0-4cb7-be97-bbf986246b95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efad899a-1037-4bfd-97ba-c0e81ac7683d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9db55b5d-6aaa-4af0-9709-5a0efde80b89",
      "documentation": "Deletes a namespace from the current account. If the namespace still contains one or more services, the request fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeleteNamespace",
      "responses": [
        {
          "uuid": "0dc5acdf-feed-4249-a02d-b5918d4fb0b8",
          "body": "{\n  \"OperationId\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k98y6drk\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39baf0b7-0855-4d7a-90c5-7b4f7ca9f026",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38c36c9b-eddc-420d-8521-c9f967fa9837",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47480432-428a-44aa-9f0b-9d3827c24278",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "143312e3-5f55-41a4-b046-9c6e78d3d2c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "546a1fe1-67e0-4fb1-851b-25cc2b29f198",
      "documentation": "Deletes a specified service. If the service still contains one or more registered instances, the request fails.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeleteService",
      "responses": [
        {
          "uuid": "a17cdd61-c338-4d3e-9643-30d3a23b543e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b07c933-f6a1-404b-b09b-3e05a93bce99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef8c3db0-7593-4805-85fc-7d4a8e9ccc2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3b73fa4-77d0-442d-9d11-afcea00633ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aead3def-0ef8-469f-a287-b9bb5fd426bc",
      "documentation": "Deletes the Amazon Route 53 DNS records and health check, if any, that Cloud Map created for the specified instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DeregisterInstance",
      "responses": [
        {
          "uuid": "e99af9cd-b166-4eee-b859-4b3aa2619ba7",
          "body": "{\n  \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k98rnaiq\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4257f08b-0b15-4c6a-951f-d8510114b8a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c87d417-b64f-4659-ae9c-e6a7723f5991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5a49f6d-553c-41ba-b624-0877492c5dcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab58e1ba-298f-4a25-baab-91dab9004adf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6f0f974-bc97-4b92-8c59-2c8d1f70c3d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91c514fa-c854-4d14-978c-69cc6e938959",
      "documentation": "Discovers registered instances for a specified namespace and service. You can use <code>DiscoverInstances</code> to discover instances for any type of namespace. For public and private DNS namespaces, you can also use DNS queries to discover instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.DiscoverInstances",
      "responses": [
        {
          "uuid": "b2168655-4f61-4470-b9cb-6dc03d2238a8",
          "body": "{\n  \"Instances\": [\n    {\n      \"Attributes\": {\n        \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n        \"AWS_INSTANCE_PORT\": \"808\"\n      },\n      \"HealthStatus\": \"UNKNOWN\",\n      \"InstanceId\": \"myservice-53\",\n      \"NamespaceName\": \"example.com\",\n      \"ServiceName\": \"myservice\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4e2b1e8-8130-445d-91b9-3455a2313f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dc634ee-d075-4a49-98f4-5e5c9aeb8b32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "817bd415-2432-4d4f-8e13-f12ac53e04a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fbb99af-306a-4379-849c-600aab7b2e30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RequestLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1749f624-d3ce-4597-9e5c-340273e66420",
      "documentation": "Gets information about a specified instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetInstance",
      "responses": [
        {
          "uuid": "251a0d7a-72ba-412c-afa0-c08eed075da0",
          "body": "{\n  \"Instance\": {\n    \"Attributes\": {\n      \"AWS_INSTANCE_IPV4\": \"192.0.2.44\",\n      \"AWS_INSTANCE_PORT\": \"80\",\n      \"color\": \"green\",\n      \"region\": \"us-west-2\",\n      \"stage\": \"beta\"\n    },\n    \"Id\": \"i-abcd1234\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2a190f0-0f05-4e69-8020-fd61e062683e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64b6c9c1-02dd-4c22-9a73-98c8a585cd33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "447bad64-e907-4967-adad-ab4488a9ff09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bff9e185-12cc-43d7-8636-de526d0de4a3",
      "documentation": "<p>Gets the current health status (<code>Healthy</code>, <code>Unhealthy</code>, or <code>Unknown</code>) of one or more instances that are associated with a specified service.</p> <note> <p>There's a brief delay between when you register an instance and when the health status for the instance is available. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetInstancesHealthStatus",
      "responses": [
        {
          "uuid": "82651a37-f48e-42f4-8fab-901cc02856b6",
          "body": "{\n  \"Status\": {\n    \"i-abcd1234\": \"HEALTHY\",\n    \"i-abcd1235\": \"UNHEALTHY\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7fc73f8-ecaa-435b-8e58-f6c5ab5ff02b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1811efa-cf75-490f-8a1c-01e77853df39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ba7871b-b61c-41e2-af2d-0fc7531104a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "361cc370-599f-4208-ad07-6549c8df48c3",
      "documentation": "Gets information about a namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetNamespace",
      "responses": [
        {
          "uuid": "7122f06d-700f-4208-8779-cfbaa4862c96",
          "body": "{\n  \"Namespace\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2: 123456789120:namespace/ns-e1tpmexample0001\",\n    \"CreateDate\": \"20181118T211712Z\",\n    \"CreatorRequestId\": \"example-creator-request-id-0001\",\n    \"Description\": \"Example.com AWS Cloud Map HTTP Namespace\",\n    \"Id\": \"ns-e1tpmexample0001\",\n    \"Name\": \"example-http.com\",\n    \"Properties\": {\n      \"DnsProperties\": {},\n      \"HttpProperties\": {\n        \"HttpName\": \"example-http.com\"\n      }\n    },\n    \"Type\": \"HTTP\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f71e4e42-1cf2-48e3-a77d-4353cdb9a038",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15046323-bdbc-4156-9321-a0f888cd5d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b323eba-b8f7-4cff-95e0-9301b505b907",
      "documentation": "<p>Gets information about any operation that returns an operation ID in the response, such as a <code>CreateService</code> request.</p> <note> <p>To get a list of operations that match specified criteria, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html\">ListOperations</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetOperation",
      "responses": [
        {
          "uuid": "d90613f9-f24f-46dd-8da7-97c6d33c1d55",
          "body": "{\n  \"Operation\": {\n    \"CreateDate\": 1587055860.121,\n    \"Id\": \"gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd\",\n    \"Status\": \"SUCCESS\",\n    \"Targets\": {\n      \"NAMESPACE\": \"ns-ylexjili4cdxy3xm\"\n    },\n    \"Type\": \"CREATE_NAMESPACE\",\n    \"UpdateDate\": 1587055900.469\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fa4b3e7-8df2-47b9-9562-e4dce3e07a32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a359ebc3-c60b-43e1-8dbf-6c9d6b040133",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "480162e7-b3bf-4a18-b252-d5c621c36988",
      "documentation": "Gets the settings for a specified service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.GetService",
      "responses": [
        {
          "uuid": "a5be3346-7283-4363-99bd-0afdd6a761de",
          "body": "{\n  \"Service\": {\n    \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789120:service/srv-e4anhexample0004\",\n    \"CreateDate\": \"20181118T211707Z\",\n    \"CreatorRequestId\": \"example-creator-request-id-0004\",\n    \"Description\": \"Example.com AWS Cloud Map HTTP Service\",\n    \"HealthCheckConfig\": {\n      \"FailureThreshold\": 3,\n      \"ResourcePath\": \"/\",\n      \"Type\": \"HTTPS\"\n    },\n    \"Id\": \"srv-e4anhexample0004\",\n    \"Name\": \"example-http-service\",\n    \"NamespaceId\": \"ns-e4anhexample0004\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03565c19-7983-4714-b0a9-d1614f82d01a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b82543b-90af-4ef8-8381-96c814756140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21f39d1d-443d-4285-baae-d3afdc09c60a",
      "documentation": "Lists summary information about the instances that you registered by using a specified service.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListInstances",
      "responses": [
        {
          "uuid": "87d881f8-4e21-49ca-b09d-4ab478fc13ea",
          "body": "{\n  \"Instances\": [\n    {\n      \"Attributes\": {\n        \"AWS_INSTANCE_IPV4\": \"172.2.1.3\",\n        \"AWS_INSTANCE_PORT\": \"808\"\n      },\n      \"Id\": \"i-06bdabbae60f65a4e\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f281577-e4e9-4209-a99b-94cffe510c06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fcac704-b50c-4745-a3bf-3e4fa7ad70dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1624377f-377c-4a21-a8c4-fcebf457ade2",
      "documentation": "Lists summary information about the namespaces that were created by the current account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListNamespaces",
      "responses": [
        {
          "uuid": "53d95bd5-af98-4192-b42f-1634c00b1639",
          "body": "{\n  \"Namespaces\": [\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-a3ccy2e7e3a7rile\",\n      \"CreateDate\": 1585354387.357,\n      \"Id\": \"ns-a3ccy2e7e3a7rile\",\n      \"Name\": \"local\",\n      \"Properties\": {\n        \"DnsProperties\": {\n          \"HostedZoneId\": \"Z06752353VBUDTC32S84S\"\n        },\n        \"HttpProperties\": {\n          \"HttpName\": \"local\"\n        }\n      },\n      \"Type\": \"DNS_PRIVATE\"\n    },\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-pocfyjtrsmwtvcxx\",\n      \"CreateDate\": 1586468974.698,\n      \"Description\": \"My second namespace\",\n      \"Id\": \"ns-pocfyjtrsmwtvcxx\",\n      \"Name\": \"My-second-namespace\",\n      \"Properties\": {\n        \"DnsProperties\": {},\n        \"HttpProperties\": {\n          \"HttpName\": \"My-second-namespace\"\n        }\n      },\n      \"Type\": \"HTTP\"\n    },\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-ylexjili4cdxy3xm\",\n      \"CreateDate\": 1587055896.798,\n      \"Id\": \"ns-ylexjili4cdxy3xm\",\n      \"Name\": \"example.com\",\n      \"Properties\": {\n        \"DnsProperties\": {\n          \"HostedZoneId\": \"Z09983722P0QME1B3KC8I\"\n        },\n        \"HttpProperties\": {\n          \"HttpName\": \"example.com\"\n        }\n      },\n      \"Type\": \"DNS_PRIVATE\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3c55e35-635f-4fbf-9992-4b5d62c63456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ea53ec9-77f0-4e33-9c40-e5339b091542",
      "documentation": "Lists operations that match the criteria that you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListOperations",
      "responses": [
        {
          "uuid": "f9e8247d-71d0-4455-8534-2deeb1c19d57",
          "body": "{\n  \"Operations\": [\n    {\n      \"Id\": \"76yy8ovhpdz0plmjzbsnqgnrqvpv2qdt-kexample\",\n      \"Status\": \"SUCCESS\"\n    },\n    {\n      \"Id\": \"prysnyzpji3u2ciy45nke83x2zanl7yk-dexample\",\n      \"Status\": \"SUCCESS\"\n    },\n    {\n      \"Id\": \"ko4ekftir7kzlbechsh7xvcdgcpk66gh-7example\",\n      \"Status\": \"PENDING\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c43d6098-beee-42bf-8543-8b9011b7f9d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "869b0e53-c8d3-4fb3-96d1-489623b15560",
      "documentation": "Lists summary information for all the services that are associated with one or more specified namespaces.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListServices",
      "responses": [
        {
          "uuid": "2416657c-98f2-4392-ab07-d796779c9240",
          "body": "{\n  \"Services\": [\n    {\n      \"Arn\": \"arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita\",\n      \"CreateDate\": 1587081768.334,\n      \"DnsConfig\": {\n        \"DnsRecords\": [\n          {\n            \"TTL\": 60,\n            \"Type\": \"A\"\n          }\n        ],\n        \"RoutingPolicy\": \"MULTIVALUE\"\n      },\n      \"Id\": \"srv-p5zdwlg5uvvzjita\",\n      \"Name\": \"myservice\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65e6e266-3d71-4570-838e-6b50070727f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0bc01d2-816c-40f9-9bc4-35b88d22ca63",
      "documentation": "Lists tags for the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.ListTagsForResource",
      "responses": [
        {
          "uuid": "d70ca41e-aa79-4ca9-bf73-7b184284113f",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"Project\",\n      \"Value\": \"Zeta\"\n    },\n    {\n      \"Key\": \"Department\",\n      \"Value\": \"Engineering\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ac7180e-acc5-4529-9194-2544541314c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b105702d-8c37-44cb-a543-e66f8b3e3549",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab336eeb-1cb2-4ac4-a9df-b187d72d8851",
      "documentation": "<p>Creates or updates one or more records and, optionally, creates a health check based on the settings in a specified service. When you submit a <code>RegisterInstance</code> request, the following occurs:</p> <ul> <li> <p>For each DNS record that you define in the service that's specified by <code>ServiceId</code>, a record is created or updated in the hosted zone that's associated with the corresponding namespace.</p> </li> <li> <p>If the service includes <code>HealthCheckConfig</code>, a health check is created based on the settings in the health check configuration.</p> </li> <li> <p>The health check, if any, is associated with each of the new or updated records.</p> </li> </ul> <important> <p>One <code>RegisterInstance</code> request must complete before you can submit another request and specify the same service ID and instance ID.</p> </important> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html\">CreateService</a>.</p> <p>When Cloud Map receives a DNS query for the specified DNS name, it returns the applicable value:</p> <ul> <li> <p> <b>If the health check is healthy</b>: returns all the records</p> </li> <li> <p> <b>If the health check is unhealthy</b>: returns the applicable value for the last healthy instance</p> </li> <li> <p> <b>If you didn't specify a health check configuration</b>: returns all the records</p> </li> </ul> <p>For the current quota on the number of instances that you can register using the same namespace and using the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.RegisterInstance",
      "responses": [
        {
          "uuid": "45eebee4-75df-49f0-96e8-5f73017a5ac2",
          "body": "{\n  \"OperationId\": \"4yejorelbukcjzpnr6tlmrghsjwpngf4-k95yg2u7\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4229cdad-1eaa-4319-8813-2e9a281942f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14ee278b-45d6-4a08-8fa0-927481481b70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51e7b445-9ca0-4d23-843a-07f226f25a94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c52ca8d-35de-4752-9753-77ee8e281063",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4118da94-a313-4b5e-aa46-723db2cb729b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8292021d-d304-4a66-b003-9e888a9369c0",
      "documentation": "Adds one or more tags to the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.TagResource",
      "responses": [
        {
          "uuid": "81f11920-aac5-444a-9563-db8b6960cedd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e05d450a-30dd-4ed1-b496-8624e673266c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e2e0fe6-0c3d-4962-bf91-4907aa807558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "961dd3f6-d654-48ec-b45a-0d1050b13da7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c124a4e-f290-414b-87d9-92cebf80d950",
      "documentation": "Removes one or more tags from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UntagResource",
      "responses": [
        {
          "uuid": "61e95658-9f3e-4865-9b38-f86780fc9278",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5afd8503-12c6-445f-9811-771f2fa89627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0c41126-32e2-4735-87c4-c04b45967c44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7db7da98-3b01-44a7-b056-7574371f4f45",
      "documentation": "Updates an HTTP namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateHttpNamespace",
      "responses": [
        {
          "uuid": "4d58d41e-dcf7-42b7-a6d8-28d53097f48c",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2888bb6-73c6-4709-93bf-4d84e85979cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84215080-81d4-4da8-b8ff-cc3268225ea0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e5a2be1-6510-47c9-8b93-7dd1c7a1608b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c4c3804-af5e-4749-8e9b-0636e2673bbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c4c9062-9991-4795-b8cb-d6bb596cd547",
      "documentation": "<p>Submits a request to change the health status of a custom health check to healthy or unhealthy.</p> <p>You can use <code>UpdateInstanceCustomHealthStatus</code> to change the status only for custom health checks, which you define using <code>HealthCheckCustomConfig</code> when you create a service. You can't use it to change the status for Route 53 health checks, which you define using <code>HealthCheckConfig</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html\">HealthCheckCustomConfig</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus",
      "responses": [
        {
          "uuid": "360c0c5b-5b81-4053-9f63-c07db18cc517",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9410e9-f117-4715-b209-6c8e45c262ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InstanceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db35ca87-c1d0-4e23-ad33-60cbd137dad5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2737097d-2595-4e6c-b5af-878a62d9e926",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CustomHealthNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e0fc790-4df5-45e4-af1b-fdb61f456e62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd902836-f2d2-4f3f-b9b8-c93c8735e8b1",
      "documentation": "Updates a private DNS namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePrivateDnsNamespace",
      "responses": [
        {
          "uuid": "fc685e0f-eefa-4fcc-9f52-92157135a44b",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a3051b9-5c18-422e-b640-0f9ad56a1c4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d932a1e9-9373-419c-819b-2b76a9098ef2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e95978d-f3fa-43fa-a0f1-5cf0d9a7fd7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d9d7a1-6944-4c7c-acc6-9599ec495581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d4eac3d2-a48c-4b0a-a53b-297d67059668",
      "documentation": "Updates a public DNS namespace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdatePublicDnsNamespace",
      "responses": [
        {
          "uuid": "bbb9f456-456e-4722-bdf1-040cdba6d5a3",
          "body": "{\n  \"OperationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "effd8f80-e771-45ff-8112-915a6cb7a6e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30febb75-a919-42db-892a-7f91cb95e976",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "NamespaceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3723b93-b21c-450d-99a0-9debc0bcb4ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5af6aa-7ece-4baa-9c28-d5f4838cc375",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31ce5d77-8cc4-4ce5-89aa-be3a6a58c580",
      "documentation": "<p>Submits a request to perform the following operations:</p> <ul> <li> <p>Update the TTL setting for existing <code>DnsRecords</code> configurations</p> </li> <li> <p>Add, update, or delete <code>HealthCheckConfig</code> for a specified service</p> <note> <p>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration.</p> </note> </li> </ul> <p>For public and private DNS namespaces, note the following:</p> <ul> <li> <p>If you omit any existing <code>DnsRecords</code> or <code>HealthCheckConfig</code> configurations from an <code>UpdateService</code> request, the configurations are deleted from the service.</p> </li> <li> <p>If you omit an existing <code>HealthCheckCustomConfig</code> configuration from an <code>UpdateService</code> request, the configuration isn't deleted from the service.</p> </li> </ul> <p>When you update settings for a service, Cloud Map also updates the corresponding settings in all the records and health checks that were created by using the specified service.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Route53AutoNaming_v20170314.UpdateService",
      "responses": [
        {
          "uuid": "e8f6e433-fa14-4b6c-83ce-c909d85e6fc0",
          "body": "{\n  \"OperationId\": \"m35hsdrkxwjffm3xef4bxyy6vc3ewakx-jdn3y5g5\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4089fee-d40c-414a-881b-217acb0ffa51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d3f6a42-28f7-4d44-9031-10a93a5e31bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInput",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8149751-e67d-4a2d-9b60-8ecffaf428bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}