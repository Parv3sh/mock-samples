{
  "uuid": "97035c6e-6ea2-41f4-aa95-c57c67ca8bde",
  "lastMigration": 19,
  "name": "OpenALPR CarCheck API",
  "endpointPrefix": "v3",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "22ee679e-c6c8-4d7b-bcad-2b062c616e70",
      "documentation": "Get a list of available results for plate and vehicle recognition\n",
      "method": "get",
      "endpoint": "config",
      "responses": [
        {
          "uuid": "3a0313e4-09aa-414e-92ca-b3df8ab14ebc",
          "body": "{\n  \"countries\": [\n    {\n      \"code\": \"us\",\n      \"name\": \"North America\"\n    }\n  ],\n  \"vehicle_labels\": {\n    \"bodytype\": [\n      \"sedan-compact\"\n    ],\n    \"color\": [\n      \"blue\"\n    ],\n    \"make\": [\n      \"volvo\"\n    ],\n    \"makemodel\": [\n      \"volvo_v40\"\n    ],\n    \"orientation\": [\n      45\n    ],\n    \"year\": [\n      \"2000-2004\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ok",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6985b3c-df45-4a2b-8ab4-4821143771e2",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as a file using a form data POST\n",
      "method": "post",
      "endpoint": "recognize",
      "responses": [
        {
          "uuid": "59b181d7-d487-4051-b2ee-31e4a061c1df",
          "body": "{\n  \"credit_cost\": {{faker 'random.number'}},\n  \"credits_monthly_total\": {{faker 'random.number'}},\n  \"credits_monthly_used\": {{faker 'random.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'random.number'}},\n  \"img_height\": {{faker 'random.number'}},\n  \"img_width\": {{faker 'random.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}},\n    \"vehicles\": {{faker 'random.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'random.number'}},\n          \"matches_template\": {{faker 'random.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'random.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'random.number'}},\n          \"y\": {{faker 'random.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'random.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'random.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'random.number'}},\n      \"requested_topn\": {{faker 'random.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'random.number'}},\n        \"width\": {{faker 'random.number'}},\n        \"x\": {{faker 'random.number'}},\n        \"y\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feb93dfb-9aa8-424c-8955-6424859ae786",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abc33100-6d75-4c46-abe1-075bbca66bf8",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dbbf61c-c94b-4056-b117-c56ac6882d46",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a650a5e1-7b03-4a3e-956d-dfc4948929f4",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d459318f-3178-4edc-9cd8-19ad8b9e5854",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as base64 encoded bytes.\n",
      "method": "post",
      "endpoint": "recognize_bytes",
      "responses": [
        {
          "uuid": "62990a7d-09f8-418f-9a17-af743fc3c48a",
          "body": "{\n  \"credit_cost\": {{faker 'random.number'}},\n  \"credits_monthly_total\": {{faker 'random.number'}},\n  \"credits_monthly_used\": {{faker 'random.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'random.number'}},\n  \"img_height\": {{faker 'random.number'}},\n  \"img_width\": {{faker 'random.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}},\n    \"vehicles\": {{faker 'random.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'random.number'}},\n          \"matches_template\": {{faker 'random.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'random.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'random.number'}},\n          \"y\": {{faker 'random.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'random.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'random.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'random.number'}},\n      \"requested_topn\": {{faker 'random.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'random.number'}},\n        \"width\": {{faker 'random.number'}},\n        \"x\": {{faker 'random.number'}},\n        \"y\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87c9258a-e83a-4d74-ad8d-1ddfbca47978",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83735ed0-0519-41e3-8d54-f62256330a5f",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f473f16-06d6-40a4-967c-cefe9d021179",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08ed26ba-e0dc-472a-9363-83cbb6fa2d7c",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd03b9f7-f95c-4692-9d3b-69cf3cc94398",
      "documentation": "Send an image for OpenALPR to analyze and provide metadata back\nThe image is sent as a URL.  The OpenALPR service will download the image \nand process it\n",
      "method": "post",
      "endpoint": "recognize_url",
      "responses": [
        {
          "uuid": "b6d983a4-d13e-465d-83f9-a8584270ea07",
          "body": "{\n  \"credit_cost\": {{faker 'random.number'}},\n  \"credits_monthly_total\": {{faker 'random.number'}},\n  \"credits_monthly_used\": {{faker 'random.number'}},\n  \"data_type\": \"{{oneOf (array 'alpr_results' 'alpr_group' 'heartbeat')}}\",\n  \"epoch_time\": {{faker 'random.number'}},\n  \"img_height\": {{faker 'random.number'}},\n  \"img_width\": {{faker 'random.number'}},\n  \"processing_time\": {\n    \"plates\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}},\n    \"vehicles\": {{faker 'random.number'}}\n  },\n  \"regions_of_interest\": [\n    {\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"results\": [\n    {\n      \"candidates\": [\n        {\n          \"confidence\": {{faker 'random.number'}},\n          \"matches_template\": {{faker 'random.number'}},\n          \"plate\": \"\"\n        }\n      ],\n      \"confidence\": {{faker 'random.number'}},\n      \"coordinates\": [\n        {\n          \"x\": {{faker 'random.number'}},\n          \"y\": {{faker 'random.number'}}\n        }\n      ],\n      \"matches_template\": {{faker 'random.number'}},\n      \"plate\": \"\",\n      \"processing_time_ms\": {{faker 'random.number'}},\n      \"region\": \"\",\n      \"region_confidence\": {{faker 'random.number'}},\n      \"requested_topn\": {{faker 'random.number'}},\n      \"vehicle\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"vehicle_region\": {\n        \"height\": {{faker 'random.number'}},\n        \"width\": {{faker 'random.number'}},\n        \"x\": {{faker 'random.number'}},\n        \"y\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"vehicles\": [\n    {\n      \"details\": {\n        \"body_type\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"color\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"make_model\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"orientation\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ],\n        \"year\": [\n          {\n            \"confidence\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"height\": {{faker 'random.number'}},\n      \"width\": {{faker 'random.number'}},\n      \"x\": {{faker 'random.number'}},\n      \"y\": {{faker 'random.number'}}\n    }\n  ],\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": ""
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0df160b-4036-4f5e-aeef-e91f5af66927",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Parameter is invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d49094e-e05d-4dab-9a83-73fba3c20240",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User not authorized or invalid secret_key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ef8be8-ab5b-40d9-95a9-ffabb24bc673",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Monthly usage limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f466d5-ce1b-49e6-98ae-b4bd56686653",
          "body": "{\n  \"error\": \"\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Temporary rate-limit exceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}