{
  "uuid": "cc88618f-e4c5-4871-94ed-3e641437e6b3",
  "lastMigration": 19,
  "name": "BatchService",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "447bd81e-830c-4816-a626-f761b8d3640c",
      "documentation": "Lists all of the applications available in the specified Account.",
      "method": "get",
      "endpoint": "applications",
      "responses": [
        {
          "uuid": "257d979d-0174-46a8-a289-eee0e4f4e706",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"displayName\": \"\",\n      \"id\": \"\",\n      \"versions\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of applications.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "481cc0dc-f2f8-45bc-bd79-2b28e411bc04",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa99d4a8-dd13-456b-9686-c544ec6a439f",
      "documentation": "Gets information about the specified Application.",
      "method": "get",
      "endpoint": "applications/:applicationId",
      "responses": [
        {
          "uuid": "1a973b9b-671b-434c-8110-864b2c87b86d",
          "body": "{\n  \"displayName\": \"\",\n  \"id\": \"\",\n  \"versions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the application.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33c785c9-125f-400f-8eef-50119a1a3f53",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdf63cd4-35c0-4fa4-82fa-0fe25a0b81cc",
      "documentation": "Lists all of the Certificates that have been added to the specified Account.",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "7e980565-02d7-40e2-9276-9c48a54ad69f",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"deleteCertificateError\": {\n        \"code\": \"\",\n        \"message\": \"\",\n        \"values\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"publicData\": \"\",\n      \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d10a7f-a5c6-4c00-98cd-e953dad78253",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93fa471e-07ed-468e-9868-baefdc70c3c4",
      "documentation": "Adds a Certificate to the specified Account.",
      "method": "post",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "02e97b5c-971e-4a63-8f5d-c56de7a3b744",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad17b74-6b18-4e94-b259-450f95aafe2a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "253d9332-9771-4cee-aedc-92586609065e",
      "documentation": "Deletes a Certificate from the specified Account.",
      "method": "delete",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "c7a80b17-9fd7-4254-96f7-078c2b37738b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "193a3b69-d770-4365-aff5-2ae542646596",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d712399e-1e8d-4fd6-a22e-2c2d6366187b",
      "documentation": "Gets information about the specified Certificate.",
      "method": "get",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)",
      "responses": [
        {
          "uuid": "8c527316-c67f-4fda-88f8-5e5d77fdcc58",
          "body": "{\n  \"deleteCertificateError\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"publicData\": \"\",\n  \"state\": \"{{oneOf (array 'active' 'deleting' 'deletefailed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"thumbprint\": \"\",\n  \"thumbprintAlgorithm\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59e2faa2-67a8-458b-babe-e66d51b99696",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7982f2b4-2311-4e78-9bc4-8a944184edf5",
      "documentation": "Cancels a failed deletion of a Certificate from the specified Account.",
      "method": "post",
      "endpoint": "certificates(thumbprintAlgorithm=:thumbprintAlgorithm,thumbprint=:thumbprint)/canceldelete",
      "responses": [
        {
          "uuid": "8fb12e15-f245-4c0f-99b9-12038c7f10c4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e57f73a-6984-4d15-a52f-80a36ae9d6a5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8347d2f6-a90b-4b7e-bbec-f1773f961b5f",
      "documentation": "Lists all of the Jobs in the specified Account.",
      "method": "get",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "ffdd7ad5-e357-4fea-8d32-bcc7379987d7",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"subnetId\": \"\"\n      },\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"osFamily\": \"\",\n              \"osVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"mountConfiguration\": [\n              {\n                \"azureBlobFileSystemConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"blobfuseOptions\": \"\",\n                  \"containerName\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"sasKey\": \"\"\n                },\n                \"azureFileShareConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"azureFileUrl\": \"\",\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\"\n                },\n                \"cifsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"password\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\",\n                  \"username\": \"\"\n                },\n                \"nfsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\"\n                }\n              }\n            ],\n            \"networkConfiguration\": {\n              \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\",\n                        \"sourcePortRanges\": [\n                          \"\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"publicIPs\": [\n                \"\"\n              ],\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                },\n                \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"autoStorageContainerName\": \"\",\n                  \"blobPrefix\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\",\n                  \"httpUrl\": \"\",\n                  \"storageContainerUrl\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\",\n                \"windowsUserConfiguration\": {\n                  \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                }\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6ebd58a-5dc5-4fb9-b8ae-cfcdb25556b7",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7218087-dd5f-450c-adfd-5e67cc65d6b4",
      "documentation": "Adds a Job to the specified Account.",
      "method": "post",
      "endpoint": "jobs",
      "responses": [
        {
          "uuid": "105a7977-3a4f-4824-8699-39be92a3b7c8",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76846698-1d19-43e4-92f4-57b6f50f8ade",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5fdc856-7fd9-41e2-96a5-845bb75d4c54",
      "documentation": "Deletes a Job.",
      "method": "delete",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "d0f432ca-302f-40c3-a3aa-a21efa3064b3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f47c99ab-b950-4ec0-8acc-c2faf23930b0",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "919eef1e-e510-404a-99d4-91efcedfc26e",
      "documentation": "Gets information about the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "43b612e9-d468-47cb-a08d-628ebad2dd78",
          "body": "{\n  \"commonEnvironmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"poolId\": \"\",\n    \"schedulingError\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"terminateReason\": \"\"\n  },\n  \"id\": \"\",\n  \"jobManagerTask\": {\n    \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n    \"applicationPackageReferences\": [\n      {\n        \"applicationId\": \"\",\n        \"version\": \"\"\n      }\n    ],\n    \"authenticationTokenSettings\": {\n      \"access\": [\n        \"{{oneOf (array 'job')}}\"\n      ]\n    },\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"displayName\": \"\",\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"killJobOnCompletion\": {{faker 'random.boolean'}},\n    \"outputFiles\": [\n      {\n        \"destination\": {\n          \"container\": {\n            \"containerUrl\": \"\",\n            \"path\": \"\"\n          }\n        },\n        \"filePattern\": \"\",\n        \"uploadOptions\": {\n          \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n        }\n      }\n    ],\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"runExclusive\": {{faker 'random.boolean'}},\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"jobPreparationTask\": {\n    \"commandLine\": \"\",\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\",\n      \"retentionTime\": \"\"\n    },\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"jobReleaseTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"id\": \"\",\n    \"maxWallClockTime\": \"\",\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"retentionTime\": \"\",\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    }\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"networkConfiguration\": {\n    \"subnetId\": \"\"\n  },\n  \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n  \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n  \"poolInfo\": {\n    \"autoPoolSpecification\": {\n      \"autoPoolIdPrefix\": \"\",\n      \"keepAlive\": {{faker 'random.boolean'}},\n      \"pool\": {\n        \"applicationLicenses\": [\n          \"\"\n        ],\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"autoScaleEvaluationInterval\": \"\",\n        \"autoScaleFormula\": \"\",\n        \"certificateReferences\": [\n          {\n            \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n            \"storeName\": \"\",\n            \"thumbprint\": \"\",\n            \"thumbprintAlgorithm\": \"\",\n            \"visibility\": [\n              \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n            ]\n          }\n        ],\n        \"cloudServiceConfiguration\": {\n          \"osFamily\": \"\",\n          \"osVersion\": \"\"\n        },\n        \"displayName\": \"\",\n        \"enableAutoScale\": {{faker 'random.boolean'}},\n        \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n        \"maxTasksPerNode\": {{faker 'random.number'}},\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"mountConfiguration\": [\n          {\n            \"azureBlobFileSystemConfiguration\": {\n              \"accountKey\": \"\",\n              \"accountName\": \"\",\n              \"blobfuseOptions\": \"\",\n              \"containerName\": \"\",\n              \"relativeMountPath\": \"\",\n              \"sasKey\": \"\"\n            },\n            \"azureFileShareConfiguration\": {\n              \"accountKey\": \"\",\n              \"accountName\": \"\",\n              \"azureFileUrl\": \"\",\n              \"mountOptions\": \"\",\n              \"relativeMountPath\": \"\"\n            },\n            \"cifsMountConfiguration\": {\n              \"mountOptions\": \"\",\n              \"password\": \"\",\n              \"relativeMountPath\": \"\",\n              \"source\": \"\",\n              \"username\": \"\"\n            },\n            \"nfsMountConfiguration\": {\n              \"mountOptions\": \"\",\n              \"relativeMountPath\": \"\",\n              \"source\": \"\"\n            }\n          }\n        ],\n        \"networkConfiguration\": {\n          \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n          \"endpointConfiguration\": {\n            \"inboundNATPools\": [\n              {\n                \"backendPort\": {{faker 'random.number'}},\n                \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                \"frontendPortRangeStart\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"networkSecurityGroupRules\": [\n                  {\n                    \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                    \"priority\": {{faker 'random.number'}},\n                    \"sourceAddressPrefix\": \"\",\n                    \"sourcePortRanges\": [\n                      \"\"\n                    ]\n                  }\n                ],\n                \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n              }\n            ]\n          },\n          \"publicIPs\": [\n            \"\"\n          ],\n          \"subnetId\": \"\"\n        },\n        \"resizeTimeout\": \"\",\n        \"startTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"targetDedicatedNodes\": {{faker 'random.number'}},\n        \"targetLowPriorityNodes\": {{faker 'random.number'}},\n        \"taskSchedulingPolicy\": {\n          \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n        },\n        \"userAccounts\": [\n          {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"linuxUserConfiguration\": {\n              \"gid\": {{faker 'random.number'}},\n              \"sshPrivateKey\": \"\",\n              \"uid\": {{faker 'random.number'}}\n            },\n            \"name\": \"\",\n            \"password\": \"\",\n            \"windowsUserConfiguration\": {\n              \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n            }\n          }\n        ],\n        \"virtualMachineConfiguration\": {\n          \"containerConfiguration\": {\n            \"containerImageNames\": [\n              \"\"\n            ],\n            \"containerRegistries\": [\n              {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              }\n            ],\n            \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n          },\n          \"dataDisks\": [\n            {\n              \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n              \"diskSizeGB\": {{faker 'random.number'}},\n              \"lun\": {{faker 'random.number'}},\n              \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n            }\n          ],\n          \"imageReference\": {\n            \"offer\": \"\",\n            \"publisher\": \"\",\n            \"sku\": \"\",\n            \"version\": \"\",\n            \"virtualMachineImageId\": \"\"\n          },\n          \"licenseType\": \"\",\n          \"nodeAgentSKUId\": \"\",\n          \"windowsConfiguration\": {\n            \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n          }\n        },\n        \"vmSize\": \"\"\n      },\n      \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n    },\n    \"poolId\": \"\"\n  },\n  \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"priority\": {{faker 'random.number'}},\n  \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"usesTaskDependencies\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f48083f-8604-482a-ae28-2448cf9d4f5b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f804441-4c4a-4f66-bfa9-6dfcf26155cc",
      "documentation": "Updates the properties of the specified Job.",
      "method": "patch",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "e98e8660-9609-4df4-8441-533cc2c8abf2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8a3b37b-fc24-49c0-be90-b5561ea795e8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "633189d2-613c-4c89-8811-05d8f84b33ff",
      "documentation": "Updates the properties of the specified Job.",
      "method": "put",
      "endpoint": "jobs/:jobId",
      "responses": [
        {
          "uuid": "6bc5b948-39fa-40da-9c66-d53f6ba2b2ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "754e91d2-1b55-4758-851d-e752e7eb4817",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55ea979b-c9d9-4479-94ad-6682ecdb4c12",
      "documentation": "Adds a collection of Tasks to the specified Job.",
      "method": "post",
      "endpoint": "jobs/:jobId/addtaskcollection",
      "responses": [
        {
          "uuid": "90d7b328-aed3-4d5f-89a4-a3a9ee324d77",
          "body": "{\n  \"value\": [\n    {\n      \"eTag\": \"\",\n      \"error\": {\n        \"code\": \"\",\n        \"message\": {\n          \"lang\": \"\",\n          \"value\": \"\"\n        },\n        \"values\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"location\": \"\",\n      \"status\": \"{{oneOf (array 'success' 'clienterror' 'servererror')}}\",\n      \"taskId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the add Task collection operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10624321-9c60-4407-aa6c-991e63bb9b19",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8de6210d-f35b-4930-af3e-f0ae2cdc41ad",
      "documentation": "Disables the specified Job, preventing new Tasks from running.",
      "method": "post",
      "endpoint": "jobs/:jobId/disable",
      "responses": [
        {
          "uuid": "a63b7ea1-8e7a-4d43-9312-09b59b78fcc1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cd18227-d979-481d-b4f1-2b5330f77e4d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "243c437e-45e3-4da2-871a-42928f7dd489",
      "documentation": "Enables the specified Job, allowing new Tasks to run.",
      "method": "post",
      "endpoint": "jobs/:jobId/enable",
      "responses": [
        {
          "uuid": "ff84b085-26da-4cfd-a27c-b95146e249c0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "226d7c30-0245-44bb-88d7-41823af2efab",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18923afd-29bb-44c4-8ea2-6a4cfd10f36e",
      "documentation": "Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run.",
      "method": "get",
      "endpoint": "jobs/:jobId/jobpreparationandreleasetaskstatus",
      "responses": [
        {
          "uuid": "a49ac17e-c438-452e-8d90-fa94291ebc4c",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"jobPreparationTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"jobReleaseTaskExecutionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"nodeId\": \"\",\n      \"nodeUrl\": \"\",\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing a list of Job Preparation and Job Release Task statuses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "718dd260-f8cc-4564-bb89-463cc248427d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ada50efd-b1d0-45f5-ae62-185e6f334ea1",
      "documentation": "Gets the Task counts for the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId/taskcounts",
      "responses": [
        {
          "uuid": "523a4f31-1492-4a1f-a8e0-3bdfe2918eb8",
          "body": "{\n  \"active\": {{faker 'random.number'}},\n  \"completed\": {{faker 'random.number'}},\n  \"failed\": {{faker 'random.number'}},\n  \"running\": {{faker 'random.number'}},\n  \"succeeded\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Task counts for the specified Job.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96899852-6af4-4aa9-b128-bf3ccd51f839",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41ae18e6-9394-41c8-ac1e-f76d817bb29f",
      "documentation": "Lists all of the Tasks that are associated with the specified Job.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "152e6a93-b124-42c0-9790-34f170749d7f",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityInfo\": {\n        \"affinityId\": \"\"\n      },\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"dependsOn\": {\n        \"taskIdRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"taskIds\": [\n          \"\"\n        ]\n      },\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"exitConditions\": {\n        \"default\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"exitCodeRanges\": [\n          {\n            \"end\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            },\n            \"start\": {{faker 'random.number'}}\n          }\n        ],\n        \"exitCodes\": [\n          {\n            \"code\": {{faker 'random.number'}},\n            \"exitOptions\": {\n              \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n              \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n            }\n          }\n        ],\n        \"fileUploadError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"preProcessingError\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"multiInstanceSettings\": {\n        \"commonResourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"coordinationCommandLine\": \"\",\n        \"numberOfInstances\": {{faker 'random.number'}}\n      },\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Tasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a3da980-f0f5-4618-9b28-a9922c313d75",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2d7f217-a77a-4880-86a2-1fddd1770916",
      "documentation": "Adds a Task to the specified Job.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks",
      "responses": [
        {
          "uuid": "84ccbc39-ed22-4a47-a32d-5d6c352c0c7f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c57a4751-28ed-4b5d-bc9b-b301ae792f4d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a34821e-de6b-4302-962c-8a72ec911593",
      "documentation": "Deletes a Task from the specified Job.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "51df04f4-fe81-4d5a-b9a6-06d513fa5f01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3001ff39-4055-4c4e-897c-4646fac340f6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28047b5d-b785-467f-a969-8ae96969f097",
      "documentation": "Gets information about the specified Task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "d415c86f-9255-4bca-9349-1e4335bcaece",
          "body": "{\n  \"affinityInfo\": {\n    \"affinityId\": \"\"\n  },\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"authenticationTokenSettings\": {\n    \"access\": [\n      \"{{oneOf (array 'job')}}\"\n    ]\n  },\n  \"commandLine\": \"\",\n  \"constraints\": {\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"maxWallClockTime\": \"\",\n    \"retentionTime\": \"\"\n  },\n  \"containerSettings\": {\n    \"containerRunOptions\": \"\",\n    \"imageName\": \"\",\n    \"registry\": {\n      \"password\": \"\",\n      \"registryServer\": \"\",\n      \"username\": \"\"\n    },\n    \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"dependsOn\": {\n    \"taskIdRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"taskIds\": [\n      \"\"\n    ]\n  },\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"environmentSettings\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"executionInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"requeueCount\": {{faker 'random.number'}},\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"exitConditions\": {\n    \"default\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"exitCodeRanges\": [\n      {\n        \"end\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        },\n        \"start\": {{faker 'random.number'}}\n      }\n    ],\n    \"exitCodes\": [\n      {\n        \"code\": {{faker 'random.number'}},\n        \"exitOptions\": {\n          \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n          \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n        }\n      }\n    ],\n    \"fileUploadError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    },\n    \"preProcessingError\": {\n      \"dependencyAction\": \"{{oneOf (array 'satisfy' 'block')}}\",\n      \"jobAction\": \"{{oneOf (array 'none' 'disable' 'terminate')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"multiInstanceSettings\": {\n    \"commonResourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"coordinationCommandLine\": \"\",\n    \"numberOfInstances\": {{faker 'random.number'}}\n  },\n  \"nodeInfo\": {\n    \"affinityId\": \"\",\n    \"nodeId\": \"\",\n    \"nodeUrl\": \"\",\n    \"poolId\": \"\",\n    \"taskRootDirectory\": \"\",\n    \"taskRootDirectoryUrl\": \"\"\n  },\n  \"outputFiles\": [\n    {\n      \"destination\": {\n        \"container\": {\n          \"containerUrl\": \"\",\n          \"path\": \"\"\n        }\n      },\n      \"filePattern\": \"\",\n      \"uploadOptions\": {\n        \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n      }\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceFiles\": [\n    {\n      \"autoStorageContainerName\": \"\",\n      \"blobPrefix\": \"\",\n      \"fileMode\": \"\",\n      \"filePath\": \"\",\n      \"httpUrl\": \"\",\n      \"storageContainerUrl\": \"\"\n    }\n  ],\n  \"state\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\",\n  \"userIdentity\": {\n    \"autoUser\": {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n    },\n    \"username\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Task.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e85d7bc1-87f1-40d1-9438-82c2cea81d40",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "972a6822-31e4-4dc0-9301-9323989a9da9",
      "documentation": "Updates the properties of the specified Task.",
      "method": "put",
      "endpoint": "jobs/:jobId/tasks/:taskId",
      "responses": [
        {
          "uuid": "ad597280-0c84-4afc-b3fe-ec5bcba32182",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "016cdd5f-7137-451d-99b8-00f81d04b5b5",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e116222-6473-47e2-b943-a864a3062df3",
      "documentation": "Lists the files in a Task's directory on its Compute Node.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files",
      "responses": [
        {
          "uuid": "d693d208-7916-47a6-a6b0-7544790cdd5e",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e661dec-0863-492a-bef4-2354d15498fc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8777fcb7-3747-448e-888c-2efe730ed2c1",
      "documentation": "Deletes the specified Task file from the Compute Node where the Task ran.",
      "method": "delete",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "fa198938-e01b-4d11-971e-fd26f1757405",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "785d40a3-bc6f-4ef3-84de-63688199bc10",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "689e8c93-f76a-4280-85b9-6adcac540aca",
      "documentation": "Returns the content of the specified Task file.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "f55c0bb5-d8fc-4541-9b8f-88fe3df0327a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c663765-3a09-41ac-a388-9cbddc2f5e1d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbb90c9a-a809-403e-8baa-902e5b3e9a67",
      "documentation": "Gets the properties of the specified Task file.",
      "method": "head",
      "endpoint": "jobs/:jobId/tasks/:taskId/files/:filePath",
      "responses": [
        {
          "uuid": "dc06b998-d235-4363-b007-ccaafc27c2a5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d55d1e-5f78-4e60-b871-d2c4aea6c8ef",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "594aeffd-db7a-46e8-a67d-facc98fbcbf5",
      "documentation": "Reactivates a Task, allowing it to run again even if its retry count has been exhausted.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/reactivate",
      "responses": [
        {
          "uuid": "933882e8-4309-4b4f-a9e0-e5c9371524f7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ab71ccf-de30-45ca-878b-8bda72db406e",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1aea7597-419c-4241-ace6-e805ecf4540d",
      "documentation": "Lists all of the subtasks that are associated with the specified multi-instance Task.",
      "method": "get",
      "endpoint": "jobs/:jobId/tasks/:taskId/subtasksinfo",
      "responses": [
        {
          "uuid": "95ba0eaa-6eef-40a7-855d-043f95a2c275",
          "body": "{\n  \"value\": [\n    {\n      \"containerInfo\": {\n        \"containerId\": \"\",\n        \"error\": \"\",\n        \"state\": \"\"\n      },\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"exitCode\": {{faker 'random.number'}},\n      \"failureInfo\": {\n        \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n        \"code\": \"\",\n        \"details\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"message\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"nodeInfo\": {\n        \"affinityId\": \"\",\n        \"nodeId\": \"\",\n        \"nodeUrl\": \"\",\n        \"poolId\": \"\",\n        \"taskRootDirectory\": \"\",\n        \"taskRootDirectoryUrl\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"state\": \"{{oneOf (array 'preparing' 'running' 'completed')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of subtasks.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bb4cb44-3e98-4a48-b902-ea06e414817c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e658d6be-baef-43e4-a505-56f4be3cb787",
      "documentation": "Terminates the specified Task.",
      "method": "post",
      "endpoint": "jobs/:jobId/tasks/:taskId/terminate",
      "responses": [
        {
          "uuid": "5b1dcaeb-3310-47ee-bab3-4a9a24a7a30e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a196ac6f-f087-42aa-ac76-5447c7407d26",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06810799-5f8a-4c59-b7db-cbfff00d001a",
      "documentation": "Terminates the specified Job, marking it as completed.",
      "method": "post",
      "endpoint": "jobs/:jobId/terminate",
      "responses": [
        {
          "uuid": "d3a6e7f8-ae64-4727-9744-1df27ce025b1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b50a2c42-7f68-48d7-8482-76d4ef8a5e3a",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eded9c02-9253-4f44-b6c0-04ae34337e12",
      "documentation": "Lists all of the Job Schedules in the specified Account.",
      "method": "get",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "48f41280-0b7b-4e27-9931-8572980bd743",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n        \"recentJob\": {\n          \"id\": \"\",\n          \"url\": \"\"\n        }\n      },\n      \"id\": \"\",\n      \"jobSpecification\": {\n        \"commonEnvironmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\"\n        },\n        \"displayName\": \"\",\n        \"jobManagerTask\": {\n          \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"authenticationTokenSettings\": {\n            \"access\": [\n              \"{{oneOf (array 'job')}}\"\n            ]\n          },\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"displayName\": \"\",\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"killJobOnCompletion\": {{faker 'random.boolean'}},\n          \"outputFiles\": [\n            {\n              \"destination\": {\n                \"container\": {\n                  \"containerUrl\": \"\",\n                  \"path\": \"\"\n                }\n              },\n              \"filePattern\": \"\",\n              \"uploadOptions\": {\n                \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n              }\n            }\n          ],\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"runExclusive\": {{faker 'random.boolean'}},\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"jobPreparationTask\": {\n          \"commandLine\": \"\",\n          \"constraints\": {\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"maxWallClockTime\": \"\",\n            \"retentionTime\": \"\"\n          },\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          },\n          \"waitForSuccess\": {{faker 'random.boolean'}}\n        },\n        \"jobReleaseTask\": {\n          \"commandLine\": \"\",\n          \"containerSettings\": {\n            \"containerRunOptions\": \"\",\n            \"imageName\": \"\",\n            \"registry\": {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            },\n            \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n          },\n          \"environmentSettings\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"maxWallClockTime\": \"\",\n          \"resourceFiles\": [\n            {\n              \"autoStorageContainerName\": \"\",\n              \"blobPrefix\": \"\",\n              \"fileMode\": \"\",\n              \"filePath\": \"\",\n              \"httpUrl\": \"\",\n              \"storageContainerUrl\": \"\"\n            }\n          ],\n          \"retentionTime\": \"\",\n          \"userIdentity\": {\n            \"autoUser\": {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n            },\n            \"username\": \"\"\n          }\n        },\n        \"metadata\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"networkConfiguration\": {\n          \"subnetId\": \"\"\n        },\n        \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n        \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n        \"poolInfo\": {\n          \"autoPoolSpecification\": {\n            \"autoPoolIdPrefix\": \"\",\n            \"keepAlive\": {{faker 'random.boolean'}},\n            \"pool\": {\n              \"applicationLicenses\": [\n                \"\"\n              ],\n              \"applicationPackageReferences\": [\n                {\n                  \"applicationId\": \"\",\n                  \"version\": \"\"\n                }\n              ],\n              \"autoScaleEvaluationInterval\": \"\",\n              \"autoScaleFormula\": \"\",\n              \"certificateReferences\": [\n                {\n                  \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                  \"storeName\": \"\",\n                  \"thumbprint\": \"\",\n                  \"thumbprintAlgorithm\": \"\",\n                  \"visibility\": [\n                    \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                  ]\n                }\n              ],\n              \"cloudServiceConfiguration\": {\n                \"osFamily\": \"\",\n                \"osVersion\": \"\"\n              },\n              \"displayName\": \"\",\n              \"enableAutoScale\": {{faker 'random.boolean'}},\n              \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n              \"maxTasksPerNode\": {{faker 'random.number'}},\n              \"metadata\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"mountConfiguration\": [\n                {\n                  \"azureBlobFileSystemConfiguration\": {\n                    \"accountKey\": \"\",\n                    \"accountName\": \"\",\n                    \"blobfuseOptions\": \"\",\n                    \"containerName\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"sasKey\": \"\"\n                  },\n                  \"azureFileShareConfiguration\": {\n                    \"accountKey\": \"\",\n                    \"accountName\": \"\",\n                    \"azureFileUrl\": \"\",\n                    \"mountOptions\": \"\",\n                    \"relativeMountPath\": \"\"\n                  },\n                  \"cifsMountConfiguration\": {\n                    \"mountOptions\": \"\",\n                    \"password\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"source\": \"\",\n                    \"username\": \"\"\n                  },\n                  \"nfsMountConfiguration\": {\n                    \"mountOptions\": \"\",\n                    \"relativeMountPath\": \"\",\n                    \"source\": \"\"\n                  }\n                }\n              ],\n              \"networkConfiguration\": {\n                \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n                \"endpointConfiguration\": {\n                  \"inboundNATPools\": [\n                    {\n                      \"backendPort\": {{faker 'random.number'}},\n                      \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                      \"frontendPortRangeStart\": {{faker 'random.number'}},\n                      \"name\": \"\",\n                      \"networkSecurityGroupRules\": [\n                        {\n                          \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                          \"priority\": {{faker 'random.number'}},\n                          \"sourceAddressPrefix\": \"\",\n                          \"sourcePortRanges\": [\n                            \"\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                    }\n                  ]\n                },\n                \"publicIPs\": [\n                  \"\"\n                ],\n                \"subnetId\": \"\"\n              },\n              \"resizeTimeout\": \"\",\n              \"startTask\": {\n                \"commandLine\": \"\",\n                \"containerSettings\": {\n                  \"containerRunOptions\": \"\",\n                  \"imageName\": \"\",\n                  \"registry\": {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  },\n                  \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n                },\n                \"environmentSettings\": [\n                  {\n                    \"name\": \"\",\n                    \"value\": \"\"\n                  }\n                ],\n                \"maxTaskRetryCount\": {{faker 'random.number'}},\n                \"resourceFiles\": [\n                  {\n                    \"autoStorageContainerName\": \"\",\n                    \"blobPrefix\": \"\",\n                    \"fileMode\": \"\",\n                    \"filePath\": \"\",\n                    \"httpUrl\": \"\",\n                    \"storageContainerUrl\": \"\"\n                  }\n                ],\n                \"userIdentity\": {\n                  \"autoUser\": {\n                    \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                    \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                  },\n                  \"username\": \"\"\n                },\n                \"waitForSuccess\": {{faker 'random.boolean'}}\n              },\n              \"targetDedicatedNodes\": {{faker 'random.number'}},\n              \"targetLowPriorityNodes\": {{faker 'random.number'}},\n              \"taskSchedulingPolicy\": {\n                \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n              },\n              \"userAccounts\": [\n                {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"linuxUserConfiguration\": {\n                    \"gid\": {{faker 'random.number'}},\n                    \"sshPrivateKey\": \"\",\n                    \"uid\": {{faker 'random.number'}}\n                  },\n                  \"name\": \"\",\n                  \"password\": \"\",\n                  \"windowsUserConfiguration\": {\n                    \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                  }\n                }\n              ],\n              \"virtualMachineConfiguration\": {\n                \"containerConfiguration\": {\n                  \"containerImageNames\": [\n                    \"\"\n                  ],\n                  \"containerRegistries\": [\n                    {\n                      \"password\": \"\",\n                      \"registryServer\": \"\",\n                      \"username\": \"\"\n                    }\n                  ],\n                  \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n                },\n                \"dataDisks\": [\n                  {\n                    \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                    \"diskSizeGB\": {{faker 'random.number'}},\n                    \"lun\": {{faker 'random.number'}},\n                    \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                  }\n                ],\n                \"imageReference\": {\n                  \"offer\": \"\",\n                  \"publisher\": \"\",\n                  \"sku\": \"\",\n                  \"version\": \"\",\n                  \"virtualMachineImageId\": \"\"\n                },\n                \"licenseType\": \"\",\n                \"nodeAgentSKUId\": \"\",\n                \"windowsConfiguration\": {\n                  \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n                }\n              },\n              \"vmSize\": \"\"\n            },\n            \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n          },\n          \"poolId\": \"\"\n        },\n        \"priority\": {{faker 'random.number'}},\n        \"usesTaskDependencies\": {{faker 'random.boolean'}}\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"schedule\": {\n        \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n        \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n        \"recurrenceInterval\": \"\",\n        \"startWindow\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Job Schedules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7adfb442-1499-48f8-9d05-c87d4ae7d02d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "675d15d2-7fdb-486d-882a-49e9d02e2493",
      "documentation": "Adds a Job Schedule to the specified Account.",
      "method": "post",
      "endpoint": "jobschedules",
      "responses": [
        {
          "uuid": "159f07a8-6f38-4827-9d2d-131a5f32ba3b",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9543ecaa-f441-45b2-ba7d-b3b58f136ae4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "536b8e7f-a391-4f29-8931-b53cc97ff172",
      "documentation": "Deletes a Job Schedule from the specified Account.",
      "method": "delete",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "09119e47-f226-42fd-95d2-05ab57d6e89f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd05035d-d7c4-46c1-9825-9f803cc5b40c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e029449c-58a2-4c2b-9614-637172c4d4dc",
      "documentation": "Gets information about the specified Job Schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "5dbbd7a2-5141-437f-91df-f49eb7502098",
          "body": "{\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"executionInfo\": {\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"nextRunTime\": \"{{faker 'date.recent' 365}}\",\n    \"recentJob\": {\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  },\n  \"id\": \"\",\n  \"jobSpecification\": {\n    \"commonEnvironmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"constraints\": {\n      \"maxTaskRetryCount\": {{faker 'random.number'}},\n      \"maxWallClockTime\": \"\"\n    },\n    \"displayName\": \"\",\n    \"jobManagerTask\": {\n      \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"authenticationTokenSettings\": {\n        \"access\": [\n          \"{{oneOf (array 'job')}}\"\n        ]\n      },\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"displayName\": \"\",\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"killJobOnCompletion\": {{faker 'random.boolean'}},\n      \"outputFiles\": [\n        {\n          \"destination\": {\n            \"container\": {\n              \"containerUrl\": \"\",\n              \"path\": \"\"\n            }\n          },\n          \"filePattern\": \"\",\n          \"uploadOptions\": {\n            \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n          }\n        }\n      ],\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"runExclusive\": {{faker 'random.boolean'}},\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"jobPreparationTask\": {\n      \"commandLine\": \"\",\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\",\n        \"retentionTime\": \"\"\n      },\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      },\n      \"waitForSuccess\": {{faker 'random.boolean'}}\n    },\n    \"jobReleaseTask\": {\n      \"commandLine\": \"\",\n      \"containerSettings\": {\n        \"containerRunOptions\": \"\",\n        \"imageName\": \"\",\n        \"registry\": {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        },\n        \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n      },\n      \"environmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"maxWallClockTime\": \"\",\n      \"resourceFiles\": [\n        {\n          \"autoStorageContainerName\": \"\",\n          \"blobPrefix\": \"\",\n          \"fileMode\": \"\",\n          \"filePath\": \"\",\n          \"httpUrl\": \"\",\n          \"storageContainerUrl\": \"\"\n        }\n      ],\n      \"retentionTime\": \"\",\n      \"userIdentity\": {\n        \"autoUser\": {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n        },\n        \"username\": \"\"\n      }\n    },\n    \"metadata\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"networkConfiguration\": {\n      \"subnetId\": \"\"\n    },\n    \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n    \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n    \"poolInfo\": {\n      \"autoPoolSpecification\": {\n        \"autoPoolIdPrefix\": \"\",\n        \"keepAlive\": {{faker 'random.boolean'}},\n        \"pool\": {\n          \"applicationLicenses\": [\n            \"\"\n          ],\n          \"applicationPackageReferences\": [\n            {\n              \"applicationId\": \"\",\n              \"version\": \"\"\n            }\n          ],\n          \"autoScaleEvaluationInterval\": \"\",\n          \"autoScaleFormula\": \"\",\n          \"certificateReferences\": [\n            {\n              \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n              \"storeName\": \"\",\n              \"thumbprint\": \"\",\n              \"thumbprintAlgorithm\": \"\",\n              \"visibility\": [\n                \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n              ]\n            }\n          ],\n          \"cloudServiceConfiguration\": {\n            \"osFamily\": \"\",\n            \"osVersion\": \"\"\n          },\n          \"displayName\": \"\",\n          \"enableAutoScale\": {{faker 'random.boolean'}},\n          \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n          \"maxTasksPerNode\": {{faker 'random.number'}},\n          \"metadata\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"mountConfiguration\": [\n            {\n              \"azureBlobFileSystemConfiguration\": {\n                \"accountKey\": \"\",\n                \"accountName\": \"\",\n                \"blobfuseOptions\": \"\",\n                \"containerName\": \"\",\n                \"relativeMountPath\": \"\",\n                \"sasKey\": \"\"\n              },\n              \"azureFileShareConfiguration\": {\n                \"accountKey\": \"\",\n                \"accountName\": \"\",\n                \"azureFileUrl\": \"\",\n                \"mountOptions\": \"\",\n                \"relativeMountPath\": \"\"\n              },\n              \"cifsMountConfiguration\": {\n                \"mountOptions\": \"\",\n                \"password\": \"\",\n                \"relativeMountPath\": \"\",\n                \"source\": \"\",\n                \"username\": \"\"\n              },\n              \"nfsMountConfiguration\": {\n                \"mountOptions\": \"\",\n                \"relativeMountPath\": \"\",\n                \"source\": \"\"\n              }\n            }\n          ],\n          \"networkConfiguration\": {\n            \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n            \"endpointConfiguration\": {\n              \"inboundNATPools\": [\n                {\n                  \"backendPort\": {{faker 'random.number'}},\n                  \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                  \"frontendPortRangeStart\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"networkSecurityGroupRules\": [\n                    {\n                      \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                      \"priority\": {{faker 'random.number'}},\n                      \"sourceAddressPrefix\": \"\",\n                      \"sourcePortRanges\": [\n                        \"\"\n                      ]\n                    }\n                  ],\n                  \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                }\n              ]\n            },\n            \"publicIPs\": [\n              \"\"\n            ],\n            \"subnetId\": \"\"\n          },\n          \"resizeTimeout\": \"\",\n          \"startTask\": {\n            \"commandLine\": \"\",\n            \"containerSettings\": {\n              \"containerRunOptions\": \"\",\n              \"imageName\": \"\",\n              \"registry\": {\n                \"password\": \"\",\n                \"registryServer\": \"\",\n                \"username\": \"\"\n              },\n              \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n            },\n            \"environmentSettings\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"maxTaskRetryCount\": {{faker 'random.number'}},\n            \"resourceFiles\": [\n              {\n                \"autoStorageContainerName\": \"\",\n                \"blobPrefix\": \"\",\n                \"fileMode\": \"\",\n                \"filePath\": \"\",\n                \"httpUrl\": \"\",\n                \"storageContainerUrl\": \"\"\n              }\n            ],\n            \"userIdentity\": {\n              \"autoUser\": {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n              },\n              \"username\": \"\"\n            },\n            \"waitForSuccess\": {{faker 'random.boolean'}}\n          },\n          \"targetDedicatedNodes\": {{faker 'random.number'}},\n          \"targetLowPriorityNodes\": {{faker 'random.number'}},\n          \"taskSchedulingPolicy\": {\n            \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n          },\n          \"userAccounts\": [\n            {\n              \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n              \"linuxUserConfiguration\": {\n                \"gid\": {{faker 'random.number'}},\n                \"sshPrivateKey\": \"\",\n                \"uid\": {{faker 'random.number'}}\n              },\n              \"name\": \"\",\n              \"password\": \"\",\n              \"windowsUserConfiguration\": {\n                \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n              }\n            }\n          ],\n          \"virtualMachineConfiguration\": {\n            \"containerConfiguration\": {\n              \"containerImageNames\": [\n                \"\"\n              ],\n              \"containerRegistries\": [\n                {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                }\n              ],\n              \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n            },\n            \"dataDisks\": [\n              {\n                \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                \"diskSizeGB\": {{faker 'random.number'}},\n                \"lun\": {{faker 'random.number'}},\n                \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n              }\n            ],\n            \"imageReference\": {\n              \"offer\": \"\",\n              \"publisher\": \"\",\n              \"sku\": \"\",\n              \"version\": \"\",\n              \"virtualMachineImageId\": \"\"\n            },\n            \"licenseType\": \"\",\n            \"nodeAgentSKUId\": \"\",\n            \"windowsConfiguration\": {\n              \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n            }\n          },\n          \"vmSize\": \"\"\n        },\n        \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n      },\n      \"poolId\": \"\"\n    },\n    \"priority\": {{faker 'random.number'}},\n    \"usesTaskDependencies\": {{faker 'random.boolean'}}\n  },\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"previousState\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"schedule\": {\n    \"doNotRunAfter\": \"{{faker 'date.recent' 365}}\",\n    \"doNotRunUntil\": \"{{faker 'date.recent' 365}}\",\n    \"recurrenceInterval\": \"\",\n    \"startWindow\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'active' 'completed' 'disabled' 'terminating' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"kernelCPUTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"numFailedTasks\": {{faker 'random.number'}},\n    \"numSucceededTasks\": {{faker 'random.number'}},\n    \"numTaskRetries\": {{faker 'random.number'}},\n    \"readIOGiB\": {{faker 'random.float'}},\n    \"readIOps\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"userCPUTime\": \"\",\n    \"waitTime\": \"\",\n    \"wallClockTime\": \"\",\n    \"writeIOGiB\": {{faker 'random.float'}},\n    \"writeIOps\": {{faker 'random.number'}}\n  },\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job Schedule.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2dc2b2-7bd7-47f7-806a-8cd3351a535d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ec6314a-2897-4a72-ab26-d9cbe83bf950",
      "documentation": "Checks the specified Job Schedule exists.",
      "method": "head",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "549aa3d8-164d-481b-85b8-f955fcee64c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the Job Schedule, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dea4809-4ebe-48d7-b0e5-b21a0566ca4a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Job Schedule does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44b01a3c-ebcc-4099-878d-502d177eb18c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57248807-04a2-4d64-b0bd-11eaa5f2b23e",
      "documentation": "Updates the properties of the specified Job Schedule.",
      "method": "patch",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "a0eaedc8-3087-4823-ab10-5b68410e7e7d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b9af6ca-266e-4b8a-a10b-10e1f431fa05",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c035ab11-8564-4403-a3e8-3edd61643526",
      "documentation": "Updates the properties of the specified Job Schedule.",
      "method": "put",
      "endpoint": "jobschedules/:jobScheduleId",
      "responses": [
        {
          "uuid": "3231ee4d-513b-41de-9f93-c862bd99ce7b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53597b67-3669-4266-9c52-d734ed01e3de",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5120097-b498-4475-99ed-dc7836533df3",
      "documentation": "Disables a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/disable",
      "responses": [
        {
          "uuid": "750d959c-a284-4332-97ed-4e0afa8de816",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c286a5b-21a6-49be-9345-2d7554f1ca1f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8c5f837-6ed9-4926-b8be-e7ca787e8bd2",
      "documentation": "Enables a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/enable",
      "responses": [
        {
          "uuid": "211a5eb9-ab32-4ae9-bb76-cb6a72895460",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cc36ca8-5333-4ee3-8028-14dfbe5a4a99",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01b928fa-0042-4b49-bf44-300841150ca2",
      "documentation": "Lists the Jobs that have been created under the specified Job Schedule.",
      "method": "get",
      "endpoint": "jobschedules/:jobScheduleId/jobs",
      "responses": [
        {
          "uuid": "49830f14-22a7-469c-8ad9-ae9cd34b8d7d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"commonEnvironmentSettings\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"constraints\": {\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"maxWallClockTime\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"executionInfo\": {\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"poolId\": \"\",\n        \"schedulingError\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"terminateReason\": \"\"\n      },\n      \"id\": \"\",\n      \"jobManagerTask\": {\n        \"allowLowPriorityNode\": {{faker 'random.boolean'}},\n        \"applicationPackageReferences\": [\n          {\n            \"applicationId\": \"\",\n            \"version\": \"\"\n          }\n        ],\n        \"authenticationTokenSettings\": {\n          \"access\": [\n            \"{{oneOf (array 'job')}}\"\n          ]\n        },\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"displayName\": \"\",\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"killJobOnCompletion\": {{faker 'random.boolean'}},\n        \"outputFiles\": [\n          {\n            \"destination\": {\n              \"container\": {\n                \"containerUrl\": \"\",\n                \"path\": \"\"\n              }\n            },\n            \"filePattern\": \"\",\n            \"uploadOptions\": {\n              \"uploadCondition\": \"{{oneOf (array 'tasksuccess' 'taskfailure' 'taskcompletion')}}\"\n            }\n          }\n        ],\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"runExclusive\": {{faker 'random.boolean'}},\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"jobPreparationTask\": {\n        \"commandLine\": \"\",\n        \"constraints\": {\n          \"maxTaskRetryCount\": {{faker 'random.number'}},\n          \"maxWallClockTime\": \"\",\n          \"retentionTime\": \"\"\n        },\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"rerunOnNodeRebootAfterSuccess\": {{faker 'random.boolean'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"jobReleaseTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"maxWallClockTime\": \"\",\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"retentionTime\": \"\",\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        }\n      },\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"networkConfiguration\": {\n        \"subnetId\": \"\"\n      },\n      \"onAllTasksComplete\": \"{{oneOf (array 'noaction' 'terminatejob')}}\",\n      \"onTaskFailure\": \"{{oneOf (array 'noaction' 'performexitoptionsjobaction')}}\",\n      \"poolInfo\": {\n        \"autoPoolSpecification\": {\n          \"autoPoolIdPrefix\": \"\",\n          \"keepAlive\": {{faker 'random.boolean'}},\n          \"pool\": {\n            \"applicationLicenses\": [\n              \"\"\n            ],\n            \"applicationPackageReferences\": [\n              {\n                \"applicationId\": \"\",\n                \"version\": \"\"\n              }\n            ],\n            \"autoScaleEvaluationInterval\": \"\",\n            \"autoScaleFormula\": \"\",\n            \"certificateReferences\": [\n              {\n                \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n                \"storeName\": \"\",\n                \"thumbprint\": \"\",\n                \"thumbprintAlgorithm\": \"\",\n                \"visibility\": [\n                  \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n                ]\n              }\n            ],\n            \"cloudServiceConfiguration\": {\n              \"osFamily\": \"\",\n              \"osVersion\": \"\"\n            },\n            \"displayName\": \"\",\n            \"enableAutoScale\": {{faker 'random.boolean'}},\n            \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n            \"maxTasksPerNode\": {{faker 'random.number'}},\n            \"metadata\": [\n              {\n                \"name\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"mountConfiguration\": [\n              {\n                \"azureBlobFileSystemConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"blobfuseOptions\": \"\",\n                  \"containerName\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"sasKey\": \"\"\n                },\n                \"azureFileShareConfiguration\": {\n                  \"accountKey\": \"\",\n                  \"accountName\": \"\",\n                  \"azureFileUrl\": \"\",\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\"\n                },\n                \"cifsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"password\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\",\n                  \"username\": \"\"\n                },\n                \"nfsMountConfiguration\": {\n                  \"mountOptions\": \"\",\n                  \"relativeMountPath\": \"\",\n                  \"source\": \"\"\n                }\n              }\n            ],\n            \"networkConfiguration\": {\n              \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n              \"endpointConfiguration\": {\n                \"inboundNATPools\": [\n                  {\n                    \"backendPort\": {{faker 'random.number'}},\n                    \"frontendPortRangeEnd\": {{faker 'random.number'}},\n                    \"frontendPortRangeStart\": {{faker 'random.number'}},\n                    \"name\": \"\",\n                    \"networkSecurityGroupRules\": [\n                      {\n                        \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                        \"priority\": {{faker 'random.number'}},\n                        \"sourceAddressPrefix\": \"\",\n                        \"sourcePortRanges\": [\n                          \"\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n                  }\n                ]\n              },\n              \"publicIPs\": [\n                \"\"\n              ],\n              \"subnetId\": \"\"\n            },\n            \"resizeTimeout\": \"\",\n            \"startTask\": {\n              \"commandLine\": \"\",\n              \"containerSettings\": {\n                \"containerRunOptions\": \"\",\n                \"imageName\": \"\",\n                \"registry\": {\n                  \"password\": \"\",\n                  \"registryServer\": \"\",\n                  \"username\": \"\"\n                },\n                \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n              },\n              \"environmentSettings\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"maxTaskRetryCount\": {{faker 'random.number'}},\n              \"resourceFiles\": [\n                {\n                  \"autoStorageContainerName\": \"\",\n                  \"blobPrefix\": \"\",\n                  \"fileMode\": \"\",\n                  \"filePath\": \"\",\n                  \"httpUrl\": \"\",\n                  \"storageContainerUrl\": \"\"\n                }\n              ],\n              \"userIdentity\": {\n                \"autoUser\": {\n                  \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                  \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n                },\n                \"username\": \"\"\n              },\n              \"waitForSuccess\": {{faker 'random.boolean'}}\n            },\n            \"targetDedicatedNodes\": {{faker 'random.number'}},\n            \"targetLowPriorityNodes\": {{faker 'random.number'}},\n            \"taskSchedulingPolicy\": {\n              \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n            },\n            \"userAccounts\": [\n              {\n                \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n                \"linuxUserConfiguration\": {\n                  \"gid\": {{faker 'random.number'}},\n                  \"sshPrivateKey\": \"\",\n                  \"uid\": {{faker 'random.number'}}\n                },\n                \"name\": \"\",\n                \"password\": \"\",\n                \"windowsUserConfiguration\": {\n                  \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n                }\n              }\n            ],\n            \"virtualMachineConfiguration\": {\n              \"containerConfiguration\": {\n                \"containerImageNames\": [\n                  \"\"\n                ],\n                \"containerRegistries\": [\n                  {\n                    \"password\": \"\",\n                    \"registryServer\": \"\",\n                    \"username\": \"\"\n                  }\n                ],\n                \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n              },\n              \"dataDisks\": [\n                {\n                  \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n                  \"diskSizeGB\": {{faker 'random.number'}},\n                  \"lun\": {{faker 'random.number'}},\n                  \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n                }\n              ],\n              \"imageReference\": {\n                \"offer\": \"\",\n                \"publisher\": \"\",\n                \"sku\": \"\",\n                \"version\": \"\",\n                \"virtualMachineImageId\": \"\"\n              },\n              \"licenseType\": \"\",\n              \"nodeAgentSKUId\": \"\",\n              \"windowsConfiguration\": {\n                \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n              }\n            },\n            \"vmSize\": \"\"\n          },\n          \"poolLifetimeOption\": \"{{oneOf (array 'jobschedule' 'job')}}\"\n        },\n        \"poolId\": \"\"\n      },\n      \"previousState\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"previousStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"priority\": {{faker 'random.number'}},\n      \"state\": \"{{oneOf (array 'active' 'disabling' 'disabled' 'enabling' 'terminating' 'completed' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"kernelCPUTime\": \"\",\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"numFailedTasks\": {{faker 'random.number'}},\n        \"numSucceededTasks\": {{faker 'random.number'}},\n        \"numTaskRetries\": {{faker 'random.number'}},\n        \"readIOGiB\": {{faker 'random.float'}},\n        \"readIOps\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"userCPUTime\": \"\",\n        \"waitTime\": \"\",\n        \"wallClockTime\": \"\",\n        \"writeIOGiB\": {{faker 'random.float'}},\n        \"writeIOps\": {{faker 'random.number'}}\n      },\n      \"url\": \"\",\n      \"usesTaskDependencies\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Jobs.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b92572-0f9b-4b2c-884e-c335c2fdacde",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b628320-0f7e-4645-b51a-3ffdca286998",
      "documentation": "Terminates a Job Schedule.",
      "method": "post",
      "endpoint": "jobschedules/:jobScheduleId/terminate",
      "responses": [
        {
          "uuid": "385258de-86d4-4a16-adc4-cf052688cac3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a9dc567-34b8-47bb-9e5d-b6ec4662e35b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e1ee22d-ebbe-4a19-b8de-5a92020b3f1f",
      "documentation": "Gets lifetime summary statistics for all of the Jobs in the specified Account.",
      "method": "get",
      "endpoint": "lifetimejobstats",
      "responses": [
        {
          "uuid": "72a1a1a0-a1c6-493d-8a2b-26cf86ac089b",
          "body": "{\n  \"kernelCPUTime\": \"\",\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"numFailedTasks\": {{faker 'random.number'}},\n  \"numSucceededTasks\": {{faker 'random.number'}},\n  \"numTaskRetries\": {{faker 'random.number'}},\n  \"readIOGiB\": {{faker 'random.float'}},\n  \"readIOps\": {{faker 'random.number'}},\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"userCPUTime\": \"\",\n  \"waitTime\": \"\",\n  \"wallClockTime\": \"\",\n  \"writeIOGiB\": {{faker 'random.float'}},\n  \"writeIOps\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Job statistics for the lifetime of the Batch Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01f9bbd2-9388-47d1-842e-d48163e61817",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b053e73-2fca-4b21-8bf8-d9b024d7f716",
      "documentation": "Gets lifetime summary statistics for all of the Pools in the specified Account.",
      "method": "get",
      "endpoint": "lifetimepoolstats",
      "responses": [
        {
          "uuid": "38aec6dc-c369-4949-8b68-87a07f4dd8b8",
          "body": "{\n  \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n  \"resourceStats\": {\n    \"avgCPUPercentage\": {{faker 'random.float'}},\n    \"avgDiskGiB\": {{faker 'random.float'}},\n    \"avgMemoryGiB\": {{faker 'random.float'}},\n    \"diskReadGiB\": {{faker 'random.float'}},\n    \"diskReadIOps\": {{faker 'random.number'}},\n    \"diskWriteGiB\": {{faker 'random.float'}},\n    \"diskWriteIOps\": {{faker 'random.number'}},\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"networkReadGiB\": {{faker 'random.float'}},\n    \"networkWriteGiB\": {{faker 'random.float'}},\n    \"peakDiskGiB\": {{faker 'random.float'}},\n    \"peakMemoryGiB\": {{faker 'random.float'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"startTime\": \"{{faker 'date.recent' 365}}\",\n  \"url\": \"\",\n  \"usageStats\": {\n    \"dedicatedCoreTime\": \"\",\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Pool statistics for the lifetime of the Batch Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27dfc19f-f8be-49f4-a19a-87398d3990f3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e153283c-e80b-41d6-9ed3-1c6d97623a0a",
      "documentation": "Gets the number of Compute Nodes in each state, grouped by Pool.",
      "method": "get",
      "endpoint": "nodecounts",
      "responses": [
        {
          "uuid": "842d98ca-0de9-4bd0-b4ea-aee686fa163d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"dedicated\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"lowPriority\": {\n        \"creating\": {{faker 'random.number'}},\n        \"idle\": {{faker 'random.number'}},\n        \"leavingPool\": {{faker 'random.number'}},\n        \"offline\": {{faker 'random.number'}},\n        \"preempted\": {{faker 'random.number'}},\n        \"rebooting\": {{faker 'random.number'}},\n        \"reimaging\": {{faker 'random.number'}},\n        \"running\": {{faker 'random.number'}},\n        \"startTaskFailed\": {{faker 'random.number'}},\n        \"starting\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"unknown\": {{faker 'random.number'}},\n        \"unusable\": {{faker 'random.number'}},\n        \"waitingForStartTask\": {{faker 'random.number'}}\n      },\n      \"poolId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The response contains the number of Compute Nodes in each Compute Node state, grouped by Pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ddcdeb3-eb88-4e35-a7a1-6629882f9991",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a7fd27d-a744-4f73-b31a-61e18eb8a4cc",
      "documentation": "Lists all of the Pools in the specified Account.",
      "method": "get",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "5b2ef9f1-a0a6-4411-bac1-0b55ee130ed4",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n      \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"applicationLicenses\": [\n        \"\"\n      ],\n      \"applicationPackageReferences\": [\n        {\n          \"applicationId\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"autoScaleEvaluationInterval\": \"\",\n      \"autoScaleFormula\": \"\",\n      \"autoScaleRun\": {\n        \"error\": {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        \"results\": \"\",\n        \"timestamp\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"cloudServiceConfiguration\": {\n        \"osFamily\": \"\",\n        \"osVersion\": \"\"\n      },\n      \"creationTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentDedicatedNodes\": {{faker 'random.number'}},\n      \"currentLowPriorityNodes\": {{faker 'random.number'}},\n      \"displayName\": \"\",\n      \"eTag\": \"\",\n      \"enableAutoScale\": {{faker 'random.boolean'}},\n      \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"maxTasksPerNode\": {{faker 'random.number'}},\n      \"metadata\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"mountConfiguration\": [\n        {\n          \"azureBlobFileSystemConfiguration\": {\n            \"accountKey\": \"\",\n            \"accountName\": \"\",\n            \"blobfuseOptions\": \"\",\n            \"containerName\": \"\",\n            \"relativeMountPath\": \"\",\n            \"sasKey\": \"\"\n          },\n          \"azureFileShareConfiguration\": {\n            \"accountKey\": \"\",\n            \"accountName\": \"\",\n            \"azureFileUrl\": \"\",\n            \"mountOptions\": \"\",\n            \"relativeMountPath\": \"\"\n          },\n          \"cifsMountConfiguration\": {\n            \"mountOptions\": \"\",\n            \"password\": \"\",\n            \"relativeMountPath\": \"\",\n            \"source\": \"\",\n            \"username\": \"\"\n          },\n          \"nfsMountConfiguration\": {\n            \"mountOptions\": \"\",\n            \"relativeMountPath\": \"\",\n            \"source\": \"\"\n          }\n        }\n      ],\n      \"networkConfiguration\": {\n        \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n        \"endpointConfiguration\": {\n          \"inboundNATPools\": [\n            {\n              \"backendPort\": {{faker 'random.number'}},\n              \"frontendPortRangeEnd\": {{faker 'random.number'}},\n              \"frontendPortRangeStart\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"networkSecurityGroupRules\": [\n                {\n                  \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n                  \"priority\": {{faker 'random.number'}},\n                  \"sourceAddressPrefix\": \"\",\n                  \"sourcePortRanges\": [\n                    \"\"\n                  ]\n                }\n              ],\n              \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n            }\n          ]\n        },\n        \"publicIPs\": [\n          \"\"\n        ],\n        \"subnetId\": \"\"\n      },\n      \"resizeErrors\": [\n        {\n          \"code\": \"\",\n          \"message\": \"\",\n          \"values\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"resizeTimeout\": \"\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"state\": \"{{oneOf (array 'active' 'deleting')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"stats\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"resourceStats\": {\n          \"avgCPUPercentage\": {{faker 'random.float'}},\n          \"avgDiskGiB\": {{faker 'random.float'}},\n          \"avgMemoryGiB\": {{faker 'random.float'}},\n          \"diskReadGiB\": {{faker 'random.float'}},\n          \"diskReadIOps\": {{faker 'random.number'}},\n          \"diskWriteGiB\": {{faker 'random.float'}},\n          \"diskWriteIOps\": {{faker 'random.number'}},\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"networkReadGiB\": {{faker 'random.float'}},\n          \"networkWriteGiB\": {{faker 'random.float'}},\n          \"peakDiskGiB\": {{faker 'random.float'}},\n          \"peakMemoryGiB\": {{faker 'random.float'}},\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        },\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"url\": \"\",\n        \"usageStats\": {\n          \"dedicatedCoreTime\": \"\",\n          \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\"\n        }\n      },\n      \"targetDedicatedNodes\": {{faker 'random.number'}},\n      \"targetLowPriorityNodes\": {{faker 'random.number'}},\n      \"taskSchedulingPolicy\": {\n        \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n      },\n      \"url\": \"\",\n      \"userAccounts\": [\n        {\n          \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n          \"linuxUserConfiguration\": {\n            \"gid\": {{faker 'random.number'}},\n            \"sshPrivateKey\": \"\",\n            \"uid\": {{faker 'random.number'}}\n          },\n          \"name\": \"\",\n          \"password\": \"\",\n          \"windowsUserConfiguration\": {\n            \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n          }\n        }\n      ],\n      \"virtualMachineConfiguration\": {\n        \"containerConfiguration\": {\n          \"containerImageNames\": [\n            \"\"\n          ],\n          \"containerRegistries\": [\n            {\n              \"password\": \"\",\n              \"registryServer\": \"\",\n              \"username\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n        },\n        \"dataDisks\": [\n          {\n            \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n            \"diskSizeGB\": {{faker 'random.number'}},\n            \"lun\": {{faker 'random.number'}},\n            \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n          }\n        ],\n        \"imageReference\": {\n          \"offer\": \"\",\n          \"publisher\": \"\",\n          \"sku\": \"\",\n          \"version\": \"\",\n          \"virtualMachineImageId\": \"\"\n        },\n        \"licenseType\": \"\",\n        \"nodeAgentSKUId\": \"\",\n        \"windowsConfiguration\": {\n          \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n        }\n      },\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Pools.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f2aa9b-99ca-4a19-ae1e-68d272acd051",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53497656-6c85-4c28-9d93-961763e908f0",
      "documentation": "Adds a Pool to the specified Account.",
      "method": "post",
      "endpoint": "pools",
      "responses": [
        {
          "uuid": "74128a84-ede7-4aba-977a-661572d6f12c",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08578798-ea91-4501-9a14-fae267e9b6ec",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a783923-7785-4948-8218-e543c37e95ba",
      "documentation": "Deletes a Pool from the specified Account.",
      "method": "delete",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "e96968e3-b517-4d15-952e-aaeb37caf0b0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98a50d98-9d27-48ec-a254-b11bae564ea6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16b58544-1614-4825-bbfb-25ff04fba17e",
      "documentation": "Gets information about the specified Pool.",
      "method": "get",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "0e827d63-b8d9-4f01-9f10-bbddb990cc5d",
          "body": "{\n  \"allocationState\": \"{{oneOf (array 'steady' 'resizing' 'stopping')}}\",\n  \"allocationStateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"applicationLicenses\": [\n    \"\"\n  ],\n  \"applicationPackageReferences\": [\n    {\n      \"applicationId\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"autoScaleEvaluationInterval\": \"\",\n  \"autoScaleFormula\": \"\",\n  \"autoScaleRun\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    },\n    \"results\": \"\",\n    \"timestamp\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"cloudServiceConfiguration\": {\n    \"osFamily\": \"\",\n    \"osVersion\": \"\"\n  },\n  \"creationTime\": \"{{faker 'date.recent' 365}}\",\n  \"currentDedicatedNodes\": {{faker 'random.number'}},\n  \"currentLowPriorityNodes\": {{faker 'random.number'}},\n  \"displayName\": \"\",\n  \"eTag\": \"\",\n  \"enableAutoScale\": {{faker 'random.boolean'}},\n  \"enableInterNodeCommunication\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"maxTasksPerNode\": {{faker 'random.number'}},\n  \"metadata\": [\n    {\n      \"name\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"mountConfiguration\": [\n    {\n      \"azureBlobFileSystemConfiguration\": {\n        \"accountKey\": \"\",\n        \"accountName\": \"\",\n        \"blobfuseOptions\": \"\",\n        \"containerName\": \"\",\n        \"relativeMountPath\": \"\",\n        \"sasKey\": \"\"\n      },\n      \"azureFileShareConfiguration\": {\n        \"accountKey\": \"\",\n        \"accountName\": \"\",\n        \"azureFileUrl\": \"\",\n        \"mountOptions\": \"\",\n        \"relativeMountPath\": \"\"\n      },\n      \"cifsMountConfiguration\": {\n        \"mountOptions\": \"\",\n        \"password\": \"\",\n        \"relativeMountPath\": \"\",\n        \"source\": \"\",\n        \"username\": \"\"\n      },\n      \"nfsMountConfiguration\": {\n        \"mountOptions\": \"\",\n        \"relativeMountPath\": \"\",\n        \"source\": \"\"\n      }\n    }\n  ],\n  \"networkConfiguration\": {\n    \"dynamicVNetAssignmentScope\": \"{{oneOf (array 'none' 'job')}}\",\n    \"endpointConfiguration\": {\n      \"inboundNATPools\": [\n        {\n          \"backendPort\": {{faker 'random.number'}},\n          \"frontendPortRangeEnd\": {{faker 'random.number'}},\n          \"frontendPortRangeStart\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"networkSecurityGroupRules\": [\n            {\n              \"access\": \"{{oneOf (array 'allow' 'deny')}}\",\n              \"priority\": {{faker 'random.number'}},\n              \"sourceAddressPrefix\": \"\",\n              \"sourcePortRanges\": [\n                \"\"\n              ]\n            }\n          ],\n          \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\"\n        }\n      ]\n    },\n    \"publicIPs\": [\n      \"\"\n    ],\n    \"subnetId\": \"\"\n  },\n  \"resizeErrors\": [\n    {\n      \"code\": \"\",\n      \"message\": \"\",\n      \"values\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"resizeTimeout\": \"\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"state\": \"{{oneOf (array 'active' 'deleting')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"stats\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"resourceStats\": {\n      \"avgCPUPercentage\": {{faker 'random.float'}},\n      \"avgDiskGiB\": {{faker 'random.float'}},\n      \"avgMemoryGiB\": {{faker 'random.float'}},\n      \"diskReadGiB\": {{faker 'random.float'}},\n      \"diskReadIOps\": {{faker 'random.number'}},\n      \"diskWriteGiB\": {{faker 'random.float'}},\n      \"diskWriteIOps\": {{faker 'random.number'}},\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"networkReadGiB\": {{faker 'random.float'}},\n      \"networkWriteGiB\": {{faker 'random.float'}},\n      \"peakDiskGiB\": {{faker 'random.float'}},\n      \"peakMemoryGiB\": {{faker 'random.float'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"url\": \"\",\n    \"usageStats\": {\n      \"dedicatedCoreTime\": \"\",\n      \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  },\n  \"targetDedicatedNodes\": {{faker 'random.number'}},\n  \"targetLowPriorityNodes\": {{faker 'random.number'}},\n  \"taskSchedulingPolicy\": {\n    \"nodeFillType\": \"{{oneOf (array 'spread' 'pack')}}\"\n  },\n  \"url\": \"\",\n  \"userAccounts\": [\n    {\n      \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n      \"linuxUserConfiguration\": {\n        \"gid\": {{faker 'random.number'}},\n        \"sshPrivateKey\": \"\",\n        \"uid\": {{faker 'random.number'}}\n      },\n      \"name\": \"\",\n      \"password\": \"\",\n      \"windowsUserConfiguration\": {\n        \"loginMode\": \"{{oneOf (array 'batch' 'interactive')}}\"\n      }\n    }\n  ],\n  \"virtualMachineConfiguration\": {\n    \"containerConfiguration\": {\n      \"containerImageNames\": [\n        \"\"\n      ],\n      \"containerRegistries\": [\n        {\n          \"password\": \"\",\n          \"registryServer\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'dockerCompatible')}}\"\n    },\n    \"dataDisks\": [\n      {\n        \"caching\": \"{{oneOf (array 'none' 'readonly' 'readwrite')}}\",\n        \"diskSizeGB\": {{faker 'random.number'}},\n        \"lun\": {{faker 'random.number'}},\n        \"storageAccountType\": \"{{oneOf (array 'standard_lrs' 'premium_lrs')}}\"\n      }\n    ],\n    \"imageReference\": {\n      \"offer\": \"\",\n      \"publisher\": \"\",\n      \"sku\": \"\",\n      \"version\": \"\",\n      \"virtualMachineImageId\": \"\"\n    },\n    \"licenseType\": \"\",\n    \"nodeAgentSKUId\": \"\",\n    \"windowsConfiguration\": {\n      \"enableAutomaticUpdates\": {{faker 'random.boolean'}}\n    }\n  },\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f856195-f44e-44ac-b5d6-614da7d6c77c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0403d02e-4173-4270-8b83-e0d64f2cd3c3",
      "documentation": "Gets basic properties of a Pool.",
      "method": "head",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "8beb2590-35af-4195-b09d-ce0967313006",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing headers related to the Pool, if it exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb23f0ce-d94d-49d5-9858-79b23af80c86",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The Pool does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a3d2f57-bab3-4183-989d-92f5f9ee4c19",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f0be438-30cc-47cb-beff-2fd7b183fe2f",
      "documentation": "Updates the properties of the specified Pool.",
      "method": "patch",
      "endpoint": "pools/:poolId",
      "responses": [
        {
          "uuid": "e891306c-b2ae-4cc9-b137-a97f26ce64e6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ba56b12-0292-418d-b7ff-83e87e033239",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b083ed5f-788d-4ca8-ad94-00baa573c6b2",
      "documentation": "Disables automatic scaling for a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/disableautoscale",
      "responses": [
        {
          "uuid": "f5f0a88e-4c05-4308-9b62-4bbf2ffa1311",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8158b79-75a9-432a-8777-fd0553a6314d",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2873474b-24c2-47c0-b471-7db37096a917",
      "documentation": "Enables automatic scaling for a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/enableautoscale",
      "responses": [
        {
          "uuid": "0485b34a-37e0-4319-9dcd-17f98cb5904e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "015a4aae-d3b9-449a-bfc4-19aa190e23b8",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64727eb1-a7cc-40b0-ab68-2dcd0f9b1bd4",
      "documentation": "Gets the result of evaluating an automatic scaling formula on the Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/evaluateautoscale",
      "responses": [
        {
          "uuid": "78124b24-0684-42ac-9fea-4cd77c7a76e6",
          "body": "{\n  \"error\": {\n    \"code\": \"\",\n    \"message\": \"\",\n    \"values\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"results\": \"\",\n  \"timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the results of the autoscale evaluation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "855728b6-b631-4562-84d3-fc6bfbbf1bfa",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8619bb1e-9ed2-4799-8fa3-20e6d52b8936",
      "documentation": "Lists the Compute Nodes in the specified Pool.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes",
      "responses": [
        {
          "uuid": "92b425e5-4572-42b3-897f-210a40f47b53",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"affinityId\": \"\",\n      \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n      \"certificateReferences\": [\n        {\n          \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n          \"storeName\": \"\",\n          \"thumbprint\": \"\",\n          \"thumbprintAlgorithm\": \"\",\n          \"visibility\": [\n            \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n          ]\n        }\n      ],\n      \"endpointConfiguration\": {\n        \"inboundEndpoints\": [\n          {\n            \"backendPort\": {{faker 'random.number'}},\n            \"frontendPort\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n            \"publicFQDN\": \"\",\n            \"publicIPAddress\": \"\"\n          }\n        ]\n      },\n      \"errors\": [\n        {\n          \"code\": \"\",\n          \"errorDetails\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        }\n      ],\n      \"id\": \"\",\n      \"ipAddress\": \"\",\n      \"isDedicated\": {{faker 'random.boolean'}},\n      \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n      \"nodeAgentInfo\": {\n        \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"version\": \"\"\n      },\n      \"recentTasks\": [\n        {\n          \"executionInfo\": {\n            \"containerInfo\": {\n              \"containerId\": \"\",\n              \"error\": \"\",\n              \"state\": \"\"\n            },\n            \"endTime\": \"{{faker 'date.recent' 365}}\",\n            \"exitCode\": {{faker 'random.number'}},\n            \"failureInfo\": {\n              \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n              \"code\": \"\",\n              \"details\": [\n                {\n                  \"name\": \"\",\n                  \"value\": \"\"\n                }\n              ],\n              \"message\": \"\"\n            },\n            \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n            \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n            \"requeueCount\": {{faker 'random.number'}},\n            \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n            \"retryCount\": {{faker 'random.number'}},\n            \"startTime\": \"{{faker 'date.recent' 365}}\"\n          },\n          \"jobId\": \"\",\n          \"subtaskId\": {{faker 'random.number'}},\n          \"taskId\": \"\",\n          \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n          \"taskUrl\": \"\"\n        }\n      ],\n      \"runningTasksCount\": {{faker 'random.number'}},\n      \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n      \"startTask\": {\n        \"commandLine\": \"\",\n        \"containerSettings\": {\n          \"containerRunOptions\": \"\",\n          \"imageName\": \"\",\n          \"registry\": {\n            \"password\": \"\",\n            \"registryServer\": \"\",\n            \"username\": \"\"\n          },\n          \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n        },\n        \"environmentSettings\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"maxTaskRetryCount\": {{faker 'random.number'}},\n        \"resourceFiles\": [\n          {\n            \"autoStorageContainerName\": \"\",\n            \"blobPrefix\": \"\",\n            \"fileMode\": \"\",\n            \"filePath\": \"\",\n            \"httpUrl\": \"\",\n            \"storageContainerUrl\": \"\"\n          }\n        ],\n        \"userIdentity\": {\n          \"autoUser\": {\n            \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n            \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n          },\n          \"username\": \"\"\n        },\n        \"waitForSuccess\": {{faker 'random.boolean'}}\n      },\n      \"startTaskInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n      },\n      \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n      \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalTasksRun\": {{faker 'random.number'}},\n      \"totalTasksSucceeded\": {{faker 'random.number'}},\n      \"url\": \"\",\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Compute Nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44b39626-a7c4-4058-8339-84410c18d74c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9e3a487-c46a-4955-84cd-f7b8521d6c5b",
      "documentation": "Gets information about the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "a04ca868-b74f-4c68-b600-c95348772334",
          "body": "{\n  \"affinityId\": \"\",\n  \"allocationTime\": \"{{faker 'date.recent' 365}}\",\n  \"certificateReferences\": [\n    {\n      \"storeLocation\": \"{{oneOf (array 'currentuser' 'localmachine')}}\",\n      \"storeName\": \"\",\n      \"thumbprint\": \"\",\n      \"thumbprintAlgorithm\": \"\",\n      \"visibility\": [\n        \"{{oneOf (array 'starttask' 'task' 'remoteuser')}}\"\n      ]\n    }\n  ],\n  \"endpointConfiguration\": {\n    \"inboundEndpoints\": [\n      {\n        \"backendPort\": {{faker 'random.number'}},\n        \"frontendPort\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"protocol\": \"{{oneOf (array 'tcp' 'udp')}}\",\n        \"publicFQDN\": \"\",\n        \"publicIPAddress\": \"\"\n      }\n    ]\n  },\n  \"errors\": [\n    {\n      \"code\": \"\",\n      \"errorDetails\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    }\n  ],\n  \"id\": \"\",\n  \"ipAddress\": \"\",\n  \"isDedicated\": {{faker 'random.boolean'}},\n  \"lastBootTime\": \"{{faker 'date.recent' 365}}\",\n  \"nodeAgentInfo\": {\n    \"lastUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"version\": \"\"\n  },\n  \"recentTasks\": [\n    {\n      \"executionInfo\": {\n        \"containerInfo\": {\n          \"containerId\": \"\",\n          \"error\": \"\",\n          \"state\": \"\"\n        },\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"exitCode\": {{faker 'random.number'}},\n        \"failureInfo\": {\n          \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n          \"code\": \"\",\n          \"details\": [\n            {\n              \"name\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"message\": \"\"\n        },\n        \"lastRequeueTime\": \"{{faker 'date.recent' 365}}\",\n        \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n        \"requeueCount\": {{faker 'random.number'}},\n        \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n        \"retryCount\": {{faker 'random.number'}},\n        \"startTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"jobId\": \"\",\n      \"subtaskId\": {{faker 'random.number'}},\n      \"taskId\": \"\",\n      \"taskState\": \"{{oneOf (array 'active' 'preparing' 'running' 'completed')}}\",\n      \"taskUrl\": \"\"\n    }\n  ],\n  \"runningTasksCount\": {{faker 'random.number'}},\n  \"schedulingState\": \"{{oneOf (array 'enabled' 'disabled')}}\",\n  \"startTask\": {\n    \"commandLine\": \"\",\n    \"containerSettings\": {\n      \"containerRunOptions\": \"\",\n      \"imageName\": \"\",\n      \"registry\": {\n        \"password\": \"\",\n        \"registryServer\": \"\",\n        \"username\": \"\"\n      },\n      \"workingDirectory\": \"{{oneOf (array 'taskWorkingDirectory' 'containerImageDefault')}}\"\n    },\n    \"environmentSettings\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"maxTaskRetryCount\": {{faker 'random.number'}},\n    \"resourceFiles\": [\n      {\n        \"autoStorageContainerName\": \"\",\n        \"blobPrefix\": \"\",\n        \"fileMode\": \"\",\n        \"filePath\": \"\",\n        \"httpUrl\": \"\",\n        \"storageContainerUrl\": \"\"\n      }\n    ],\n    \"userIdentity\": {\n      \"autoUser\": {\n        \"elevationLevel\": \"{{oneOf (array 'nonadmin' 'admin')}}\",\n        \"scope\": \"{{oneOf (array 'task' 'pool')}}\"\n      },\n      \"username\": \"\"\n    },\n    \"waitForSuccess\": {{faker 'random.boolean'}}\n  },\n  \"startTaskInfo\": {\n    \"containerInfo\": {\n      \"containerId\": \"\",\n      \"error\": \"\",\n      \"state\": \"\"\n    },\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"exitCode\": {{faker 'random.number'}},\n    \"failureInfo\": {\n      \"category\": \"{{oneOf (array 'usererror' 'servererror')}}\",\n      \"code\": \"\",\n      \"details\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"message\": \"\"\n    },\n    \"lastRetryTime\": \"{{faker 'date.recent' 365}}\",\n    \"result\": \"{{oneOf (array 'success' 'failure')}}\",\n    \"retryCount\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"state\": \"{{oneOf (array 'running' 'completed')}}\"\n  },\n  \"state\": \"{{oneOf (array 'idle' 'rebooting' 'reimaging' 'running' 'unusable' 'creating' 'starting' 'waitingforstarttask' 'starttaskfailed' 'unknown' 'leavingpool' 'offline' 'preempted')}}\",\n  \"stateTransitionTime\": \"{{faker 'date.recent' 365}}\",\n  \"totalTasksRun\": {{faker 'random.number'}},\n  \"totalTasksSucceeded\": {{faker 'random.number'}},\n  \"url\": \"\",\n  \"vmSize\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the Compute Node.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a02b56a-a83f-4422-a020-18940784f66f",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c726b28-0e50-4bea-bcdf-e1e1caac4d20",
      "documentation": "Disables Task scheduling on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/disablescheduling",
      "responses": [
        {
          "uuid": "2a813dcb-5049-44b7-89ad-0a83026c64bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ac6637f-8dca-46b9-b3c9-d5e539f7f410",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9460182e-8844-4d2e-80bc-54e17aa851df",
      "documentation": "Enables Task scheduling on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/enablescheduling",
      "responses": [
        {
          "uuid": "2dfa613f-918c-4827-8b8e-25672a8d9b70",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e2248a7-76ef-4454-b1bb-2bf64738f2e4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "310a3d1c-71aa-437d-b995-a8a4627dd79e",
      "documentation": "Lists all of the files in Task directories on the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files",
      "responses": [
        {
          "uuid": "9d44024e-adb1-45b9-aac8-c92b97e590ec",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"isDirectory\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"properties\": {\n        \"contentLength\": {{faker 'random.number'}},\n        \"contentType\": \"\",\n        \"creationTime\": \"{{faker 'date.recent' 365}}\",\n        \"fileMode\": \"\",\n        \"lastModified\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of files.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f21562e7-39a9-4352-ae20-77710567f8c6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "414b1fba-6df5-48a9-80f9-21a68430cef4",
      "documentation": "Deletes the specified file from the Compute Node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "bd8ce3d1-25af-464b-85b3-e4035d6d80cb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4df642b1-e77e-42f7-b79c-a7931e2cc930",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01c93d93-036a-40fe-8cd0-756ab7ea2339",
      "documentation": "Returns the content of the specified Compute Node file.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "fb1628bb-2b1a-4fea-ad56-151724f6f3f5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The file content.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6f03176-07f7-4952-9c0a-58ec618c5e5c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c600c32f-405f-41df-9cea-c8c84269ca83",
      "documentation": "Gets the properties of the specified Compute Node file.",
      "method": "head",
      "endpoint": "pools/:poolId/nodes/:nodeId/files/:filePath",
      "responses": [
        {
          "uuid": "7dc7d8c3-22aa-49a2-b5d4-af13c9a572f7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the file properties.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "ocp-batch-file-isdirectory",
              "value": ""
            },
            {
              "key": "ocp-batch-file-mode",
              "value": ""
            },
            {
              "key": "ocp-batch-file-url",
              "value": ""
            },
            {
              "key": "ocp-creation-time",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7afac58e-8c44-45cf-bb9e-80834155e767",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86bca37e-040c-4e7e-8850-82187984fea7",
      "documentation": "Gets the Remote Desktop Protocol file for the specified Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/rdp",
      "responses": [
        {
          "uuid": "81b07509-31f5-42f8-807b-ee07c80c5099",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the RDP information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8df0e1ef-71bf-47bf-8657-5a678983551b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ec94291-1cf6-494a-a75e-1f9c64394219",
      "documentation": "Restarts the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reboot",
      "responses": [
        {
          "uuid": "630240cc-7f08-4221-a971-6d0459d6d33c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bff67553-df36-4d63-b59f-c7854e525a62",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05ee1f47-0d9c-47ea-b554-4a63ca218b04",
      "documentation": "Reinstalls the operating system on the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/reimage",
      "responses": [
        {
          "uuid": "f5549b05-167c-4581-bfcb-74335c2ef462",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1c3eccf-d8bb-4246-b373-15bba711c4a3",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01dd4c00-7174-4a78-9767-60db563e9ed6",
      "documentation": "Gets the settings required for remote login to a Compute Node.",
      "method": "get",
      "endpoint": "pools/:poolId/nodes/:nodeId/remoteloginsettings",
      "responses": [
        {
          "uuid": "7f863b31-d627-49ba-a71c-147ef2fa6d09",
          "body": "{\n  \"remoteLoginIPAddress\": \"\",\n  \"remoteLoginPort\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the login settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fc4b9b2-633d-48c4-8edb-75fb097d091c",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "291967e2-f445-4eaa-9b1a-809491083bda",
      "documentation": "Upload Azure Batch service log files from the specified Compute Node to Azure Blob Storage.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/uploadbatchservicelogs",
      "responses": [
        {
          "uuid": "0f58e1fb-03c6-4b81-b06a-a2f28af95551",
          "body": "{\n  \"numberOfFilesUploaded\": {{faker 'random.number'}},\n  \"virtualDirectoryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f9d7ddd-684c-4449-a138-40bb32ad35d6",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42267a3b-7747-45f8-93e5-ebcde093c66f",
      "documentation": "Adds a user Account to the specified Compute Node.",
      "method": "post",
      "endpoint": "pools/:poolId/nodes/:nodeId/users",
      "responses": [
        {
          "uuid": "fc400545-3d11-4206-add1-59c553b22278",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eba32d9-ba21-4d82-8997-4e2de0e28892",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18052a3e-259c-4124-972e-5d08f9102c4b",
      "documentation": "Deletes a user Account from the specified Compute Node.",
      "method": "delete",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "fc238670-c706-4a58-b7c5-056bc12d0b75",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df27dc25-b1f4-49ce-8c18-13a91a7ce0e4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f72c57f-ac5e-4031-93d4-62162431b3f5",
      "documentation": "Updates the password and expiration time of a user Account on the specified Compute Node.",
      "method": "put",
      "endpoint": "pools/:poolId/nodes/:nodeId/users/:userName",
      "responses": [
        {
          "uuid": "81514c27-55d3-4c98-8931-6f61a9688311",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60518240-7b49-475c-adac-b435c3c865bc",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e05503ed-80c7-49d8-8dde-b6f1c7b9862f",
      "documentation": "Removes Compute Nodes from the specified Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/removenodes",
      "responses": [
        {
          "uuid": "faccc4cf-aa16-46e9-bcd4-4427211e0030",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5784b579-5079-445b-b15e-2c21a579ccdf",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6eef074f-aa72-4256-8f2b-a579f412df8c",
      "documentation": "Changes the number of Compute Nodes that are assigned to a Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/resize",
      "responses": [
        {
          "uuid": "bf3c35ac-587c-4d80-a1d3-b7e6af1e0a2d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f18f88f6-82ea-41ee-a27d-330f64f0f8b4",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "171d4474-e640-44bc-98d8-77fefe0f248c",
      "documentation": "Stops an ongoing resize operation on the Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/stopresize",
      "responses": [
        {
          "uuid": "133456ea-b390-4df9-9139-5978ceb6eef3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff50f10f-7ea1-4581-8fe5-9a0923a9a7fe",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service. If you call this API on a Pool which is not in the resizing state, the request fails with HTTP status code 409.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "242cdf4a-464a-43a6-8b82-52b9a5034a1d",
      "documentation": "Updates the properties of the specified Pool.",
      "method": "post",
      "endpoint": "pools/:poolId/updateproperties",
      "responses": [
        {
          "uuid": "d950f451-854e-47f6-be38-6f1f155bb2e2",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The request to the Batch service was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceId",
              "value": ""
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f3c64f5-bfbb-4e2e-8216-b21d8b8648c2",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6152f5d-9272-4f36-86b8-16c85b6840e0",
      "documentation": "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account.",
      "method": "get",
      "endpoint": "poolusagemetrics",
      "responses": [
        {
          "uuid": "099d5705-f529-4ca5-82bb-ee6c26457202",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"poolId\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalCoreHours\": {{faker 'random.float'}},\n      \"vmSize\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of Pool usage details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68f75423-5576-40c4-949c-ec37aea52d50",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d740bb8f-bc78-4a3e-9f23-59dfd1548910",
      "documentation": "Lists all Virtual Machine Images supported by the Azure Batch service.",
      "method": "get",
      "endpoint": "supportedimages",
      "responses": [
        {
          "uuid": "cabe6506-5d78-4993-a8be-fbcb80c3e22d",
          "body": "{\n  \"odata.nextLink\": \"\",\n  \"value\": [\n    {\n      \"batchSupportEndOfLife\": \"{{faker 'date.recent' 365}}\",\n      \"capabilities\": [\n        \"\"\n      ],\n      \"imageReference\": {\n        \"offer\": \"\",\n        \"publisher\": \"\",\n        \"sku\": \"\",\n        \"version\": \"\",\n        \"virtualMachineImageId\": \"\"\n      },\n      \"nodeAgentSKUId\": \"\",\n      \"osType\": \"{{oneOf (array 'linux' 'windows')}}\",\n      \"verificationType\": \"{{oneOf (array 'verified' 'unverified')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response containing the list of supported Virtual Machine Images.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "ETag",
              "value": ""
            },
            {
              "key": "Last-Modified",
              "value": ""
            },
            {
              "key": "client-request-id",
              "value": ""
            },
            {
              "key": "request-id",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3118e4ef-9e20-4c39-9d93-99d02b0da86b",
          "body": "{\n  \"code\": \"\",\n  \"message\": {\n    \"lang\": \"\",\n    \"value\": \"\"\n  },\n  \"values\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The error from the Batch service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}