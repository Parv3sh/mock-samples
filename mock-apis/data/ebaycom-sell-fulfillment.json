{
  "uuid": "affe93fd-83df-4d22-9085-c1308d81b058",
  "lastMigration": 19,
  "name": "Fulfillment API",
  "endpointPrefix": "sell/fulfillment/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1aa48f97-93c4-4f81-b9b9-b2749ad2e1c4",
      "documentation": "Use this call to search for and retrieve one or more orders based on their creation date, last modification date, or fulfillment status using the filter parameter. You can alternatively specify a list of orders using the orderIds parameter. Include the optional fieldGroups query parameter set to TAX_BREAKDOWN to return a breakdown of the taxes and fees. The returned Order objects contain information you can use to create and process fulfillments, including: Information about the buyer and seller Information about the order's line items The plans for packaging, addressing and shipping the order The status of payment, packaging, addressing, and shipping the order A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs A summary of applied taxes and fees, and optionally a breakdown of each Important: In this call, the cancelStatus.cancelRequests array is returned but is always empty. Use the getOrder call instead, which returns this array fully populated with information about any cancellation requests.",
      "method": "get",
      "endpoint": "order",
      "responses": [
        {
          "uuid": "6152e3ea-0d18-4b87-9859-88e7b2158809",
          "body": "{\n  \"href\": \"\",\n  \"limit\": {{faker 'random.number'}},\n  \"next\": \"\",\n  \"offset\": {{faker 'random.number'}},\n  \"orders\": [\n    {\n      \"buyer\": {\n        \"taxAddress\": {\n          \"city\": \"\",\n          \"countryCode\": \"\",\n          \"postalCode\": \"\",\n          \"stateOrProvince\": \"\"\n        },\n        \"taxIdentifier\": {\n          \"issuingCountry\": \"\",\n          \"taxIdentifierType\": \"\",\n          \"taxpayerId\": \"\"\n        },\n        \"username\": \"\"\n      },\n      \"buyerCheckoutNotes\": \"\",\n      \"cancelStatus\": {\n        \"cancelRequests\": [\n          {\n            \"cancelCompletedDate\": \"\",\n            \"cancelInitiator\": \"\",\n            \"cancelReason\": \"\",\n            \"cancelRequestId\": \"\",\n            \"cancelRequestState\": \"\",\n            \"cancelRequestedDate\": \"\"\n          }\n        ],\n        \"cancelState\": \"\",\n        \"cancelledDate\": \"\"\n      },\n      \"creationDate\": \"\",\n      \"ebayCollectAndRemitTax\": {{faker 'random.boolean'}},\n      \"fulfillmentHrefs\": [\n        \"\"\n      ],\n      \"fulfillmentStartInstructions\": [\n        {\n          \"ebaySupportedFulfillment\": {{faker 'random.boolean'}},\n          \"finalDestinationAddress\": {\n            \"addressLine1\": \"\",\n            \"addressLine2\": \"\",\n            \"city\": \"\",\n            \"country\": \"\",\n            \"county\": \"\",\n            \"postalCode\": \"\",\n            \"stateOrProvince\": \"\"\n          },\n          \"fulfillmentInstructionsType\": \"\",\n          \"maxEstimatedDeliveryDate\": \"\",\n          \"minEstimatedDeliveryDate\": \"\",\n          \"pickupStep\": {\n            \"merchantLocationKey\": \"\"\n          },\n          \"shippingStep\": {\n            \"shipTo\": {\n              \"companyName\": \"\",\n              \"contactAddress\": {\n                \"addressLine1\": \"\",\n                \"addressLine2\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n                \"county\": \"\",\n                \"postalCode\": \"\",\n                \"stateOrProvince\": \"\"\n              },\n              \"email\": \"\",\n              \"fullName\": \"\",\n              \"primaryPhone\": {\n                \"phoneNumber\": \"\"\n              }\n            },\n            \"shipToReferenceId\": \"\",\n            \"shippingCarrierCode\": \"\",\n            \"shippingServiceCode\": \"\"\n          }\n        }\n      ],\n      \"lastModifiedDate\": \"\",\n      \"legacyOrderId\": \"\",\n      \"lineItems\": [\n        {\n          \"appliedPromotions\": [\n            {\n              \"description\": \"\",\n              \"discountAmount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"promotionId\": \"\"\n            }\n          ],\n          \"deliveryCost\": {\n            \"importCharges\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"shippingCost\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"shippingIntermediationFee\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"discountedLineItemCost\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"ebayCollectAndRemitTaxes\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"collectionMethod\": \"\",\n              \"ebayReference\": {\n                \"name\": \"\",\n                \"value\": \"\"\n              },\n              \"taxType\": \"\"\n            }\n          ],\n          \"giftDetails\": {\n            \"message\": \"\",\n            \"recipientEmail\": \"\",\n            \"senderName\": \"\"\n          },\n          \"itemLocation\": {\n            \"countryCode\": \"\",\n            \"location\": \"\",\n            \"postalCode\": \"\"\n          },\n          \"legacyItemId\": \"\",\n          \"legacyVariationId\": \"\",\n          \"lineItemCost\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"lineItemFulfillmentInstructions\": {\n            \"guaranteedDelivery\": {{faker 'random.boolean'}},\n            \"maxEstimatedDeliveryDate\": \"\",\n            \"minEstimatedDeliveryDate\": \"\",\n            \"shipByDate\": \"\"\n          },\n          \"lineItemFulfillmentStatus\": \"\",\n          \"lineItemId\": \"\",\n          \"listingMarketplaceId\": \"\",\n          \"properties\": {\n            \"buyerProtection\": {{faker 'random.boolean'}},\n            \"fromBestOffer\": {{faker 'random.boolean'}},\n            \"soldViaAdCampaign\": {{faker 'random.boolean'}}\n          },\n          \"purchaseMarketplaceId\": \"\",\n          \"quantity\": {{faker 'random.number'}},\n          \"refunds\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"refundDate\": \"\",\n              \"refundId\": \"\",\n              \"refundReferenceId\": \"\"\n            }\n          ],\n          \"sku\": \"\",\n          \"soldFormat\": \"\",\n          \"taxes\": [\n            {\n              \"amount\": {\n                \"convertedFromCurrency\": \"\",\n                \"convertedFromValue\": \"\",\n                \"currency\": \"\",\n                \"value\": \"\"\n              },\n              \"taxType\": \"\"\n            }\n          ],\n          \"title\": \"\",\n          \"total\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          }\n        }\n      ],\n      \"orderFulfillmentStatus\": \"\",\n      \"orderId\": \"\",\n      \"orderPaymentStatus\": \"\",\n      \"paymentSummary\": {\n        \"payments\": [\n          {\n            \"amount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"paymentDate\": \"\",\n            \"paymentHolds\": [\n              {\n                \"expectedReleaseDate\": \"\",\n                \"holdAmount\": {\n                  \"convertedFromCurrency\": \"\",\n                  \"convertedFromValue\": \"\",\n                  \"currency\": \"\",\n                  \"value\": \"\"\n                },\n                \"holdReason\": \"\",\n                \"holdState\": \"\",\n                \"releaseDate\": \"\",\n                \"sellerActionsToRelease\": [\n                  {\n                    \"sellerActionToRelease\": \"\"\n                  }\n                ]\n              }\n            ],\n            \"paymentMethod\": \"\",\n            \"paymentReferenceId\": \"\",\n            \"paymentStatus\": \"\"\n          }\n        ],\n        \"refunds\": [\n          {\n            \"amount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"refundDate\": \"\",\n            \"refundId\": \"\",\n            \"refundReferenceId\": \"\",\n            \"refundStatus\": \"\"\n          }\n        ],\n        \"totalDueSeller\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"pricingSummary\": {\n        \"adjustment\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"deliveryCost\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"deliveryDiscount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"fee\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"priceDiscountSubtotal\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"priceSubtotal\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"tax\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"total\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"program\": {\n        \"authenticityVerification\": {\n          \"outcomeReason\": \"\",\n          \"status\": \"\"\n        },\n        \"fulfillmentProgram\": {\n          \"fulfilledBy\": \"\"\n        }\n      },\n      \"salesRecordReference\": \"\",\n      \"sellerId\": \"\",\n      \"totalFeeBasisAmount\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"totalMarketplaceFee\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      }\n    }\n  ],\n  \"prev\": \"\",\n  \"total\": {{faker 'random.number'}},\n  \"warnings\": [\n    {\n      \"category\": \"\",\n      \"domain\": \"\",\n      \"errorId\": {{faker 'random.number'}},\n      \"inputRefIds\": [\n        \"\"\n      ],\n      \"longMessage\": \"\",\n      \"message\": \"\",\n      \"outputRefIds\": [\n        \"\"\n      ],\n      \"parameters\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"subdomain\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcb778d8-3dfa-477d-b616-0e80c5fb53c9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f53ad2-f84a-4e74-933e-c2918b8921e2",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "394892c9-6f64-4527-94da-bae8fcfcf1e4",
      "documentation": "Use this call to retrieve the contents of an order based on its unique identifier, orderId. This value was returned in the getOrders call's orders.orderId field when you searched for orders by creation date, modification date, or fulfillment status. Include the optional fieldGroups query parameter set to TAX_BREAKDOWN to return a breakdown of the taxes and fees. The returned Order object contains information you can use to create and process fulfillments, including: Information about the buyer and seller Information about the order's line items The plans for packaging, addressing and shipping the order The status of payment, packaging, addressing, and shipping the order A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs A summary of applied taxes and fees, and optionally a breakdown of each",
      "method": "get",
      "endpoint": "order/:orderId",
      "responses": [
        {
          "uuid": "964331e7-4e98-42bf-9d1a-cbb3c49cd730",
          "body": "{\n  \"buyer\": {\n    \"taxAddress\": {\n      \"city\": \"\",\n      \"countryCode\": \"\",\n      \"postalCode\": \"\",\n      \"stateOrProvince\": \"\"\n    },\n    \"taxIdentifier\": {\n      \"issuingCountry\": \"\",\n      \"taxIdentifierType\": \"\",\n      \"taxpayerId\": \"\"\n    },\n    \"username\": \"\"\n  },\n  \"buyerCheckoutNotes\": \"\",\n  \"cancelStatus\": {\n    \"cancelRequests\": [\n      {\n        \"cancelCompletedDate\": \"\",\n        \"cancelInitiator\": \"\",\n        \"cancelReason\": \"\",\n        \"cancelRequestId\": \"\",\n        \"cancelRequestState\": \"\",\n        \"cancelRequestedDate\": \"\"\n      }\n    ],\n    \"cancelState\": \"\",\n    \"cancelledDate\": \"\"\n  },\n  \"creationDate\": \"\",\n  \"ebayCollectAndRemitTax\": {{faker 'random.boolean'}},\n  \"fulfillmentHrefs\": [\n    \"\"\n  ],\n  \"fulfillmentStartInstructions\": [\n    {\n      \"ebaySupportedFulfillment\": {{faker 'random.boolean'}},\n      \"finalDestinationAddress\": {\n        \"addressLine1\": \"\",\n        \"addressLine2\": \"\",\n        \"city\": \"\",\n        \"country\": \"\",\n        \"county\": \"\",\n        \"postalCode\": \"\",\n        \"stateOrProvince\": \"\"\n      },\n      \"fulfillmentInstructionsType\": \"\",\n      \"maxEstimatedDeliveryDate\": \"\",\n      \"minEstimatedDeliveryDate\": \"\",\n      \"pickupStep\": {\n        \"merchantLocationKey\": \"\"\n      },\n      \"shippingStep\": {\n        \"shipTo\": {\n          \"companyName\": \"\",\n          \"contactAddress\": {\n            \"addressLine1\": \"\",\n            \"addressLine2\": \"\",\n            \"city\": \"\",\n            \"country\": \"\",\n            \"county\": \"\",\n            \"postalCode\": \"\",\n            \"stateOrProvince\": \"\"\n          },\n          \"email\": \"\",\n          \"fullName\": \"\",\n          \"primaryPhone\": {\n            \"phoneNumber\": \"\"\n          }\n        },\n        \"shipToReferenceId\": \"\",\n        \"shippingCarrierCode\": \"\",\n        \"shippingServiceCode\": \"\"\n      }\n    }\n  ],\n  \"lastModifiedDate\": \"\",\n  \"legacyOrderId\": \"\",\n  \"lineItems\": [\n    {\n      \"appliedPromotions\": [\n        {\n          \"description\": \"\",\n          \"discountAmount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"promotionId\": \"\"\n        }\n      ],\n      \"deliveryCost\": {\n        \"importCharges\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"shippingCost\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"shippingIntermediationFee\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        }\n      },\n      \"discountedLineItemCost\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"ebayCollectAndRemitTaxes\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"collectionMethod\": \"\",\n          \"ebayReference\": {\n            \"name\": \"\",\n            \"value\": \"\"\n          },\n          \"taxType\": \"\"\n        }\n      ],\n      \"giftDetails\": {\n        \"message\": \"\",\n        \"recipientEmail\": \"\",\n        \"senderName\": \"\"\n      },\n      \"itemLocation\": {\n        \"countryCode\": \"\",\n        \"location\": \"\",\n        \"postalCode\": \"\"\n      },\n      \"legacyItemId\": \"\",\n      \"legacyVariationId\": \"\",\n      \"lineItemCost\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"lineItemFulfillmentInstructions\": {\n        \"guaranteedDelivery\": {{faker 'random.boolean'}},\n        \"maxEstimatedDeliveryDate\": \"\",\n        \"minEstimatedDeliveryDate\": \"\",\n        \"shipByDate\": \"\"\n      },\n      \"lineItemFulfillmentStatus\": \"\",\n      \"lineItemId\": \"\",\n      \"listingMarketplaceId\": \"\",\n      \"properties\": {\n        \"buyerProtection\": {{faker 'random.boolean'}},\n        \"fromBestOffer\": {{faker 'random.boolean'}},\n        \"soldViaAdCampaign\": {{faker 'random.boolean'}}\n      },\n      \"purchaseMarketplaceId\": \"\",\n      \"quantity\": {{faker 'random.number'}},\n      \"refunds\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"refundDate\": \"\",\n          \"refundId\": \"\",\n          \"refundReferenceId\": \"\"\n        }\n      ],\n      \"sku\": \"\",\n      \"soldFormat\": \"\",\n      \"taxes\": [\n        {\n          \"amount\": {\n            \"convertedFromCurrency\": \"\",\n            \"convertedFromValue\": \"\",\n            \"currency\": \"\",\n            \"value\": \"\"\n          },\n          \"taxType\": \"\"\n        }\n      ],\n      \"title\": \"\",\n      \"total\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"value\": \"\"\n      }\n    }\n  ],\n  \"orderFulfillmentStatus\": \"\",\n  \"orderId\": \"\",\n  \"orderPaymentStatus\": \"\",\n  \"paymentSummary\": {\n    \"payments\": [\n      {\n        \"amount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"paymentDate\": \"\",\n        \"paymentHolds\": [\n          {\n            \"expectedReleaseDate\": \"\",\n            \"holdAmount\": {\n              \"convertedFromCurrency\": \"\",\n              \"convertedFromValue\": \"\",\n              \"currency\": \"\",\n              \"value\": \"\"\n            },\n            \"holdReason\": \"\",\n            \"holdState\": \"\",\n            \"releaseDate\": \"\",\n            \"sellerActionsToRelease\": [\n              {\n                \"sellerActionToRelease\": \"\"\n              }\n            ]\n          }\n        ],\n        \"paymentMethod\": \"\",\n        \"paymentReferenceId\": \"\",\n        \"paymentStatus\": \"\"\n      }\n    ],\n    \"refunds\": [\n      {\n        \"amount\": {\n          \"convertedFromCurrency\": \"\",\n          \"convertedFromValue\": \"\",\n          \"currency\": \"\",\n          \"value\": \"\"\n        },\n        \"refundDate\": \"\",\n        \"refundId\": \"\",\n        \"refundReferenceId\": \"\",\n        \"refundStatus\": \"\"\n      }\n    ],\n    \"totalDueSeller\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"pricingSummary\": {\n    \"adjustment\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"deliveryCost\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"deliveryDiscount\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"fee\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"priceDiscountSubtotal\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"priceSubtotal\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"tax\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"total\": {\n      \"convertedFromCurrency\": \"\",\n      \"convertedFromValue\": \"\",\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"program\": {\n    \"authenticityVerification\": {\n      \"outcomeReason\": \"\",\n      \"status\": \"\"\n    },\n    \"fulfillmentProgram\": {\n      \"fulfilledBy\": \"\"\n    }\n  },\n  \"salesRecordReference\": \"\",\n  \"sellerId\": \"\",\n  \"totalFeeBasisAmount\": {\n    \"convertedFromCurrency\": \"\",\n    \"convertedFromValue\": \"\",\n    \"currency\": \"\",\n    \"value\": \"\"\n  },\n  \"totalMarketplaceFee\": {\n    \"convertedFromCurrency\": \"\",\n    \"convertedFromValue\": \"\",\n    \"currency\": \"\",\n    \"value\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1aae2cb6-1475-43b2-bb68-bd1d079a0a07",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a52fa6dc-40ef-4a86-ba84-461748f2bd0f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e32f60af-ebfc-467d-ad29-d2e89e3469ba",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdb00c6c-738f-4ca1-a3a3-c75234b3932f",
      "documentation": "Use this call to retrieve the contents of all fulfillments currently defined for a specified order based on the order's unique identifier, orderId. This value is returned in the getOrders call's members.orderId field when you search for orders by creation date or shipment status.",
      "method": "get",
      "endpoint": "order/:orderId/shipping_fulfillment",
      "responses": [
        {
          "uuid": "077385f1-959c-4e69-881d-1c521d84c6c5",
          "body": "{\n  \"fulfillments\": [\n    {\n      \"fulfillmentId\": \"\",\n      \"lineItems\": [\n        {\n          \"lineItemId\": \"\",\n          \"quantity\": {{faker 'random.number'}}\n        }\n      ],\n      \"shipmentTrackingNumber\": \"\",\n      \"shippedDate\": \"\",\n      \"shippingCarrierCode\": \"\"\n    }\n  ],\n  \"total\": {{faker 'random.number'}},\n  \"warnings\": [\n    {\n      \"category\": \"\",\n      \"domain\": \"\",\n      \"errorId\": {{faker 'random.number'}},\n      \"inputRefIds\": [\n        \"\"\n      ],\n      \"longMessage\": \"\",\n      \"message\": \"\",\n      \"outputRefIds\": [\n        \"\"\n      ],\n      \"parameters\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"subdomain\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5da9970f-9fd2-447d-bb57-327248884e5f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdf0cee9-1842-4c09-9970-65653bc2d0e6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "220da7de-2ea0-4c08-af6a-81c713be65e4",
      "documentation": "When you group an order's line items into one or more packages, each package requires a corresponding plan for handling, addressing, and shipping; this is a shipping fulfillment. For each package, execute this call once to generate a shipping fulfillment associated with that package. Note: A single line item in an order can consist of multiple units of a purchased item, and one unit can consist of multiple parts or components. Although these components might be provided by the manufacturer in separate packaging, the seller must include all components of a given line item in the same package. Before using this call for a given package, you must determine which line items are in the package. If the package has been shipped, you should provide the date of shipment in the request. If not provided, it will default to the current date and time.",
      "method": "post",
      "endpoint": "order/:orderId/shipping_fulfillment",
      "responses": [
        {
          "uuid": "e3bd3cff-4d11-40e7-a744-3ab64cd36792",
          "body": "{}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created. The call also returns the following location code: <br /><br /><code>{ENV}/sell/fulfillment/v1/order/{ORDERID}/shipping_fulfillment/{FULFILLMENTID}</code> <br /><br />The <code>ENV</code> string is the HTTPS path to the same eBay supported environment in which this call was issued. The <code>ORDERID</code> parameter is the unique identifier of the order addressed by this call; for example, <code>01-03955-36441</code>. The <code>FULFILLMENTID</code> parameter identifies the newly created fulfillment; for example, <code>9405509699937003457459</code>. Use this Get Fulfillment URI to retrieve the contents of the new fulfillment.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Location",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15d0e829-c56c-423b-b226-d8433e95a06e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49352e57-9e3d-4e75-9ce8-057803c2ca53",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error. <br /><br /><span class=\"tablenote\"><strong>Note:</strong> In some cases, this call may succeed if you issue it once more after receiving this error.</span>",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c024693d-630f-4056-8e51-71744ddb9d9c",
      "documentation": "Use this call to retrieve the contents of a fulfillment based on its unique identifier, fulfillmentId (combined with the associated order's orderId). The fulfillmentId value was originally generated by the createShippingFulfillment call, and is returned by the getShippingFulfillments call in the members.fulfillmentId field.",
      "method": "get",
      "endpoint": "order/:orderId/shipping_fulfillment/:fulfillmentId",
      "responses": [
        {
          "uuid": "cab34b06-6f6f-46ce-bc33-e274a59b0c00",
          "body": "{\n  \"fulfillmentId\": \"\",\n  \"lineItems\": [\n    {\n      \"lineItemId\": \"\",\n      \"quantity\": {{faker 'random.number'}}\n    }\n  ],\n  \"shipmentTrackingNumber\": \"\",\n  \"shippedDate\": \"\",\n  \"shippingCarrierCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bce0f642-fdb6-4704-b956-d6b89ec63f4f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7148c7e4-286d-45f8-bf77-d11ec0b6c99b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a720ab9-2b34-4ce0-9ef9-23f6e41ec5ac",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee4e71a4-6a83-4f89-bd2f-7054cdf4b801",
      "documentation": "Issue Refund",
      "method": "post",
      "endpoint": "order/:order_id/issue_refund",
      "responses": [
        {
          "uuid": "7ebcef0d-59e1-4e33-87ab-23f361c3004e",
          "body": "{\n  \"refundId\": \"\",\n  \"refundStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e766e0f-a1dd-4161-afca-65926e3b8547",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "217d0ca6-4d6e-4711-9e38-14f7b5c1df39",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Access Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b49f61f-f6c3-4aa8-8bf8-c3fec689f7ea",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a161bdce-4e83-4773-919a-6c176ddf1721",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95fc93ad-796b-435d-b76a-065b4d8424eb",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2de144c4-557c-4fde-a394-375e40f67ed3",
      "documentation": "Get Payment Dispute Details",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id",
      "responses": [
        {
          "uuid": "4f09dddd-a590-40a9-a343-f145ba080105",
          "body": "{\n  \"amount\": {\n    \"currency\": \"\",\n    \"value\": \"\"\n  },\n  \"availableChoices\": [\n    \"\"\n  ],\n  \"buyerProvided\": {\n    \"note\": \"\",\n    \"returnShipmentTracking\": [\n      {\n        \"shipmentTrackingNumber\": \"\",\n        \"shippingCarrierCode\": \"\"\n      }\n    ]\n  },\n  \"buyerUsername\": \"\",\n  \"closedDate\": \"\",\n  \"evidence\": [\n    {\n      \"evidenceId\": \"\",\n      \"evidenceType\": \"\",\n      \"files\": [\n        {\n          \"fileId\": \"\",\n          \"fileType\": \"\",\n          \"name\": \"\",\n          \"uploadedDate\": \"\"\n        }\n      ],\n      \"lineItems\": [\n        {\n          \"itemId\": \"\",\n          \"lineItemId\": \"\"\n        }\n      ],\n      \"providedDate\": \"\",\n      \"requestDate\": \"\",\n      \"respondByDate\": \"\",\n      \"shipmentTracking\": [\n        {\n          \"shipmentTrackingNumber\": \"\",\n          \"shippingCarrierCode\": \"\"\n        }\n      ]\n    }\n  ],\n  \"evidenceRequests\": [\n    {\n      \"evidenceId\": \"\",\n      \"evidenceType\": \"\",\n      \"lineItems\": [\n        {\n          \"itemId\": \"\",\n          \"lineItemId\": \"\"\n        }\n      ],\n      \"requestDate\": \"\",\n      \"respondByDate\": \"\"\n    }\n  ],\n  \"lineItems\": [\n    {\n      \"itemId\": \"\",\n      \"lineItemId\": \"\"\n    }\n  ],\n  \"monetaryTransactions\": [\n    {\n      \"amount\": {\n        \"convertedFromCurrency\": \"\",\n        \"convertedFromValue\": \"\",\n        \"currency\": \"\",\n        \"exchangeRate\": \"\",\n        \"value\": \"\"\n      },\n      \"date\": \"\",\n      \"reason\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"openDate\": \"\",\n  \"orderId\": \"\",\n  \"paymentDisputeId\": \"\",\n  \"paymentDisputeStatus\": \"\",\n  \"reason\": \"\",\n  \"resolution\": {\n    \"fees\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"protectedAmount\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"protectionStatus\": \"\",\n    \"reasonForClosure\": \"\",\n    \"recoupAmount\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    },\n    \"totalFeeCredit\": {\n      \"currency\": \"\",\n      \"value\": \"\"\n    }\n  },\n  \"respondByDate\": \"\",\n  \"returnAddress\": {\n    \"addressLine1\": \"\",\n    \"addressLine2\": \"\",\n    \"city\": \"\",\n    \"country\": \"\",\n    \"county\": \"\",\n    \"fullName\": \"\",\n    \"postalCode\": \"\",\n    \"primaryPhone\": {\n      \"countryCode\": \"\",\n      \"number\": \"\"\n    },\n    \"stateOrProvince\": \"\"\n  },\n  \"revision\": {{faker 'random.number'}},\n  \"sellerResponse\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbaa5925-5dee-4cc3-b15d-cd6b5f6ca26e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac0c0752-428c-4674-bbc4-31f6105710d4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a19b4ebf-f030-42e4-8f22-73612a47e1ad",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fed31e29-898b-4b38-a6cc-295ea4a23176",
      "documentation": "Accept Payment Dispute",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/accept",
      "responses": [
        {
          "uuid": "10125772-9693-46f8-9d55-c8dc0f1e9bc0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80cac262-badf-4aea-9ec1-1be0f07d86b3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8b158c-3deb-44f2-92c4-cd80a15e9e9f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "002f7af3-1aa3-41ad-a2e8-de8582660c9b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8377f31-172c-4b1d-a174-371732f88fec",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ee60f17-b221-4ad4-ac70-8bdc6889428a",
      "documentation": "Get Payment Dispute Activity",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id/activity",
      "responses": [
        {
          "uuid": "66a5b2ba-ca5b-4368-aa70-06820a25b2d0",
          "body": "{\n  \"activity\": [\n    {\n      \"activityDate\": \"\",\n      \"activityType\": \"\",\n      \"actor\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a835c8d3-1a58-498a-8bfe-2493d131df78",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa3a2791-8aec-460f-884b-5b1bcf6741d8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab639e3b-cc11-4919-83b6-b88567fd93ea",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6507ef5d-3bea-496c-8142-a0b2f1ecd4d3",
      "documentation": "Add an Evidence File",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/add_evidence",
      "responses": [
        {
          "uuid": "54bd2509-f4d9-4d64-bf90-826a846d2201",
          "body": "{\n  \"evidenceId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e8ff2dd-e7a6-4218-85c8-2772b84f7747",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5eee472-e90e-4416-b557-4c1b17771a21",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2037d54d-0453-4208-a957-af1d6402d176",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf1cc32-7250-4e71-ae02-ba8c4b636d43",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7d5645f-f62f-49d3-9c34-cc7a6d8ddb84",
      "documentation": "Contest Payment Dispute",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/contest",
      "responses": [
        {
          "uuid": "e3449a2b-f533-4511-b332-88fbc9907136",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e7d6ac8-cf1f-4be7-943b-4f262bfb41e9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f22e3f3-489a-40f2-9e32-98db58a1958c",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9eb9818-1777-4457-ae51-fc6cf8d640d3",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a91a7963-4d4b-45ba-a13b-faf6fc23ed90",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8edfabec-0ee2-435f-8e69-8d4900ab6a46",
      "documentation": "Get Payment Dispute Evidence File",
      "method": "get",
      "endpoint": "payment_dispute/:payment_dispute_id/fetch_evidence_content",
      "responses": [
        {
          "uuid": "33c01d23-6808-462b-8f05-e51bf6c7b123",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/octet-stream"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a80168f-82eb-44de-9305-378d052cae9d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b377c7a-23da-47d9-a8fc-7415b9eec421",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Invalid Payment Dispute Id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb797c81-674b-4660-9e0e-873806ba768f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e13ee650-e71f-4cbb-81ff-8fde89ae9484",
      "documentation": "Update evidence",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/update_evidence",
      "responses": [
        {
          "uuid": "469f591b-8c57-4c57-a53f-de36362ac6a4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "549ed8b8-6dee-4f05-bbb5-c3d23ca03820",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0ee14c6-7b87-4268-865a-a1831349cfb0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c44aebb-1469-4aa9-8f75-25514505e60c",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5912d57e-e2d0-499e-a051-3dfc56503941",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a8123a4-bea8-4c84-9037-ef008559480d",
      "documentation": "Upload an Evidence File",
      "method": "post",
      "endpoint": "payment_dispute/:payment_dispute_id/upload_evidence_file",
      "responses": [
        {
          "uuid": "a74a697b-3722-4cb1-bb9e-8c72bebe6156",
          "body": "{\n  \"fileId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17b388a8-0565-407d-bf64-4dbaf790ae1a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b903d676-cffe-408d-ac07-37aaeef338a5",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a392142c-b2b6-439f-b1bf-3d4305cba5fc",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf104498-ceda-487d-817c-8ec17a60d67d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a2919ed-ecdb-4919-99f9-2bd3382e1273",
      "documentation": "Search Payment Dispute by Filters",
      "method": "get",
      "endpoint": "payment_dispute_summary",
      "responses": [
        {
          "uuid": "6015abf9-3f14-4ab3-ba84-75f50c9d7bf0",
          "body": "{\n  \"href\": \"\",\n  \"limit\": {{faker 'random.number'}},\n  \"next\": \"\",\n  \"offset\": {{faker 'random.number'}},\n  \"paymentDisputeSummaries\": [\n    {\n      \"amount\": {\n        \"currency\": \"\",\n        \"value\": \"\"\n      },\n      \"buyerUsername\": \"\",\n      \"closedDate\": \"\",\n      \"openDate\": \"\",\n      \"orderId\": \"\",\n      \"paymentDisputeId\": \"\",\n      \"paymentDisputeStatus\": \"\",\n      \"reason\": \"\",\n      \"respondByDate\": \"\"\n    }\n  ],\n  \"prev\": \"\",\n  \"total\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ba70ae0-7b69-47ed-8f31-4387943f991b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05fe9fa7-850b-4dbc-913b-cd27bf97530f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}