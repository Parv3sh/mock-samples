{
  "uuid": "c31a8d72-128a-4c61-b379-ef3c790f6fe8",
  "lastMigration": 19,
  "name": "Dataflow API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "165119da-10cc-4a0a-be81-41488d3a42a3",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/WorkerMessages",
      "responses": [
        {
          "uuid": "50b98d54-3c55-43ea-83f5-6c94ec7c1441",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "205bf1cf-6e53-48da-be24-8e2981fb3914",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "7a0ac018-5ff9-4a46-b4d7-a9eb1752485d",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7594ad2b-a4d7-4452-9cc9-4121122265b5",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "cd94d568-866a-4003-8fbf-ca4a15b7f6dc",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "123de95c-8c87-4270-835b-1b10eff2654e",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "1c43e77a-379c-4e95-a677-0b1c2b660e71",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d917f777-5889-4917-8dc6-455e82c40814",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "97e0efe8-cd4c-46e1-b324-bfc9942d5808",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20cf808b-131a-4680-9ff7-5970399a24ec",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "17e5667f-833e-475a-833e-a6f090337725",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d173798-e687-45fe-a1d6-b6bd78374066",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "11aa2bb3-3da7-4289-8425-a2786eb1baa9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58cdf829-77d2-4ec8-a23b-e228fa9af906",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "06212cd7-5c25-415e-a108-374d8f8c3441",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ccf27ae2-3056-49e9-84f8-4f84cd2c835b",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "c76e3abc-39ac-45dd-9988-675d38e0ce87",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'random.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3de2f7a3-7aa2-427b-9e50-a303a6494892",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "e45ed741-c9e8-4da5-a57b-b67bc15a9859",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'random.number'}},\n                  \"producerInstructionIndex\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'random.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'random.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'random.number'}},\n                      \"producerInstructionIndex\": {{faker 'random.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'random.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'random.boolean'}},\n                      \"producesSortedKeys\": {{faker 'random.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'random.boolean'}},\n        \"receiveWorkPort\": {{faker 'random.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'random.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'random.number'}},\n          \"persistentStateVersion\": {{faker 'random.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9923598-a642-48ae-bfff-e8a29309ff3c",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "48b73bbd-da08-4b7a-815c-4eca26a9b415",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e97ab9d2-af2f-435a-b311-4b20d7a38050",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "4f7f8c26-fa99-4734-b4bf-3e54a9714fa5",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c63514d8-e52b-4074-8c24-9d8fce63d857",
      "documentation": "List the jobs of a project across all regions.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs:aggregated",
      "responses": [
        {
          "uuid": "8ae57e9f-2041-45b5-a0eb-bdf60f6e63c3",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5837908b-9fe9-48f5-a7c1-a7f4c613d2f7",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/WorkerMessages",
      "responses": [
        {
          "uuid": "28745614-f53b-482d-b041-885128ff248b",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f2b808e-a858-4186-9109-3f8140b9a995",
      "documentation": "Launch a job with a FlexTemplate.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/flexTemplates:launch",
      "responses": [
        {
          "uuid": "4cae790f-a5ff-42ca-bcc9-970bab9a270a",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdfd7e7e-7c4d-4d0b-8802-9d569a62267d",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "4ec58393-a558-4e44-89ae-ca140f2fda1e",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de534407-709b-4ecf-bafb-55e4a313a361",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "909b9725-187d-44c7-aed8-d328b4ba9c50",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53b7c105-9395-4be1-98dd-65c0217deece",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "3c02cff3-ef4d-4fba-9e4f-f2dba014d33b",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10d5ef9c-bcd5-4fcf-bb34-57132320eb1a",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "ec09dd40-7619-42b3-a603-f99a30b0f8d2",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3516461d-5a5b-408c-b53a-ca857a12090e",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "71b993e2-ae3e-48a9-bcd5-0e898e4270e2",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a8b37d7-7543-44f0-8540-fe464fd0c2c5",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "d8da61cb-607f-462c-928a-634ddf81b4d8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37ea9d2a-9242-4130-acec-6d9d074cfc49",
      "documentation": "Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/executionDetails",
      "responses": [
        {
          "uuid": "7b3ba15a-d551-4553-9910-4ca2bd37196d",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"stages\": [\n    {\n      \"endTime\": \"\",\n      \"metrics\": [\n        {\n          \"cumulative\": {{faker 'random.boolean'}},\n          \"distribution\": \"\",\n          \"gauge\": \"\",\n          \"internal\": \"\",\n          \"kind\": \"\",\n          \"meanCount\": \"\",\n          \"meanSum\": \"\",\n          \"name\": {\n            \"context\": {},\n            \"name\": \"\",\n            \"origin\": \"\"\n          },\n          \"scalar\": \"\",\n          \"set\": \"\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"progress\": {\n        \"currentProgress\": {{faker 'random.float'}},\n        \"dataPoints\": [\n          {\n            \"time\": \"\",\n            \"value\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"stageId\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13ccb511-83cf-49ef-851a-a07ec9c80210",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "e4ab08a9-aafe-4db9-bf17-1dc664cb67bc",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a747c4ff-6025-43d5-94bf-78ee6dcfa5dc",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "a217dccc-1e7c-4bf8-870b-2d593436d487",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'random.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d090da25-78d1-4eaf-8f87-9720ee028b7a",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/snapshots",
      "responses": [
        {
          "uuid": "aaf53fd3-60aa-447e-a653-35ddbad679a2",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc5fb932-1faf-4ef6-be4e-cfcd27c6ff46",
      "documentation": "Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/stages/:stageId/executionDetails",
      "responses": [
        {
          "uuid": "dabda3f7-8004-4cbb-b90a-c2ba828714b5",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"workers\": [\n    {\n      \"workItems\": [\n        {\n          \"attemptId\": \"\",\n          \"endTime\": \"\",\n          \"metrics\": [\n            {\n              \"cumulative\": {{faker 'random.boolean'}},\n              \"distribution\": \"\",\n              \"gauge\": \"\",\n              \"internal\": \"\",\n              \"kind\": \"\",\n              \"meanCount\": \"\",\n              \"meanSum\": \"\",\n              \"name\": {\n                \"context\": {},\n                \"name\": \"\",\n                \"origin\": \"\"\n              },\n              \"scalar\": \"\",\n              \"set\": \"\",\n              \"updateTime\": \"\"\n            }\n          ],\n          \"progress\": {\n            \"currentProgress\": {{faker 'random.float'}},\n            \"dataPoints\": [\n              {\n                \"time\": \"\",\n                \"value\": {{faker 'random.float'}}\n              }\n            ]\n          },\n          \"startTime\": \"\",\n          \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\",\n          \"taskId\": \"\"\n        }\n      ],\n      \"workerName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9353d16-13cc-4a56-adfb-1677c3e065f6",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "5afc3994-6bf9-4107-a417-5994290f68c8",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'random.number'}},\n                  \"producerInstructionIndex\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'random.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'random.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'random.number'}},\n                      \"producerInstructionIndex\": {{faker 'random.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'random.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'random.boolean'}},\n                      \"producesSortedKeys\": {{faker 'random.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'random.boolean'}},\n        \"receiveWorkPort\": {{faker 'random.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'random.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'random.number'}},\n          \"persistentStateVersion\": {{faker 'random.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e75afd43-ab5d-45a8-9411-11f5b484554e",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "7ed6ce2e-fae6-4619-8440-673aa7d2cdca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48a04856-09b6-4614-be0e-12e49d180629",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "6c384485-58d9-4ff8-be6c-1080b0dc7c68",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbfffad1-8a82-4a3a-b7de-629eea3b3ef4",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots",
      "responses": [
        {
          "uuid": "6d76931f-5314-46bd-afde-ee5d75a33d99",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d6251d2-bfcc-4a95-9e1b-eccd9fb817fa",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "4b79a651-eb51-4614-8b5d-c369d749e13f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0442b3a-27c6-4b79-bf9f-a242108ca1d1",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "7d8a4b0c-0ee3-4d5b-9bed-057dbdaf8918",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ec1171a-f57f-4d1f-bdcb-5b52910fe3f2",
      "documentation": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm the given query parses correctly, and if able to look up schema information from DataCatalog, will validate that the query analyzes properly as well.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/sql:validate",
      "responses": [
        {
          "uuid": "8f5cf688-3bad-4c1f-a39c-7316b43a680b",
          "body": "{\n  \"errorMessage\": \"\",\n  \"queryInfo\": {\n    \"queryProperty\": [\n      \"{{oneOf (array 'QUERY_PROPERTY_UNSPECIFIED' 'HAS_UNBOUNDED_SOURCE')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe490684-6629-4af8-a239-c80c28401e6f",
      "documentation": "Creates a Cloud Dataflow job from a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates",
      "responses": [
        {
          "uuid": "049f6fb1-92ea-46fe-bd78-a4d71a9eb1a1",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86d9a40d-c9d0-450f-9a56-c149c44a2267",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:get",
      "responses": [
        {
          "uuid": "91f3e531-5926-4ce4-b156-7e6d2b63ee80",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8e4c902-254d-482b-bcda-4f5719950159",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:launch",
      "responses": [
        {
          "uuid": "cf4572b0-e9ad-40ad-8fad-52f0313f4918",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0be52727-663e-42a5-b37b-4345abd4e919",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "ec3c1491-2bc7-441b-91a0-a8584aba43b0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4efa8e8e-82f4-4ef2-b185-67d6a736b212",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "fa815aa7-3d7e-4bd6-a6ee-430ed128dd9c",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d4ae2a4-f01b-42d1-9c1d-132d6ddce2ea",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "3dfb0753-645e-425d-959a-d25e9b7297f3",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c30f0ee-089b-434e-9169-19de1b763bfd",
      "documentation": "Creates a Cloud Dataflow job from a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates",
      "responses": [
        {
          "uuid": "da6d3eb4-ad26-4932-8eda-9d30091962c1",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daead608-2bc3-4a35-af80-2e183515b3f1",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/templates:get",
      "responses": [
        {
          "uuid": "7e128313-6183-41f2-b6a7-7abb2d6c854b",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4866dd50-09bf-440a-ba12-d96a359a65ac",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates:launch",
      "responses": [
        {
          "uuid": "9a6ff161-463e-4626-9831-1dc2dd9f6aa7",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}