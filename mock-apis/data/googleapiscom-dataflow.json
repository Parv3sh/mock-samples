{
  "uuid": "d0fbeaf3-2eb0-415a-949d-00f5dc6a4c6c",
  "lastMigration": 19,
  "name": "Dataflow API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "ea114042-9ca1-4dd7-befc-3be4b1daa630",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/WorkerMessages",
      "responses": [
        {
          "uuid": "150a76f0-6132-4295-8ede-c4b9aad957f1",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69e31a4d-a62c-4591-aca2-76b519f9aad0",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "b72bcb7d-e982-46a1-92f3-9027a9c1ddb9",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "032268ec-761f-4b14-88c1-859a196e8956",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs",
      "responses": [
        {
          "uuid": "2f54f994-a6c3-4e20-b7b7-2c97743c9fd0",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a13a096-8548-482f-aa57-020672846a53",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "096ed1a7-ac2b-4fbb-8cf7-8d68ec421b2a",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0aedf010-7543-420a-9c32-03d9ac5c728d",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId",
      "responses": [
        {
          "uuid": "2175b9c3-bc09-49b4-b0cd-770fa857401a",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d4e770e-3eca-47f9-be3c-0e11b84fef2a",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "d891a4e2-3f57-4867-9740-e5bd46dca895",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc450722-5073-4944-bb78-ad9e9976e7c2",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "2a723991-f025-4e3b-88eb-8cdb503894d0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab8e3664-e9c4-4369-82a5-7acae118e6c1",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "e275c440-36c8-400d-8a47-afd3a0b48210",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbb2100a-4e5a-4c45-95c6-a0e90e29d0fb",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "e7b467d4-9e9c-4f5a-8d16-76ed641b3ae8",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'random.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7715c3bc-613e-42a0-a181-1bb4b7f58b25",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "6e887a0b-97f1-4734-a411-5780f69fe22d",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'random.number'}},\n                  \"producerInstructionIndex\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'random.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'random.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'random.number'}},\n                      \"producerInstructionIndex\": {{faker 'random.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'random.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'random.boolean'}},\n                      \"producesSortedKeys\": {{faker 'random.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'random.boolean'}},\n        \"receiveWorkPort\": {{faker 'random.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'random.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'random.number'}},\n          \"persistentStateVersion\": {{faker 'random.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "528328a2-de5b-4855-84b7-1b994c323f61",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "c1359407-1b21-4068-ba87-8e9dbddaff3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9546de07-d83b-4a16-ac42-d35ab826c86b",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "a42b88f4-965e-4659-9a5c-3d70b15cbfe4",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80b50554-b3c1-43ae-972e-01cf6c4db34c",
      "documentation": "List the jobs of a project across all regions.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/jobs:aggregated",
      "responses": [
        {
          "uuid": "3915ccec-7c61-4597-837a-dfc8dd4a799c",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a59d2d29-49e0-4aa6-8b3b-cdde45064a9e",
      "documentation": "Send a worker_message to the service.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/WorkerMessages",
      "responses": [
        {
          "uuid": "78181b3b-5e74-4b8c-bd63-f59c487af4b4",
          "body": "{\n  \"workerMessageResponses\": [\n    {\n      \"workerHealthReportResponse\": {\n        \"reportInterval\": \"\"\n      },\n      \"workerMetricsResponse\": {},\n      \"workerShutdownNoticeResponse\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aac6f59-5427-49ab-85d8-80891d5cb23c",
      "documentation": "Launch a job with a FlexTemplate.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/flexTemplates:launch",
      "responses": [
        {
          "uuid": "ccf6f6d5-581d-42e1-ad61-d62680493dfc",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fc1a7b8c-f251-46dd-ad4f-ca6b1c1fbb6d",
      "documentation": "List the jobs of a project. To list the jobs of a project in a region, we recommend using `projects.locations.jobs.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To list the all jobs across all regions, use `projects.jobs.aggregated`. Using `projects.jobs.list` is not recommended, as you can only get the list of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "f51984fd-60a7-4a2f-802d-7eddbb10ec1b",
          "body": "{\n  \"failedLocation\": [\n    {\n      \"name\": \"\"\n    }\n  ],\n  \"jobs\": [\n    {\n      \"clientRequestId\": \"\",\n      \"createTime\": \"\",\n      \"createdFromSnapshotId\": \"\",\n      \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"currentStateTime\": \"\",\n      \"environment\": {\n        \"clusterManagerApiService\": \"\",\n        \"dataset\": \"\",\n        \"debugOptions\": {\n          \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n        },\n        \"experiments\": [\n          \"\"\n        ],\n        \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n        \"internalExperiments\": {},\n        \"sdkPipelineOptions\": {},\n        \"serviceAccountEmail\": \"\",\n        \"serviceKmsKeyName\": \"\",\n        \"serviceOptions\": [\n          \"\"\n        ],\n        \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n        \"tempStoragePrefix\": \"\",\n        \"userAgent\": {},\n        \"version\": {},\n        \"workerPools\": [\n          {\n            \"autoscalingSettings\": {\n              \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n              \"maxNumWorkers\": {{faker 'random.number'}}\n            },\n            \"dataDisks\": [\n              {\n                \"diskType\": \"\",\n                \"mountPoint\": \"\",\n                \"sizeGb\": {{faker 'random.number'}}\n              }\n            ],\n            \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskSourceImage\": \"\",\n            \"diskType\": \"\",\n            \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n            \"kind\": \"\",\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"network\": \"\",\n            \"numThreadsPerWorker\": {{faker 'random.number'}},\n            \"numWorkers\": {{faker 'random.number'}},\n            \"onHostMaintenance\": \"\",\n            \"packages\": [\n              {\n                \"location\": \"\",\n                \"name\": \"\"\n              }\n            ],\n            \"poolArgs\": {},\n            \"sdkHarnessContainerImages\": [\n              {\n                \"capabilities\": [\n                  \"\"\n                ],\n                \"containerImage\": \"\",\n                \"environmentId\": \"\",\n                \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"subnetwork\": \"\",\n            \"taskrunnerSettings\": {\n              \"alsologtostderr\": {{faker 'random.boolean'}},\n              \"baseTaskDir\": \"\",\n              \"baseUrl\": \"\",\n              \"commandlinesFileName\": \"\",\n              \"continueOnException\": {{faker 'random.boolean'}},\n              \"dataflowApiVersion\": \"\",\n              \"harnessCommand\": \"\",\n              \"languageHint\": \"\",\n              \"logDir\": \"\",\n              \"logToSerialconsole\": {{faker 'random.boolean'}},\n              \"logUploadLocation\": \"\",\n              \"oauthScopes\": [\n                \"\"\n              ],\n              \"parallelWorkerSettings\": {\n                \"baseUrl\": \"\",\n                \"reportingEnabled\": {{faker 'random.boolean'}},\n                \"servicePath\": \"\",\n                \"shuffleServicePath\": \"\",\n                \"tempStoragePrefix\": \"\",\n                \"workerId\": \"\"\n              },\n              \"streamingWorkerMainClass\": \"\",\n              \"taskGroup\": \"\",\n              \"taskUser\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"vmId\": \"\",\n              \"workflowFileName\": \"\"\n            },\n            \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n            \"workerHarnessContainerImage\": \"\",\n            \"zone\": \"\"\n          }\n        ],\n        \"workerRegion\": \"\",\n        \"workerZone\": \"\"\n      },\n      \"executionInfo\": {\n        \"stages\": {}\n      },\n      \"id\": \"\",\n      \"jobMetadata\": {\n        \"bigTableDetails\": [\n          {\n            \"instanceId\": \"\",\n            \"projectId\": \"\",\n            \"tableId\": \"\"\n          }\n        ],\n        \"bigqueryDetails\": [\n          {\n            \"dataset\": \"\",\n            \"projectId\": \"\",\n            \"query\": \"\",\n            \"table\": \"\"\n          }\n        ],\n        \"datastoreDetails\": [\n          {\n            \"namespace\": \"\",\n            \"projectId\": \"\"\n          }\n        ],\n        \"fileDetails\": [\n          {\n            \"filePattern\": \"\"\n          }\n        ],\n        \"pubsubDetails\": [\n          {\n            \"subscription\": \"\",\n            \"topic\": \"\"\n          }\n        ],\n        \"sdkVersion\": {\n          \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n          \"version\": \"\",\n          \"versionDisplayName\": \"\"\n        },\n        \"spannerDetails\": [\n          {\n            \"databaseId\": \"\",\n            \"instanceId\": \"\",\n            \"projectId\": \"\"\n          }\n        ]\n      },\n      \"labels\": {},\n      \"location\": \"\",\n      \"name\": \"\",\n      \"pipelineDescription\": {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"executionPipelineStage\": [\n          {\n            \"componentSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"componentTransform\": [\n              {\n                \"name\": \"\",\n                \"originalTransform\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputSource\": [\n              {\n                \"name\": \"\",\n                \"originalTransformOrCollection\": \"\",\n                \"sizeBytes\": \"\",\n                \"userName\": \"\"\n              }\n            ],\n            \"prerequisiteStage\": [\n              \"\"\n            ]\n          }\n        ],\n        \"originalPipelineTransform\": [\n          {\n            \"displayData\": [\n              {\n                \"boolValue\": {{faker 'random.boolean'}},\n                \"durationValue\": \"\",\n                \"floatValue\": {{faker 'random.float'}},\n                \"int64Value\": \"\",\n                \"javaClassValue\": \"\",\n                \"key\": \"\",\n                \"label\": \"\",\n                \"namespace\": \"\",\n                \"shortStrValue\": \"\",\n                \"strValue\": \"\",\n                \"timestampValue\": \"\",\n                \"url\": \"\"\n              }\n            ],\n            \"id\": \"\",\n            \"inputCollectionName\": [\n              \"\"\n            ],\n            \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n            \"name\": \"\",\n            \"outputCollectionName\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"projectId\": \"\",\n      \"replaceJobId\": \"\",\n      \"replacedByJobId\": \"\",\n      \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n      \"satisfiesPzs\": {{faker 'random.boolean'}},\n      \"stageStates\": [\n        {\n          \"currentStateTime\": \"\",\n          \"executionStageName\": \"\",\n          \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n        }\n      ],\n      \"startTime\": \"\",\n      \"steps\": [\n        {\n          \"kind\": \"\",\n          \"name\": \"\",\n          \"properties\": {}\n        }\n      ],\n      \"stepsLocation\": \"\",\n      \"tempFiles\": [\n        \"\"\n      ],\n      \"transformNameMapping\": {},\n      \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1158f1a-0b9c-4167-8520-64af8751a315",
      "documentation": "Creates a Cloud Dataflow job. To create a job, we recommend using `projects.locations.jobs.create` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.create` is not recommended, as your job will always start in `us-central1`. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs",
      "responses": [
        {
          "uuid": "621c33ee-f8f7-4642-97a5-7374714affb6",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b60c058d-f02a-408c-b848-cecb7dc7fcec",
      "documentation": "Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "f4b37a4e-3f28-459a-8659-cb89499f8f66",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dcfd1ae-e3da-4919-b4b3-788c736700d7",
      "documentation": "Updates the state of an existing Cloud Dataflow job. To update the state of an existing job, we recommend using `projects.locations.jobs.update` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.update` is not recommended, as you can only update the state of jobs that are running in `us-central1`.",
      "method": "put",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId",
      "responses": [
        {
          "uuid": "a753e23a-7716-410b-ae72-b7234030341d",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "731df4eb-ea6a-4139-b850-2899eebf69ef",
      "documentation": "Get encoded debug configuration for component. Not cacheable.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/getConfig",
      "responses": [
        {
          "uuid": "df3609a9-390e-4ec5-9068-9bc6bf1e0c7e",
          "body": "{\n  \"config\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "026c36c4-8461-4ce9-aa65-0858c815d9c3",
      "documentation": "Send encoded debug capture data for component.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/debug/sendCapture",
      "responses": [
        {
          "uuid": "b98003d8-0f71-46e3-9859-2c0727fd44a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0837bbf5-5c91-4dcf-a202-43d7775eb8ed",
      "documentation": "Request detailed information about the execution status of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/executionDetails",
      "responses": [
        {
          "uuid": "5f6ec809-4112-4e3c-9c0e-71f73b36de07",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"stages\": [\n    {\n      \"endTime\": \"\",\n      \"metrics\": [\n        {\n          \"cumulative\": {{faker 'random.boolean'}},\n          \"distribution\": \"\",\n          \"gauge\": \"\",\n          \"internal\": \"\",\n          \"kind\": \"\",\n          \"meanCount\": \"\",\n          \"meanSum\": \"\",\n          \"name\": {\n            \"context\": {},\n            \"name\": \"\",\n            \"origin\": \"\"\n          },\n          \"scalar\": \"\",\n          \"set\": \"\",\n          \"updateTime\": \"\"\n        }\n      ],\n      \"progress\": {\n        \"currentProgress\": {{faker 'random.float'}},\n        \"dataPoints\": [\n          {\n            \"time\": \"\",\n            \"value\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"stageId\": \"\",\n      \"startTime\": \"\",\n      \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36883bc0-4c15-4da1-9693-96aaaa1afc9e",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.messages.list` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.messages.list` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/messages",
      "responses": [
        {
          "uuid": "bff932f7-1448-48d5-97e4-af4b4ffb157a",
          "body": "{\n  \"autoscalingEvents\": [\n    {\n      \"currentNumWorkers\": \"\",\n      \"description\": {\n        \"messageKey\": \"\",\n        \"messageText\": \"\",\n        \"parameters\": [\n          {\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ]\n      },\n      \"eventType\": \"{{oneOf (array 'TYPE_UNKNOWN' 'TARGET_NUM_WORKERS_CHANGED' 'CURRENT_NUM_WORKERS_CHANGED' 'ACTUATION_FAILURE' 'NO_CHANGE')}}\",\n      \"targetNumWorkers\": \"\",\n      \"time\": \"\",\n      \"workerPool\": \"\"\n    }\n  ],\n  \"jobMessages\": [\n    {\n      \"id\": \"\",\n      \"messageImportance\": \"{{oneOf (array 'JOB_MESSAGE_IMPORTANCE_UNKNOWN' 'JOB_MESSAGE_DEBUG' 'JOB_MESSAGE_DETAILED' 'JOB_MESSAGE_BASIC' 'JOB_MESSAGE_WARNING' 'JOB_MESSAGE_ERROR')}}\",\n      \"messageText\": \"\",\n      \"time\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81a642e3-4c91-4428-9015-ca2972108af3",
      "documentation": "Request the job status. To request the status of a job, we recommend using `projects.locations.jobs.getMetrics` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.getMetrics` is not recommended, as you can only request the status of jobs that are running in `us-central1`.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/metrics",
      "responses": [
        {
          "uuid": "4323c8ae-e551-4ded-b76c-53e854a4fccf",
          "body": "{\n  \"metricTime\": \"\",\n  \"metrics\": [\n    {\n      \"cumulative\": {{faker 'random.boolean'}},\n      \"distribution\": \"\",\n      \"gauge\": \"\",\n      \"internal\": \"\",\n      \"kind\": \"\",\n      \"meanCount\": \"\",\n      \"meanSum\": \"\",\n      \"name\": {\n        \"context\": {},\n        \"name\": \"\",\n        \"origin\": \"\"\n      },\n      \"scalar\": \"\",\n      \"set\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08683bea-0b12-4a5a-954f-4dee9f3c87d8",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/snapshots",
      "responses": [
        {
          "uuid": "e97250f3-e53a-416c-82a5-f09a77a8dc9f",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f96749b7-cdb8-4d55-be91-0f1ee8f4c48f",
      "documentation": "Request detailed information about the execution status of a stage of the job. EXPERIMENTAL. This API is subject to change or removal without notice.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/stages/:stageId/executionDetails",
      "responses": [
        {
          "uuid": "0bdd2c73-98a2-4969-8e45-6ff83a5af353",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"workers\": [\n    {\n      \"workItems\": [\n        {\n          \"attemptId\": \"\",\n          \"endTime\": \"\",\n          \"metrics\": [\n            {\n              \"cumulative\": {{faker 'random.boolean'}},\n              \"distribution\": \"\",\n              \"gauge\": \"\",\n              \"internal\": \"\",\n              \"kind\": \"\",\n              \"meanCount\": \"\",\n              \"meanSum\": \"\",\n              \"name\": {\n                \"context\": {},\n                \"name\": \"\",\n                \"origin\": \"\"\n              },\n              \"scalar\": \"\",\n              \"set\": \"\",\n              \"updateTime\": \"\"\n            }\n          ],\n          \"progress\": {\n            \"currentProgress\": {{faker 'random.float'}},\n            \"dataPoints\": [\n              {\n                \"time\": \"\",\n                \"value\": {{faker 'random.float'}}\n              }\n            ]\n          },\n          \"startTime\": \"\",\n          \"state\": \"{{oneOf (array 'EXECUTION_STATE_UNKNOWN' 'EXECUTION_STATE_NOT_STARTED' 'EXECUTION_STATE_RUNNING' 'EXECUTION_STATE_SUCCEEDED' 'EXECUTION_STATE_FAILED' 'EXECUTION_STATE_CANCELLED')}}\",\n          \"taskId\": \"\"\n        }\n      ],\n      \"workerName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c586485-3a15-4798-a413-a856c715d41f",
      "documentation": "Leases a dataflow WorkItem to run.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:lease",
      "responses": [
        {
          "uuid": "9b3699a1-3615-484c-a2d3-bb34a633d174",
          "body": "{\n  \"unifiedWorkerResponse\": {},\n  \"workItems\": [\n    {\n      \"configuration\": \"\",\n      \"id\": \"\",\n      \"initialReportIndex\": \"\",\n      \"jobId\": \"\",\n      \"leaseExpireTime\": \"\",\n      \"mapTask\": {\n        \"counterPrefix\": \"\",\n        \"instructions\": [\n          {\n            \"flatten\": {\n              \"inputs\": [\n                {\n                  \"outputNum\": {{faker 'random.number'}},\n                  \"producerInstructionIndex\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"name\": \"\",\n            \"originalName\": \"\",\n            \"outputs\": [\n              {\n                \"codec\": {},\n                \"name\": \"\",\n                \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                \"originalName\": \"\",\n                \"systemName\": \"\"\n              }\n            ],\n            \"parDo\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"multiOutputInfos\": [\n                {\n                  \"tag\": \"\"\n                }\n              ],\n              \"numOutputs\": {{faker 'random.number'}},\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"userFn\": {}\n            },\n            \"partialGroupByKey\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"inputElementCodec\": {},\n              \"originalCombineValuesInputStoreName\": \"\",\n              \"originalCombineValuesStepName\": \"\",\n              \"sideInputs\": [\n                {\n                  \"kind\": {},\n                  \"sources\": [\n                    {\n                      \"baseSpecs\": [\n                        {}\n                      ],\n                      \"codec\": {},\n                      \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                      \"metadata\": {\n                        \"estimatedSizeBytes\": \"\",\n                        \"infinite\": {{faker 'random.boolean'}},\n                        \"producesSortedKeys\": {{faker 'random.boolean'}}\n                      },\n                      \"spec\": {}\n                    }\n                  ],\n                  \"tag\": \"\"\n                }\n              ],\n              \"valueCombiningFn\": {}\n            },\n            \"read\": {\n              \"source\": {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            },\n            \"systemName\": \"\",\n            \"write\": {\n              \"input\": {\n                \"outputNum\": {{faker 'random.number'}},\n                \"producerInstructionIndex\": {{faker 'random.number'}}\n              },\n              \"sink\": {\n                \"codec\": {},\n                \"spec\": {}\n              }\n            }\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"packages\": [\n        {\n          \"location\": \"\",\n          \"name\": \"\"\n        }\n      ],\n      \"projectId\": \"\",\n      \"reportStatusInterval\": \"\",\n      \"seqMapTask\": {\n        \"inputs\": [\n          {\n            \"kind\": {},\n            \"sources\": [\n              {\n                \"baseSpecs\": [\n                  {}\n                ],\n                \"codec\": {},\n                \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                \"metadata\": {\n                  \"estimatedSizeBytes\": \"\",\n                  \"infinite\": {{faker 'random.boolean'}},\n                  \"producesSortedKeys\": {{faker 'random.boolean'}}\n                },\n                \"spec\": {}\n              }\n            ],\n            \"tag\": \"\"\n          }\n        ],\n        \"name\": \"\",\n        \"outputInfos\": [\n          {\n            \"sink\": {\n              \"codec\": {},\n              \"spec\": {}\n            },\n            \"tag\": \"\"\n          }\n        ],\n        \"stageName\": \"\",\n        \"systemName\": \"\",\n        \"userFn\": {}\n      },\n      \"shellTask\": {\n        \"command\": \"\",\n        \"exitCode\": {{faker 'random.number'}}\n      },\n      \"sourceOperationTask\": {\n        \"getMetadata\": {\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"name\": \"\",\n        \"originalName\": \"\",\n        \"split\": {\n          \"options\": {\n            \"desiredBundleSizeBytes\": \"\",\n            \"desiredShardSizeBytes\": \"\"\n          },\n          \"source\": {\n            \"baseSpecs\": [\n              {}\n            ],\n            \"codec\": {},\n            \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n            \"metadata\": {\n              \"estimatedSizeBytes\": \"\",\n              \"infinite\": {{faker 'random.boolean'}},\n              \"producesSortedKeys\": {{faker 'random.boolean'}}\n            },\n            \"spec\": {}\n          }\n        },\n        \"stageName\": \"\",\n        \"systemName\": \"\"\n      },\n      \"streamingComputationTask\": {\n        \"computationRanges\": [\n          {\n            \"computationId\": \"\",\n            \"rangeAssignments\": [\n              {\n                \"dataDisk\": \"\",\n                \"end\": \"\",\n                \"start\": \"\"\n              }\n            ]\n          }\n        ],\n        \"dataDisks\": [\n          {\n            \"dataDisk\": \"\"\n          }\n        ],\n        \"taskType\": \"{{oneOf (array 'STREAMING_COMPUTATION_TASK_UNKNOWN' 'STREAMING_COMPUTATION_TASK_STOP' 'STREAMING_COMPUTATION_TASK_START')}}\"\n      },\n      \"streamingConfigTask\": {\n        \"commitStreamChunkSizeBytes\": \"\",\n        \"getDataStreamChunkSizeBytes\": \"\",\n        \"maxWorkItemCommitBytes\": \"\",\n        \"streamingComputationConfigs\": [\n          {\n            \"computationId\": \"\",\n            \"instructions\": [\n              {\n                \"flatten\": {\n                  \"inputs\": [\n                    {\n                      \"outputNum\": {{faker 'random.number'}},\n                      \"producerInstructionIndex\": {{faker 'random.number'}}\n                    }\n                  ]\n                },\n                \"name\": \"\",\n                \"originalName\": \"\",\n                \"outputs\": [\n                  {\n                    \"codec\": {},\n                    \"name\": \"\",\n                    \"onlyCountKeyBytes\": {{faker 'random.boolean'}},\n                    \"onlyCountValueBytes\": {{faker 'random.boolean'}},\n                    \"originalName\": \"\",\n                    \"systemName\": \"\"\n                  }\n                ],\n                \"parDo\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"multiOutputInfos\": [\n                    {\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"numOutputs\": {{faker 'random.number'}},\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"userFn\": {}\n                },\n                \"partialGroupByKey\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"inputElementCodec\": {},\n                  \"originalCombineValuesInputStoreName\": \"\",\n                  \"originalCombineValuesStepName\": \"\",\n                  \"sideInputs\": [\n                    {\n                      \"kind\": {},\n                      \"sources\": [\n                        {\n                          \"baseSpecs\": [\n                            {}\n                          ],\n                          \"codec\": {},\n                          \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                          \"metadata\": {\n                            \"estimatedSizeBytes\": \"\",\n                            \"infinite\": {{faker 'random.boolean'}},\n                            \"producesSortedKeys\": {{faker 'random.boolean'}}\n                          },\n                          \"spec\": {}\n                        }\n                      ],\n                      \"tag\": \"\"\n                    }\n                  ],\n                  \"valueCombiningFn\": {}\n                },\n                \"read\": {\n                  \"source\": {\n                    \"baseSpecs\": [\n                      {}\n                    ],\n                    \"codec\": {},\n                    \"doesNotNeedSplitting\": {{faker 'random.boolean'}},\n                    \"metadata\": {\n                      \"estimatedSizeBytes\": \"\",\n                      \"infinite\": {{faker 'random.boolean'}},\n                      \"producesSortedKeys\": {{faker 'random.boolean'}}\n                    },\n                    \"spec\": {}\n                  }\n                },\n                \"systemName\": \"\",\n                \"write\": {\n                  \"input\": {\n                    \"outputNum\": {{faker 'random.number'}},\n                    \"producerInstructionIndex\": {{faker 'random.number'}}\n                  },\n                  \"sink\": {\n                    \"codec\": {},\n                    \"spec\": {}\n                  }\n                }\n              }\n            ],\n            \"stageName\": \"\",\n            \"systemName\": \"\",\n            \"transformUserNameToStateFamily\": {}\n          }\n        ],\n        \"userStepToStateFamilyNameMap\": {},\n        \"windmillServiceEndpoint\": \"\",\n        \"windmillServicePort\": \"\"\n      },\n      \"streamingSetupTask\": {\n        \"drain\": {{faker 'random.boolean'}},\n        \"receiveWorkPort\": {{faker 'random.number'}},\n        \"snapshotConfig\": {\n          \"importStateEndpoint\": \"\",\n          \"snapshotId\": \"\"\n        },\n        \"streamingComputationTopology\": {\n          \"computations\": [\n            {\n              \"computationId\": \"\",\n              \"inputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"keyRanges\": [\n                {\n                  \"dataDisk\": \"\",\n                  \"deliveryEndpoint\": \"\",\n                  \"deprecatedPersistentDirectory\": \"\",\n                  \"end\": \"\",\n                  \"start\": \"\"\n                }\n              ],\n              \"outputs\": [\n                {\n                  \"customSourceLocation\": {\n                    \"stateful\": {{faker 'random.boolean'}}\n                  },\n                  \"pubsubLocation\": {\n                    \"dropLateData\": {{faker 'random.boolean'}},\n                    \"idLabel\": \"\",\n                    \"subscription\": \"\",\n                    \"timestampLabel\": \"\",\n                    \"topic\": \"\",\n                    \"trackingSubscription\": \"\",\n                    \"withAttributes\": {{faker 'random.boolean'}}\n                  },\n                  \"sideInputLocation\": {\n                    \"stateFamily\": \"\",\n                    \"tag\": \"\"\n                  },\n                  \"streamingStageLocation\": {\n                    \"streamId\": \"\"\n                  }\n                }\n              ],\n              \"stateFamilies\": [\n                {\n                  \"isRead\": {{faker 'random.boolean'}},\n                  \"stateFamily\": \"\"\n                }\n              ],\n              \"systemStageName\": \"\"\n            }\n          ],\n          \"dataDiskAssignments\": [\n            {\n              \"dataDisks\": [\n                \"\"\n              ],\n              \"vmInstance\": \"\"\n            }\n          ],\n          \"forwardingKeyBits\": {{faker 'random.number'}},\n          \"persistentStateVersion\": {{faker 'random.number'}},\n          \"userStageToComputationNameMap\": {}\n        },\n        \"workerHarnessPort\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0fba641a-86cc-44f5-b4bb-dc09137eb721",
      "documentation": "Reports the status of dataflow WorkItems leased by a worker.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId/workItems:reportStatus",
      "responses": [
        {
          "uuid": "640ce753-1b62-43ef-9630-ba4a87b6ed74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "413e0a32-5ce6-437b-8964-79535dd3d3e4",
      "documentation": "Snapshot the state of a streaming job.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/jobs/:jobId:snapshot",
      "responses": [
        {
          "uuid": "22fc1d75-dff2-4144-89fc-7aa186dd1af6",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b5b16f5-16bf-456e-8ccb-c915ba179599",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots",
      "responses": [
        {
          "uuid": "b86300ab-978e-43be-8af3-b5702a959d5f",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "18854c9b-e2de-48e5-bef5-68c4e988edb6",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "362517c2-476b-4abe-ad82-9ea4bbbbc798",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c5a5240-423a-4d25-9345-19e5ee05e0db",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "ebbc665c-c24e-4211-ac69-e44f29f29345",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30f00650-2791-4bf3-a1c5-ff97b9d64d7f",
      "documentation": "Validates a GoogleSQL query for Cloud Dataflow syntax. Will always confirm the given query parses correctly, and if able to look up schema information from DataCatalog, will validate that the query analyzes properly as well.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/sql:validate",
      "responses": [
        {
          "uuid": "a86364a0-8001-4efd-bfae-2d2fc3d4f6f6",
          "body": "{\n  \"errorMessage\": \"\",\n  \"queryInfo\": {\n    \"queryProperty\": [\n      \"{{oneOf (array 'QUERY_PROPERTY_UNSPECIFIED' 'HAS_UNBOUNDED_SOURCE')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2566613c-a934-4699-95f0-7b3a6b95c902",
      "documentation": "Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates",
      "responses": [
        {
          "uuid": "6a13f05f-53b9-4d82-a36a-c20eb6cad55f",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e36c1890-c0f1-44bd-b37e-0d6405f9e5d0",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:get",
      "responses": [
        {
          "uuid": "68cb4926-9f15-4d2a-9e35-c27aa7d276fa",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f83123d-76b0-44ee-860d-4793b8430992",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/locations/:location/templates:launch",
      "responses": [
        {
          "uuid": "0c011784-30db-4183-83d6-c760a35eca4a",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41e1815b-f3a3-47eb-a4c0-da06dfefd58d",
      "documentation": "Deletes a snapshot.",
      "method": "delete",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "215a645f-309a-4cf4-800b-f135b380e5dc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b6f887e-5a1e-4011-9547-88fd30335687",
      "documentation": "Lists snapshots.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots",
      "responses": [
        {
          "uuid": "dd38adc1-b8ab-4efa-93f0-314926751186",
          "body": "{\n  \"snapshots\": [\n    {\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"diskSizeBytes\": \"\",\n      \"id\": \"\",\n      \"projectId\": \"\",\n      \"pubsubMetadata\": [\n        {\n          \"expireTime\": \"\",\n          \"snapshotName\": \"\",\n          \"topicName\": \"\"\n        }\n      ],\n      \"region\": \"\",\n      \"sourceJobId\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n      \"ttl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95f9cd27-b599-4724-ba5d-07ee2f2f6ced",
      "documentation": "Gets information about a snapshot.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/snapshots/:snapshotId",
      "responses": [
        {
          "uuid": "37ba5d99-ae7a-43f2-bc2a-de45bfa4fa19",
          "body": "{\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"diskSizeBytes\": \"\",\n  \"id\": \"\",\n  \"projectId\": \"\",\n  \"pubsubMetadata\": [\n    {\n      \"expireTime\": \"\",\n      \"snapshotName\": \"\",\n      \"topicName\": \"\"\n    }\n  ],\n  \"region\": \"\",\n  \"sourceJobId\": \"\",\n  \"state\": \"{{oneOf (array 'UNKNOWN_SNAPSHOT_STATE' 'PENDING' 'RUNNING' 'READY' 'FAILED' 'DELETED')}}\",\n  \"ttl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "070b548a-6ca4-4af9-9dd7-df209021f1bd",
      "documentation": "Creates a Cloud Dataflow job from a template. Do not enter confidential information when you supply string values using the API.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates",
      "responses": [
        {
          "uuid": "cfc0afe3-faee-413f-8d20-5243310bcc7a",
          "body": "{\n  \"clientRequestId\": \"\",\n  \"createTime\": \"\",\n  \"createdFromSnapshotId\": \"\",\n  \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"currentStateTime\": \"\",\n  \"environment\": {\n    \"clusterManagerApiService\": \"\",\n    \"dataset\": \"\",\n    \"debugOptions\": {\n      \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n    },\n    \"experiments\": [\n      \"\"\n    ],\n    \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n    \"internalExperiments\": {},\n    \"sdkPipelineOptions\": {},\n    \"serviceAccountEmail\": \"\",\n    \"serviceKmsKeyName\": \"\",\n    \"serviceOptions\": [\n      \"\"\n    ],\n    \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n    \"tempStoragePrefix\": \"\",\n    \"userAgent\": {},\n    \"version\": {},\n    \"workerPools\": [\n      {\n        \"autoscalingSettings\": {\n          \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n          \"maxNumWorkers\": {{faker 'random.number'}}\n        },\n        \"dataDisks\": [\n          {\n            \"diskType\": \"\",\n            \"mountPoint\": \"\",\n            \"sizeGb\": {{faker 'random.number'}}\n          }\n        ],\n        \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskSourceImage\": \"\",\n        \"diskType\": \"\",\n        \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n        \"kind\": \"\",\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"network\": \"\",\n        \"numThreadsPerWorker\": {{faker 'random.number'}},\n        \"numWorkers\": {{faker 'random.number'}},\n        \"onHostMaintenance\": \"\",\n        \"packages\": [\n          {\n            \"location\": \"\",\n            \"name\": \"\"\n          }\n        ],\n        \"poolArgs\": {},\n        \"sdkHarnessContainerImages\": [\n          {\n            \"capabilities\": [\n              \"\"\n            ],\n            \"containerImage\": \"\",\n            \"environmentId\": \"\",\n            \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"subnetwork\": \"\",\n        \"taskrunnerSettings\": {\n          \"alsologtostderr\": {{faker 'random.boolean'}},\n          \"baseTaskDir\": \"\",\n          \"baseUrl\": \"\",\n          \"commandlinesFileName\": \"\",\n          \"continueOnException\": {{faker 'random.boolean'}},\n          \"dataflowApiVersion\": \"\",\n          \"harnessCommand\": \"\",\n          \"languageHint\": \"\",\n          \"logDir\": \"\",\n          \"logToSerialconsole\": {{faker 'random.boolean'}},\n          \"logUploadLocation\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"parallelWorkerSettings\": {\n            \"baseUrl\": \"\",\n            \"reportingEnabled\": {{faker 'random.boolean'}},\n            \"servicePath\": \"\",\n            \"shuffleServicePath\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"workerId\": \"\"\n          },\n          \"streamingWorkerMainClass\": \"\",\n          \"taskGroup\": \"\",\n          \"taskUser\": \"\",\n          \"tempStoragePrefix\": \"\",\n          \"vmId\": \"\",\n          \"workflowFileName\": \"\"\n        },\n        \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n        \"workerHarnessContainerImage\": \"\",\n        \"zone\": \"\"\n      }\n    ],\n    \"workerRegion\": \"\",\n    \"workerZone\": \"\"\n  },\n  \"executionInfo\": {\n    \"stages\": {}\n  },\n  \"id\": \"\",\n  \"jobMetadata\": {\n    \"bigTableDetails\": [\n      {\n        \"instanceId\": \"\",\n        \"projectId\": \"\",\n        \"tableId\": \"\"\n      }\n    ],\n    \"bigqueryDetails\": [\n      {\n        \"dataset\": \"\",\n        \"projectId\": \"\",\n        \"query\": \"\",\n        \"table\": \"\"\n      }\n    ],\n    \"datastoreDetails\": [\n      {\n        \"namespace\": \"\",\n        \"projectId\": \"\"\n      }\n    ],\n    \"fileDetails\": [\n      {\n        \"filePattern\": \"\"\n      }\n    ],\n    \"pubsubDetails\": [\n      {\n        \"subscription\": \"\",\n        \"topic\": \"\"\n      }\n    ],\n    \"sdkVersion\": {\n      \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n      \"version\": \"\",\n      \"versionDisplayName\": \"\"\n    },\n    \"spannerDetails\": [\n      {\n        \"databaseId\": \"\",\n        \"instanceId\": \"\",\n        \"projectId\": \"\"\n      }\n    ]\n  },\n  \"labels\": {},\n  \"location\": \"\",\n  \"name\": \"\",\n  \"pipelineDescription\": {\n    \"displayData\": [\n      {\n        \"boolValue\": {{faker 'random.boolean'}},\n        \"durationValue\": \"\",\n        \"floatValue\": {{faker 'random.float'}},\n        \"int64Value\": \"\",\n        \"javaClassValue\": \"\",\n        \"key\": \"\",\n        \"label\": \"\",\n        \"namespace\": \"\",\n        \"shortStrValue\": \"\",\n        \"strValue\": \"\",\n        \"timestampValue\": \"\",\n        \"url\": \"\"\n      }\n    ],\n    \"executionPipelineStage\": [\n      {\n        \"componentSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"componentTransform\": [\n          {\n            \"name\": \"\",\n            \"originalTransform\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputSource\": [\n          {\n            \"name\": \"\",\n            \"originalTransformOrCollection\": \"\",\n            \"sizeBytes\": \"\",\n            \"userName\": \"\"\n          }\n        ],\n        \"prerequisiteStage\": [\n          \"\"\n        ]\n      }\n    ],\n    \"originalPipelineTransform\": [\n      {\n        \"displayData\": [\n          {\n            \"boolValue\": {{faker 'random.boolean'}},\n            \"durationValue\": \"\",\n            \"floatValue\": {{faker 'random.float'}},\n            \"int64Value\": \"\",\n            \"javaClassValue\": \"\",\n            \"key\": \"\",\n            \"label\": \"\",\n            \"namespace\": \"\",\n            \"shortStrValue\": \"\",\n            \"strValue\": \"\",\n            \"timestampValue\": \"\",\n            \"url\": \"\"\n          }\n        ],\n        \"id\": \"\",\n        \"inputCollectionName\": [\n          \"\"\n        ],\n        \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n        \"name\": \"\",\n        \"outputCollectionName\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"projectId\": \"\",\n  \"replaceJobId\": \"\",\n  \"replacedByJobId\": \"\",\n  \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n  \"satisfiesPzs\": {{faker 'random.boolean'}},\n  \"stageStates\": [\n    {\n      \"currentStateTime\": \"\",\n      \"executionStageName\": \"\",\n      \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n    }\n  ],\n  \"startTime\": \"\",\n  \"steps\": [\n    {\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"properties\": {}\n    }\n  ],\n  \"stepsLocation\": \"\",\n  \"tempFiles\": [\n    \"\"\n  ],\n  \"transformNameMapping\": {},\n  \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43037f9e-c18f-4d3e-a55e-5e8debd5f525",
      "documentation": "Get the template associated with a template.",
      "method": "get",
      "endpoint": "v1b3/projects/:projectId/templates:get",
      "responses": [
        {
          "uuid": "63bcec60-0cc7-45ba-8342-ee4a1ff34db6",
          "body": "{\n  \"metadata\": {\n    \"description\": \"\",\n    \"name\": \"\",\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"runtimeMetadata\": {\n    \"parameters\": [\n      {\n        \"customMetadata\": {},\n        \"helpText\": \"\",\n        \"isOptional\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"name\": \"\",\n        \"paramType\": \"{{oneOf (array 'DEFAULT' 'TEXT' 'GCS_READ_BUCKET' 'GCS_WRITE_BUCKET' 'GCS_READ_FILE' 'GCS_WRITE_FILE' 'GCS_READ_FOLDER' 'GCS_WRITE_FOLDER' 'PUBSUB_TOPIC' 'PUBSUB_SUBSCRIPTION')}}\",\n        \"regexes\": [\n          \"\"\n        ]\n      }\n    ],\n    \"sdkInfo\": {\n      \"language\": \"{{oneOf (array 'UNKNOWN' 'JAVA' 'PYTHON')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"templateType\": \"{{oneOf (array 'UNKNOWN' 'LEGACY' 'FLEX')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30b8dad2-1687-466c-8a6e-87eb4bdfe195",
      "documentation": "Launch a template.",
      "method": "post",
      "endpoint": "v1b3/projects/:projectId/templates:launch",
      "responses": [
        {
          "uuid": "5f87ca0a-32a4-4f1b-a10c-9ddcfc37aae5",
          "body": "{\n  \"job\": {\n    \"clientRequestId\": \"\",\n    \"createTime\": \"\",\n    \"createdFromSnapshotId\": \"\",\n    \"currentState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"currentStateTime\": \"\",\n    \"environment\": {\n      \"clusterManagerApiService\": \"\",\n      \"dataset\": \"\",\n      \"debugOptions\": {\n        \"enableHotKeyLogging\": {{faker 'random.boolean'}}\n      },\n      \"experiments\": [\n        \"\"\n      ],\n      \"flexResourceSchedulingGoal\": \"{{oneOf (array 'FLEXRS_UNSPECIFIED' 'FLEXRS_SPEED_OPTIMIZED' 'FLEXRS_COST_OPTIMIZED')}}\",\n      \"internalExperiments\": {},\n      \"sdkPipelineOptions\": {},\n      \"serviceAccountEmail\": \"\",\n      \"serviceKmsKeyName\": \"\",\n      \"serviceOptions\": [\n        \"\"\n      ],\n      \"shuffleMode\": \"{{oneOf (array 'SHUFFLE_MODE_UNSPECIFIED' 'VM_BASED' 'SERVICE_BASED')}}\",\n      \"tempStoragePrefix\": \"\",\n      \"userAgent\": {},\n      \"version\": {},\n      \"workerPools\": [\n        {\n          \"autoscalingSettings\": {\n            \"algorithm\": \"{{oneOf (array 'AUTOSCALING_ALGORITHM_UNKNOWN' 'AUTOSCALING_ALGORITHM_NONE' 'AUTOSCALING_ALGORITHM_BASIC')}}\",\n            \"maxNumWorkers\": {{faker 'random.number'}}\n          },\n          \"dataDisks\": [\n            {\n              \"diskType\": \"\",\n              \"mountPoint\": \"\",\n              \"sizeGb\": {{faker 'random.number'}}\n            }\n          ],\n          \"defaultPackageSet\": \"{{oneOf (array 'DEFAULT_PACKAGE_SET_UNKNOWN' 'DEFAULT_PACKAGE_SET_NONE' 'DEFAULT_PACKAGE_SET_JAVA' 'DEFAULT_PACKAGE_SET_PYTHON')}}\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskSourceImage\": \"\",\n          \"diskType\": \"\",\n          \"ipConfiguration\": \"{{oneOf (array 'WORKER_IP_UNSPECIFIED' 'WORKER_IP_PUBLIC' 'WORKER_IP_PRIVATE')}}\",\n          \"kind\": \"\",\n          \"machineType\": \"\",\n          \"metadata\": {},\n          \"network\": \"\",\n          \"numThreadsPerWorker\": {{faker 'random.number'}},\n          \"numWorkers\": {{faker 'random.number'}},\n          \"onHostMaintenance\": \"\",\n          \"packages\": [\n            {\n              \"location\": \"\",\n              \"name\": \"\"\n            }\n          ],\n          \"poolArgs\": {},\n          \"sdkHarnessContainerImages\": [\n            {\n              \"capabilities\": [\n                \"\"\n              ],\n              \"containerImage\": \"\",\n              \"environmentId\": \"\",\n              \"useSingleCorePerContainer\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"subnetwork\": \"\",\n          \"taskrunnerSettings\": {\n            \"alsologtostderr\": {{faker 'random.boolean'}},\n            \"baseTaskDir\": \"\",\n            \"baseUrl\": \"\",\n            \"commandlinesFileName\": \"\",\n            \"continueOnException\": {{faker 'random.boolean'}},\n            \"dataflowApiVersion\": \"\",\n            \"harnessCommand\": \"\",\n            \"languageHint\": \"\",\n            \"logDir\": \"\",\n            \"logToSerialconsole\": {{faker 'random.boolean'}},\n            \"logUploadLocation\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"parallelWorkerSettings\": {\n              \"baseUrl\": \"\",\n              \"reportingEnabled\": {{faker 'random.boolean'}},\n              \"servicePath\": \"\",\n              \"shuffleServicePath\": \"\",\n              \"tempStoragePrefix\": \"\",\n              \"workerId\": \"\"\n            },\n            \"streamingWorkerMainClass\": \"\",\n            \"taskGroup\": \"\",\n            \"taskUser\": \"\",\n            \"tempStoragePrefix\": \"\",\n            \"vmId\": \"\",\n            \"workflowFileName\": \"\"\n          },\n          \"teardownPolicy\": \"{{oneOf (array 'TEARDOWN_POLICY_UNKNOWN' 'TEARDOWN_ALWAYS' 'TEARDOWN_ON_SUCCESS' 'TEARDOWN_NEVER')}}\",\n          \"workerHarnessContainerImage\": \"\",\n          \"zone\": \"\"\n        }\n      ],\n      \"workerRegion\": \"\",\n      \"workerZone\": \"\"\n    },\n    \"executionInfo\": {\n      \"stages\": {}\n    },\n    \"id\": \"\",\n    \"jobMetadata\": {\n      \"bigTableDetails\": [\n        {\n          \"instanceId\": \"\",\n          \"projectId\": \"\",\n          \"tableId\": \"\"\n        }\n      ],\n      \"bigqueryDetails\": [\n        {\n          \"dataset\": \"\",\n          \"projectId\": \"\",\n          \"query\": \"\",\n          \"table\": \"\"\n        }\n      ],\n      \"datastoreDetails\": [\n        {\n          \"namespace\": \"\",\n          \"projectId\": \"\"\n        }\n      ],\n      \"fileDetails\": [\n        {\n          \"filePattern\": \"\"\n        }\n      ],\n      \"pubsubDetails\": [\n        {\n          \"subscription\": \"\",\n          \"topic\": \"\"\n        }\n      ],\n      \"sdkVersion\": {\n        \"sdkSupportStatus\": \"{{oneOf (array 'UNKNOWN' 'SUPPORTED' 'STALE' 'DEPRECATED' 'UNSUPPORTED')}}\",\n        \"version\": \"\",\n        \"versionDisplayName\": \"\"\n      },\n      \"spannerDetails\": [\n        {\n          \"databaseId\": \"\",\n          \"instanceId\": \"\",\n          \"projectId\": \"\"\n        }\n      ]\n    },\n    \"labels\": {},\n    \"location\": \"\",\n    \"name\": \"\",\n    \"pipelineDescription\": {\n      \"displayData\": [\n        {\n          \"boolValue\": {{faker 'random.boolean'}},\n          \"durationValue\": \"\",\n          \"floatValue\": {{faker 'random.float'}},\n          \"int64Value\": \"\",\n          \"javaClassValue\": \"\",\n          \"key\": \"\",\n          \"label\": \"\",\n          \"namespace\": \"\",\n          \"shortStrValue\": \"\",\n          \"strValue\": \"\",\n          \"timestampValue\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"executionPipelineStage\": [\n        {\n          \"componentSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"componentTransform\": [\n            {\n              \"name\": \"\",\n              \"originalTransform\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputSource\": [\n            {\n              \"name\": \"\",\n              \"originalTransformOrCollection\": \"\",\n              \"sizeBytes\": \"\",\n              \"userName\": \"\"\n            }\n          ],\n          \"prerequisiteStage\": [\n            \"\"\n          ]\n        }\n      ],\n      \"originalPipelineTransform\": [\n        {\n          \"displayData\": [\n            {\n              \"boolValue\": {{faker 'random.boolean'}},\n              \"durationValue\": \"\",\n              \"floatValue\": {{faker 'random.float'}},\n              \"int64Value\": \"\",\n              \"javaClassValue\": \"\",\n              \"key\": \"\",\n              \"label\": \"\",\n              \"namespace\": \"\",\n              \"shortStrValue\": \"\",\n              \"strValue\": \"\",\n              \"timestampValue\": \"\",\n              \"url\": \"\"\n            }\n          ],\n          \"id\": \"\",\n          \"inputCollectionName\": [\n            \"\"\n          ],\n          \"kind\": \"{{oneOf (array 'UNKNOWN_KIND' 'PAR_DO_KIND' 'GROUP_BY_KEY_KIND' 'FLATTEN_KIND' 'READ_KIND' 'WRITE_KIND' 'CONSTANT_KIND' 'SINGLETON_KIND' 'SHUFFLE_KIND')}}\",\n          \"name\": \"\",\n          \"outputCollectionName\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"projectId\": \"\",\n    \"replaceJobId\": \"\",\n    \"replacedByJobId\": \"\",\n    \"requestedState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\",\n    \"satisfiesPzs\": {{faker 'random.boolean'}},\n    \"stageStates\": [\n      {\n        \"currentStateTime\": \"\",\n        \"executionStageName\": \"\",\n        \"executionStageState\": \"{{oneOf (array 'JOB_STATE_UNKNOWN' 'JOB_STATE_STOPPED' 'JOB_STATE_RUNNING' 'JOB_STATE_DONE' 'JOB_STATE_FAILED' 'JOB_STATE_CANCELLED' 'JOB_STATE_UPDATED' 'JOB_STATE_DRAINING' 'JOB_STATE_DRAINED' 'JOB_STATE_PENDING' 'JOB_STATE_CANCELLING' 'JOB_STATE_QUEUED' 'JOB_STATE_RESOURCE_CLEANING_UP')}}\"\n      }\n    ],\n    \"startTime\": \"\",\n    \"steps\": [\n      {\n        \"kind\": \"\",\n        \"name\": \"\",\n        \"properties\": {}\n      }\n    ],\n    \"stepsLocation\": \"\",\n    \"tempFiles\": [\n      \"\"\n    ],\n    \"transformNameMapping\": {},\n    \"type\": \"{{oneOf (array 'JOB_TYPE_UNKNOWN' 'JOB_TYPE_BATCH' 'JOB_TYPE_STREAMING')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}