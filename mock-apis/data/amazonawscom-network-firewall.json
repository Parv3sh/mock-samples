{
  "uuid": "628dddbb-40b3-4499-b2e6-4d6d37d27e6d",
  "lastMigration": 19,
  "name": "AWS Network Firewall",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "b1a06065-e786-469f-8816-25c147a68c62",
      "documentation": "<p>Associates a <a>FirewallPolicy</a> to a <a>Firewall</a>. </p> <p>A firewall policy defines how to monitor and manage your VPC network traffic, using a collection of inspection rule groups and other settings. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.AssociateFirewallPolicy",
      "responses": [
        {
          "uuid": "ae474f79-8a29-4f0c-8008-9afeaec6c0e9",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"FirewallPolicyArn\": \"\",\n  \"UpdateToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e512486e-a1e2-4731-a0a4-5909c9f05f0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8340cb9e-57e3-4bc7-9573-5d363c56f005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c06451fb-9ea1-40c1-8727-2922f7f3bddc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bee81bb9-3008-4526-9a70-30f5695debb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a74527b-00bd-4fdc-bd9e-35719f7719a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca4ae362-4f49-4973-81df-a3c3e76ef1e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12fb0f29-968d-43c5-abad-0b3c5f19d807",
      "documentation": "<p>Associates the specified subnets in the Amazon VPC to the firewall. You can specify one subnet for each of the Availability Zones that the VPC spans. </p> <p>This request creates an AWS Network Firewall firewall endpoint in each of the subnets. To enable the firewall's protections, you must also modify the VPC's route tables for each subnet's Availability Zone, to redirect the traffic that's coming into and going out of the zone through the firewall endpoint. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.AssociateSubnets",
      "responses": [
        {
          "uuid": "96214316-f307-40c5-8613-2ba138585d99",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"SubnetMappings\": [\n    {\n      \"SubnetId\": \"\"\n    }\n  ],\n  \"UpdateToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "760623ac-1344-4393-b49e-da1e42207d1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "236eefda-fb6b-48b7-82fd-f462aafcbf87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed63acf4-47bd-43ea-9f25-2ff1a2c40afa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "267be7e6-ca71-4736-a443-1517c547e203",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8783ef4-a95e-4ed1-991a-dae709d169c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c849edb-d616-459e-b720-6d17b70054a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c6983db-9e7e-464d-b43a-d14278389c7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InsufficientCapacityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72474b40-de22-413d-be2c-e7f3c570dbe6",
      "documentation": "<p>Creates an AWS Network Firewall <a>Firewall</a> and accompanying <a>FirewallStatus</a> for a VPC. </p> <p>The firewall defines the configuration settings for an AWS Network Firewall firewall. The settings that you can define at creation include the firewall policy, the subnets in your VPC to use for the firewall endpoints, and any tags that are attached to the firewall AWS resource. </p> <p>After you create a firewall, you can provide additional settings, like the logging configuration. </p> <p>To update the settings for a firewall, you use the operations that apply to the settings themselves, for example <a>UpdateLoggingConfiguration</a>, <a>AssociateSubnets</a>, and <a>UpdateFirewallDeleteProtection</a>. </p> <p>To manage a firewall's tags, use the standard AWS resource tagging operations, <a>ListTagsForResource</a>, <a>TagResource</a>, and <a>UntagResource</a>.</p> <p>To retrieve information about firewalls, use <a>ListFirewalls</a> and <a>DescribeFirewall</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.CreateFirewall",
      "responses": [
        {
          "uuid": "4713cc25-b2e2-4b0d-954f-9a2949d682f9",
          "body": "{\n  \"Firewall\": {\n    \"FirewallName\": \"\",\n    \"FirewallArn\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"VpcId\": \"\",\n    \"SubnetMappings\": [\n      {\n        \"SubnetId\": \"\"\n      }\n    ],\n    \"DeleteProtection\": {{faker 'random.boolean'}},\n    \"SubnetChangeProtection\": {{faker 'random.boolean'}},\n    \"FirewallPolicyChangeProtection\": {{faker 'random.boolean'}},\n    \"Description\": \"\",\n    \"FirewallId\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  },\n  \"FirewallStatus\": {\n    \"Status\": \"\",\n    \"ConfigurationSyncStateSummary\": \"\",\n    \"SyncStates\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7306f4b5-98ee-4d5b-8f33-3e6529b2b27e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f24aa552-1a48-4c15-8bd7-073905c455e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34513f42-59a8-4011-bffb-bf1c18c86883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ae1cd92-78df-480a-a8a0-87e8fd4a2665",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ba9bae5-26d7-456d-9fe3-f4c7a2fa4b51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InsufficientCapacityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8066dce1-ba31-48fd-bd0f-5f22dc4de15c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2156d0ab-2a10-4c61-9907-945a74ab7bb5",
      "documentation": "<p>Creates the firewall policy for the firewall according to the specifications. </p> <p>An AWS Network Firewall firewall policy defines the behavior of a firewall, in a collection of stateless and stateful rule groups and other settings. You can use one firewall policy for multiple firewalls. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.CreateFirewallPolicy",
      "responses": [
        {
          "uuid": "94494f32-c8ce-4a5c-91e4-ca50f1e3836e",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"FirewallPolicyResponse\": {\n    \"FirewallPolicyName\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"FirewallPolicyId\": \"\",\n    \"Description\": \"\",\n    \"FirewallPolicyStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df6706c5-3587-4098-8277-6d31901343db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eed56631-97c1-4657-8594-f5ff1b2fcac6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d66ae2-4d79-4311-9638-2f3a965d6731",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475c09c9-9bad-4a4a-90c8-40e5275ea6c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b49bed92-610c-44c8-bb80-51186dbb1166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InsufficientCapacityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0631910a-3d79-4d3a-817a-1ccb6e1069f4",
      "documentation": "<p>Creates the specified stateless or stateful rule group, which includes the rules for network traffic inspection, a capacity setting, and tags. </p> <p>You provide your rule group specification in your request using either <code>RuleGroup</code> or <code>Rules</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.CreateRuleGroup",
      "responses": [
        {
          "uuid": "da75540c-c394-442d-a161-d2e352f772d9",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"RuleGroupResponse\": {\n    \"RuleGroupArn\": \"\",\n    \"RuleGroupName\": \"\",\n    \"RuleGroupId\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Capacity\": {{faker 'random.number'}},\n    \"RuleGroupStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44ac9fad-1564-4c0b-b5c5-69203db84c70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f31687-2dac-4fb9-bbea-ee8cd7532109",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de41664d-ae0b-4d67-aa8f-8e69192e64fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "562ab6ac-bb63-4f34-bf93-9907e8bb211c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03f26880-5d33-4e81-b1c2-99361cbcf27a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InsufficientCapacityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29b7f946-317f-4585-999f-d9752893901b",
      "documentation": "<p>Deletes the specified <a>Firewall</a> and its <a>FirewallStatus</a>. This operation requires the firewall's <code>DeleteProtection</code> flag to be <code>FALSE</code>. You can't revert this operation. </p> <p>You can check whether a firewall is in use by reviewing the route tables for the Availability Zones where you have firewall subnet mappings. Retrieve the subnet mappings by calling <a>DescribeFirewall</a>. You define and update the route tables through Amazon VPC. As needed, update the route tables for the zones to remove the firewall endpoints. When the route tables no longer use the firewall endpoints, you can remove the firewall safely.</p> <p>To delete a firewall, remove the delete protection if you need to using <a>UpdateFirewallDeleteProtection</a>, then delete the firewall by calling <a>DeleteFirewall</a>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DeleteFirewall",
      "responses": [
        {
          "uuid": "a893398c-3be7-43eb-81ff-f9a534005401",
          "body": "{\n  \"Firewall\": {\n    \"FirewallName\": \"\",\n    \"FirewallArn\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"VpcId\": \"\",\n    \"SubnetMappings\": [\n      {\n        \"SubnetId\": \"\"\n      }\n    ],\n    \"DeleteProtection\": {{faker 'random.boolean'}},\n    \"SubnetChangeProtection\": {{faker 'random.boolean'}},\n    \"FirewallPolicyChangeProtection\": {{faker 'random.boolean'}},\n    \"Description\": \"\",\n    \"FirewallId\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  },\n  \"FirewallStatus\": {\n    \"Status\": \"\",\n    \"ConfigurationSyncStateSummary\": \"\",\n    \"SyncStates\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec634fab-c47f-4fc5-8400-65e244ee9d81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a7e9a6f-231e-45fe-81cb-f0d4981ee5f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83ae27fd-042d-4e6c-84b6-70370b7b1125",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "790b922b-3849-43cd-84ab-074c75c7b9e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d54f620-d438-4d1b-8408-ac12c802f379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcf78459-b503-4baa-8cfe-4523440786bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf9e33f4-f1ef-4de6-8478-fb50580d6da4",
      "documentation": "Deletes the specified <a>FirewallPolicy</a>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DeleteFirewallPolicy",
      "responses": [
        {
          "uuid": "8e0e84a6-4a7b-4867-ba6e-17f5facba92e",
          "body": "{\n  \"FirewallPolicyResponse\": {\n    \"FirewallPolicyName\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"FirewallPolicyId\": \"\",\n    \"Description\": \"\",\n    \"FirewallPolicyStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1cde05f-c76a-4f1d-98ac-b7d7e022c5fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9072b694-309d-4fe7-9883-1c70d365a935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b056192-23e8-4b7c-ac34-199e65a4ffdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad089d32-61f8-4f25-b985-0b3a3a19d466",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ccae129-8f3d-4f7e-902e-6fa7b7dfa261",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad6b36a9-8460-4104-bdc0-23f9f894ff38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a4f8092-48e9-401e-8005-f8d33a7e6fb3",
      "documentation": "Deletes a resource policy that you created in a <a>PutResourcePolicy</a> request. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "84e4ef6e-e36d-455d-abab-bdec508782a2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67ea15c4-bfcc-4cee-8ae5-cf82e4eac220",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "227f7b5b-4f11-4fca-88c5-d90b7544701f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c8cd7df-b94f-4c34-976a-03d514f85b0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e55b733-6178-49dd-99de-e2d7b71d53d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98270c20-3fe1-46e4-89dd-1f80d0bab192",
      "documentation": "Deletes the specified <a>RuleGroup</a>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DeleteRuleGroup",
      "responses": [
        {
          "uuid": "c129a31b-9657-4e46-90c4-6140084796c9",
          "body": "{\n  \"RuleGroupResponse\": {\n    \"RuleGroupArn\": \"\",\n    \"RuleGroupName\": \"\",\n    \"RuleGroupId\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Capacity\": {{faker 'random.number'}},\n    \"RuleGroupStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf42b5e0-ddbe-4e34-87a9-beaddf521031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a17cacb8-8725-4ac6-acdb-40fff5f236c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d9f7abc-89f6-407f-833e-242f5c5dd5f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c96495f7-1e7d-4555-b3af-b59ba9144765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4691ec40-2f95-4112-a189-ec8aa8d813bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b403b4ee-f012-4731-9f0b-22bc61a031ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a357a3-7c28-49db-bc17-68b1b49c8f51",
      "documentation": "Returns the data objects for the specified firewall. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DescribeFirewall",
      "responses": [
        {
          "uuid": "61ca83bc-0cde-43e7-831d-f8d9b8a55644",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"Firewall\": {\n    \"FirewallName\": \"\",\n    \"FirewallArn\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"VpcId\": \"\",\n    \"SubnetMappings\": [\n      {\n        \"SubnetId\": \"\"\n      }\n    ],\n    \"DeleteProtection\": {{faker 'random.boolean'}},\n    \"SubnetChangeProtection\": {{faker 'random.boolean'}},\n    \"FirewallPolicyChangeProtection\": {{faker 'random.boolean'}},\n    \"Description\": \"\",\n    \"FirewallId\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  },\n  \"FirewallStatus\": {\n    \"Status\": \"\",\n    \"ConfigurationSyncStateSummary\": \"\",\n    \"SyncStates\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9557d350-1a46-41ae-8c18-a63de075a101",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c72cba78-6847-49cc-85cd-29e88f97b792",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad6c8b35-3cab-4856-80a5-da518e88eeda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7076a6f1-8dce-4916-8759-63413e8d4aa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2ed8e14-3026-4fa6-94c1-25db5c3e0aa4",
      "documentation": "Returns the data objects for the specified firewall policy. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DescribeFirewallPolicy",
      "responses": [
        {
          "uuid": "c8bc23a9-a451-4810-9e35-2578c89f5157",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"FirewallPolicyResponse\": {\n    \"FirewallPolicyName\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"FirewallPolicyId\": \"\",\n    \"Description\": \"\",\n    \"FirewallPolicyStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  },\n  \"FirewallPolicy\": {\n    \"StatelessRuleGroupReferences\": [\n      {\n        \"ResourceArn\": \"\",\n        \"Priority\": {{faker 'random.number'}}\n      }\n    ],\n    \"StatelessDefaultActions\": [\n      \"\"\n    ],\n    \"StatelessFragmentDefaultActions\": [\n      \"\"\n    ],\n    \"StatelessCustomActions\": [\n      {\n        \"ActionName\": \"\",\n        \"ActionDefinition\": {\n          \"PublishMetricAction\": {\n            \"Dimensions\": [\n              {\n                \"Value\": \"\"\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"StatefulRuleGroupReferences\": [\n      {\n        \"ResourceArn\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90ba2aaa-2f9b-471b-a763-76be5839ee05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92662fbd-7cd3-42e8-a389-1a805b93d59a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6af6fffe-d6b8-41f5-ae96-90d99a45cae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34550d56-678c-4778-b197-45ed2988183c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df5205e3-a44c-417c-ad15-f870a6c66322",
      "documentation": "Returns the logging configuration for the specified firewall. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DescribeLoggingConfiguration",
      "responses": [
        {
          "uuid": "0372e49c-7cd0-4d6f-8476-a8c64c943871",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"LoggingConfiguration\": {\n    \"LogDestinationConfigs\": [\n      {\n        \"LogType\": \"\",\n        \"LogDestinationType\": \"\",\n        \"LogDestination\": {}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "835f2c87-debd-4a81-8899-61b3eb65e5e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c033df6-b2b3-4916-988c-c62a874bf935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "926348ac-ac18-41f2-95ef-ecb86c19a283",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5210790d-c728-4882-9be3-a9ecfb6d10a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc4836f1-6f43-4305-83ad-aa96346dab04",
      "documentation": "Retrieves a resource policy that you created in a <a>PutResourcePolicy</a> request. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DescribeResourcePolicy",
      "responses": [
        {
          "uuid": "ccdd9790-169e-496a-ac83-16ffdd41c86a",
          "body": "{\n  \"Policy\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4128a3d1-a5d2-47ad-a516-ad8b33f1e74b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f96264b9-adc9-4554-88da-aea2804505d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e743628-967e-4cd6-add4-08b0da8184ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64ee8d76-d06c-487b-ac3a-dccef014ee09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0aeffad6-d65c-4a46-bc50-92109053843e",
      "documentation": "Returns the data objects for the specified rule group. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DescribeRuleGroup",
      "responses": [
        {
          "uuid": "b39dfaf8-a100-4389-8015-d79e1de78704",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"RuleGroup\": {\n    \"RuleVariables\": {\n      \"IPSets\": {},\n      \"PortSets\": {}\n    },\n    \"RulesSource\": {\n      \"RulesString\": \"\",\n      \"RulesSourceList\": {\n        \"Targets\": [\n          \"\"\n        ],\n        \"TargetTypes\": [\n          \"{{oneOf (array 'TLS_SNI' 'HTTP_HOST')}}\"\n        ],\n        \"GeneratedRulesType\": \"\"\n      },\n      \"StatefulRules\": [\n        {\n          \"Action\": \"\",\n          \"Header\": {\n            \"Protocol\": \"\",\n            \"Source\": \"\",\n            \"SourcePort\": \"\",\n            \"Direction\": \"\",\n            \"Destination\": \"\",\n            \"DestinationPort\": \"\"\n          },\n          \"RuleOptions\": [\n            {\n              \"Keyword\": \"\",\n              \"Settings\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ],\n      \"StatelessRulesAndCustomActions\": {\n        \"StatelessRules\": [\n          {\n            \"RuleDefinition\": {\n              \"MatchAttributes\": {\n                \"Sources\": [\n                  {\n                    \"AddressDefinition\": \"\"\n                  }\n                ],\n                \"Destinations\": [\n                  {\n                    \"AddressDefinition\": \"\"\n                  }\n                ],\n                \"SourcePorts\": [\n                  {\n                    \"FromPort\": {{faker 'random.number'}},\n                    \"ToPort\": {{faker 'random.number'}}\n                  }\n                ],\n                \"DestinationPorts\": [\n                  {\n                    \"FromPort\": {{faker 'random.number'}},\n                    \"ToPort\": {{faker 'random.number'}}\n                  }\n                ],\n                \"Protocols\": [\n                  {{faker 'random.number'}}\n                ],\n                \"TCPFlags\": [\n                  {\n                    \"Flags\": [\n                      \"{{oneOf (array 'FIN' 'SYN' 'RST' 'PSH' 'ACK' 'URG' 'ECE' 'CWR')}}\"\n                    ],\n                    \"Masks\": [\n                      \"{{oneOf (array 'FIN' 'SYN' 'RST' 'PSH' 'ACK' 'URG' 'ECE' 'CWR')}}\"\n                    ]\n                  }\n                ]\n              },\n              \"Actions\": [\n                \"\"\n              ]\n            },\n            \"Priority\": {{faker 'random.number'}}\n          }\n        ],\n        \"CustomActions\": [\n          {\n            \"ActionName\": \"\",\n            \"ActionDefinition\": {\n              \"PublishMetricAction\": {\n                \"Dimensions\": [\n                  {\n                    \"Value\": \"\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      }\n    }\n  },\n  \"RuleGroupResponse\": {\n    \"RuleGroupArn\": \"\",\n    \"RuleGroupName\": \"\",\n    \"RuleGroupId\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Capacity\": {{faker 'random.number'}},\n    \"RuleGroupStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9cfb67b-da9d-4e0d-9a5a-e4a0c58eb2f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ea39185-6935-404f-9a49-da256fbe844b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "101cbb83-a5b3-485f-8315-2985b4f1017c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51512218-d961-42e9-8074-37299fbc8010",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a02e0f-03ec-41d0-aeb1-4bfad9384ea5",
      "documentation": "Removes the specified subnet associations from the firewall. This removes the firewall endpoints from the subnets and removes any network filtering protections that the endpoints were providing. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.DisassociateSubnets",
      "responses": [
        {
          "uuid": "bfd5ff40-a2c3-45b3-889d-5453158b2e6f",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"SubnetMappings\": [\n    {\n      \"SubnetId\": \"\"\n    }\n  ],\n  \"UpdateToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e3ace35-a0b9-45cf-9c7c-094a1c327e2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4925dff-40b3-4634-b7f1-a74c14499696",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e7aa9f3-1461-4bc3-9ea2-704d25e5e4af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0659c27a-5b3e-4276-9964-723565023889",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb92bd2b-4c43-4e56-ab5f-020e8df662a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5d22376-8aa2-4bd5-8cc0-42a2273f32a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8308689a-1c43-49f0-a842-4ab2851a8258",
      "documentation": "Retrieves the metadata for the firewall policies that you have defined. Depending on your setting for max results and the number of firewall policies, a single call might not return the full list. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.ListFirewallPolicies",
      "responses": [
        {
          "uuid": "202d2b9c-ba3e-4fba-a571-ccb4460161ce",
          "body": "{\n  \"NextToken\": \"\",\n  \"FirewallPolicies\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13d49b60-e49e-4853-a26a-9210f14b4c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd169682-35d1-4bd4-be47-f0b357197633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf85cacc-0167-4b81-ac4b-9b730b1f8f6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afa7d14d-2b5f-4fb2-ab59-a9e80e393145",
      "documentation": "<p>Retrieves the metadata for the firewalls that you have defined. If you provide VPC identifiers in your request, this returns only the firewalls for those VPCs.</p> <p>Depending on your setting for max results and the number of firewalls, a single call might not return the full list. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.ListFirewalls",
      "responses": [
        {
          "uuid": "8d9c4566-520a-4545-ab67-77f4d2512fd4",
          "body": "{\n  \"NextToken\": \"\",\n  \"Firewalls\": [\n    {\n      \"FirewallName\": \"\",\n      \"FirewallArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "761b3c4f-9e24-41cf-a117-fa60bb1f042d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58218bdf-d342-4d80-a1f9-a25fcb1b49f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3440013e-7af0-4320-8ebe-f2d44d800f9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6f847f9-4137-4a70-bd82-305e048372ec",
      "documentation": "Retrieves the metadata for the rule groups that you have defined. Depending on your setting for max results and the number of rule groups, a single call might not return the full list. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.ListRuleGroups",
      "responses": [
        {
          "uuid": "a722581c-f73d-49dd-9c1e-1dc1df5b509c",
          "body": "{\n  \"NextToken\": \"\",\n  \"RuleGroups\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fd54cfe-8942-4dee-bb46-3b30bed9f26a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e35c0ef-338a-43a3-ba9f-0d8587a407f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5004df-54e9-4395-a8e2-099c45e328f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "386393da-ffac-4317-85af-701e50ec5018",
      "documentation": "<p>Retrieves the tags associated with the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to \"customer\" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p> <p>You can tag the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.ListTagsForResource",
      "responses": [
        {
          "uuid": "2de238fb-8581-4029-877f-1a8e8c317c58",
          "body": "{\n  \"NextToken\": \"\",\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14cf2d34-abbe-4319-b2ee-e50df34fcef3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8ac56f8-6118-4df1-82c0-645e63e66c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0308fe43-bf80-4679-95bb-0041fe06b9ff",
      "documentation": "<p>Creates or updates an AWS Identity and Access Management policy for your rule group or firewall policy. Use this to share rule groups and firewall policies between accounts. This operation works in conjunction with the AWS Resource Access Manager (RAM) service to manage resource sharing for Network Firewall. </p> <p>Use this operation to create or update a resource policy for your rule group or firewall policy. In the policy, you specify the accounts that you want to share the resource with and the operations that you want the accounts to be able to perform. </p> <p>When you add an account in the resource policy, you then run the following Resource Access Manager (RAM) operations to access and accept the shared rule group or firewall policy. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_GetResourceShareInvitations.html\">GetResourceShareInvitations</a> - Returns the Amazon Resource Names (ARNs) of the resource share invitations. </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_AcceptResourceShareInvitation.html\">AcceptResourceShareInvitation</a> - Accepts the share invitation for a specified resource share. </p> </li> </ul> <p>For additional information about resource sharing using RAM, see <a href=\"https://docs.aws.amazon.com/ram/latest/userguide/what-is.html\">AWS Resource Access Manager User Guide</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.PutResourcePolicy",
      "responses": [
        {
          "uuid": "d99b9b68-4a49-4a0c-85de-6520fd64fc25",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f4dbc50-c927-462a-aabb-9615768f7347",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abbf87d9-a166-45cc-8906-966d79f314d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e13cfc66-51a9-46a5-8976-a65b509635d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e9709f-a00a-4ea6-b795-81790b27f274",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "241515ae-5ff0-40d8-8692-260418aaa18e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidResourcePolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20249b0b-f3b2-44e7-9bf1-13bf48231d9a",
      "documentation": "<p>Adds the specified tags to the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to \"customer\" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p> <p>You can tag the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.TagResource",
      "responses": [
        {
          "uuid": "6ddbb9fd-78ec-46f7-b1eb-37258cda1def",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c9ac7d4-589a-44e0-a93f-0e863b55b595",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0911afb9-c562-4ce7-b061-1ffe0c9fe838",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de3e77ee-40f4-48df-80bf-404b9445d7df",
      "documentation": "<p>Removes the tags with the specified keys from the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to \"customer\" and the value to the customer name or ID. You can specify one or more tags to add to each AWS resource, up to 50 tags for a resource.</p> <p>You can manage tags for the AWS resources that you manage through AWS Network Firewall: firewalls, firewall policies, and rule groups. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UntagResource",
      "responses": [
        {
          "uuid": "79e94327-7795-47e5-b815-b54989d311f2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd78b1a5-e95f-44ea-8f60-7fe55dee8f06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b759c77c-6d71-40a8-975f-b9136283fe1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "772e334e-30ed-4dee-8c80-c1670946c3de",
      "documentation": "Modifies the flag, <code>DeleteProtection</code>, which indicates whether it is possible to delete the firewall. If the flag is set to <code>TRUE</code>, the firewall is protected against deletion. This setting helps protect against accidentally deleting a firewall that's in use. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateFirewallDeleteProtection",
      "responses": [
        {
          "uuid": "ba020cc7-af88-4b93-adf3-9f7295c635ba",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"DeleteProtection\": {{faker 'random.boolean'}},\n  \"UpdateToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e86e73b4-fc2f-4097-92fd-dad0d97ede53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd71d4b3-6f7f-46d1-841b-970fb84114e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f6ddd4b-cec2-4719-94c3-36c456da738e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "592608ac-3957-4b85-a407-5ec2e67eafab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c1ac94b-1b45-4a71-8b33-9988d35b033d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79e761b5-561d-49af-8070-af4e1b97cadb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceOwnerCheckException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77969bfb-2c1c-4178-bb2b-887d0ff77fca",
      "documentation": "Modifies the description for the specified firewall. Use the description to help you identify the firewall when you're working with it. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateFirewallDescription",
      "responses": [
        {
          "uuid": "9c9856c9-6076-48b7-a253-3e11798efc45",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"Description\": \"\",\n  \"UpdateToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a930a4a-077c-4590-8de1-da3489f5e9d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80429fbb-1f78-46c2-b5e6-6cb88a7ad8dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2f650d5-1ccd-4bd1-8165-4eb2f17845b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f02c75f7-b6e7-434b-b652-877b7610eb71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "486f331c-540a-45c8-bf94-bc9392d97640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8340e943-755b-40f9-8924-f6c8f0417fbe",
      "documentation": "Updates the properties of the specified firewall policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateFirewallPolicy",
      "responses": [
        {
          "uuid": "573b99cc-2d51-445b-ba64-7bb2c8083a5f",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"FirewallPolicyResponse\": {\n    \"FirewallPolicyName\": \"\",\n    \"FirewallPolicyArn\": \"\",\n    \"FirewallPolicyId\": \"\",\n    \"Description\": \"\",\n    \"FirewallPolicyStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4140bb57-47f2-4d0d-bf48-4dc61f94a704",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74eda66b-493b-4310-892b-da66365a6f8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a913bd4-ce28-481a-94ac-57f223c56b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c6d00bf-f45a-4227-b4f8-45939586b5c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58c674cc-01fb-42e5-814e-f53cf01284a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e65ac6f8-55a0-40ae-8f38-30428a6829bd",
      "documentation": "<p/>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateFirewallPolicyChangeProtection",
      "responses": [
        {
          "uuid": "5ab68873-ed7d-4f83-9a5d-f21b15897af1",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"FirewallPolicyChangeProtection\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89ecbf0e-bf36-46fa-a01a-5579d60bba69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25d74ea0-e749-4006-9632-3bfcdeb5145c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f2b704d-eb99-4988-a0b2-704458e916d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "738f4c9f-c2f5-4808-a851-7f3ff828f81d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b9c60d5-8823-43a2-a5d8-44c1d38e6765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e040f77-83d8-4ae3-beb8-5106e35031ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceOwnerCheckException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73db2211-1def-40fc-909d-b51e3d5cf05c",
      "documentation": "<p>Sets the logging configuration for the specified firewall. </p> <p>To change the logging configuration, retrieve the <a>LoggingConfiguration</a> by calling <a>DescribeLoggingConfiguration</a>, then change it and provide the modified object to this update call. You must change the logging configuration one <a>LogDestinationConfig</a> at a time inside the retrieved <a>LoggingConfiguration</a> object. </p> <p>You can perform only one of the following actions in any call to <code>UpdateLoggingConfiguration</code>: </p> <ul> <li> <p>Create a new log destination object by adding a single <code>LogDestinationConfig</code> array element to <code>LogDestinationConfigs</code>.</p> </li> <li> <p>Delete a log destination object by removing a single <code>LogDestinationConfig</code> array element from <code>LogDestinationConfigs</code>.</p> </li> <li> <p>Change the <code>LogDestination</code> setting in a single <code>LogDestinationConfig</code> array element.</p> </li> </ul> <p>You can't change the <code>LogDestinationType</code> or <code>LogType</code> in a <code>LogDestinationConfig</code>. To change these settings, delete the existing <code>LogDestinationConfig</code> object and create a new one, using two separate calls to this update operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateLoggingConfiguration",
      "responses": [
        {
          "uuid": "04b8337b-9715-4862-9152-a91d409e55a4",
          "body": "{\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"LoggingConfiguration\": {\n    \"LogDestinationConfigs\": [\n      {\n        \"LogType\": \"\",\n        \"LogDestinationType\": \"\",\n        \"LogDestination\": {}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdc14135-225b-4730-9f87-d44e7470da58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "758654de-b578-489b-846b-e2a4d4d1dae4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed3870af-86fe-4d9f-9158-df521b6ce272",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec07f094-fa30-4f1a-ba1b-3ba75333ce78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97f8640f-df71-4f49-b051-48c2560a4609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5668abbf-65c5-42df-bbda-319d941d9b80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "LogDestinationPermissionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdcf56f6-271a-4f4d-8af9-3b27c10e3c52",
      "documentation": "<p>Updates the rule settings for the specified rule group. You use a rule group by reference in one or more firewall policies. When you modify a rule group, you modify all firewall policies that use the rule group. </p> <p>To update a rule group, first call <a>DescribeRuleGroup</a> to retrieve the current <a>RuleGroup</a> object, update the object as needed, and then provide the updated object to this call. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateRuleGroup",
      "responses": [
        {
          "uuid": "238505ef-7326-4c56-b253-9991c93ea8bf",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"RuleGroupResponse\": {\n    \"RuleGroupArn\": \"\",\n    \"RuleGroupName\": \"\",\n    \"RuleGroupId\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"Capacity\": {{faker 'random.number'}},\n    \"RuleGroupStatus\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dd389fb-d738-4787-99a1-d79609907198",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b0959b5-3b05-44ff-8398-9a5c973c522d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70fd82eb-10c6-47bc-9e37-5b01f38f9fcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aed3415b-1d2d-44a3-abf6-e1c0266c68ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc1241d9-df3e-4ae3-a676-dc2920634ba0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ed3e99f-7065-40e7-98ce-7b5729358fb7",
      "documentation": "<p/>",
      "method": "post",
      "endpoint": "#X-Amz-Target=NetworkFirewall_20201112.UpdateSubnetChangeProtection",
      "responses": [
        {
          "uuid": "8772bfa8-6d63-4825-9950-5a21d6a47485",
          "body": "{\n  \"UpdateToken\": \"\",\n  \"FirewallArn\": \"\",\n  \"FirewallName\": \"\",\n  \"SubnetChangeProtection\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdb41c0e-43d1-4138-b3a8-4928769845db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e77f32c-027b-4a46-b9b0-81691ea5df82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dbebed6-8858-49c4-a8b9-a38db9ad5080",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df02249f-4be4-4aa8-ae25-e85458695a35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ae84296-c62c-47f1-95cf-4ffd70a47211",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14fa0547-6bcb-42ee-9c45-c5217d26394a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceOwnerCheckException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}