{
  "uuid": "d6475e1b-00d9-4e6e-ae5a-0857692c82ae",
  "lastMigration": 19,
  "name": "Cloud Build API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f9dd612a-c7fd-466e-923d-9a62ec170988",
      "documentation": "Deletes a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "8713ec8c-f5c9-4c61-962d-476c5e0f812b",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b541fde7-8af8-40fd-bd86-47bba2c8962e",
      "documentation": "Returns details of a `WorkerPool`.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "08277aa7-234f-47c7-b709-e9c5a1ca979e",
          "body": "{\n  \"annotations\": {},\n  \"createTime\": \"\",\n  \"deleteTime\": \"\",\n  \"displayName\": \"\",\n  \"etag\": \"\",\n  \"name\": \"\",\n  \"networkConfig\": {\n    \"peeredNetwork\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n  \"uid\": \"\",\n  \"updateTime\": \"\",\n  \"workerConfig\": {\n    \"diskSizeGb\": \"\",\n    \"machineType\": \"\",\n    \"noExternalIp\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69858e08-4985-4b1f-ba7d-792d03604c58",
      "documentation": "Updates a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "a69296e5-8e1d-4aef-b997-e2b77564c730",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf672380-bdb3-464f-9782-21bb8304c414",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "93f33e64-88d7-4351-b6a8-2ae817ccf000",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67cfc1d3-3ca1-4e27-b9ff-0d2d34e5bcee",
      "documentation": "Lists `WorkerPool`s in the given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "f83f800c-1a5a-4c10-a079-814aefc1a90c",
          "body": "{\n  \"workerPools\": [\n    {\n      \"annotations\": {},\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"displayName\": \"\",\n      \"etag\": \"\",\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"peeredNetwork\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n      \"uid\": \"\",\n      \"updateTime\": \"\",\n      \"workerConfig\": {\n        \"diskSizeGb\": \"\",\n        \"machineType\": \"\",\n        \"noExternalIp\": {{faker 'random.boolean'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f32db940-7818-48e5-87bc-d04434561f11",
      "documentation": "Creates a `WorkerPool` to run the builds, and returns the new worker pool. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "post",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "d9e542b7-12a2-4a01-b0be-7991af644b96",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}