{
  "uuid": "b10ee328-3006-404f-867e-b0641adf5a22",
  "lastMigration": 19,
  "name": "Cloud Build API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "aa444932-02d3-43f8-a53a-ea9487e4160d",
      "documentation": "Deletes a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "a7cbcc51-d7d0-400b-b443-74e057e6e62b",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8637289-aa45-4b11-9a46-b3fd25ad40c2",
      "documentation": "Returns details of a `WorkerPool`.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "d058bd1d-026b-433f-b437-75503a16d40e",
          "body": "{\n  \"annotations\": {},\n  \"createTime\": \"\",\n  \"deleteTime\": \"\",\n  \"displayName\": \"\",\n  \"etag\": \"\",\n  \"name\": \"\",\n  \"networkConfig\": {\n    \"peeredNetwork\": \"\"\n  },\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n  \"uid\": \"\",\n  \"updateTime\": \"\",\n  \"workerConfig\": {\n    \"diskSizeGb\": \"\",\n    \"machineType\": \"\",\n    \"noExternalIp\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f55301e3-526c-4cee-98c4-2a2b1fd90115",
      "documentation": "Updates a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "b5a8c56c-5d28-4962-aafd-e0e6a497cc48",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6fa489d-bf89-413c-bdbf-638acfa67237",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "d8358a62-ce10-404e-8eed-95ded4795e08",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d439c6f-fde5-4049-a094-661c2618bbcb",
      "documentation": "Lists `WorkerPool`s in the given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "8f7034d2-0606-4897-ac02-928b7439a416",
          "body": "{\n  \"workerPools\": [\n    {\n      \"annotations\": {},\n      \"createTime\": \"\",\n      \"deleteTime\": \"\",\n      \"displayName\": \"\",\n      \"etag\": \"\",\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"peeredNetwork\": \"\"\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'CREATING' 'RUNNING' 'DELETING' 'DELETED')}}\",\n      \"uid\": \"\",\n      \"updateTime\": \"\",\n      \"workerConfig\": {\n        \"diskSizeGb\": \"\",\n        \"machineType\": \"\",\n        \"noExternalIp\": {{faker 'random.boolean'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a8d2c95-0679-4a6e-84db-3da22bc571ce",
      "documentation": "Creates a `WorkerPool` to run the builds, and returns the new worker pool. NOTE: As of now, this method returns an `Operation` that is always complete.",
      "method": "post",
      "endpoint": "v1beta1/:parent/workerPools",
      "responses": [
        {
          "uuid": "a01bd958-0b68-4dd1-8f6f-bf37214256f1",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}