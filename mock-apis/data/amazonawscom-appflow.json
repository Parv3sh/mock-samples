{
  "uuid": "2612f149-20c5-4930-ad8c-ed5058b8f94e",
  "lastMigration": 19,
  "name": "Amazon Appflow",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "12308e7c-a333-41fe-8f7d-f1d7aed18520",
      "documentation": " Creates a new connector profile associated with your Amazon Web Services account. There is a soft quota of 100 connector profiles per Amazon Web Services account. If you need more connector profiles than this quota allows, you can submit a request to the Amazon AppFlow team through the Amazon AppFlow support channel. ",
      "method": "post",
      "endpoint": "create-connector-profile",
      "responses": [
        {
          "uuid": "d2a16986-6586-4db3-a040-1ec946f82ec7",
          "body": "{\n  \"connectorProfileArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99644c48-39eb-40ab-be1e-6702aaac63dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4bb2654-7ce6-4dfc-b97e-b9452656855f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e883a3c-f68e-48e2-9995-81817b7ffece",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f08e03b9-4a83-4af9-9c37-66af7974d238",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de4bd403-7b1c-4ba2-bc74-8ccd08a33601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9cd5447-315e-42ad-9559-320e436f4f40",
      "documentation": " Enables your application to create a new flow using Amazon AppFlow. You must create a connector profile before calling this API. Please note that the Request Syntax below shows syntax for multiple destinations, however, you can only transfer data to one item in this list at a time. Amazon AppFlow does not currently support flows to multiple destinations at once. ",
      "method": "post",
      "endpoint": "create-flow",
      "responses": [
        {
          "uuid": "4e9b7e13-eca6-450e-8553-6ddd213d7824",
          "body": "{\n  \"flowArn\": \"\",\n  \"flowStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9cfabce-77a8-44a2-ab92-5eb0745ec338",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a316754-b248-4253-a67c-9be6932984d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d067c0e-94fb-41aa-b9a9-b42734e5bc51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2cc84a8-083f-49d2-9ff1-2c91f0a15fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96a7cbd9-ff9c-4638-aa4f-a12efbc2d672",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86310a60-e962-40cf-9885-84d161af80b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9596fad-8bb0-4ed9-aa36-b129a8eba25b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConnectorServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d64b0ebb-36df-4ba6-9330-bdb59bd395c1",
      "documentation": " Enables you to delete an existing connector profile. ",
      "method": "post",
      "endpoint": "delete-connector-profile",
      "responses": [
        {
          "uuid": "1c4b30f2-23de-4791-af99-023305fc3b32",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "079d545d-3a93-4564-971d-4e23a26f024f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d39a118-cac9-4235-8a77-69b5dda54d19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dca40ec7-b595-4e6d-b5ce-850445db6dd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19cce95c-49a8-464d-8a7f-e6805398b8f1",
      "documentation": " Enables your application to delete an existing flow. Before deleting the flow, Amazon AppFlow validates the request by checking the flow configuration and status. You can delete flows one at a time. ",
      "method": "post",
      "endpoint": "delete-flow",
      "responses": [
        {
          "uuid": "c2696827-3918-43ff-b7b3-6f65c63ebb1c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94a1a38c-1ddf-45a0-b565-9b2870916216",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9b29412-210c-49b3-9345-751dc9f3095e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecf193e1-4015-46b7-b5b1-9354e1ff7617",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b87dd88-d568-42b0-8627-ec629f485131",
      "documentation": " Provides details regarding the entity used with the connector, with a description of the data model for each entity. ",
      "method": "post",
      "endpoint": "describe-connector-entity",
      "responses": [
        {
          "uuid": "48f13287-8c54-4e00-803c-6401790cc1b5",
          "body": "{\n  \"connectorEntityFields\": [\n    {\n      \"identifier\": \"\",\n      \"label\": \"\",\n      \"supportedFieldTypeDetails\": {\n        \"v1\": {\n          \"fieldType\": \"\",\n          \"filterOperators\": [\n            \"{{oneOf (array 'PROJECTION' 'LESS_THAN' 'GREATER_THAN' 'CONTAINS' 'BETWEEN' 'LESS_THAN_OR_EQUAL_TO' 'GREATER_THAN_OR_EQUAL_TO' 'EQUAL_TO' 'NOT_EQUAL_TO' 'ADDITION' 'MULTIPLICATION' 'DIVISION' 'SUBTRACTION' 'MASK_ALL' 'MASK_FIRST_N' 'MASK_LAST_N' 'VALIDATE_NON_NULL' 'VALIDATE_NON_ZERO' 'VALIDATE_NON_NEGATIVE' 'VALIDATE_NUMERIC' 'NO_OP')}}\"\n          ],\n          \"supportedValues\": [\n            \"\"\n          ]\n        }\n      },\n      \"description\": \"\",\n      \"sourceProperties\": {\n        \"isRetrievable\": {{faker 'random.boolean'}},\n        \"isQueryable\": {{faker 'random.boolean'}}\n      },\n      \"destinationProperties\": {\n        \"isCreatable\": {{faker 'random.boolean'}},\n        \"isNullable\": {{faker 'random.boolean'}},\n        \"isUpsertable\": {{faker 'random.boolean'}},\n        \"isUpdatable\": {{faker 'random.boolean'}},\n        \"supportedWriteOperations\": [\n          \"{{oneOf (array 'INSERT' 'UPSERT' 'UPDATE')}}\"\n        ]\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd819128-6ce6-4a83-92c8-c5fa70f69ff6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e00ed49-fe7f-4882-a229-fb6f22537d3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9dd0816-54da-4861-89c6-e0f31cca3c3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "806f5edb-0526-457b-907b-fdb4bae86705",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConnectorServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475e14cd-6b6b-4769-8704-93a5be2b7ea1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c768ac10-20f3-42fd-be34-4055865ec1b8",
      "documentation": "<p> Returns a list of <code>connector-profile</code> details matching the provided <code>connector-profile</code> names and <code>connector-types</code>. Both input lists are optional, and you can use them to filter the result. </p> <p>If no names or <code>connector-types</code> are provided, returns all connector profiles in a paginated form. If there is no match, this operation returns an empty list.</p>",
      "method": "post",
      "endpoint": "describe-connector-profiles",
      "responses": [
        {
          "uuid": "7abe3433-67f5-4e84-83af-86b1f59c137c",
          "body": "{\n  \"connectorProfileDetails\": [\n    {\n      \"connectorProfileArn\": \"\",\n      \"connectorProfileName\": \"\",\n      \"connectorType\": \"\",\n      \"connectionMode\": \"\",\n      \"credentialsArn\": \"\",\n      \"connectorProfileProperties\": {\n        \"Amplitude\": {},\n        \"Datadog\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Dynatrace\": {\n          \"instanceUrl\": \"\"\n        },\n        \"GoogleAnalytics\": {},\n        \"Honeycode\": {},\n        \"InforNexus\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Marketo\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Redshift\": {\n          \"databaseUrl\": \"\",\n          \"bucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"roleArn\": \"\"\n        },\n        \"Salesforce\": {\n          \"instanceUrl\": \"\",\n          \"isSandboxEnvironment\": {{faker 'random.boolean'}}\n        },\n        \"ServiceNow\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Singular\": {},\n        \"Slack\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Snowflake\": {\n          \"warehouse\": \"\",\n          \"stage\": \"\",\n          \"bucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"privateLinkServiceName\": \"\",\n          \"accountName\": \"\",\n          \"region\": \"\"\n        },\n        \"Trendmicro\": {},\n        \"Veeva\": {\n          \"instanceUrl\": \"\"\n        },\n        \"Zendesk\": {\n          \"instanceUrl\": \"\"\n        },\n        \"SAPOData\": {\n          \"applicationHostUrl\": \"\",\n          \"applicationServicePath\": \"\",\n          \"portNumber\": {{faker 'random.number'}},\n          \"clientNumber\": \"\",\n          \"logonLanguage\": \"\",\n          \"privateLinkServiceName\": \"\",\n          \"oAuthProperties\": {\n            \"tokenUrl\": \"\",\n            \"authCodeUrl\": \"\",\n            \"oAuthScopes\": [\n              \"\"\n            ]\n          }\n        }\n      },\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"privateConnectionProvisioningState\": {\n        \"status\": \"\",\n        \"failureMessage\": \"\",\n        \"failureCause\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "390761c2-b84d-4505-a5c7-4e23d4708349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cb38fd2-3bf5-4b99-ae83-a375d6401c4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c8acafb-9b5f-46b6-b4c8-f374e9d10127",
      "documentation": " Describes the connectors vended by Amazon AppFlow for specified connector types. If you don't specify a connector type, this operation describes all connectors vended by Amazon AppFlow. If there are more connectors than can be returned in one page, the response contains a <code>nextToken</code> object, which can be be passed in to the next call to the <code>DescribeConnectors</code> API operation to retrieve the next page. ",
      "method": "post",
      "endpoint": "describe-connectors",
      "responses": [
        {
          "uuid": "baf392c1-475f-46bd-9378-366e5b0183d2",
          "body": "{\n  \"connectorConfigurations\": {},\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35201662-ee01-4023-bdf0-17ed0d2a5941",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94562f30-2bcc-46fb-8f4c-7c8fc0273cb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51fff305-8ad5-4891-b7cf-1a8b4f8cb213",
      "documentation": " Provides a description of the specified flow. ",
      "method": "post",
      "endpoint": "describe-flow",
      "responses": [
        {
          "uuid": "4d9d2952-f535-4c91-8742-cd36f27cd44b",
          "body": "{\n  \"flowArn\": \"\",\n  \"description\": \"\",\n  \"flowName\": \"\",\n  \"kmsArn\": \"\",\n  \"flowStatus\": \"\",\n  \"flowStatusMessage\": \"\",\n  \"sourceFlowConfig\": {\n    \"connectorType\": \"\",\n    \"connectorProfileName\": \"\",\n    \"sourceConnectorProperties\": {\n      \"Amplitude\": {\n        \"object\": \"\"\n      },\n      \"Datadog\": {\n        \"object\": \"\"\n      },\n      \"Dynatrace\": {\n        \"object\": \"\"\n      },\n      \"GoogleAnalytics\": {\n        \"object\": \"\"\n      },\n      \"InforNexus\": {\n        \"object\": \"\"\n      },\n      \"Marketo\": {\n        \"object\": \"\"\n      },\n      \"S3\": {\n        \"bucketName\": \"\",\n        \"bucketPrefix\": \"\"\n      },\n      \"Salesforce\": {\n        \"object\": \"\",\n        \"enableDynamicFieldUpdate\": {{faker 'random.boolean'}},\n        \"includeDeletedRecords\": {{faker 'random.boolean'}}\n      },\n      \"ServiceNow\": {\n        \"object\": \"\"\n      },\n      \"Singular\": {\n        \"object\": \"\"\n      },\n      \"Slack\": {\n        \"object\": \"\"\n      },\n      \"Trendmicro\": {\n        \"object\": \"\"\n      },\n      \"Veeva\": {\n        \"object\": \"\",\n        \"documentType\": \"\",\n        \"includeSourceFiles\": {{faker 'random.boolean'}},\n        \"includeRenditions\": {{faker 'random.boolean'}},\n        \"includeAllVersions\": {{faker 'random.boolean'}}\n      },\n      \"Zendesk\": {\n        \"object\": \"\"\n      },\n      \"SAPOData\": {\n        \"objectPath\": \"\"\n      }\n    },\n    \"incrementalPullConfig\": {\n      \"datetimeTypeFieldName\": \"\"\n    }\n  },\n  \"destinationFlowConfigList\": [\n    {\n      \"connectorType\": \"\",\n      \"connectorProfileName\": \"\",\n      \"destinationConnectorProperties\": {\n        \"Redshift\": {\n          \"object\": \"\",\n          \"intermediateBucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          }\n        },\n        \"S3\": {\n          \"bucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"s3OutputFormatConfig\": {\n            \"fileType\": \"\",\n            \"prefixConfig\": {\n              \"prefixType\": \"\",\n              \"prefixFormat\": \"\"\n            },\n            \"aggregationConfig\": {\n              \"aggregationType\": \"\"\n            }\n          }\n        },\n        \"Salesforce\": {\n          \"object\": \"\",\n          \"idFieldNames\": [\n            \"\"\n          ],\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          },\n          \"writeOperationType\": \"\"\n        },\n        \"Snowflake\": {\n          \"object\": \"\",\n          \"intermediateBucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          }\n        },\n        \"EventBridge\": {\n          \"object\": \"\",\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          }\n        },\n        \"LookoutMetrics\": {},\n        \"Upsolver\": {\n          \"bucketName\": \"\",\n          \"bucketPrefix\": \"\",\n          \"s3OutputFormatConfig\": {\n            \"fileType\": \"\",\n            \"prefixConfig\": {\n              \"prefixType\": \"\",\n              \"prefixFormat\": \"\"\n            },\n            \"aggregationConfig\": {\n              \"aggregationType\": \"\"\n            }\n          }\n        },\n        \"Honeycode\": {\n          \"object\": \"\",\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          }\n        },\n        \"CustomerProfiles\": {\n          \"domainName\": \"\",\n          \"objectTypeName\": \"\"\n        },\n        \"Zendesk\": {\n          \"object\": \"\",\n          \"idFieldNames\": [\n            \"\"\n          ],\n          \"errorHandlingConfig\": {\n            \"failOnFirstDestinationError\": {{faker 'random.boolean'}},\n            \"bucketPrefix\": \"\",\n            \"bucketName\": \"\"\n          },\n          \"writeOperationType\": \"{{oneOf (array 'INSERT' 'UPSERT' 'UPDATE')}}\"\n        }\n      }\n    }\n  ],\n  \"lastRunExecutionDetails\": {\n    \"mostRecentExecutionMessage\": \"\",\n    \"mostRecentExecutionTime\": \"{{faker 'date.recent' 365}}\",\n    \"mostRecentExecutionStatus\": \"\"\n  },\n  \"triggerConfig\": {\n    \"triggerType\": \"\",\n    \"triggerProperties\": {\n      \"Scheduled\": {\n        \"scheduleExpression\": \"\",\n        \"dataPullMode\": \"\",\n        \"scheduleStartTime\": \"{{faker 'date.recent' 365}}\",\n        \"scheduleEndTime\": \"{{faker 'date.recent' 365}}\",\n        \"timezone\": \"\",\n        \"scheduleOffset\": {{faker 'random.number'}},\n        \"firstExecutionFrom\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  },\n  \"tasks\": [\n    {\n      \"sourceFields\": [\n        \"\"\n      ],\n      \"connectorOperator\": {\n        \"Amplitude\": \"\",\n        \"Datadog\": \"\",\n        \"Dynatrace\": \"\",\n        \"GoogleAnalytics\": \"\",\n        \"InforNexus\": \"\",\n        \"Marketo\": \"\",\n        \"S3\": \"\",\n        \"Salesforce\": \"\",\n        \"ServiceNow\": \"\",\n        \"Singular\": \"\",\n        \"Slack\": \"\",\n        \"Trendmicro\": \"\",\n        \"Veeva\": \"\",\n        \"Zendesk\": \"\",\n        \"SAPOData\": \"\"\n      },\n      \"destinationField\": \"\",\n      \"taskType\": \"\",\n      \"taskProperties\": {}\n    }\n  ],\n  \"createdAt\": \"{{faker 'date.recent' 365}}\",\n  \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n  \"createdBy\": \"\",\n  \"lastUpdatedBy\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12326d77-65cc-45cc-a035-822d73e378e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d3507ae-a049-4158-bb86-f9a8e3995872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09de45e8-b65a-4b15-8fa6-c0ea6c495c20",
      "documentation": " Fetches the execution history of the flow. ",
      "method": "post",
      "endpoint": "describe-flow-execution-records",
      "responses": [
        {
          "uuid": "ca19d088-b1b7-40b9-9aec-6cfb453cdc6c",
          "body": "{\n  \"flowExecutions\": [\n    {\n      \"executionId\": \"\",\n      \"executionStatus\": \"\",\n      \"executionResult\": {\n        \"errorInfo\": {\n          \"putFailuresCount\": {{faker 'random.number'}},\n          \"executionMessage\": \"\"\n        },\n        \"bytesProcessed\": {{faker 'random.number'}},\n        \"bytesWritten\": {{faker 'random.number'}},\n        \"recordsProcessed\": {{faker 'random.number'}}\n      },\n      \"startedAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"dataPullStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"dataPullEndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65e4e862-09bb-4b04-a4e0-cd6d99fb14ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a8102c8-4776-429a-a0c5-d6c70128084a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67c373d8-6364-4b09-91d8-837110c80dc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57df9334-f939-4003-958c-d84b0bec1976",
      "documentation": " Returns the list of available connector entities supported by Amazon AppFlow. For example, you can query Salesforce for <i>Account</i> and <i>Opportunity</i> entities, or query ServiceNow for the <i>Incident</i> entity. ",
      "method": "post",
      "endpoint": "list-connector-entities",
      "responses": [
        {
          "uuid": "5af8a1a9-f545-4c96-8622-0398c2c5288d",
          "body": "{\n  \"connectorEntityMap\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22e86c94-90d9-43ad-887e-584c0d18a58e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2341911a-062c-4793-9263-6487ded8867f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e503a533-6bb4-4d61-a92e-e75229a497bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51463fad-f2a0-4bc7-88d6-41923c6f6e00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConnectorServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79334000-5cd5-4a54-b58e-4584fdc09f5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5327689-a7d6-4bdc-83d8-acd4984d173e",
      "documentation": " Lists all of the flows associated with your account. ",
      "method": "post",
      "endpoint": "list-flows",
      "responses": [
        {
          "uuid": "6088f621-17bc-4999-b5de-0de4bbba4fec",
          "body": "{\n  \"flows\": [\n    {\n      \"flowArn\": \"\",\n      \"description\": \"\",\n      \"flowName\": \"\",\n      \"flowStatus\": \"\",\n      \"sourceConnectorType\": \"\",\n      \"destinationConnectorType\": \"\",\n      \"triggerType\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"createdBy\": \"\",\n      \"lastUpdatedBy\": \"\",\n      \"tags\": {},\n      \"lastRunExecutionDetails\": {\n        \"mostRecentExecutionMessage\": \"\",\n        \"mostRecentExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"mostRecentExecutionStatus\": \"\"\n      }\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d980158-6797-4c34-93f8-7210a0b74492",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "496f83a1-2af6-4e4a-bcd1-2ccb30d03a48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4519d52-4c18-445b-9d65-137f8fd64cea",
      "documentation": " Retrieves the tags that are associated with a specified flow. ",
      "method": "get",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "968e241a-d736-438a-baf3-69e395a0ab89",
          "body": "{\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "278a29f7-6356-48b2-bb5a-e0522794322c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05e7817e-21b1-4f0e-83dd-fc2cea36335d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d636fb12-db5a-4730-af11-055e51e397d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc563a43-87f6-4c69-b1e8-042c99f4506a",
      "documentation": " Applies a tag to the specified flow. ",
      "method": "post",
      "endpoint": "tags/:resourceArn",
      "responses": [
        {
          "uuid": "957edd89-dc3d-4d43-8a97-e95cfc2236e5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a916d5d-24ea-4a75-a72d-97d47cffade8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1001085f-2650-42d7-8dd1-a576647c5296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68d64463-3aaa-45b0-98c7-748ae0f22912",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3c7a757-f11b-4f6c-8dfd-8a2f6fae5e6b",
      "documentation": " Activates an existing flow. For on-demand flows, this operation runs the flow immediately. For schedule and event-triggered flows, this operation activates the flow. ",
      "method": "post",
      "endpoint": "start-flow",
      "responses": [
        {
          "uuid": "687b31a6-729b-44c4-8576-eca9791294d5",
          "body": "{\n  \"flowArn\": \"\",\n  \"flowStatus\": \"\",\n  \"executionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78fe73c9-29e7-434a-abe3-5b8c20fea107",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ec1d0a0-bf26-40b7-82e0-c8e33dd655bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8f5247d-f3fe-4d71-ad5f-c526f5447753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed228517-b81f-489a-b85b-36f36120e1ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "744f21ac-e6fb-4375-a668-f0a7d4f1fb52",
      "documentation": " Deactivates the existing flow. For on-demand flows, this operation returns an <code>unsupportedOperationException</code> error message. For schedule and event-triggered flows, this operation deactivates the flow. ",
      "method": "post",
      "endpoint": "stop-flow",
      "responses": [
        {
          "uuid": "5a78f037-7e00-41cd-89ae-ea4378e20f17",
          "body": "{\n  \"flowArn\": \"\",\n  \"flowStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b580153f-356b-47b0-8cb7-198b3644bce6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2594c0a-5e07-4f2f-a1fe-e84ddd470c3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5093814e-093c-4cd5-bdd6-5b603db2fa3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f64eb35-2687-49f2-afce-4ebb71ca8e54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24611d6e-a815-499e-b6f1-632776b77d2d",
      "documentation": " Removes a tag from the specified flow. ",
      "method": "delete",
      "endpoint": "tags/:resourceArn#tagKeys",
      "responses": [
        {
          "uuid": "5782e5f9-3cb6-4112-8112-43cde0c7b97e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa8ce2a8-6612-42c2-bc6f-df7e9629b3ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "323346a5-19c0-4036-b3c6-fabdaa2462df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f307a514-a2ad-45d4-aa3a-07a2a543fec0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "363657af-3918-4482-9801-0bbad636cbe2",
      "documentation": " Updates a given connector profile associated with your account. ",
      "method": "post",
      "endpoint": "update-connector-profile",
      "responses": [
        {
          "uuid": "01f175f9-a4b5-4371-b88d-4e9ac4e92cc0",
          "body": "{\n  \"connectorProfileArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d5172d3-1539-48cd-82f3-85cdc7894ae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "512b9aa0-8e6e-4307-8706-6a4cc16f20f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fc56a21-f3e1-4f19-a181-e5f1f032f62d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf261778-7326-4b58-ac28-f3e13ca380aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02960da3-5367-43fa-9b4a-a6e91d18b840",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4d5131f-af46-4ec0-be6b-537d315cef68",
      "documentation": " Updates an existing flow. ",
      "method": "post",
      "endpoint": "update-flow",
      "responses": [
        {
          "uuid": "49cb1093-21ce-4be9-b13c-3ef738cbe388",
          "body": "{\n  \"flowStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db86eb6-23a0-4fb1-85ae-3d8cc22e7ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4156c3ac-f002-4d80-90f2-beff3945e8db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8c14346-48f9-4611-8787-8cd9d8ef87c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06151aeb-b630-49a8-bf5a-fe0e9f1f65db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2a8e44-18d2-427c-bbb2-d48ee8b85394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConnectorAuthenticationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f0fbdf7-199c-4f31-8161-fc17d760b5a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConnectorServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97599591-857a-416a-96bd-af53ed26224d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}