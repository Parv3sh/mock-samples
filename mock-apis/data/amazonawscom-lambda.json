{
  "uuid": "a7d30e34-f986-4777-a947-f9e31667fdd1",
  "lastMigration": 19,
  "name": "AWS Lambda",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "779ee31b-7ae9-4625-bfb6-eb09c65c3e08",
      "documentation": "<p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts. </p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "0bf7068b-6a6b-4d64-9a5c-c758c29c4c5b",
          "body": "{\n  \"Statement\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32751c91-88ff-4101-b226-3cac22a8cf6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7637488-93a3-4c06-9486-15941319303c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acf8515b-27fc-46a0-9cde-9f1deebd5175",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b06b57e4-a76a-454c-914a-596d232456de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ffdded3-722a-4af7-b350-7269a763b2c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f615139-8560-4754-9b61-0f6c8995ca3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3264299-e75c-4b1f-8585-de6c8df2830f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77331c60-ebae-49e2-81cc-734246436535",
      "documentation": "Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "1d4105c0-0549-4a7c-b0d7-66b2883bb197",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93a36c49-cd5d-4228-bfa5-c5c775370f0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abcf91e7-165b-4b1c-8930-4fb733257cbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c85cd72-2e7e-49db-85f4-4ef31b9b5064",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dfbc813-6570-4784-b8d6-7f3610d239ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25d2f5c4-6c00-4b65-85aa-45c050e742ed",
      "documentation": "<p>Grants an Amazon Web Services service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For Amazon Web Services services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For Amazon Web Services services, you can also specify the ARN of the associated resource as the <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permissions policy for the function. For more information about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "27177c59-59bc-4c4d-a0e7-f82f67a9eae9",
          "body": "{\n  \"Statement\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b665eb7-8c54-4eef-b492-a0439d31a7e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "262eca6a-fc2d-4f84-ac7b-a377a6a5593b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82b95e5c-05ec-411d-b2ed-f666e2a7d99c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c29e5461-ea0a-474f-9b76-4f929a41ccf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bb66f31-bceb-4a5b-8019-2cf6e69c1753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d6e3f2e-900d-44c5-b40a-1bcaf2a37f55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5370aa0a-6371-4269-8758-40fab1c38f50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de9c726c-841d-4802-b09d-d45c2659af39",
      "documentation": "Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "19c3a9b7-0a28-4065-9325-e9efa648718f",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2af7b79-2d67-495e-beee-ec770c14bd1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0e8a2d0-e90e-4d04-8c35-fa81fa407648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78141159-5e91-4fac-b16c-8c4502ab2060",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9614feb7-2806-46b7-8fd9-369cbe8a334b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2892341-2179-4e4a-abed-f061aa853d6d",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "1983637f-e5cb-4cd4-a1f8-2a0d1b133c41",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d1ed351-a713-4f22-9df4-8624a25835f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7adac719-a489-48bc-ac33-3a5816db6775",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e1976cf-d833-4136-a4c5-8fb3a9be2aa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c52a9a5-dd29-4de5-8937-166600535df0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb2e46ed-3fba-4e8e-9976-04e196dec0c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0c0724c-4d6a-4216-8fda-83d63b0dadaa",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a> for a Lambda function.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "e05ea444-b9c2-4bb5-8c68-f371e91f98e4",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Aliases\": [\n    {\n      \"AliasArn\": \"\",\n      \"Name\": \"\",\n      \"FunctionVersion\": \"\",\n      \"Description\": \"\",\n      \"RoutingConfig\": {\n        \"AdditionalVersionWeights\": {}\n      },\n      \"RevisionId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55c6ebe0-5838-46f6-820c-b2b54777a977",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c15633ef-bce7-4734-90ba-8d5d0b043d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dbed427-925e-4e99-917f-77f9b7a51e2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95ece3ce-540b-4379-b6eb-16c6841d2229",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "511cce30-7687-46c6-8abd-a4b814fdef84",
      "documentation": "Creates a code signing configuration. A <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">code signing configuration</a> defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail). ",
      "method": "post",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "92d70cdd-cd96-4adb-a968-ef39a226a190",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02fa0b65-1bb7-4468-800d-66594b1df5b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fffcf5e-6b3b-4673-a8b8-715463c9446f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b298879-e870-4ce6-920d-e750ea3f76b2",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html\">code signing configurations</a>. A request returns up to 10,000 configurations per call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call. ",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "115f7475-ea61-4286-91cc-0b99d908522c",
          "body": "{\n  \"NextMarker\": \"\",\n  \"CodeSigningConfigs\": [\n    {\n      \"CodeSigningConfigId\": \"\",\n      \"CodeSigningConfigArn\": \"\",\n      \"Description\": \"\",\n      \"AllowedPublishers\": {\n        \"SigningProfileVersionArns\": [\n          \"\"\n        ]\n      },\n      \"CodeSigningPolicies\": {\n        \"UntrustedArtifactOnDeployment\": \"\"\n      },\n      \"LastModified\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3835b369-9dc5-48ae-a5d9-f45fe2c93049",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26a933d-f8a1-4f44-a421-99bd846fca16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf0844b6-1a0f-4af4-82d2-ff8c2578fce2",
      "documentation": "<p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source and triggers the function.</p> <p>For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\"> Configuring a Dynamo DB stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\"> Configuring a Kinesis stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\"> Configuring an SQS queue as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\"> Configuring an MQ broker as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\"> Configuring MSK as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\"> Configuring Self-Managed Apache Kafka as an event source</a> </p> </li> </ul> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "post",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "fbcec1fb-e520-4598-a0ee-2de59147c6c6",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c56bb9-790a-4f72-b936-f1c5c11a8019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0585719-df19-45fe-b1a0-9646260ebfe3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b4833dc-b2d2-45b0-8510-d7350cb99671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e438ef4-7a03-442d-8e7b-c018bae189cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da31a354-8312-4d64-aea9-b994fbc567b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3ce9a1f-d56c-43c7-b0f5-71a3b63be00b",
      "documentation": "Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a single event source.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "19bf85f3-b40a-4459-9ac9-8c4d0f8d5297",
          "body": "{\n  \"NextMarker\": \"\",\n  \"EventSourceMappings\": [\n    {\n      \"UUID\": \"\",\n      \"StartingPosition\": \"\",\n      \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"BatchSize\": {{faker 'random.number'}},\n      \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n      \"ParallelizationFactor\": {{faker 'random.number'}},\n      \"EventSourceArn\": \"\",\n      \"FunctionArn\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"LastProcessingResult\": \"\",\n      \"State\": \"\",\n      \"StateTransitionReason\": \"\",\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      },\n      \"Topics\": [\n        \"\"\n      ],\n      \"Queues\": [\n        \"\"\n      ],\n      \"SourceAccessConfigurations\": [\n        {\n          \"Type\": \"\",\n          \"URI\": \"\"\n        }\n      ],\n      \"SelfManagedEventSource\": {\n        \"Endpoints\": {}\n      },\n      \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n      \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n      \"MaximumRetryAttempts\": {{faker 'random.number'}},\n      \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n      \"FunctionResponseTypes\": [\n        \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c363c46f-0083-4112-9e8b-4330cbe4ec2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12965c3b-7517-4fd1-a6ec-d18bbb7be6e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2a37bbd-c078-496b-9b61-749dc319a214",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa715ae6-8c46-48e9-8485-4593f1b62ab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "740e2b5b-6bd1-48fd-9815-7649db0972d8",
      "documentation": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>You set the package type to <code>Image</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties. </p> <p>You set the package type to <code>Zip</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set set of signing profiles, which define the trusted publishers for this function.</p> <p>If another account or an Amazon Web Services service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions",
      "responses": [
        {
          "uuid": "c179ca7e-21e9-44d8-817f-18c465771a25",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11ce63df-62ba-41e1-9ed3-2c34d6eb7fb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b102fa8-4de5-42bc-a4c8-21e3fbf510f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e5b2355-1153-4c2d-b5a3-f5ab9cd18dcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45c5fe1a-430a-4945-beb7-58553538af17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39cf84ee-c8c0-480a-a758-0255c94af6fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8762e72-616f-4b49-a7dc-1b6ed366f316",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d71d487-3481-4914-aa74-316fd7a8bd51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9d4f560-1d3f-40ac-9190-ecd16de79a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aaec0f8-2120-4c25-9603-ce59e17fa571",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a1d7d1a-d9aa-4c5e-9e41-881e70d04e2b",
      "documentation": "Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "7d321f05-8a3c-4b5d-b332-5939156dff6a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e177f2d-c050-463a-9005-bd2f8a980161",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dcadf7b-6bb1-4309-ae07-bafa1924c035",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a75232-da8d-4344-b96e-769e41ddd317",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0acffcd4-5210-4aa2-8d50-f1d7ffeccd54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05a92b56-c1e0-4a41-bc95-610300dd219c",
      "documentation": "Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "ac3cabd8-956b-46f1-a3ee-d8607704fd50",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9eee085-55da-41c5-830d-c07c09b8847d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "141888ab-0974-4a49-ab0f-bcd07097e5ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ed81eed-2710-4372-9fbb-56f362b49aff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edc60b4c-61c5-4df0-8f8d-f649ea166fcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67c0784f-cd49-415b-ac55-5a2b46a3bad6",
      "documentation": "Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "d1b6090e-35ca-467d-b877-62114bdff5ad",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e759554d-f687-48f0-b8d4-bc6672b37633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef7808aa-10a8-4354-907b-fc956ad4b259",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd539d30-5b55-42fa-b1db-21872acc4c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c8d95e6-d853-4689-ac20-484abe3540be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edc02b69-bf15-45ec-9563-75d9e9430f37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f76926d-8be6-47b6-90a6-0efc974f63d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8600ddd0-69af-4d56-8c59-bcfd627fb5f2",
      "documentation": "Deletes the code signing configuration. You can delete the code signing configuration only if no function is using it. ",
      "method": "delete",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "4dfdfaf3-d602-4741-86ac-19abc0a8f08f",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c880ba8d-c05d-4891-9ecd-bc2dee24e555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f9ee065-a8d6-4624-88ab-5a484ee77fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c794808-69b8-48b7-ab50-fd9bf36431f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "731c79e9-20b9-41c4-9b45-43df6e06cd68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b48d3e26-8e4d-4fb1-86d3-ef5f664ea15e",
      "documentation": "Returns information about the specified code signing configuration.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "428fdbc7-17ed-4b33-a2d5-e93765f0bb1e",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6e4577a-35cb-4fb7-a7b7-cec53771e6ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7b1da2e-0152-4de1-8095-aae78352f8d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94f88e16-3129-4228-8ab7-ebeb784b111a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f70e8b4c-dc6e-41d5-9e96-7c65915c528a",
      "documentation": "Update the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "2e22ab74-1704-4c04-b0c3-b23049ac3413",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d14a3764-25fc-4e72-b44e-d65a7823d670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aed8103e-2488-41d7-a4ff-4e1a952fe345",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d131c020-6cdf-4b4d-8ccb-8d7dac997be9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e54a5cdb-c732-4bac-b31f-ef731f000f30",
      "documentation": "<p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p> <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "88d2af79-4636-47cb-a2b2-1471cf591b35",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70a7c9f7-70f7-4d70-8b35-a8bd46ec190b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82edf5d3-e1cd-409d-aa0e-c746140135f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd32e870-f5db-44e2-a0fe-e6dcd4ff3f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c21049-9d75-455c-bd6c-b729c3bfa5b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "993b4984-6d40-40ff-a37b-bcf4f23344b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "553d9ffc-4946-4e8a-a952-5a57370e2462",
      "documentation": "Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "41e41f5e-ac14-4f2e-9d11-a0f2da1a9e10",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0a37f80-6838-41d3-b575-300827d46e49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bd7e1c2-f7f0-40b1-aa5c-8e4d64772258",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72faa1ba-b989-453b-9d45-2d68b2273566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de27bc70-080a-481a-902a-31614e1b1c6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1196bf1-b3de-4407-a0f5-052ed500e5c6",
      "documentation": "<p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "put",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "06fc3980-c04c-409c-b42b-6ea0cfe84265",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e38b2288-de60-463a-a6a1-ea2a2f7d77ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27d7c790-65ae-495c-b95f-6a74c5893971",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "279873d8-110a-4170-a399-088ac6ab7522",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43e726bb-4ac9-42ba-aa32-5948cf57f299",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3946d09-a3a4-4b22-841d-55152d965082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61145acd-9330-40c0-9277-5e7f479e4cfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3742931-79ce-4bb0-864a-9ac7607f2c7a",
      "documentation": "<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "458efdf8-79c9-4218-aa52-06d4f1643ec4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0e95878-34c1-4f82-ba1e-916b4465589d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "455c73ac-dffc-414e-9cde-4b34098b1c1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ffa64aa-c8de-4547-aedc-2427b4f7b342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54fd6de0-d996-4525-ba70-ae47b9b162af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4f09c68-db73-412f-a038-529c3f7a8057",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11796c4a-6e2a-4b84-92c4-10b6c9b3e074",
      "documentation": "Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "68ba84bc-578b-4db7-bea0-d6339cbd3b58",
          "body": "{\n  \"Configuration\": {\n    \"FunctionName\": \"\",\n    \"FunctionArn\": \"\",\n    \"Runtime\": \"\",\n    \"Role\": \"\",\n    \"Handler\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Timeout\": {{faker 'random.number'}},\n    \"MemorySize\": {{faker 'random.number'}},\n    \"LastModified\": \"\",\n    \"CodeSha256\": \"\",\n    \"Version\": \"\",\n    \"VpcConfig\": {\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"VpcId\": \"\"\n    },\n    \"DeadLetterConfig\": {\n      \"TargetArn\": \"\"\n    },\n    \"Environment\": {\n      \"Variables\": {},\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"KMSKeyArn\": \"\",\n    \"TracingConfig\": {\n      \"Mode\": \"\"\n    },\n    \"MasterArn\": \"\",\n    \"RevisionId\": \"\",\n    \"Layers\": [\n      {\n        \"Arn\": \"\",\n        \"CodeSize\": {{faker 'random.number'}},\n        \"SigningProfileVersionArn\": \"\",\n        \"SigningJobArn\": \"\"\n      }\n    ],\n    \"State\": \"\",\n    \"StateReason\": \"\",\n    \"StateReasonCode\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"LastUpdateStatusReason\": \"\",\n    \"LastUpdateStatusReasonCode\": \"\",\n    \"FileSystemConfigs\": [\n      {\n        \"Arn\": \"\",\n        \"LocalMountPath\": \"\"\n      }\n    ],\n    \"PackageType\": \"\",\n    \"ImageConfigResponse\": {\n      \"ImageConfig\": {\n        \"EntryPoint\": [\n          \"\"\n        ],\n        \"Command\": [\n          \"\"\n        ],\n        \"WorkingDirectory\": \"\"\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"Code\": {\n    \"RepositoryType\": \"\",\n    \"Location\": \"\",\n    \"ImageUri\": \"\",\n    \"ResolvedImageUri\": \"\"\n  },\n  \"Tags\": {},\n  \"Concurrency\": {\n    \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b03d736-7027-4efd-b895-b1d9391fa001",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96e80b65-02a1-4381-af9a-9baff49fd400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38561b09-a533-412a-ab27-fc52dbaef663",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec9d226-3400-4374-bb3a-9c3842cfd0fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41c0f4d3-2a3e-4660-882e-8aeeecfdd990",
      "documentation": "Removes the code signing configuration from the function.",
      "method": "delete",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "a6caa205-efe0-40dc-9f51-6b8a94568d3a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "447abfd8-0b81-40bb-9d59-197dacb9868d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab49a842-7e6e-4c67-b67b-22d50ca0e17d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cda5d83a-cc44-4e10-b328-430b41ed5bf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f23a085e-19a9-4841-9e32-4cd7b3c8c014",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b26e36a1-5149-46db-bedf-3d1a4254dcb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae1d5559-3bb6-46cc-b15f-efcbe0993ca5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cfba0ba-dc11-494f-abdc-669a6bf2c77c",
      "documentation": "Returns the code signing configuration for the specified function.",
      "method": "get",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "3381a405-75bd-4272-8045-cb33b1524a55",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "559facb7-201f-4bee-9fb0-e22c01368b4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a8939e3-8cfc-4556-ace7-d8b4084bc67e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bf5a217-5282-412a-8d59-965f35286a13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ec609b3-cd87-4583-b682-6c7cd427a633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b086484-76c6-4e4f-89e9-b277b071fac7",
      "documentation": "Update the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "21c760cb-b1dd-405a-81d6-6fbc0f5cca3f",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8d25c3e-d4fb-4e55-9b21-bbdcd7b47bbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b15f1ab-aefb-4034-857a-1eff94b8d527",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58014630-a6d5-4d08-b772-a4ea9afd8bce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9473b7b5-ae32-4bcb-a749-befd3743b226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80430fd3-a36c-445c-86f6-20af5a376eb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c7ad5ff-7777-4d1a-a1e9-1d920f6ffd12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85643816-4945-45e9-b51e-0f140f091843",
      "documentation": "Removes a concurrent execution limit from a function.",
      "method": "delete",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "11a2e9aa-6ab0-42b4-ad65-ed2b5e5345d5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccba56fd-c9a7-41de-8397-bd639ff0580c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be2d316c-7c82-45c4-943a-33fbf05ec339",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47ef5874-830f-44ea-96ab-97ebd35e6d97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baf4daf8-02b0-4f01-93d8-13748cce0518",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26b72ae5-c763-420a-bdeb-c7425a03f81b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc019dae-154d-495d-9495-c651bb09ea2f",
      "documentation": "<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>",
      "method": "put",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "e2ebaaab-23a0-4eb0-8f4c-126f3305c3e1",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6a72be3-8c1d-45e5-a57a-f7d4c5a8dacb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b99dde3f-9b75-491a-bbee-19ef942c2cd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad3cae6-45f7-4fa0-8d03-4112a1aa815f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "737ad195-2af2-49fd-8b16-91fc77dfb375",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3907c388-6e6c-453d-9a22-0dd73573c98f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b323e76-ecb2-4945-9f3e-17cc127620ff",
      "documentation": "<p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "delete",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "d387a791-90db-44ae-9bf3-61e930e2d0b3",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8819e92d-b698-41eb-bcfb-1e23bc2ef81c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b779cc4-c7e5-4ed8-913b-59175cc44fc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5a4ebfe-1418-4057-b220-6aeeed1650b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88687b97-cdbb-4e51-aff9-959b7ce0f818",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c619ddc7-57de-4d67-8a32-c192af85499e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7f9eb8c-72e8-4aaa-b00c-ddc98a352f22",
      "documentation": "<p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "6aa0612e-5a49-4d1b-842b-2a54ecf41b33",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98484ede-a942-4a0b-9b1a-469959da2ea5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7185893b-e3e3-4c61-b1c4-f683eb78f715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32dd9ca9-d96c-48ba-9c02-63e6b73d18df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d069b4a-e671-45e2-b833-10ca5b0e32ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e08d8f0-2e6f-44e1-8ea3-0d1234917fb1",
      "documentation": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>",
      "method": "put",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "f0bfd076-0ad7-4805-bf23-7f27834dcd47",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5030af7-8ac3-40f6-aefd-68ef1e817d45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2f75c24-b02a-4cfc-b89b-0dd470cd9b94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b795a66-c48d-4ac9-ad84-4d64a7f1c3b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cab7bb0-7cf0-41b6-a4f8-819cd418d541",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec0ca77e-deb8-4acd-91d4-82109114f12c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f915c26d-5b82-4c0e-9eee-aa38d65f2e6c",
      "documentation": "<p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "post",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "980aae3e-3678-4486-8d63-1b55e30cb907",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b08776ba-f197-4f4e-9933-603b4bf3207e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52f817ea-f467-407f-a1a3-bf8c4a1c2cfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d4a83b-12d2-4cdc-ab1a-73ad04df404b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61aeb0c0-1c9e-42d7-b1f2-772fb4af79c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cbb9e58-1af9-4ecd-a1a5-5aa7b50582d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d6e2e2b-2035-4988-bc0d-400aaebe2ccb",
      "documentation": "Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "937804f8-72e3-4f04-b466-48696c6ae9c5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99e04af5-0ab6-4b2c-929c-1897f5eca618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "089acb47-a105-44eb-9d74-c691fe2134a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e251d0bf-7c1a-404b-a237-f1f0063542ba",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "46846890-5ee1-4bce-846a-95068f597ec2",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09179008-9a7e-4a06-9078-4898270f9174",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ebb7917-c712-4c79-bd4a-e33458bd1079",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e555e855-e639-43be-8065-52c88a0f42bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ede97689-ccbd-4ffa-8a89-2ce673bb3c72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5da13f56-f185-40a5-a87c-c984dc40d85d",
      "documentation": "Deletes the provisioned concurrency configuration for a function.",
      "method": "delete",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "3dd7de29-ebb0-4217-9139-9f4e4536c37b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff7c9b9b-9a77-4a7c-adae-6c5d4354a3fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebe09a19-cb26-42a3-8212-eacfeaf2576d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d4ec89f-04ef-4755-a2b9-515608b512f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8de1fdba-12f5-4608-ac9c-dd188a09a294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1238e9a8-023e-4b1b-a3af-2f3bdcc99910",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e1427aa-79b3-436a-92c5-6edd75940c14",
      "documentation": "Retrieves the provisioned concurrency configuration for a function's alias or version.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "9912eb03-9d4b-4c24-8fa7-3ca8c97541ae",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cb7334b-3a97-45b3-ac37-6ba99c856f49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88bee150-f8e2-465c-8b4b-440c72ead394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "246e71e4-7db1-45fa-a87e-dca1daa082a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "934ee19c-1257-40ee-b74d-dd1765c397ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab0ace7f-7080-45b6-bcca-6ef4f7aeb4e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ProvisionedConcurrencyConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce20591f-c5d5-4ff7-8840-0ecc1a36cd69",
      "documentation": "Adds a provisioned concurrency configuration to a function's alias or version.",
      "method": "put",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "07e12550-b994-4e2b-bec1-b8d90fa976e6",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aac5471-b16a-45ed-bb09-7723352a8337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72139f96-3542-4543-af6f-0f35e21337de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f419bd28-88f9-4632-951f-8d1992afa5a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e4e7238-474f-444a-b4d4-d435a52832b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b9fe6e2-03cf-4a8a-9b20-60fc78ac26d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f553732-2005-45f5-b983-38b539496922",
      "documentation": "Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an Amazon Web Services Region.",
      "method": "get",
      "endpoint": "2016-08-19/account-settings/",
      "responses": [
        {
          "uuid": "5cc4641e-1b14-40bb-90aa-cf0065bce16e",
          "body": "{\n  \"AccountLimit\": {\n    \"TotalCodeSize\": {{faker 'random.number'}},\n    \"CodeSizeUnzipped\": {{faker 'random.number'}},\n    \"CodeSizeZipped\": {{faker 'random.number'}},\n    \"ConcurrentExecutions\": {{faker 'random.number'}},\n    \"UnreservedConcurrentExecutions\": {{faker 'random.number'}}\n  },\n  \"AccountUsage\": {\n    \"TotalCodeSize\": {{faker 'random.number'}},\n    \"FunctionCount\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e6d375b-e4dd-4da8-8670-4bf767eefe91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baf7b748-962b-4506-b888-8f94d3d8b001",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bfec0ba-b308-4b36-af03-6492ef32f484",
      "documentation": "Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "991f1eb2-58f8-473e-aaf1-6a5974a5a09a",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "949a3f67-c357-44de-a2a3-a223d9bfcd7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b6e09cb-4411-49df-be28-8993dc5003a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f55cdf3-1034-4d6d-8b75-e7a586eb2dbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b690e51-f13e-494d-b608-184e919349ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40861295-fb35-4485-a85e-43c13ec97672",
      "documentation": "<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "6cb9bf7c-090d-4d00-9fad-a87dbcf27479",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc4ed19d-cc44-4aeb-8f07-4bd7ff036703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "689dec4c-89ff-45cb-83a9-cffcc6dcc0f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ed18b85-a6f4-49a1-8dc9-889c8b9d108a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "027dbe58-c4e3-4264-97e9-3be9b663d3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1eb0d20-71c3-4fa0-918b-4032eb9796f7",
      "documentation": "<p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or Amazon Web Services service, use <a>AddPermission</a>.</p>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "22c38d1a-9bc5-4a6b-80e4-6914c29814a2",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50ffae09-955b-430c-8da4-1cb724c95066",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25dc57a0-fa0f-4085-8d66-420d019d4bb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67467608-1fc5-45d4-b28f-ce4f5dec9afe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f3ac8c9-0b7b-4d3b-8450-b4140a863a51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d030fdff-6528-41ac-9827-c61ae4c2b9c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ff6e1aa-e7ee-4ed4-b4f5-198713c4b11a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b41ec3fb-ea6b-4ecd-a928-aacbe88acfac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46db4dac-832a-4732-b348-4e0ffc7ed0cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9278f08d-6199-4b13-9cbc-ac24c8083d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8ae2b7c-63db-4662-a7c6-79a768c4a7ed",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers#find=LayerVersion&Arn",
      "responses": [
        {
          "uuid": "7183591e-f390-4b5a-b89e-1fa37bf5cebb",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75921f6c-19a2-4c01-a9ef-a62c43b26fec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1d0647c-49a4-48fe-82b1-6c280001fc5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "481cd344-c07d-4cb5-aa92-cce315183c44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b8f0be6-6c7f-46c7-b4b6-a0a057314e8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f6aa9ce-91e5-42c1-9ebe-3e30384c6015",
      "documentation": "<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>, Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p> <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/invocations",
      "responses": [
        {
          "uuid": "2e6f019b-5d4d-4292-b58e-c176911484a3",
          "body": "{\n  \"StatusCode\": {{faker 'random.number'}},\n  \"Payload\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11482fd8-225b-423c-9a99-53829f75f645",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed1975db-4846-41ae-89b7-44aaa39708cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2763328-9065-4353-b297-ce33c8dec90a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1228179-7311-40a4-9827-a5b6c374d257",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RequestTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa9f1d4f-138e-4608-b705-63854567452b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedMediaTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5ef0597-0393-4bd9-8113-1f381c3680ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4050c40-c4b7-46c4-9c63-70c7bf9f31ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c83868ef-8fb2-400d-8ebc-9b31635db98e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EC2UnexpectedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b94357ed-c39f-46cf-92aa-fbe579b4701f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "SubnetIPAddressLimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c0b6ed0-e441-43b4-8c9c-87db7c00503b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ENILimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab7cb8f4-1206-4781-b6db-aad55feb6160",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EFSMountConnectivityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c7b6185-49dd-4faf-bd47-ae679eb2a9d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EFSMountFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e550fc68-ce12-4d85-980b-11516567aee2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EFSMountTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a56e332d-5a80-45d2-851d-f894c0c49989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EFSIOException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "847cf319-b7d5-4d81-ba4f-deeb0c2960d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EC2ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3a00ca8-43a2-4378-b140-f217e4191843",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EC2AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de11af8b-e362-42b8-8f0d-217369ea9183",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidSubnetIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f2715e6-3bcb-4b17-bcdd-ed0c8c16b0db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidSecurityGroupIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "623cd79a-e395-45b8-9f8b-563a7480c995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidZipFileException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57556716-eae6-49b4-86a3-fe7ce0e18421",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "KMSDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fa4c562-a82f-4bc1-ab14-cd1dee990bd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "KMSInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24d7ca8c-273a-45f2-aff2-9c2f8eeea5f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "KMSAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "081e181f-7bb0-48c9-90bc-1088c517017e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "KMSNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85ca5ce4-fc6a-477b-a93c-022f5f44d352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d2720e1-44ff-45b5-94f4-3fa265efd6e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eeb1ae37-c174-4969-add1-dc4e4e95c3e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "ResourceNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50512f5d-2840-4729-9d02-a2a057d582e0",
      "documentation": "<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>",
      "method": "post",
      "endpoint": "2014-11-13/functions/:FunctionName/invoke-async/",
      "responses": [
        {
          "uuid": "d978db39-43a6-48de-8f67-a6b9d02b720b",
          "body": "{\n  \"Status\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94d25fd6-e67a-4c29-951c-3cf4912f28e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9ab3e33-b7fb-4bfc-904d-550b74de150c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0a10cb0-4ba8-4ea8-97f3-9da028d1bebb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a93e996-70f7-4b03-be91-a28e5a4c14bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4501bfa-08de-4a25-a311-98a5dc4c2582",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82616c20-988e-4b5e-89b8-42ca92aa7f2a",
      "documentation": "<p>Retrieves a list of configurations for asynchronous invocation for a function.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config/list",
      "responses": [
        {
          "uuid": "5efffb3d-338f-4875-b5d9-ec43fec76dbd",
          "body": "{\n  \"FunctionEventInvokeConfigs\": [\n    {\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"FunctionArn\": \"\",\n      \"MaximumRetryAttempts\": {{faker 'random.number'}},\n      \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3f6e651-5e7b-4f2d-bd05-b5361deba7ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1db42b56-f40a-4d01-8ed3-5c9d02dcd290",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53badeb6-be28-470b-b236-e0a58b9c9f56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15166dd8-11e2-4018-8f55-6e610fc428c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e90f8e29-e3aa-4385-bd70-c89e82c23c1d",
      "documentation": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>",
      "method": "get",
      "endpoint": "2015-03-31/functions/",
      "responses": [
        {
          "uuid": "582e5898-358b-45c4-9d9a-c2f5bf8e8fce",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Functions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'random.number'}},\n      \"MemorySize\": {{faker 'random.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'random.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc587968-188b-4a95-b245-9d66fccb98b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45d95896-1c98-4fa6-8af6-d36a8cf23031",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfe5e006-5fce-4d3e-b5a9-904c4b66eee7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10b30fd8-932e-45b4-b3f0-7bde68f614da",
      "documentation": "List the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn/functions",
      "responses": [
        {
          "uuid": "123255b0-28e8-483f-a9d4-8dcd2fc25fc1",
          "body": "{\n  \"NextMarker\": \"\",\n  \"FunctionArns\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15e3a904-0c45-4f87-ab0b-6de5a4c043e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e66e04e1-1f8b-47dc-b3d5-e29cbc32cf84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5885141f-e7c6-49e7-a09c-6e00a2da40f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d9796f6-83e7-4ef3-9205-a7a48d8176c3",
      "documentation": "Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only versions that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "54c48d0f-f0b2-48c7-887f-87e01b621bb9",
          "body": "{\n  \"NextMarker\": \"\",\n  \"LayerVersions\": [\n    {\n      \"LayerVersionArn\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"CreatedDate\": \"\",\n      \"CompatibleRuntimes\": [\n        \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n      ],\n      \"LicenseInfo\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b21eb1e-073e-498f-b078-3dc44c8a0b90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d596728-4bf6-4ac0-ab65-526f3bb24d9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52e78ede-29f8-43e6-8517-00acc5a44c71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e5118df-33cd-40b6-9567-cb097386d60d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31f7547d-19b5-4d7f-b8c7-3619e17f9e2b",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "ce519bc3-0054-433f-9f7d-ed0fdef20a80",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14e6a35d-955b-4781-9c0a-8ac303de3795",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9da81289-effe-4910-a4c8-c635093eb929",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2462cf89-3ef9-4c74-8f27-73be6ff1ea38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b0f4964-b293-46c9-8f93-6e53e545c80b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a269cc7-5af2-4ad4-bda7-569553cf2186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54ecc2d4-71b6-4c41-ad5b-46a75ab5c8cf",
      "documentation": "Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers",
      "responses": [
        {
          "uuid": "1758d296-b9d3-48c8-a8b6-ce85ca332cc1",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Layers\": [\n    {\n      \"LayerName\": \"\",\n      \"LayerArn\": \"\",\n      \"LatestMatchingVersion\": {\n        \"LayerVersionArn\": \"\",\n        \"Version\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"CreatedDate\": \"\",\n        \"CompatibleRuntimes\": [\n          \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n        ],\n        \"LicenseInfo\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ecec821-382c-4a6c-a498-236744faa2bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8caf4318-fbec-4371-94cb-1ea80c84d856",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c07573b3-49f4-4582-9da9-96dd8d4ff0d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0516b002-c0bc-44d6-a717-a68da79019d2",
      "documentation": "Retrieves a list of provisioned concurrency configurations for a function.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#List=ALL",
      "responses": [
        {
          "uuid": "289749a1-1ad9-47af-9243-f6924a2e76ef",
          "body": "{\n  \"ProvisionedConcurrencyConfigs\": [\n    {\n      \"FunctionArn\": \"\",\n      \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"LastModified\": \"\"\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "258aaa78-8ecd-4a08-b86a-33e1673183ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7389d7d6-e3b1-462b-998a-ca9b614bc0a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e29901c8-d44c-4d33-94c2-f019d32cfb22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e36049-4901-43f2-ba18-b14ec02be425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa784af3-ea14-4f47-98c5-f50c74b848c3",
      "documentation": "Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can also view tags with <a>GetFunction</a>.",
      "method": "get",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "41ff7968-24dd-4434-8e3f-b1544f3af6f2",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27069031-d641-492b-a0b3-29caeacbda81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d300041-ae18-45cc-838d-c01e9b54a874",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b1ee1c1-f972-4385-82d8-e81c6d17a8f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2e2c7f3-ea30-4996-8450-3c03f8f7f7fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4049d254-5c01-4196-a0bd-b19a4d7c6497",
      "documentation": "Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.",
      "method": "post",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "e2fcc806-65b7-43bc-870c-f1c28d5b74a5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "359be85b-f6d1-437f-8771-c3528f67fe20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82ed9625-a1b3-4765-a9db-b877b3bd1205",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89a09b2c-8b75-4eeb-a096-f3ddc1ed13e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "588ed1e1-3d22-4be8-9b8e-b05e1a90b6d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce93b61c-9bbb-4aae-a482-78e673d03d75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e379252-3aaa-49e9-a58e-dd754640964c",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>, with the version-specific configuration of each. Lambda returns up to 50 versions per call.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "d2e15baa-e3df-43b2-9399-4336ec336bb6",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Versions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'random.number'}},\n      \"MemorySize\": {{faker 'random.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'random.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c792ffc-eec3-4fa0-a40e-de6954f09873",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0afca287-eb1a-4105-9e00-156a7cfc0bc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6357b3b-8fd6-40b1-8cb4-d95cfd04887e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daf1f0b4-1363-4e04-945b-fdf4249a5f23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "593178c1-4d9a-40f0-8ae3-bc8e29b5412e",
      "documentation": "<p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.</p> <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "8a52c8a5-b7af-48d0-9931-e0204e16d566",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0be016b-00c4-4d9e-b11f-617249eaa1d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1cc22a1-4cfe-4d68-9bcb-8f408c9d87f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f44b5e2-8f34-4236-bcfe-b87bfe0cb07c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd52a187-0709-40bc-a1c4-fd8d11931bae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbe36ab9-43b1-435c-a21d-390645b34ba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1054854-feb8-4208-9ceb-c3334cc676bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5091dd67-4660-45f2-8915-def52c126758",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9691b6c2-d1d4-45b2-a340-3232424de86b",
      "documentation": "Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy/:StatementId",
      "responses": [
        {
          "uuid": "c08f61cd-b1c1-40bf-be75-3a5c64642c39",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77135246-2dce-45e5-9d46-03e3a78d4bae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b53ffd15-1c0c-4489-b4bf-ff081931b687",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4044b75-d32f-4e91-b33f-175b71704e11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0989fbe-221b-4248-a30e-3bde6f8d2285",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fb5d9a3-eb3a-43c3-9d8b-84235ce2f14a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de2c4eab-42f2-450a-be8b-27369a244fa0",
      "documentation": "Revokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/policy/:StatementId",
      "responses": [
        {
          "uuid": "e6cb15aa-43eb-4625-9fdd-a33574bf4165",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74d7a6fc-0768-4321-a560-c7a479752d8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb64a938-423e-4538-a982-310280eaf505",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53fd231c-8b20-407b-8618-cfd5b0080945",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4717c0ba-a421-4f30-bd54-090f0211fce9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d7e8c5-605f-44fd-bee8-75fcdfe3c2cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a15ba17-af2c-415b-9f6c-b41eb03f59eb",
      "documentation": "Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.",
      "method": "delete",
      "endpoint": "2017-03-31/tags/:ARN#tagKeys",
      "responses": [
        {
          "uuid": "2125f2a7-4310-49d5-b2f3-0578e17c07b5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9834e0d5-f868-4849-b4f1-8a5520d7b3cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd064600-3617-49eb-a89e-3e02b33a4b7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e29b0e7c-ab36-49e4-a3f0-d995f7014f11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ccfa699-bbc5-4a3b-b9f1-0ed1f8c6128b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42ce4328-f3c3-4d61-8d11-b0e00abcb68f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa65017f-64d7-4928-83ab-683d151142a5",
      "documentation": "<p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">Configuring code signing</a>.</p> <p>The function's code is locked when you publish a version. You can't modify the code of a published version, only the unpublished version.</p> <note> <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.</p> </note>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/code",
      "responses": [
        {
          "uuid": "1f3cdc14-fdfc-4b66-beed-47920ec0863c",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "301a0754-62b3-4e55-ab50-56897cea13b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81990495-e80d-46fd-b835-3309cbbf7559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee50e1a2-9573-4e9f-85d7-2547c6d8df41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eb2b6ee-a917-46c2-9f8f-916aba12fd20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c00ed08b-2a25-4d7b-9d07-4d2bba3e6d81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52f36b81-1368-4e39-96be-4c2c49f049ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f4be1f8-7cd6-4e04-9a45-5b47ed0c9719",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "373ae799-6060-4c2e-bb68-f662ff99dc49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44e4a4e5-1edb-44e0-8c4d-a23947af5d23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8799b347-ef85-4306-9076-e9f8926bf5e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}