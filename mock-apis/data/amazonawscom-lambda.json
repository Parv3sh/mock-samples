{
  "uuid": "1f8bd09c-a823-485b-a64d-33a0a208ab1f",
  "lastMigration": 19,
  "name": "AWS Lambda",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "86c16b99-2971-406d-a550-22413e15d3a8",
      "documentation": "<p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts. </p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "e2c13ef0-dcda-4de4-ae01-6026df24ef36",
          "body": "{\n  \"Statement\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35bea060-5954-4b31-a281-ba6135e0cc53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49a634da-85f5-4a7f-b12d-d7826f5ff5af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bae08064-8dae-4d0f-9938-8169dbd50547",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2564e8db-4d5b-4beb-b529-69cd047c90f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47197bf8-3abb-4dca-9202-57fe213cd559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57e1b861-fdce-4660-b97c-958a292996b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f28fc944-90f5-4871-9160-466300b45fb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4a66809-d7b9-4b1d-98c3-467c8b35e48c",
      "documentation": "Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy",
      "responses": [
        {
          "uuid": "cfc3cf95-cf61-4687-840b-fa18507ce3d3",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de48f8a2-c2d2-48a6-a09b-2451ee9e7d43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e5f879-b59a-48ab-b308-ff8814af13d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "908d4090-4a4e-4ed1-8f3f-cfdf07ee7742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "208937b9-4d94-4962-b639-4263ce122b3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b354751a-24b2-4f89-acb6-245210c343f3",
      "documentation": "<p>Grants an Amazon Web Services service or another account permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For Amazon Web Services services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For Amazon Web Services services, you can also specify the ARN of the associated resource as the <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permissions policy for the function. For more information about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "9247a2f0-810f-4081-ad30-0410616b8df8",
          "body": "{\n  \"Statement\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afcb6298-5411-4ef9-a9ef-7a2d002db75f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82e952e2-202b-4569-ab0f-68c4d1d55c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ccb3ef7-54c4-4585-bd03-30691b456c47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba010b19-776a-4841-98a2-342ff70b7e6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01de7528-5bbf-4bd8-84c8-d881b5b8145b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PolicyLengthExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb4b33d4-a976-47bd-ba79-a3373c3a560e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d974945a-9bff-4310-aa68-ba935cb01351",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e5548ac-ecb0-49f4-85d2-a3e2eb0c8b3c",
      "documentation": "Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/policy",
      "responses": [
        {
          "uuid": "6caeb06b-28f3-4b80-8f48-c831f8980c92",
          "body": "{\n  \"Policy\": \"\",\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe185fe6-8a40-4cbb-a9aa-5f3fae9306a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d0b43c9-171f-443c-91c8-7cc3ab4057f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98a890ca-bc1e-4566-839d-2c501cbfdb7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "623e401f-7e7f-404a-9624-2cd512962b61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd2510db-28c4-4fed-8fec-20aeb039e8d3",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "0c1acc6d-6c16-4980-ad22-22aa46757157",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d54ce14-7e62-4545-ac1a-7b0561af73e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbea43bf-f276-4fca-950b-c726d48e5ff6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93f9a269-d32f-4464-a248-801df36caf8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c44c3593-f8ff-4ff4-9ea4-ad48620d03c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a65f168f-6f23-4915-9681-70a4dfa7f695",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ac5332a-10bc-4782-b708-247da58ec153",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a> for a Lambda function.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases",
      "responses": [
        {
          "uuid": "8babe3a6-732f-41d7-b602-b29b9f87b2b8",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Aliases\": [\n    {\n      \"AliasArn\": \"\",\n      \"Name\": \"\",\n      \"FunctionVersion\": \"\",\n      \"Description\": \"\",\n      \"RoutingConfig\": {\n        \"AdditionalVersionWeights\": {}\n      },\n      \"RevisionId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30f462c0-cc24-4691-a860-1d0e0c211baf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adfa323e-63cf-4aa6-902d-c90767eea857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66d312e5-8cbc-4e44-b09d-ebab1c8e4aab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca0a0aa2-e1cf-4eb0-80dc-4b8a07508e7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3820863-721e-4308-b815-b65719a455d6",
      "documentation": "Creates a code signing configuration. A <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">code signing configuration</a> defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail). ",
      "method": "post",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "1963fff7-6501-4f58-8de7-7034c190397f",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "684cc9b5-676b-405e-bad8-efc9b7460be3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9812ca11-9131-4694-b16d-ccd147bb3715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d96cfd4-7641-4c5f-97cc-2736fc4a397c",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html\">code signing configurations</a>. A request returns up to 10,000 configurations per call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call. ",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/",
      "responses": [
        {
          "uuid": "2dc496f2-eb40-4e3b-88d3-6584c203772f",
          "body": "{\n  \"NextMarker\": \"\",\n  \"CodeSigningConfigs\": [\n    {\n      \"CodeSigningConfigId\": \"\",\n      \"CodeSigningConfigArn\": \"\",\n      \"Description\": \"\",\n      \"AllowedPublishers\": {\n        \"SigningProfileVersionArns\": [\n          \"\"\n        ]\n      },\n      \"CodeSigningPolicies\": {\n        \"UntrustedArtifactOnDeployment\": \"\"\n      },\n      \"LastModified\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aae49fa5-249b-4771-bf1b-75edeffdb9c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f485139-c97e-411e-bbbc-bb242cbb5e96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7da10785-b4cf-460e-b15a-4dd143a404fb",
      "documentation": "<p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source and triggers the function.</p> <p>For details about each event source type, see the following topics. In particular, each of the topics describes the required and optional parameters for the specific event source. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\"> Configuring a Dynamo DB stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\"> Configuring a Kinesis stream as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\"> Configuring an SQS queue as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\"> Configuring an MQ broker as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\"> Configuring MSK as an event source</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\"> Configuring Self-Managed Apache Kafka as an event source</a> </p> </li> </ul> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "post",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "7b9e3829-a962-48ba-80d9-08c36c4c850d",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e83d9a58-e03b-444b-87f7-9c1e337af1d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15672117-ce4e-4843-acaf-c8bc9478265d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "129d56fa-8d56-47f4-ac1f-9943767a2df0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "500f68ca-528b-48db-b76d-002ec17695c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35c79c35-58e2-4556-aeff-e5add07e4ccb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62443088-c107-464a-aee0-30c02b7f1970",
      "documentation": "Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a single event source.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/",
      "responses": [
        {
          "uuid": "77cec2f9-0a64-4d7a-9462-375d9916e53d",
          "body": "{\n  \"NextMarker\": \"\",\n  \"EventSourceMappings\": [\n    {\n      \"UUID\": \"\",\n      \"StartingPosition\": \"\",\n      \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"BatchSize\": {{faker 'random.number'}},\n      \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n      \"ParallelizationFactor\": {{faker 'random.number'}},\n      \"EventSourceArn\": \"\",\n      \"FunctionArn\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"LastProcessingResult\": \"\",\n      \"State\": \"\",\n      \"StateTransitionReason\": \"\",\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      },\n      \"Topics\": [\n        \"\"\n      ],\n      \"Queues\": [\n        \"\"\n      ],\n      \"SourceAccessConfigurations\": [\n        {\n          \"Type\": \"\",\n          \"URI\": \"\"\n        }\n      ],\n      \"SelfManagedEventSource\": {\n        \"Endpoints\": {}\n      },\n      \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n      \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n      \"MaximumRetryAttempts\": {{faker 'random.number'}},\n      \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n      \"FunctionResponseTypes\": [\n        \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4c5da27-ea7b-44cf-bdae-faf3bce74072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "261474b4-0410-4f45-b8e3-fc5836e64e2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abe6ec02-3838-4b87-b616-211826baffe6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e637a167-4e23-428e-81a2-4b6e715a1be3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92725a5f-0d48-4c2a-8240-d97a158db7ee",
      "documentation": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>You set the package type to <code>Image</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties. </p> <p>You set the package type to <code>Zip</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set set of signing profiles, which define the trusted publishers for this function.</p> <p>If another account or an Amazon Web Services service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions",
      "responses": [
        {
          "uuid": "531933dd-63d1-46b2-815c-3d87c74c1cc0",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7b439cb-d799-41ce-bc33-fecd0c0e5333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56c356c0-f7db-4281-a1f2-be560df8f494",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "455c3c94-2d46-4b49-87f6-9fb2b5cc3e32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e1286c9-c186-455c-ba4b-e39b8a575c58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "021e435b-82ff-47cc-af6f-4e61bcfdd6bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7814a3c-a2f0-45ea-b50b-8088381361d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db3d5d81-d56e-4d59-857f-b1662e22fbdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7760cc8-2079-438d-8143-fce83d03262d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1587633d-5244-4121-b46c-9951f230edec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c5fe718-79b7-4cac-b4cc-956be0cdb6a3",
      "documentation": "Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "e46f08e8-3a7e-41db-bf8f-26e4c68c6c5c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b79a7177-a616-427c-b6dd-1787bd305b83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d54d91d4-101e-4867-a9ef-a25dad4e914f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f196f5b6-8c61-418a-8a36-76d0ac2f1ea7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0245ff0a-8085-44e7-88a6-19948641be51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b27ef9e9-1182-4ffc-b967-10ea5026d177",
      "documentation": "Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "3b2aac9c-29e5-44aa-9908-a67670093a33",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f105909-ba50-4d9f-a784-1188f1fa1917",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb1b6e71-7715-4b13-82f7-7d09d58fdd0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2939c5-e33f-4cf8-a879-2a6a9c146911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f05144d2-f0e2-47df-a66a-2ac061fec01f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf59b887-babc-4d9e-9231-5d0d42ae2c6f",
      "documentation": "Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/aliases/:Name",
      "responses": [
        {
          "uuid": "eb05e844-0b2c-4bb2-95b8-64e2ca5f0542",
          "body": "{\n  \"AliasArn\": \"\",\n  \"Name\": \"\",\n  \"FunctionVersion\": \"\",\n  \"Description\": \"\",\n  \"RoutingConfig\": {\n    \"AdditionalVersionWeights\": {}\n  },\n  \"RevisionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1ac00e6-8bce-45db-834c-64fbf103f599",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f5deab9-b6be-46b5-8e7e-5da655177ca7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa9b1de0-0fab-4a5e-bed8-55ca26158e75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1d2c1ac-99fc-4c28-a5db-2b22906bb879",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43cd3869-81f6-43d8-adeb-0766c998c056",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46b553fb-8dae-458d-8eae-5c3dde528aef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa38d462-f3b7-42fb-94b8-d6d53be01f7a",
      "documentation": "Deletes the code signing configuration. You can delete the code signing configuration only if no function is using it. ",
      "method": "delete",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "fd634fd6-2673-45e9-b5b0-63dc97b13507",
          "body": "{}",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dc218d6-c3c7-4613-942e-117894ff3cfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "138a4e7d-fb72-4ba7-b2c0-d62063474635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7951ca0-6f7c-46d2-8741-f73b8d106e4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b0fc6c3-83cc-46a0-baf5-410156a3900f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42826db5-6cdc-490a-afe0-9cc19b1680bb",
      "documentation": "Returns information about the specified code signing configuration.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "cfbd7cb1-352a-4412-8d8f-4b872d585c6e",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a94919-f2d7-45b6-9da3-012b2c263c65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9475a8dd-6aaf-4c3d-8721-fb898d68a48f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80fa9101-c1c8-42c6-8541-6a0a7c1ec23e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b355d51-3332-459f-a27c-54eb3ce23f07",
      "documentation": "Update the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn",
      "responses": [
        {
          "uuid": "bfbef0c4-dde4-4d60-a9a8-98ac30ebf40d",
          "body": "{\n  \"CodeSigningConfig\": {\n    \"CodeSigningConfigId\": \"\",\n    \"CodeSigningConfigArn\": \"\",\n    \"Description\": \"\",\n    \"AllowedPublishers\": {\n      \"SigningProfileVersionArns\": [\n        \"\"\n      ]\n    },\n    \"CodeSigningPolicies\": {\n      \"UntrustedArtifactOnDeployment\": \"\"\n    },\n    \"LastModified\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d166afe7-fe03-4bc6-a6af-14489649b401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a80adf5-99df-4853-b517-d0af9e6b4499",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9187866e-dcfe-4b8f-8661-3e610cfee0d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a7b2c04-05a7-45cb-ad56-5b27487bb347",
      "documentation": "<p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p> <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "e6b16917-db86-41bb-9fbb-f57f2b9830ef",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5afbab04-43a6-42cb-a8ed-7eebadbadc4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca31b798-cacd-4f10-9573-c6a9fd048fcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b69e90c0-bf06-4d63-a398-5f2b3e9c856e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0cf257d-a22d-4f4a-8ca4-25a2f925c8b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ca05d4c-161a-49d4-9e32-9c0af3823e3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebe49808-9c25-4e42-aa1e-4db8ff8843d3",
      "documentation": "Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.",
      "method": "get",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "53bc230d-8326-4e5c-bb2f-3f6ec7e4089a",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dd44274-4ec6-4181-a2a6-89c3928bbbb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5561b904-4927-49cc-b670-3a53ede9d475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cfe56a7-0696-465a-9300-44854082077f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "823b1f25-92a6-4f32-8314-4d805212300f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c5e3789-2f41-426f-a6ce-87e409bcd04b",
      "documentation": "<p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p> <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul>",
      "method": "put",
      "endpoint": "2015-03-31/event-source-mappings/:UUID",
      "responses": [
        {
          "uuid": "0663fde2-013d-4901-a6ae-280fa4f51363",
          "body": "{\n  \"UUID\": \"\",\n  \"StartingPosition\": \"\",\n  \"StartingPositionTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"BatchSize\": {{faker 'random.number'}},\n  \"MaximumBatchingWindowInSeconds\": {{faker 'random.number'}},\n  \"ParallelizationFactor\": {{faker 'random.number'}},\n  \"EventSourceArn\": \"\",\n  \"FunctionArn\": \"\",\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"LastProcessingResult\": \"\",\n  \"State\": \"\",\n  \"StateTransitionReason\": \"\",\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  },\n  \"Topics\": [\n    \"\"\n  ],\n  \"Queues\": [\n    \"\"\n  ],\n  \"SourceAccessConfigurations\": [\n    {\n      \"Type\": \"\",\n      \"URI\": \"\"\n    }\n  ],\n  \"SelfManagedEventSource\": {\n    \"Endpoints\": {}\n  },\n  \"MaximumRecordAgeInSeconds\": {{faker 'random.number'}},\n  \"BisectBatchOnFunctionError\": {{faker 'random.boolean'}},\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"TumblingWindowInSeconds\": {{faker 'random.number'}},\n  \"FunctionResponseTypes\": [\n    \"{{oneOf (array 'ReportBatchItemFailures')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3bcecac-d63e-4bde-a876-d19d063f6c35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "106cffca-870e-4b67-b0ac-b8bda77fa766",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d86ee0e-3175-4206-be39-2585241ff7e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "527a4ca3-731d-451a-9250-c2696d15a8b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae63b850-2804-44df-9711-babc5448e2c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37a26135-aad1-4cd5-8828-d85176350e94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21e25e50-7c05-42f8-b5bc-5e8922dabb40",
      "documentation": "<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "ac53d83e-c22d-4a4c-a339-c3240e6eafe5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08ac62b9-d1bc-48ff-bba2-1d3b8e572863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7b5fe6f-2128-47da-9b50-03e148d611a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fd353de-cd30-4639-8252-84531257a86e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca21a701-012c-400b-8502-d575d5918a48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42f0746f-3872-48a4-8172-a07e2d65a45e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96b77078-9099-4c95-8b5e-a75111fdf353",
      "documentation": "Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName",
      "responses": [
        {
          "uuid": "ce6a7c42-b21e-4ac9-8da0-6da681e5a414",
          "body": "{\n  \"Configuration\": {\n    \"FunctionName\": \"\",\n    \"FunctionArn\": \"\",\n    \"Runtime\": \"\",\n    \"Role\": \"\",\n    \"Handler\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"Description\": \"\",\n    \"Timeout\": {{faker 'random.number'}},\n    \"MemorySize\": {{faker 'random.number'}},\n    \"LastModified\": \"\",\n    \"CodeSha256\": \"\",\n    \"Version\": \"\",\n    \"VpcConfig\": {\n      \"SubnetIds\": [\n        \"\"\n      ],\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"VpcId\": \"\"\n    },\n    \"DeadLetterConfig\": {\n      \"TargetArn\": \"\"\n    },\n    \"Environment\": {\n      \"Variables\": {},\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"KMSKeyArn\": \"\",\n    \"TracingConfig\": {\n      \"Mode\": \"\"\n    },\n    \"MasterArn\": \"\",\n    \"RevisionId\": \"\",\n    \"Layers\": [\n      {\n        \"Arn\": \"\",\n        \"CodeSize\": {{faker 'random.number'}},\n        \"SigningProfileVersionArn\": \"\",\n        \"SigningJobArn\": \"\"\n      }\n    ],\n    \"State\": \"\",\n    \"StateReason\": \"\",\n    \"StateReasonCode\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"LastUpdateStatusReason\": \"\",\n    \"LastUpdateStatusReasonCode\": \"\",\n    \"FileSystemConfigs\": [\n      {\n        \"Arn\": \"\",\n        \"LocalMountPath\": \"\"\n      }\n    ],\n    \"PackageType\": \"\",\n    \"ImageConfigResponse\": {\n      \"ImageConfig\": {\n        \"EntryPoint\": [\n          \"\"\n        ],\n        \"Command\": [\n          \"\"\n        ],\n        \"WorkingDirectory\": \"\"\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"Message\": \"\"\n      }\n    },\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"Code\": {\n    \"RepositoryType\": \"\",\n    \"Location\": \"\",\n    \"ImageUri\": \"\",\n    \"ResolvedImageUri\": \"\"\n  },\n  \"Tags\": {},\n  \"Concurrency\": {\n    \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "585c511a-9ada-4bdc-a13b-0406614587ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "592e7826-d7b5-4877-bbb6-cfb2d4aba1ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b50c426-aebc-4a7f-aa1c-0aabd3b92577",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7dd34c9-c7c8-46a7-b90b-28c349f6bdeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53d2dab0-25fb-4958-b716-d9591f497446",
      "documentation": "Removes the code signing configuration from the function.",
      "method": "delete",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "851ab44f-5f86-4cc8-89dc-1625fd13d1d8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b4d6de6-d334-4e5d-b7f0-df4f77703058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2404f538-c213-48eb-b966-8b000b6131d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eafe4ac-21d2-4ced-945f-108d3f16a896",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44db83d2-b63a-487a-8de9-3b86c152819d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c7b126-762e-4380-a461-558aed3de35c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a461f0-73a8-4ac3-a239-73934c743786",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ad96cdc-dfe7-42f1-88fc-12b823c9e38e",
      "documentation": "Returns the code signing configuration for the specified function.",
      "method": "get",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "e91bbdfc-2a50-4cf5-bdbe-905f08ca4090",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df0dc9e8-c1c3-4d69-8de5-da9df555b4d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4a317ec-35bb-4df0-a436-314af733b8dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b9f0542-bb99-4bbf-b3c2-0a5db83ec9d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61e79fd3-7a8e-4f5a-a025-044b553b3c5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e74df81a-843b-42d8-a233-b9c0de7dc590",
      "documentation": "Update the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. ",
      "method": "put",
      "endpoint": "2020-06-30/functions/:FunctionName/code-signing-config",
      "responses": [
        {
          "uuid": "d434c687-b582-4a0d-b0c0-4f2ff9a13edf",
          "body": "{\n  \"CodeSigningConfigArn\": \"\",\n  \"FunctionName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f227cfad-4f4f-4dc7-830c-c72d7e397edc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7c588cf-5e1f-4c56-95fa-6e643b16079b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b9e38e2-05e3-46c4-ac0a-9ae28623352b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4280d172-92a3-4c14-a314-c400b818a991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9832d0fc-f680-4d03-85d8-1f4107362ddc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f414d76-a05e-4399-81f2-d5e09581b6b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a2dbe0c-3632-44c6-a6ab-0100da3c155f",
      "documentation": "Removes a concurrent execution limit from a function.",
      "method": "delete",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "979c35b6-8a08-4d6c-a3e2-82da976e3c25",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b42bcaa0-f6b6-4de1-bb89-a57e21e71b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "951e66f9-8d93-4277-9b6c-14644bbb8bb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "672d4a5f-93da-47dc-aff9-9420607329df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "707cb1e9-e8ce-44d7-87e3-654c72e82c17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db17c820-3162-4f3b-80ed-e11953832935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68b9ff2a-806d-44fb-a98c-a7f7f5292e7f",
      "documentation": "<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>",
      "method": "put",
      "endpoint": "2017-10-31/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "71a0a28b-9fd5-4f61-9c18-ede75c109fe9",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fddd6deb-b31d-4729-8c76-b2fabe3fde49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9832b045-605f-4630-8a80-8de463c41520",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a82a142f-3467-402c-a362-dac1743b6523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4be328a-4fc3-4f0e-8952-662746e8696d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3ff8629-535d-4f52-a217-2f8caac9b10b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0f92e72-1ba7-4a5c-9bae-39ac34f58365",
      "documentation": "<p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "delete",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "5c3ae49b-e119-4fc3-b33e-57e6404300e4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f7ca776-f357-4a4a-8b48-5e91316c028e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bc1d970-a773-450d-bfa2-9bc502d14c4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e978024a-4ce5-4b1c-902a-60f57b5a6b96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d706482-1d00-4f7c-bb26-016e553e2dfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c547f9ba-932e-46e1-8eb5-98cd56cff6a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b4e84b0-a62b-4365-8011-a0383d9b2d76",
      "documentation": "<p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "a2c256a7-be7c-4a67-832a-ff9e9df4240c",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3868d5bb-c5a2-461e-881d-92ef4d959a8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a59beb4d-c644-4819-bd13-088ed757bd8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cd9b619-a5da-43f2-8860-739e7c67c807",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c890b03f-3360-4590-961a-a01e9b82ec69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "394310e1-9608-4de9-8d89-42a3ed15bb82",
      "documentation": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>",
      "method": "put",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "34e46dbe-6658-4f1a-876b-2e99044ea3ee",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "395d1596-e453-4f18-aeb1-5e23c14b48d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b93c5f2-9259-4050-bc77-e6463a21cd66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ea26ddd-785c-40f6-a5b4-79f48200b349",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df488679-6325-499b-887d-bcc3983da1b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8320a3fc-6d66-4f56-bc99-7416469326ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "874999b3-e258-425b-80b5-572f2fc8bfbf",
      "documentation": "<p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "post",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config",
      "responses": [
        {
          "uuid": "7d74bce7-0065-4857-aca8-1f56b52b6cc7",
          "body": "{\n  \"LastModified\": \"{{faker 'date.recent' 365}}\",\n  \"FunctionArn\": \"\",\n  \"MaximumRetryAttempts\": {{faker 'random.number'}},\n  \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n  \"DestinationConfig\": {\n    \"OnSuccess\": {\n      \"Destination\": \"\"\n    },\n    \"OnFailure\": {\n      \"Destination\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33117c73-fde1-4c73-b8e5-89268d96f327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b408541a-9763-45ad-abec-56780003a5d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c6c74f0-71b5-4917-b04e-122f7b4c7932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "735d48a8-607f-4c7e-a467-3fd0499f3a52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c92f7616-12af-4765-8ac2-4a305ce4fd11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b391a4cc-d591-43cc-9ae4-50cd50eb3c40",
      "documentation": "Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "60527668-0af0-43c9-a00d-b007c0fab402",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf84abaa-ef6a-4e39-8b36-4a4c50130954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cdcfaae-da06-481a-bffc-d7f5bd88c217",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d45919bc-99c0-43b8-a74f-6b4a1c7f7ec9",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber",
      "responses": [
        {
          "uuid": "c52c4810-be29-449f-b055-ed11ac66a569",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82bae989-4fb0-4f8a-96a0-4c5d74df8870",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "504dca78-3994-41ee-9f8e-429e09c5d9db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2899a0e-45c3-4a00-8d16-3ab1bce382e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f77b677c-33ea-440d-afa8-ec26ee6da5f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d0a8e63-0956-4b1b-88fa-a163d2c7d6bd",
      "documentation": "Deletes the provisioned concurrency configuration for a function.",
      "method": "delete",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "7c7fc1f8-9e19-47fb-baca-79e44074c67c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adae5026-4b70-46ba-99ba-14b2deca5663",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce771d65-d9e7-40ec-92e6-45778351e7da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abd0b2d8-37ed-4077-afe5-3a2d54be17ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c62bcd6-c6c5-4fcf-bcea-ec82009b0fac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b17e2c3f-615c-4a73-94dc-49724de00970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33d6de01-f4b8-409e-9b70-089cbcb6d318",
      "documentation": "Retrieves the provisioned concurrency configuration for a function's alias or version.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "579bc2c5-79ca-4a12-a808-0d6819243641",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d558199-45f7-4102-9d29-7a45785b1311",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbdf6ced-ec5b-4c3f-8da8-bb33519a702f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6987e69a-36d1-4191-8213-5f4d205e2822",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7056ad0c-291d-435b-832c-cf7823772b5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27f8e161-a17e-4351-96ef-eaf91a9fcc8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ProvisionedConcurrencyConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44a2a599-97ed-4a9e-8c21-53e4826bfb3e",
      "documentation": "Adds a provisioned concurrency configuration to a function's alias or version.",
      "method": "put",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#Qualifier",
      "responses": [
        {
          "uuid": "ca7e170e-3156-4c57-9fc6-ea764f85ce03",
          "body": "{\n  \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"StatusReason\": \"\",\n  \"LastModified\": \"\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8080b8a0-ecd9-419f-ba3b-e586d56508d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e710c2d2-ac3d-43c0-85bb-71c9af448710",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65caefe1-0af3-4bec-9503-2ed2b5b1adc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8710fbd1-f0c6-416b-9bdb-1955b922c1c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cac15bd-5568-41ac-b7f2-f782b0949e45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d57fc9f9-e14e-4b3b-8f10-f96965dcc831",
      "documentation": "Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an Amazon Web Services Region.",
      "method": "get",
      "endpoint": "2016-08-19/account-settings/",
      "responses": [
        {
          "uuid": "6cc7d82a-913a-4079-bac2-917e519dcf7c",
          "body": "{\n  \"AccountLimit\": {\n    \"TotalCodeSize\": {{faker 'random.number'}},\n    \"CodeSizeUnzipped\": {{faker 'random.number'}},\n    \"CodeSizeZipped\": {{faker 'random.number'}},\n    \"ConcurrentExecutions\": {{faker 'random.number'}},\n    \"UnreservedConcurrentExecutions\": {{faker 'random.number'}}\n  },\n  \"AccountUsage\": {\n    \"TotalCodeSize\": {{faker 'random.number'}},\n    \"FunctionCount\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd980999-fd26-466e-b12b-826b26f5dcfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e09df24-ea05-47bb-834e-5bbf59a632a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed0e18cb-dcc3-4e33-8929-163f3b017ce1",
      "documentation": "Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/concurrency",
      "responses": [
        {
          "uuid": "aaaed508-73f2-4c99-abd9-e64c8cbbe846",
          "body": "{\n  \"ReservedConcurrentExecutions\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "962eb665-752c-4d30-821d-b91e49b1d307",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7175b3a1-5b0f-4b21-8a4d-74f2ab3f710d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f152588-c20b-4ecc-8bcf-83ed7aca6e63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23cc75e1-e5f2-440e-9d3d-d91813c50440",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e4eda34-5cc0-40c1-8a50-fe619705422e",
      "documentation": "<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "331bbac7-2390-47b1-af8c-b5816f7b93a5",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcf3e83d-d1f2-430b-9659-3991d39ab236",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c6a76a2-2804-422c-9cd4-929944ca5081",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a622590-6387-4b4d-84d7-e4b79deda90c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0873d81-89ec-42f2-a0bc-41c684e1cd1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28b05674-448f-47df-9b3b-53ca7104e487",
      "documentation": "<p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or Amazon Web Services service, use <a>AddPermission</a>.</p>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/configuration",
      "responses": [
        {
          "uuid": "d58a9df7-d682-4d88-911e-6b60f270ba16",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea8d53ff-f39b-4c30-ad59-318346c2edd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b5715e-238f-4932-b136-b4419f11fee1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea2f0a7-a41d-46cc-a803-3831b6ed30e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e0b382e-1ffd-4eda-9884-4ac339e30ce7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aff42aaf-4daf-4a0d-9764-6fa554c9be04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "973a1c25-2dcd-4e7a-a01a-03f4a128c978",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a987949-cd81-436d-b4c6-b7ed7c266ec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e60c1048-9223-4e72-af14-88e570db3a5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "227eeca3-4bc8-4c84-85e7-8320e8b252c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db50a13b-684c-438c-b271-ce379657172e",
      "documentation": "Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.",
      "method": "get",
      "endpoint": "2018-10-31/layers#find=LayerVersion&Arn",
      "responses": [
        {
          "uuid": "6403dbe0-1e85-404e-99c7-c8cdb3239328",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0282d8a-acdd-485d-91fb-ae12a56e80c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1628385b-a4e8-45cb-b86a-68cc292e8119",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06a93782-019f-4b34-a3ce-874a76bbf080",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "166cf9b5-a739-4450-a79e-f2e4c3e53127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2cd7600-2086-4810-bb4a-1bcc5d31a5ca",
      "documentation": "<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>, Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p> <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/invocations",
      "responses": [
        {
          "uuid": "309466c7-7d45-499d-af34-c772b9ba45e7",
          "body": "{\n  \"StatusCode\": {{faker 'random.number'}},\n  \"Payload\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04b93c36-8ef5-493b-b84a-a101962f9087",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "526b2acd-a8c9-492e-a2f8-2abb13a4df0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0c19de5-2bf6-490b-81f3-3c3435fe95f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b692c59-1b30-4756-a3a7-f23b61df96f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "RequestTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c8e43e9-6dee-49fb-a690-61880d447045",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedMediaTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "468cfa90-5452-4a95-be54-69a0772df171",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87569e78-037c-4ce9-9beb-350d3eb212c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ab87869-5c2d-4660-ac3e-24d7165e9b29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "EC2UnexpectedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fee5095-0e43-4f79-b0b9-e3c1864eb450",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "SubnetIPAddressLimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae91d71-0db8-44e0-b002-a4e549a24a3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ENILimitReachedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a7714ad-ff1c-4d8b-af28-51550e495cf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "EFSMountConnectivityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20bfc159-fee6-43e1-8073-dfd91fb88bb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "EFSMountFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38146bef-2554-4523-829c-ac2c30f979df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "EFSMountTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "398adf3b-3eb5-48be-83ac-d1555fce9c76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "EFSIOException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4f0d972-a90c-4935-ad6c-dac00cd578d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "EC2ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3d2ed49-9c43-482b-a262-e1f0081639ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 495,
          "label": "EC2AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cf4c651-41da-4222-9ee0-4989a089832f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 496,
          "label": "InvalidSubnetIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8891c13f-a0b8-4602-a637-254deb05e401",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 497,
          "label": "InvalidSecurityGroupIDException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47ca0d2c-a3b7-4ea1-b8f7-ef2da037a796",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 498,
          "label": "InvalidZipFileException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67f2953e-fe3a-459f-a1b1-93cee725efe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 499,
          "label": "KMSDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a730276e-da17-49de-b881-3d4c3b9f6015",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 500,
          "label": "KMSInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "613832c4-8c5d-4c8d-b114-cc6057b75b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 501,
          "label": "KMSAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a4b0613-3548-492d-bafb-578b3d326e99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 502,
          "label": "KMSNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79ca45e1-96f6-4690-97a5-45519a97de1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 503,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb080440-95eb-4c89-92d5-f5a1856dcf4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 504,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df2ab2e1-69df-4d97-b171-dc9a1a344718",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 505,
          "label": "ResourceNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77774aa9-2e83-4131-a069-97c27352ffd6",
      "documentation": "<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>",
      "method": "post",
      "endpoint": "2014-11-13/functions/:FunctionName/invoke-async/",
      "responses": [
        {
          "uuid": "54031c5d-3cb0-4e7a-98a7-322d674f2f54",
          "body": "{\n  \"Status\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f332cfd-7156-4e47-a50d-b880937bcf1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56751c9e-80b4-47df-ab90-05372a41dec4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4709067d-2782-48a7-ba66-cb24893e0f2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidRequestContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "827c2c89-f41b-459b-a0cc-7598cc0eebae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidRuntimeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db6646ed-ff4e-4db9-b4a8-c272b6e6038c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfdda68e-4c54-4195-ac65-fcefb0175412",
      "documentation": "<p>Retrieves a list of configurations for asynchronous invocation for a function.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "method": "get",
      "endpoint": "2019-09-25/functions/:FunctionName/event-invoke-config/list",
      "responses": [
        {
          "uuid": "e9dc8df1-dfe6-41e2-a3c9-396a57e29b26",
          "body": "{\n  \"FunctionEventInvokeConfigs\": [\n    {\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"FunctionArn\": \"\",\n      \"MaximumRetryAttempts\": {{faker 'random.number'}},\n      \"MaximumEventAgeInSeconds\": {{faker 'random.number'}},\n      \"DestinationConfig\": {\n        \"OnSuccess\": {\n          \"Destination\": \"\"\n        },\n        \"OnFailure\": {\n          \"Destination\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cea49c3-cde9-4201-bf8b-e67fcbc09dd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18c624bf-aa4a-46c1-a2d1-52624b2b5d22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d0f10af-5d5c-440c-8cde-d2749a26b04f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cd4d62c-e07e-456b-81b3-a0796c5dacc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e5b0b7c-d1ce-44f1-94be-8fd98dbaed9f",
      "documentation": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>",
      "method": "get",
      "endpoint": "2015-03-31/functions/",
      "responses": [
        {
          "uuid": "dbc1d8ae-fb4b-4d6b-87c5-f7ac4f417ce7",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Functions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'random.number'}},\n      \"MemorySize\": {{faker 'random.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'random.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00908c57-8276-4557-8ee4-32e109fe27af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c78d2a4d-38e2-4405-9880-9a58e7e6467d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7207da5e-b1c3-403c-91c7-8ff487deecf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daf1f298-fc2b-4962-952f-fbff2798b6ef",
      "documentation": "List the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.",
      "method": "get",
      "endpoint": "2020-04-22/code-signing-configs/:CodeSigningConfigArn/functions",
      "responses": [
        {
          "uuid": "1c9f9879-c8d8-4281-9888-c7beab3989a2",
          "body": "{\n  \"NextMarker\": \"\",\n  \"FunctionArns\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdf0b8e4-5f8c-4159-8d1c-84e4222a8e53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a5d04b0-fcf4-417d-afae-48991b127c62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dddc85d-8eef-4ffc-8a2d-ea4eb4fc2417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa35b026-04ed-41bb-9d10-4a4e7bae2277",
      "documentation": "Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only versions that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "5546fc76-86bb-4317-b5e4-d96c11c57c5e",
          "body": "{\n  \"NextMarker\": \"\",\n  \"LayerVersions\": [\n    {\n      \"LayerVersionArn\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"CreatedDate\": \"\",\n      \"CompatibleRuntimes\": [\n        \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n      ],\n      \"LicenseInfo\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52f31785-b91e-4a35-973a-7b3a8e8f51da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13ab0149-6eef-4f13-9b25-18050e5e44ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54fc4870-da35-400b-85fe-d91abcd2bf33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bd709e8-fd08-4060-ab50-8d31e5377372",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d02bd7a-bef7-45f8-8319-efbe4f49584d",
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
      "method": "post",
      "endpoint": "2018-10-31/layers/:LayerName/versions",
      "responses": [
        {
          "uuid": "2c48d745-9b6c-4e21-b64a-1ba485d8d548",
          "body": "{\n  \"Content\": {\n    \"Location\": \"\",\n    \"CodeSha256\": \"\",\n    \"CodeSize\": {{faker 'random.number'}},\n    \"SigningProfileVersionArn\": \"\",\n    \"SigningJobArn\": \"\"\n  },\n  \"LayerArn\": \"\",\n  \"LayerVersionArn\": \"\",\n  \"Description\": \"\",\n  \"CreatedDate\": \"\",\n  \"Version\": {{faker 'random.number'}},\n  \"CompatibleRuntimes\": [\n    \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n  ],\n  \"LicenseInfo\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01b2150c-956c-482a-8ffe-5ac80f3430ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d7395a0-6a84-428f-a054-3e89dd1a3f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5712c69-2909-4f1c-9d2c-0f6f800a3b03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daf0b807-51df-42ea-947f-51c4431fea30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6dd34c3-a089-4c7f-b894-0cb304e42cea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6213796a-53c7-468f-a9a9-e424fb275ab9",
      "documentation": "Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers that indicate that they're compatible with that runtime.",
      "method": "get",
      "endpoint": "2018-10-31/layers",
      "responses": [
        {
          "uuid": "4d6e1892-bddf-4fa7-8c0a-7c7a029da071",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Layers\": [\n    {\n      \"LayerName\": \"\",\n      \"LayerArn\": \"\",\n      \"LatestMatchingVersion\": {\n        \"LayerVersionArn\": \"\",\n        \"Version\": {{faker 'random.number'}},\n        \"Description\": \"\",\n        \"CreatedDate\": \"\",\n        \"CompatibleRuntimes\": [\n          \"{{oneOf (array 'nodejs' 'nodejs4.3' 'nodejs6.10' 'nodejs8.10' 'nodejs10.x' 'nodejs12.x' 'nodejs14.x' 'java8' 'java8.al2' 'java11' 'python2.7' 'python3.6' 'python3.7' 'python3.8' 'python3.9' 'dotnetcore1.0' 'dotnetcore2.0' 'dotnetcore2.1' 'dotnetcore3.1' 'nodejs4.3-edge' 'go1.x' 'ruby2.5' 'ruby2.7' 'provided' 'provided.al2')}}\"\n        ],\n        \"LicenseInfo\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "856dd2fd-ff65-4185-a2a2-50e3a0f21c9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25962f4c-be5b-4c6b-99c7-75063d3ac407",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad5cd9a1-d6b7-49c2-a322-8c3d9679da33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50edeba3-c824-4513-a770-d07f8bd2b32c",
      "documentation": "Retrieves a list of provisioned concurrency configurations for a function.",
      "method": "get",
      "endpoint": "2019-09-30/functions/:FunctionName/provisioned-concurrency#List=ALL",
      "responses": [
        {
          "uuid": "457b62f9-b76d-4e70-8305-c707f7d043ee",
          "body": "{\n  \"ProvisionedConcurrencyConfigs\": [\n    {\n      \"FunctionArn\": \"\",\n      \"RequestedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"AvailableProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"AllocatedProvisionedConcurrentExecutions\": {{faker 'random.number'}},\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"LastModified\": \"\"\n    }\n  ],\n  \"NextMarker\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b55abdd-1111-42a3-9211-de1bb80cf0f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b71dcaa-c8e2-4a1c-afd3-df92b2a07317",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10cf6ca0-9ded-4a49-ba0f-2a926d0487ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ccf4662-8ea9-4abb-9df5-46caa5ee3a7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c101d17-dc54-4cb0-b23a-8913b6cf5b6f",
      "documentation": "Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can also view tags with <a>GetFunction</a>.",
      "method": "get",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "ffe0a40b-08c7-4f31-a7bc-abf1f923c84f",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88f3f12e-7004-498f-9a97-3288fffc1309",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fe9c4c9-421e-4913-8291-b5b66c36e892",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c91e350b-004d-4de9-8ce6-87791115dd2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d0c0da8-10bc-4a33-8585-4f50b256e894",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "200617a9-ec9d-4fd3-a7f3-c298c3dbf255",
      "documentation": "Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.",
      "method": "post",
      "endpoint": "2017-03-31/tags/:ARN",
      "responses": [
        {
          "uuid": "bdc6b7d1-3ddb-40dd-aae4-4709ddf39a22",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a7eab6b-eada-49f8-ba02-5a28fca74050",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "663c7362-231f-4d8c-b66e-bc803b2683f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc7a69a8-76bb-4140-aa8f-183982ff884d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54dea0f8-d5a8-46e3-b511-71e73b2425c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1ac573a-f55b-451d-b06b-9584d58e9dbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d78c7b9d-5305-4371-bffe-df9b023fe354",
      "documentation": "Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>, with the version-specific configuration of each. Lambda returns up to 50 versions per call.",
      "method": "get",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "acf8149c-4e1a-45ac-80ea-bb7fab339c82",
          "body": "{\n  \"NextMarker\": \"\",\n  \"Versions\": [\n    {\n      \"FunctionName\": \"\",\n      \"FunctionArn\": \"\",\n      \"Runtime\": \"\",\n      \"Role\": \"\",\n      \"Handler\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"Description\": \"\",\n      \"Timeout\": {{faker 'random.number'}},\n      \"MemorySize\": {{faker 'random.number'}},\n      \"LastModified\": \"\",\n      \"CodeSha256\": \"\",\n      \"Version\": \"\",\n      \"VpcConfig\": {\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupIds\": [\n          \"\"\n        ],\n        \"VpcId\": \"\"\n      },\n      \"DeadLetterConfig\": {\n        \"TargetArn\": \"\"\n      },\n      \"Environment\": {\n        \"Variables\": {},\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"KMSKeyArn\": \"\",\n      \"TracingConfig\": {\n        \"Mode\": \"\"\n      },\n      \"MasterArn\": \"\",\n      \"RevisionId\": \"\",\n      \"Layers\": [\n        {\n          \"Arn\": \"\",\n          \"CodeSize\": {{faker 'random.number'}},\n          \"SigningProfileVersionArn\": \"\",\n          \"SigningJobArn\": \"\"\n        }\n      ],\n      \"State\": \"\",\n      \"StateReason\": \"\",\n      \"StateReasonCode\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"LastUpdateStatusReason\": \"\",\n      \"LastUpdateStatusReasonCode\": \"\",\n      \"FileSystemConfigs\": [\n        {\n          \"Arn\": \"\",\n          \"LocalMountPath\": \"\"\n        }\n      ],\n      \"PackageType\": \"\",\n      \"ImageConfigResponse\": {\n        \"ImageConfig\": {\n          \"EntryPoint\": [\n            \"\"\n          ],\n          \"Command\": [\n            \"\"\n          ],\n          \"WorkingDirectory\": \"\"\n        },\n        \"Error\": {\n          \"ErrorCode\": \"\",\n          \"Message\": \"\"\n        }\n      },\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "299d907f-6696-4dcb-a45a-b6387baf362c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cdd7c2e-4a8f-44fe-9c6e-1ce7e9c85601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdeefa39-6e46-4fce-9488-1156aebcb36f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "733799f2-dabd-46fc-bf81-b86c5d70cfb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24d96a41-39bf-4573-9891-c93b489e2f17",
      "documentation": "<p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.</p> <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>",
      "method": "post",
      "endpoint": "2015-03-31/functions/:FunctionName/versions",
      "responses": [
        {
          "uuid": "19a6c70e-f103-4cea-b016-817da0f85821",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caeb15f9-7d61-4e49-9e29-fc7ab27306d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f0c5c60-c318-4722-b720-5ae56a9a2ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79398bb-a227-45f8-94d8-b3557e93cc3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3e501c1-5685-4d32-928d-07551fd9ead3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efc99d8d-90bd-43de-be90-ab92df1c93a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06109f73-ee9b-4a7f-8f65-f06065f631f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb1db558-bd61-41d3-be5a-3af29d5c7eab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b68601f4-5237-4822-81e6-990d56483624",
      "documentation": "Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.",
      "method": "delete",
      "endpoint": "2018-10-31/layers/:LayerName/versions/:VersionNumber/policy/:StatementId",
      "responses": [
        {
          "uuid": "db7752c3-34ef-4312-9942-1c07e87b7796",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78cb3821-8eac-4ac5-8721-445d2b6e4822",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50b44e7b-b2a8-4d04-8636-200718dc802e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "388d52aa-5fdc-45b5-af4d-2b20e58238b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ebb3fd-a53f-4ad9-93cb-e766fc62a59f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "077690fa-7a48-434b-a9c8-3e0b0609a315",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06186b1d-b0b8-49de-bc8c-d8f81277a270",
      "documentation": "Revokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.",
      "method": "delete",
      "endpoint": "2015-03-31/functions/:FunctionName/policy/:StatementId",
      "responses": [
        {
          "uuid": "400bcb31-cbcd-4e56-99d2-a19f89904bda",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c7de16-69be-4ae0-ac7f-158064610665",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6764e048-e735-4272-a0b9-7b597c6917c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26c7be35-ce9a-48e5-a11c-64ac3f9d1897",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "013a7c51-c6d3-45f0-b5de-bb7f02314ef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a45ccb0-038d-45c6-a8f1-1df9ff34516d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb70c6d7-38a0-43c6-be0a-780651fce1dc",
      "documentation": "Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.",
      "method": "delete",
      "endpoint": "2017-03-31/tags/:ARN#tagKeys",
      "responses": [
        {
          "uuid": "e553942d-199f-4f97-b730-604b105b018c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0d96065-01e9-4d64-a12f-b02ff213ed55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c94c2ddf-d957-48f2-bd2c-a91fa6bdeadc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27867a07-d814-4aba-9bc7-f4b1a88e58ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49901c89-d4cf-4698-91c9-7db0fd01dcfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f881e522-dce3-4f9d-be86-ef879caadfa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdf0cb31-b701-4c29-8e03-e10d8c4cc08c",
      "documentation": "<p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">Configuring code signing</a>.</p> <p>The function's code is locked when you publish a version. You can't modify the code of a published version, only the unpublished version.</p> <note> <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.</p> </note>",
      "method": "put",
      "endpoint": "2015-03-31/functions/:FunctionName/code",
      "responses": [
        {
          "uuid": "7570d519-045d-461c-a54a-41ab4ba2a00f",
          "body": "{\n  \"FunctionName\": \"\",\n  \"FunctionArn\": \"\",\n  \"Runtime\": \"\",\n  \"Role\": \"\",\n  \"Handler\": \"\",\n  \"CodeSize\": {{faker 'random.number'}},\n  \"Description\": \"\",\n  \"Timeout\": {{faker 'random.number'}},\n  \"MemorySize\": {{faker 'random.number'}},\n  \"LastModified\": \"\",\n  \"CodeSha256\": \"\",\n  \"Version\": \"\",\n  \"VpcConfig\": {\n    \"SubnetIds\": [\n      \"\"\n    ],\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"VpcId\": \"\"\n  },\n  \"DeadLetterConfig\": {\n    \"TargetArn\": \"\"\n  },\n  \"Environment\": {\n    \"Variables\": {},\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"KMSKeyArn\": \"\",\n  \"TracingConfig\": {\n    \"Mode\": \"\"\n  },\n  \"MasterArn\": \"\",\n  \"RevisionId\": \"\",\n  \"Layers\": [\n    {\n      \"Arn\": \"\",\n      \"CodeSize\": {{faker 'random.number'}},\n      \"SigningProfileVersionArn\": \"\",\n      \"SigningJobArn\": \"\"\n    }\n  ],\n  \"State\": \"\",\n  \"StateReason\": \"\",\n  \"StateReasonCode\": \"\",\n  \"LastUpdateStatus\": \"\",\n  \"LastUpdateStatusReason\": \"\",\n  \"LastUpdateStatusReasonCode\": \"\",\n  \"FileSystemConfigs\": [\n    {\n      \"Arn\": \"\",\n      \"LocalMountPath\": \"\"\n    }\n  ],\n  \"PackageType\": \"\",\n  \"ImageConfigResponse\": {\n    \"ImageConfig\": {\n      \"EntryPoint\": [\n        \"\"\n      ],\n      \"Command\": [\n        \"\"\n      ],\n      \"WorkingDirectory\": \"\"\n    },\n    \"Error\": {\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  },\n  \"SigningProfileVersionArn\": \"\",\n  \"SigningJobArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e2182e4-f157-4796-8eb7-f134a4c317c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4678b8b7-0560-439f-9d9f-6a0c05c549e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e51c39cd-832f-4db3-b004-e451a7d614dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd094880-49af-4db9-a6de-516d8fcc7bd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b25e457-e63a-4d5d-8fb8-98a8553af640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CodeStorageExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8bc6444-19e7-4a8b-8ac1-28b59e9a31f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "PreconditionFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ca2a3ae-fd23-494f-932c-2264e29f0d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3697eb8-d1d4-4b15-ae89-77f1c19291e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CodeVerificationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff551cdf-5d47-4264-b417-b6ca678dcbb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidCodeSignatureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd5c4718-fb3d-4c6f-b7bb-183877a84ae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "CodeSigningConfigNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}