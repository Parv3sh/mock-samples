{
  "uuid": "b5436a1d-f725-4bc5-89db-4ddd5a77e2a2",
  "lastMigration": 19,
  "name": "Contact Center AI Insights API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "72b74955-f37e-46a2-a68e-690738a455b7",
      "documentation": "Gets an issue model's statistics.",
      "method": "get",
      "endpoint": "v1/:issueModel:calculateIssueModelStats",
      "responses": [
        {
          "uuid": "1a2da93d-0f01-42b1-a67a-b4591b92f5f3",
          "body": "{\n  \"currentStats\": {\n    \"analyzedConversationsCount\": \"\",\n    \"issueStats\": {},\n    \"unclassifiedConversationsCount\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2e1cde8-e350-43e8-b8e8-4769ace06537",
      "documentation": "Gets conversation statistics.",
      "method": "get",
      "endpoint": "v1/:location/conversations:calculateStats",
      "responses": [
        {
          "uuid": "6ce9d786-9dcf-4d9b-a1a5-eefab6224cce",
          "body": "{\n  \"averageDuration\": \"\",\n  \"averageTurnCount\": {{faker 'random.number'}},\n  \"conversationCount\": {{faker 'random.number'}},\n  \"conversationCountTimeSeries\": {\n    \"intervalDuration\": \"\",\n    \"points\": [\n      {\n        \"conversationCount\": {{faker 'random.number'}},\n        \"startTime\": \"\"\n      }\n    ]\n  },\n  \"customHighlighterMatches\": {},\n  \"issueMatches\": {},\n  \"issueMatchesStats\": {},\n  \"smartHighlighterMatches\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24400eac-59b6-4590-9255-b180ac015cea",
      "documentation": "Deletes a view.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "b35238ea-4e96-468f-a3aa-0ae27d68c4ed",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a1d6ab5-2b82-476e-a0d5-d566244afca5",
      "documentation": "Gets a view.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "6f0ad560-ca58-4fc5-b9a3-6fc831efe5cf",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7644ed0d-d43c-4376-be69-6f0d2db5c1ab",
      "documentation": "Updates a view.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "a3a8ee05-4b23-4133-bf3e-ef48d53b0945",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66113e9a-eeac-488f-a856-24428cd92284",
      "documentation": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
      "method": "get",
      "endpoint": "v1/:name/operations",
      "responses": [
        {
          "uuid": "8bf9adcf-3dbe-4302-b82e-561911864c6c",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"operations\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"error\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"metadata\": {},\n      \"name\": \"\",\n      \"response\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abc2debf-2ccb-45dc-a90e-024f562f4db3",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "b87ca82b-5390-48c4-be7d-37c3e4940824",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8c63eb1-1001-4109-b67b-0b47716f313e",
      "documentation": "Deploys an issue model. Returns an error if a model is already deployed. An issue model can only be used in analysis after it has been deployed.",
      "method": "post",
      "endpoint": "v1/:name:deploy",
      "responses": [
        {
          "uuid": "f29418b5-2949-415d-a64c-9ad85fed7320",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52d2cd5e-dd74-46af-8935-dc555d0c8dd7",
      "documentation": "Undeploys an issue model. An issue model can not be used in analysis after it has been undeployed.",
      "method": "post",
      "endpoint": "v1/:name:undeploy",
      "responses": [
        {
          "uuid": "5c9150ba-a9cc-4251-aba0-c8e3189af06e",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c61d3dd4-a1b2-4a80-ad94-a2c9126803da",
      "documentation": "Lists analyses.",
      "method": "get",
      "endpoint": "v1/:parent/analyses",
      "responses": [
        {
          "uuid": "de7e66a9-5692-45b9-bbc1-64f6454105a1",
          "body": "{\n  \"analyses\": [\n    {\n      \"analysisResult\": {\n        \"callAnalysisMetadata\": {\n          \"annotations\": [\n            {\n              \"annotationEndBoundary\": {\n                \"transcriptIndex\": {{faker 'random.number'}},\n                \"wordIndex\": {{faker 'random.number'}}\n              },\n              \"annotationStartBoundary\": {\n                \"transcriptIndex\": {{faker 'random.number'}},\n                \"wordIndex\": {{faker 'random.number'}}\n              },\n              \"channelTag\": {{faker 'random.number'}},\n              \"entityMentionData\": {\n                \"entityUniqueId\": \"\",\n                \"sentiment\": {\n                  \"magnitude\": {{faker 'random.float'}},\n                  \"score\": {{faker 'random.float'}}\n                },\n                \"type\": \"{{oneOf (array 'MENTION_TYPE_UNSPECIFIED' 'PROPER' 'COMMON')}}\"\n              },\n              \"holdData\": {},\n              \"intentMatchData\": {\n                \"intentUniqueId\": \"\"\n              },\n              \"interruptionData\": {},\n              \"phraseMatchData\": {\n                \"displayName\": \"\",\n                \"phraseMatcher\": \"\"\n              },\n              \"sentimentData\": {\n                \"magnitude\": {{faker 'random.float'}},\n                \"score\": {{faker 'random.float'}}\n              },\n              \"silenceData\": {}\n            }\n          ],\n          \"entities\": {},\n          \"intents\": {},\n          \"issueModelResult\": {\n            \"issueModel\": \"\",\n            \"issues\": [\n              {\n                \"displayName\": \"\",\n                \"issue\": \"\",\n                \"score\": {{faker 'random.float'}}\n              }\n            ]\n          },\n          \"phraseMatchers\": {},\n          \"sentiments\": [\n            {\n              \"channelTag\": {{faker 'random.number'}},\n              \"sentimentData\": {\n                \"magnitude\": {{faker 'random.float'}},\n                \"score\": {{faker 'random.float'}}\n              }\n            }\n          ]\n        },\n        \"endTime\": \"\"\n      },\n      \"createTime\": \"\",\n      \"name\": \"\",\n      \"requestTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5d22f78-7e48-4dda-b184-885ca7015ccf",
      "documentation": "Creates an analysis. The long running operation is done when the analysis has completed.",
      "method": "post",
      "endpoint": "v1/:parent/analyses",
      "responses": [
        {
          "uuid": "9129a00b-9c0a-4d62-9552-2ecd3cf76bb7",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bbe3161-d321-42ab-bf1a-2848cd945eed",
      "documentation": "Lists conversations.",
      "method": "get",
      "endpoint": "v1/:parent/conversations",
      "responses": [
        {
          "uuid": "c178eccf-8d22-4fb8-a21b-fe723ba6ce6b",
          "body": "{\n  \"conversations\": [\n    {\n      \"agentId\": \"\",\n      \"callMetadata\": {\n        \"agentChannel\": {{faker 'random.number'}},\n        \"customerChannel\": {{faker 'random.number'}}\n      },\n      \"createTime\": \"\",\n      \"dataSource\": {\n        \"dialogflowSource\": {\n          \"audioUri\": \"\",\n          \"dialogflowConversation\": \"\"\n        },\n        \"gcsSource\": {\n          \"audioUri\": \"\",\n          \"transcriptUri\": \"\"\n        }\n      },\n      \"dialogflowIntents\": {},\n      \"duration\": \"\",\n      \"expireTime\": \"\",\n      \"labels\": {},\n      \"languageCode\": \"\",\n      \"latestAnalysis\": {\n        \"analysisResult\": {\n          \"callAnalysisMetadata\": {\n            \"annotations\": [\n              {\n                \"annotationEndBoundary\": {\n                  \"transcriptIndex\": {{faker 'random.number'}},\n                  \"wordIndex\": {{faker 'random.number'}}\n                },\n                \"annotationStartBoundary\": {\n                  \"transcriptIndex\": {{faker 'random.number'}},\n                  \"wordIndex\": {{faker 'random.number'}}\n                },\n                \"channelTag\": {{faker 'random.number'}},\n                \"entityMentionData\": {\n                  \"entityUniqueId\": \"\",\n                  \"sentiment\": {\n                    \"magnitude\": {{faker 'random.float'}},\n                    \"score\": {{faker 'random.float'}}\n                  },\n                  \"type\": \"{{oneOf (array 'MENTION_TYPE_UNSPECIFIED' 'PROPER' 'COMMON')}}\"\n                },\n                \"holdData\": {},\n                \"intentMatchData\": {\n                  \"intentUniqueId\": \"\"\n                },\n                \"interruptionData\": {},\n                \"phraseMatchData\": {\n                  \"displayName\": \"\",\n                  \"phraseMatcher\": \"\"\n                },\n                \"sentimentData\": {\n                  \"magnitude\": {{faker 'random.float'}},\n                  \"score\": {{faker 'random.float'}}\n                },\n                \"silenceData\": {}\n              }\n            ],\n            \"entities\": {},\n            \"intents\": {},\n            \"issueModelResult\": {\n              \"issueModel\": \"\",\n              \"issues\": [\n                {\n                  \"displayName\": \"\",\n                  \"issue\": \"\",\n                  \"score\": {{faker 'random.float'}}\n                }\n              ]\n            },\n            \"phraseMatchers\": {},\n            \"sentiments\": [\n              {\n                \"channelTag\": {{faker 'random.number'}},\n                \"sentimentData\": {\n                  \"magnitude\": {{faker 'random.float'}},\n                  \"score\": {{faker 'random.float'}}\n                }\n              }\n            ]\n          },\n          \"endTime\": \"\"\n        },\n        \"createTime\": \"\",\n        \"name\": \"\",\n        \"requestTime\": \"\"\n      },\n      \"medium\": \"{{oneOf (array 'MEDIUM_UNSPECIFIED' 'PHONE_CALL' 'CHAT')}}\",\n      \"name\": \"\",\n      \"obfuscatedUserId\": \"\",\n      \"runtimeAnnotations\": [\n        {\n          \"annotationId\": \"\",\n          \"answerFeedback\": {\n            \"clicked\": {{faker 'random.boolean'}},\n            \"correctnessLevel\": \"{{oneOf (array 'CORRECTNESS_LEVEL_UNSPECIFIED' 'NOT_CORRECT' 'PARTIALLY_CORRECT' 'FULLY_CORRECT')}}\",\n            \"displayed\": {{faker 'random.boolean'}}\n          },\n          \"articleSuggestion\": {\n            \"confidenceScore\": {{faker 'random.float'}},\n            \"metadata\": {},\n            \"queryRecord\": \"\",\n            \"source\": \"\",\n            \"title\": \"\",\n            \"uri\": \"\"\n          },\n          \"createTime\": \"\",\n          \"dialogflowInteraction\": {\n            \"confidence\": {{faker 'random.float'}},\n            \"dialogflowIntentId\": \"\"\n          },\n          \"endBoundary\": {\n            \"transcriptIndex\": {{faker 'random.number'}},\n            \"wordIndex\": {{faker 'random.number'}}\n          },\n          \"faqAnswer\": {\n            \"answer\": \"\",\n            \"confidenceScore\": {{faker 'random.float'}},\n            \"metadata\": {},\n            \"queryRecord\": \"\",\n            \"question\": \"\",\n            \"source\": \"\"\n          },\n          \"smartComposeSuggestion\": {\n            \"confidenceScore\": {{faker 'random.float'}},\n            \"metadata\": {},\n            \"queryRecord\": \"\",\n            \"suggestion\": \"\"\n          },\n          \"smartReply\": {\n            \"confidenceScore\": {{faker 'random.float'}},\n            \"metadata\": {},\n            \"queryRecord\": \"\",\n            \"reply\": \"\"\n          },\n          \"startBoundary\": {\n            \"transcriptIndex\": {{faker 'random.number'}},\n            \"wordIndex\": {{faker 'random.number'}}\n          }\n        }\n      ],\n      \"startTime\": \"\",\n      \"transcript\": {\n        \"transcriptSegments\": [\n          {\n            \"channelTag\": {{faker 'random.number'}},\n            \"confidence\": {{faker 'random.float'}},\n            \"dialogflowSegmentMetadata\": {\n              \"smartReplyAllowlistCovered\": {{faker 'random.boolean'}}\n            },\n            \"languageCode\": \"\",\n            \"messageTime\": \"\",\n            \"segmentParticipant\": {\n              \"dialogflowParticipant\": \"\",\n              \"dialogflowParticipantName\": \"\",\n              \"obfuscatedExternalUserId\": \"\",\n              \"role\": \"{{oneOf (array 'ROLE_UNSPECIFIED' 'HUMAN_AGENT' 'AUTOMATED_AGENT' 'END_USER' 'ANY_AGENT')}}\",\n              \"userId\": \"\"\n            },\n            \"sentiment\": {\n              \"magnitude\": {{faker 'random.float'}},\n              \"score\": {{faker 'random.float'}}\n            },\n            \"text\": \"\",\n            \"words\": [\n              {\n                \"confidence\": {{faker 'random.float'}},\n                \"endOffset\": \"\",\n                \"startOffset\": \"\",\n                \"word\": \"\"\n              }\n            ]\n          }\n        ]\n      },\n      \"ttl\": \"\",\n      \"turnCount\": {{faker 'random.number'}},\n      \"updateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6042b9b-a68f-415b-b1a0-404ab12e9636",
      "documentation": "Creates a conversation.",
      "method": "post",
      "endpoint": "v1/:parent/conversations",
      "responses": [
        {
          "uuid": "b03317d7-28bf-4f90-8639-ca7b7220cd73",
          "body": "{\n  \"agentId\": \"\",\n  \"callMetadata\": {\n    \"agentChannel\": {{faker 'random.number'}},\n    \"customerChannel\": {{faker 'random.number'}}\n  },\n  \"createTime\": \"\",\n  \"dataSource\": {\n    \"dialogflowSource\": {\n      \"audioUri\": \"\",\n      \"dialogflowConversation\": \"\"\n    },\n    \"gcsSource\": {\n      \"audioUri\": \"\",\n      \"transcriptUri\": \"\"\n    }\n  },\n  \"dialogflowIntents\": {},\n  \"duration\": \"\",\n  \"expireTime\": \"\",\n  \"labels\": {},\n  \"languageCode\": \"\",\n  \"latestAnalysis\": {\n    \"analysisResult\": {\n      \"callAnalysisMetadata\": {\n        \"annotations\": [\n          {\n            \"annotationEndBoundary\": {\n              \"transcriptIndex\": {{faker 'random.number'}},\n              \"wordIndex\": {{faker 'random.number'}}\n            },\n            \"annotationStartBoundary\": {\n              \"transcriptIndex\": {{faker 'random.number'}},\n              \"wordIndex\": {{faker 'random.number'}}\n            },\n            \"channelTag\": {{faker 'random.number'}},\n            \"entityMentionData\": {\n              \"entityUniqueId\": \"\",\n              \"sentiment\": {\n                \"magnitude\": {{faker 'random.float'}},\n                \"score\": {{faker 'random.float'}}\n              },\n              \"type\": \"{{oneOf (array 'MENTION_TYPE_UNSPECIFIED' 'PROPER' 'COMMON')}}\"\n            },\n            \"holdData\": {},\n            \"intentMatchData\": {\n              \"intentUniqueId\": \"\"\n            },\n            \"interruptionData\": {},\n            \"phraseMatchData\": {\n              \"displayName\": \"\",\n              \"phraseMatcher\": \"\"\n            },\n            \"sentimentData\": {\n              \"magnitude\": {{faker 'random.float'}},\n              \"score\": {{faker 'random.float'}}\n            },\n            \"silenceData\": {}\n          }\n        ],\n        \"entities\": {},\n        \"intents\": {},\n        \"issueModelResult\": {\n          \"issueModel\": \"\",\n          \"issues\": [\n            {\n              \"displayName\": \"\",\n              \"issue\": \"\",\n              \"score\": {{faker 'random.float'}}\n            }\n          ]\n        },\n        \"phraseMatchers\": {},\n        \"sentiments\": [\n          {\n            \"channelTag\": {{faker 'random.number'}},\n            \"sentimentData\": {\n              \"magnitude\": {{faker 'random.float'}},\n              \"score\": {{faker 'random.float'}}\n            }\n          }\n        ]\n      },\n      \"endTime\": \"\"\n    },\n    \"createTime\": \"\",\n    \"name\": \"\",\n    \"requestTime\": \"\"\n  },\n  \"medium\": \"{{oneOf (array 'MEDIUM_UNSPECIFIED' 'PHONE_CALL' 'CHAT')}}\",\n  \"name\": \"\",\n  \"obfuscatedUserId\": \"\",\n  \"runtimeAnnotations\": [\n    {\n      \"annotationId\": \"\",\n      \"answerFeedback\": {\n        \"clicked\": {{faker 'random.boolean'}},\n        \"correctnessLevel\": \"{{oneOf (array 'CORRECTNESS_LEVEL_UNSPECIFIED' 'NOT_CORRECT' 'PARTIALLY_CORRECT' 'FULLY_CORRECT')}}\",\n        \"displayed\": {{faker 'random.boolean'}}\n      },\n      \"articleSuggestion\": {\n        \"confidenceScore\": {{faker 'random.float'}},\n        \"metadata\": {},\n        \"queryRecord\": \"\",\n        \"source\": \"\",\n        \"title\": \"\",\n        \"uri\": \"\"\n      },\n      \"createTime\": \"\",\n      \"dialogflowInteraction\": {\n        \"confidence\": {{faker 'random.float'}},\n        \"dialogflowIntentId\": \"\"\n      },\n      \"endBoundary\": {\n        \"transcriptIndex\": {{faker 'random.number'}},\n        \"wordIndex\": {{faker 'random.number'}}\n      },\n      \"faqAnswer\": {\n        \"answer\": \"\",\n        \"confidenceScore\": {{faker 'random.float'}},\n        \"metadata\": {},\n        \"queryRecord\": \"\",\n        \"question\": \"\",\n        \"source\": \"\"\n      },\n      \"smartComposeSuggestion\": {\n        \"confidenceScore\": {{faker 'random.float'}},\n        \"metadata\": {},\n        \"queryRecord\": \"\",\n        \"suggestion\": \"\"\n      },\n      \"smartReply\": {\n        \"confidenceScore\": {{faker 'random.float'}},\n        \"metadata\": {},\n        \"queryRecord\": \"\",\n        \"reply\": \"\"\n      },\n      \"startBoundary\": {\n        \"transcriptIndex\": {{faker 'random.number'}},\n        \"wordIndex\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"startTime\": \"\",\n  \"transcript\": {\n    \"transcriptSegments\": [\n      {\n        \"channelTag\": {{faker 'random.number'}},\n        \"confidence\": {{faker 'random.float'}},\n        \"dialogflowSegmentMetadata\": {\n          \"smartReplyAllowlistCovered\": {{faker 'random.boolean'}}\n        },\n        \"languageCode\": \"\",\n        \"messageTime\": \"\",\n        \"segmentParticipant\": {\n          \"dialogflowParticipant\": \"\",\n          \"dialogflowParticipantName\": \"\",\n          \"obfuscatedExternalUserId\": \"\",\n          \"role\": \"{{oneOf (array 'ROLE_UNSPECIFIED' 'HUMAN_AGENT' 'AUTOMATED_AGENT' 'END_USER' 'ANY_AGENT')}}\",\n          \"userId\": \"\"\n        },\n        \"sentiment\": {\n          \"magnitude\": {{faker 'random.float'}},\n          \"score\": {{faker 'random.float'}}\n        },\n        \"text\": \"\",\n        \"words\": [\n          {\n            \"confidence\": {{faker 'random.float'}},\n            \"endOffset\": \"\",\n            \"startOffset\": \"\",\n            \"word\": \"\"\n          }\n        ]\n      }\n    ]\n  },\n  \"ttl\": \"\",\n  \"turnCount\": {{faker 'random.number'}},\n  \"updateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79f1e5cb-107d-4960-a0d0-3a29a029dd30",
      "documentation": "Export insights data to a destination defined in the request body.",
      "method": "post",
      "endpoint": "v1/:parent/insightsdata:export",
      "responses": [
        {
          "uuid": "fce5bc36-9ea4-43ff-978f-ff24947a5e29",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93558843-e3e0-43a4-8c8f-2f67e7d12a2d",
      "documentation": "Lists issue models.",
      "method": "get",
      "endpoint": "v1/:parent/issueModels",
      "responses": [
        {
          "uuid": "0c0495bf-d357-4db8-a6d8-0b99a6a7ab4b",
          "body": "{\n  \"issueModels\": [\n    {\n      \"createTime\": \"\",\n      \"displayName\": \"\",\n      \"inputDataConfig\": {\n        \"filter\": \"\",\n        \"medium\": \"{{oneOf (array 'MEDIUM_UNSPECIFIED' 'PHONE_CALL' 'CHAT')}}\",\n        \"trainingConversationsCount\": \"\"\n      },\n      \"name\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'UNDEPLOYED' 'DEPLOYING' 'DEPLOYED' 'UNDEPLOYING' 'DELETING')}}\",\n      \"trainingStats\": {\n        \"analyzedConversationsCount\": \"\",\n        \"issueStats\": {},\n        \"unclassifiedConversationsCount\": \"\"\n      },\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ad87f89-ef8b-4932-bac9-41c5f458a826",
      "documentation": "Creates an issue model.",
      "method": "post",
      "endpoint": "v1/:parent/issueModels",
      "responses": [
        {
          "uuid": "b377d24a-e232-49ad-b3a6-0cfb59dc9829",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9217df01-6b9e-4ba2-990d-5f05654a375c",
      "documentation": "Lists issues.",
      "method": "get",
      "endpoint": "v1/:parent/issues",
      "responses": [
        {
          "uuid": "24e6dbf3-c121-4838-bad1-2d84cfd16833",
          "body": "{\n  \"issues\": [\n    {\n      \"createTime\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"updateTime\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2cd6a500-2226-4dd6-9db5-db62482d381b",
      "documentation": "Lists phrase matchers.",
      "method": "get",
      "endpoint": "v1/:parent/phraseMatchers",
      "responses": [
        {
          "uuid": "07ff0d89-8ac2-4d8a-822d-dfeda912780b",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"phraseMatchers\": [\n    {\n      \"activationUpdateTime\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"phraseMatchRuleGroups\": [\n        {\n          \"phraseMatchRules\": [\n            {\n              \"config\": {\n                \"exactMatchConfig\": {\n                  \"caseSensitive\": {{faker 'random.boolean'}}\n                }\n              },\n              \"negated\": {{faker 'random.boolean'}},\n              \"query\": \"\"\n            }\n          ],\n          \"type\": \"{{oneOf (array 'PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED' 'ALL_OF' 'ANY_OF')}}\"\n        }\n      ],\n      \"revisionCreateTime\": \"\",\n      \"revisionId\": \"\",\n      \"roleMatch\": \"{{oneOf (array 'ROLE_UNSPECIFIED' 'HUMAN_AGENT' 'AUTOMATED_AGENT' 'END_USER' 'ANY_AGENT')}}\",\n      \"type\": \"{{oneOf (array 'PHRASE_MATCHER_TYPE_UNSPECIFIED' 'ALL_OF' 'ANY_OF')}}\",\n      \"updateTime\": \"\",\n      \"versionTag\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c578bff4-c591-4605-885e-bcf925b028aa",
      "documentation": "Creates a phrase matcher.",
      "method": "post",
      "endpoint": "v1/:parent/phraseMatchers",
      "responses": [
        {
          "uuid": "3a89ce00-108e-44b8-9a20-4eab23688887",
          "body": "{\n  \"activationUpdateTime\": \"\",\n  \"active\": {{faker 'random.boolean'}},\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"phraseMatchRuleGroups\": [\n    {\n      \"phraseMatchRules\": [\n        {\n          \"config\": {\n            \"exactMatchConfig\": {\n              \"caseSensitive\": {{faker 'random.boolean'}}\n            }\n          },\n          \"negated\": {{faker 'random.boolean'}},\n          \"query\": \"\"\n        }\n      ],\n      \"type\": \"{{oneOf (array 'PHRASE_MATCH_RULE_GROUP_TYPE_UNSPECIFIED' 'ALL_OF' 'ANY_OF')}}\"\n    }\n  ],\n  \"revisionCreateTime\": \"\",\n  \"revisionId\": \"\",\n  \"roleMatch\": \"{{oneOf (array 'ROLE_UNSPECIFIED' 'HUMAN_AGENT' 'AUTOMATED_AGENT' 'END_USER' 'ANY_AGENT')}}\",\n  \"type\": \"{{oneOf (array 'PHRASE_MATCHER_TYPE_UNSPECIFIED' 'ALL_OF' 'ANY_OF')}}\",\n  \"updateTime\": \"\",\n  \"versionTag\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b006940-4f99-4b4b-aec3-9e6745ecad33",
      "documentation": "Lists views.",
      "method": "get",
      "endpoint": "v1/:parent/views",
      "responses": [
        {
          "uuid": "0a7c26e7-24e3-43e9-bf44-904cf959fc4e",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"views\": [\n    {\n      \"createTime\": \"\",\n      \"displayName\": \"\",\n      \"name\": \"\",\n      \"updateTime\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "773a04ce-54fe-43ad-abd3-109c8e6a19a2",
      "documentation": "Creates a view.",
      "method": "post",
      "endpoint": "v1/:parent/views",
      "responses": [
        {
          "uuid": "cbac5590-8586-45dc-9e81-71786a7fa7a6",
          "body": "{\n  \"createTime\": \"\",\n  \"displayName\": \"\",\n  \"name\": \"\",\n  \"updateTime\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}