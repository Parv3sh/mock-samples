{
  "uuid": "e1b3884a-5979-49b2-89dc-32cd956de702",
  "lastMigration": 19,
  "name": "Azure Metrics",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f48a2340-4cf4-4e03-a5b1-8fcd5c282565",
      "documentation": "**Post the metric values for a resource**.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourcegroups/:resourceGroupName/providers/:resourceProvider/:resourceTypeName/:resourceName/metrics",
      "responses": [
        {
          "uuid": "a1881c63-bda6-45d0-aa8e-8a9e13dd933f",
          "body": "{\n  \"apiFailureResponse\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"statusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The azure metrics publish succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d94259c-8dc3-4897-b540-58800a36949f",
          "body": "{\n  \"apiFailureResponse\": {\n    \"error\": {\n      \"code\": \"\",\n      \"message\": \"\"\n    }\n  },\n  \"statusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An unexpected error from the server. See response object for the reason",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}