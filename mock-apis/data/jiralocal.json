{
  "uuid": "3b5c19b1-a7e5-4d20-a964-64cb3dec7967",
  "lastMigration": 19,
  "name": "JIRA 7.6.1",
  "endpointPrefix": "jira/rest/",
  "latency": 0,
  "port": 8080,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "34259552-2a52-472b-8fb1-67614d218336",
      "documentation": "Returns an application property.",
      "method": "get",
      "endpoint": "api/2/application-properties",
      "responses": [
        {
          "uuid": "e6ea1f6e-1a6c-4a07-8f44-1c6b10c8b436",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02acff42-95d9-4dfd-8415-995a57797dd8",
      "documentation": "Returns the properties that are displayed on the \"General Configuration > Advanced Settings\" page.",
      "method": "get",
      "endpoint": "api/2/application-properties/advanced-settings",
      "responses": [
        {
          "uuid": "35e45080-3627-49c4-840d-3ca205b707b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "320efb17-0c2d-4437-8f52-1eb42550f972",
      "documentation": "Modify an application property via PUT. The \"value\" field present in the PUT will override the existing value.",
      "method": "put",
      "endpoint": "api/2/application-properties/:id",
      "responses": [
        {
          "uuid": "2abdf658-a20e-4ef3-8226-f45ff5a4739c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2372e4d-a366-4b1c-90f3-90e12f86ba81",
      "documentation": "Returns all ApplicationRoles in the system. Will also return an ETag header containing a version hash of the\n collection of ApplicationRoles.",
      "method": "get",
      "endpoint": "api/2/applicationrole",
      "responses": [
        {
          "uuid": "264d33d3-e9fc-4475-96bb-946a0b4d5111",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d4a6bdb-7d57-4c90-882f-dc6bd2cba000",
      "documentation": "Updates the ApplicationRoles with the passed data if the version hash is the same as the server.\n Only the groups and default groups setting of the role may be updated. Requests to change the key\n or the name of the role will be silently ignored. It is acceptable to pass only the roles that are updated\n as roles that are present in the server but not in data to update with, will not be deleted.",
      "method": "put",
      "endpoint": "api/2/applicationrole",
      "responses": [
        {
          "uuid": "21295e83-8e1f-40bf-be4e-897d6f23b4c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd163de6-a93a-45d2-ae88-36d1d6d04925",
      "documentation": "Returns the ApplicationRole with passed key if it exists.",
      "method": "get",
      "endpoint": "api/2/applicationrole/:key",
      "responses": [
        {
          "uuid": "e6f8a6f7-9c11-459b-8043-f094af64cd0f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd0d6533-f900-47f1-8214-543d9c434638",
      "documentation": "Updates the ApplicationRole with the passed data. Only the groups and default groups setting of the\n role may be updated. Requests to change the key or the name of the role will be silently ignored.\n <p>\n Optional: If versionHash is passed through the If-Match header the request will be rejected if not the\n same as server",
      "method": "put",
      "endpoint": "api/2/applicationrole/:key",
      "responses": [
        {
          "uuid": "729ca88e-b88d-4bb5-98e9-b62fa7c0b461",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "170d30bd-5e75-4e3e-8934-6e61e2895d12",
      "documentation": "Returns the meta information for an attachments, specifically if they are enabled and the maximum upload size\n allowed.",
      "method": "get",
      "endpoint": "api/2/attachment/meta",
      "responses": [
        {
          "uuid": "98e3caa6-004e-4fa7-af8c-c3cb204db780",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74c22f48-0951-46b2-969e-552cb1ea4041",
      "documentation": "Remove an attachment from an issue.",
      "method": "delete",
      "endpoint": "api/2/attachment/:id",
      "responses": [
        {
          "uuid": "3dcacc2a-07ff-4ffd-880d-49085648bbaa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98910720-346d-4b6f-a665-acff9f453dca",
      "documentation": "Returns the meta-data for an attachment, including the URI of the actual attached file.",
      "method": "get",
      "endpoint": "api/2/attachment/:id",
      "responses": [
        {
          "uuid": "99179a58-8248-4902-b801-ccffe76c1057",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7461e2c-4750-40a0-96b2-d0ba5bb603b4",
      "documentation": "Tries to expand an attachment. Output is human-readable and subject to change.",
      "method": "get",
      "endpoint": "api/2/attachment/:id/expand/human",
      "responses": [
        {
          "uuid": "67268eee-7b82-4773-94b5-f8e6fe250876",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7080efee-b725-4339-861c-94d52a345deb",
      "documentation": "Tries to expand an attachment. Output is raw and should be backwards-compatible through the course of time.",
      "method": "get",
      "endpoint": "api/2/attachment/:id/expand/raw",
      "responses": [
        {
          "uuid": "32b5950f-b3a2-44a0-8c6f-1891b554be97",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b70b3fff-d449-46a1-8fe4-95add24ad93d",
      "documentation": "Returns auditing records filtered using provided parameters",
      "method": "get",
      "endpoint": "api/2/auditing/record",
      "responses": [
        {
          "uuid": "11be1579-d926-42e7-a99a-ab0240520c5f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9c64d43-02b0-4f83-9145-6a01c17ecc9b",
      "documentation": "Store a record in Audit Log",
      "method": "post",
      "endpoint": "api/2/auditing/record",
      "responses": [
        {
          "uuid": "60cfe3f8-b665-4623-b99f-096151201da2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1df1556c-3976-4cc7-b625-1e3159bb3acc",
      "documentation": "Returns all system avatars of the given type.",
      "method": "get",
      "endpoint": "api/2/avatar/:type/system",
      "responses": [
        {
          "uuid": "3fae0d7a-771f-4559-9944-e7c7f12da6fc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1facb35f-1a38-4260-b2f7-03e608e151fe",
      "documentation": "Creates temporary avatar",
      "method": "post",
      "endpoint": "api/2/avatar/:type/temporary",
      "responses": [
        {
          "uuid": "c504d084-44ef-4cbf-99ac-3ae4c46b8b95",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "298524b3-4177-4ef5-9f81-fe582503ee49",
      "documentation": "Updates the cropping instructions of the temporary avatar.",
      "method": "post",
      "endpoint": "api/2/avatar/:type/temporaryCrop",
      "responses": [
        {
          "uuid": "9dc9be38-c14a-4960-8173-437e076f6618",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4980a018-f784-4667-8676-09ac9ca5ad6b",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/cluster/zdu/approve",
      "responses": [
        {
          "uuid": "c00bb2e3-e9fc-479c-8444-b1d30dbb0d42",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea6da49a-fcb4-4b78-b5e7-b35b0fff8382",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/cluster/zdu/cancel",
      "responses": [
        {
          "uuid": "89db000a-618a-4e56-ae92-5269101f0a1b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e38332f-f1e0-4939-aac4-6f8e2ff728b1",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/cluster/zdu/retryUpgrade",
      "responses": [
        {
          "uuid": "01aeb2b3-c3fd-42db-98b6-912dc3eb5448",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e723900-b529-45b1-b9dd-81298f716c67",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/cluster/zdu/start",
      "responses": [
        {
          "uuid": "66252c9d-373e-4761-9dbf-20ae059b3ca5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29c723eb-322a-486b-a798-1cd042eb6d90",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/cluster/zdu/state",
      "responses": [
        {
          "uuid": "6725158c-2b22-46da-bbb2-0a36c6f40b07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3179a18e-73b5-4062-bfde-d4b89b853448",
      "documentation": "Returns the keys of all properties for the comment identified by the key or by the id.",
      "method": "get",
      "endpoint": "api/2/comment/:commentId/properties",
      "responses": [
        {
          "uuid": "dd79dd19-aef4-400f-86a1-129762111da6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dcdb3e2-0459-439a-bf91-924a3b8a36ef",
      "documentation": "Removes the property from the comment identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the comment.",
      "method": "delete",
      "endpoint": "api/2/comment/:commentId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "8aa8052f-ccec-4971-af99-b85dc13a15dc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97ac5c40-efa4-42d6-88af-526f473b4a3f",
      "documentation": "Returns the value of the property with a given key from the comment identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the comment.",
      "method": "get",
      "endpoint": "api/2/comment/:commentId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "d50db8e4-76bf-4002-b4b3-7e16f107bb13",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc157fe5-0862-4504-881d-6c74b7f7209a",
      "documentation": "Sets the value of the specified comment's property.\n <p>\n You can use this resource to store a custom data against the comment identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the comment.\n </p>",
      "method": "put",
      "endpoint": "api/2/comment/:commentId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "eb233237-08df-4ed8-b8ae-ea306a1ad9e4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68e0dffc-f6c4-45c0-9adc-59cb4aa54e5b",
      "documentation": "Create a component via POST.",
      "method": "post",
      "endpoint": "api/2/component",
      "responses": [
        {
          "uuid": "e0c6f059-7fe6-4305-8899-26e9ca9652b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e6d43f2-617e-4cfd-95dc-a3becf7a2977",
      "documentation": "Delete a project component.",
      "method": "delete",
      "endpoint": "api/2/component/:id",
      "responses": [
        {
          "uuid": "7490e0ee-67b8-4a96-97ef-7782a3a22a41",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7db9ec1-c281-4c63-95e7-e13ed429e930",
      "documentation": "Returns a project component.",
      "method": "get",
      "endpoint": "api/2/component/:id",
      "responses": [
        {
          "uuid": "8ecf8af0-dd58-4103-9499-b6982c58e4cb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d322c8f-0472-4951-a047-c3cbdd99881b",
      "documentation": "Modify a component via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.\n <p>\n If leadUserName is an empty string (\"\") the component lead will be removed.",
      "method": "put",
      "endpoint": "api/2/component/:id",
      "responses": [
        {
          "uuid": "212c2738-1bc0-4bd7-ad05-bf497fcd19c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b26cef28-0ba1-4f37-850b-d2d60264a412",
      "documentation": "Returns counts of issues related to this component.",
      "method": "get",
      "endpoint": "api/2/component/:id/relatedIssueCounts",
      "responses": [
        {
          "uuid": "bdf4fb5a-4e67-4947-99e6-b278eec1ce3e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f4957b4-3a58-4d50-8c32-ef91d9b4a88e",
      "documentation": "Returns the information if the optional features in JIRA are enabled or disabled. If the time tracking is enabled,\n it also returns the detailed information about time tracking configuration.",
      "method": "get",
      "endpoint": "api/2/configuration",
      "responses": [
        {
          "uuid": "94a8f5e7-9975-464a-bc53-b16a10129c4e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "062bf4b0-6864-4078-ba16-802792d8c3e7",
      "documentation": "Returns a full representation of the Custom Field Option that has the given id.",
      "method": "get",
      "endpoint": "api/2/customFieldOption/:id",
      "responses": [
        {
          "uuid": "5473a8bf-7058-4793-b23e-16d50d837366",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0229fed8-2554-44c0-aa50-eedf0c70f28d",
      "documentation": "Returns a list of all dashboards, optionally filtering them.",
      "method": "get",
      "endpoint": "api/2/dashboard",
      "responses": [
        {
          "uuid": "6d6b6df9-3298-47b5-a1bf-febd0e49c133",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28546b15-1795-4d7d-bf08-88d0feff7db6",
      "documentation": "Returns the keys of all properties for the dashboard item identified by the id.",
      "method": "get",
      "endpoint": "api/2/dashboard/:dashboardId/items/:itemId/properties",
      "responses": [
        {
          "uuid": "9a1b5697-b1c0-45fe-bea9-4c2771b05a05",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad01e70f-c96f-4af3-a026-84eb65960e81",
      "documentation": "Removes the property from the dashboard item identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the dashboard item.",
      "method": "delete",
      "endpoint": "api/2/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "84e1a156-d2be-4530-9dee-adf1d3215f10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ba125a3-0069-4ebd-a9dc-aa4031221eb7",
      "documentation": "Returns the value of the property with a given key from the dashboard item identified by the id.\n The user who retrieves the property is required to have permissions to read the dashboard item.",
      "method": "get",
      "endpoint": "api/2/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "3f7a2daa-5105-4742-a953-7df992d51fd1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6381a5f2-fa94-44b5-b03d-011be214185a",
      "documentation": "Sets the value of the specified dashboard item's property.\n <p>\n You can use this resource to store a custom data against the dashboard item identified by the id.\n The user who stores the data is required to have permissions to administer the dashboard item.\n </p>",
      "method": "put",
      "endpoint": "api/2/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "39d0ebdd-a3c4-4d65-9798-51a88fac2bf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f63e0550-72b0-4d87-ac55-f8299b26eab6",
      "documentation": "Returns a single dashboard.",
      "method": "get",
      "endpoint": "api/2/dashboard/:id",
      "responses": [
        {
          "uuid": "2b8128bc-d80e-431a-a67d-3727b49d7668",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04a7063f-6fd2-4af1-b55c-40b4aaf0d4bb",
      "documentation": "Returns a list of all fields, both System and Custom",
      "method": "get",
      "endpoint": "api/2/field",
      "responses": [
        {
          "uuid": "3780cf3d-10f2-4f17-8a31-fa95c88bb2ae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34b17401-6721-44a0-930b-88061d38a937",
      "documentation": "Creates a custom field using a definition (object encapsulating custom field data)",
      "method": "post",
      "endpoint": "api/2/field",
      "responses": [
        {
          "uuid": "60fcb807-5ac5-486b-b265-c711e1383f0c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14d76e35-9801-47ab-a220-97cdcd1aed45",
      "documentation": "Creates a new filter, and returns newly created filter.\n Currently sets permissions just using the users default sharing permissions",
      "method": "post",
      "endpoint": "api/2/filter",
      "responses": [
        {
          "uuid": "a568dd7b-d422-460f-afcc-db6f295aff15",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27f270d0-f6b5-4a08-a743-aa5ecc9f771d",
      "documentation": "Returns the default share scope of the logged-in user.",
      "method": "get",
      "endpoint": "api/2/filter/defaultShareScope",
      "responses": [
        {
          "uuid": "c7ffa339-917a-407e-9ece-d398b9913367",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93e59924-ef22-4a86-88d1-cf1fabf9da72",
      "documentation": "Sets the default share scope of the logged-in user. Available values are GLOBAL and PRIVATE.",
      "method": "put",
      "endpoint": "api/2/filter/defaultShareScope",
      "responses": [
        {
          "uuid": "ac4b0d0e-2be9-43a8-af5a-298831c644a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c363a18-8f1a-4a22-b954-c80f7c28cedb",
      "documentation": "Returns the favourite filters of the logged-in user.",
      "method": "get",
      "endpoint": "api/2/filter/favourite",
      "responses": [
        {
          "uuid": "5398a9c6-6fd1-4f15-b5a7-75f3635b00f5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a12c20d-aeca-4ed4-8fd7-f9f484500ea7",
      "documentation": "Delete a filter.",
      "method": "delete",
      "endpoint": "api/2/filter/:id",
      "responses": [
        {
          "uuid": "8200b361-8d6f-454d-bfe8-33ac8daf2787",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "131ca94b-37ad-4391-81f9-794e1e190c72",
      "documentation": "Returns a filter given an id",
      "method": "get",
      "endpoint": "api/2/filter/:id",
      "responses": [
        {
          "uuid": "b494889f-e2a9-449f-bf98-20a54dacf3b9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a993883b-3aa2-44f9-8093-55b7de705fcc",
      "documentation": "Updates an existing filter, and returns its new value.",
      "method": "put",
      "endpoint": "api/2/filter/:id",
      "responses": [
        {
          "uuid": "12012544-016b-42aa-a9fa-4b6028fb1b33",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27819bf1-b7aa-4d4c-9772-b6fc18e856f3",
      "documentation": "Resets the columns for the given filter such that the filter no longer has its own column config.",
      "method": "delete",
      "endpoint": "api/2/filter/:id/columns",
      "responses": [
        {
          "uuid": "3ecad2fb-8a95-4291-96f3-b9b9de410688",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b47aeeb5-2a70-4a36-afc1-9eac26abed89",
      "documentation": "Returns the default columns for the given filter. Currently logged in user will be used as\n the user making such request.",
      "method": "get",
      "endpoint": "api/2/filter/:id/columns",
      "responses": [
        {
          "uuid": "b3e7d262-3429-4e4d-8e37-910f5cabcbd8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97e24d96-bc22-49c4-b2b4-1952a10d1613",
      "documentation": "Sets the default columns for the given filter.",
      "method": "put",
      "endpoint": "api/2/filter/:id/columns",
      "responses": [
        {
          "uuid": "401c5e6e-17df-4e54-9f8a-c3de3cc5f444",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "678be1c7-cca4-426a-ba10-b8cfd3fce874",
      "documentation": "Returns all share permissions of the given filter.",
      "method": "get",
      "endpoint": "api/2/filter/:id/permission",
      "responses": [
        {
          "uuid": "c7ec1531-0d64-479b-9771-a8c778d06d0f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b32c77a2-a5b4-422c-b6e8-3c562901a8e6",
      "documentation": "Adds a share permissions to the given filter. Adding a global permission removes all previous permissions from the filter.",
      "method": "post",
      "endpoint": "api/2/filter/:id/permission",
      "responses": [
        {
          "uuid": "38815771-be92-4d2a-a9b6-06e145cab61d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fdebfe3-64ec-47bb-b07d-81aa1bd84194",
      "documentation": "Removes a share permissions from the given filter.",
      "method": "delete",
      "endpoint": "api/2/filter/:id/permission/{permission-id}",
      "responses": [
        {
          "uuid": "f9914478-ab67-4296-8a86-9b5a65c35459",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41f8302c-bdf4-4d8e-b03f-7f3eaa9161d6",
      "documentation": "Returns a single share permission of the given filter.",
      "method": "get",
      "endpoint": "api/2/filter/:id/permission/:permissionId",
      "responses": [
        {
          "uuid": "61f58354-eebc-439d-885b-a3a7039346ea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0af69391-e1b2-4741-8a6f-efb8b5112d55",
      "documentation": "Deletes a group by given group parameter.\n <p>\n Returns no content",
      "method": "delete",
      "endpoint": "api/2/group",
      "responses": [
        {
          "uuid": "83d37b42-774f-4691-a658-f48932209368",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dfc5c38-741a-422b-ba44-166e3a0773e1",
      "documentation": "Returns REST representation for the requested group. Allows to get list of active users belonging to the\n specified group and its subgroups if \"users\" expand option is provided. You can page through users list by using\n indexes in expand param. For example to get users from index 10 to index 15 use \"users[10:15]\" expand value. This\n will return 6 users (if there are at least 16 users in this group). Indexes are 0-based and inclusive.\n <p>\n This resource is deprecated, please use group/member API instead.",
      "method": "get",
      "endpoint": "api/2/group",
      "responses": [
        {
          "uuid": "e8d2aaa4-d937-485b-af85-463b017e497e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c41f0b8-a432-4594-bdc5-9905cb96a9c7",
      "documentation": "Creates a group by given group parameter\n <p>\n Returns REST representation for the requested group.",
      "method": "post",
      "endpoint": "api/2/group",
      "responses": [
        {
          "uuid": "53cbe025-95ce-4d34-a84e-f3d2a026e800",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de5cd162-58e2-42f5-9009-a057d85fcdb2",
      "documentation": "This resource returns a <a href=\"#pagination\">paginated</a> list of users who are members of the specified group and its subgroups.\n Users in the page are ordered by user names. User of this resource is required to have sysadmin or admin permissions.",
      "method": "get",
      "endpoint": "api/2/group/member",
      "responses": [
        {
          "uuid": "eb6506a5-deab-44ee-9e65-3aa58d178ff9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "110e8b04-9903-4131-a800-a6687fca770d",
      "documentation": "Removes given user from a group.\n <p>\n Returns no content",
      "method": "delete",
      "endpoint": "api/2/group/user",
      "responses": [
        {
          "uuid": "734dd8ad-494e-484b-adc3-6fff83c17b0f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdf5cea6-8e2a-43a7-847b-44781ae58036",
      "documentation": "Adds given user to a group.\n <p>\n Returns the current state of the group.",
      "method": "post",
      "endpoint": "api/2/group/user",
      "responses": [
        {
          "uuid": "e45b3c45-5053-4b0d-bca1-d8ffe4eae7b7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5da9c58c-cfe7-4f70-a575-ee21f5d828c2",
      "documentation": "Returns groups with substrings matching a given query. This is mainly for use with\n the group picker, so the returned groups contain html to be used as picker suggestions.\n The groups are also wrapped in a single response object that also contains a header for\n use in the picker, specifically <i>Showing X of Y matching groups</i>.\n <p>\n The number of groups returned is limited by the system property \"jira.ajax.autocomplete.limit\"\n <p>\n The groups will be unique and sorted.",
      "method": "get",
      "endpoint": "api/2/groups/picker",
      "responses": [
        {
          "uuid": "3f15150b-0c80-4b86-814a-84e60c234d5e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c78bb22d-3d98-4148-bad4-d02aaee25f68",
      "documentation": "Returns a list of users and groups matching query with highlighting. This resource cannot be accessed\n anonymously.",
      "method": "get",
      "endpoint": "api/2/groupuserpicker",
      "responses": [
        {
          "uuid": "76be0397-d673-4143-a737-91b553c23bbe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a76f38ff-2a9c-49c0-88e7-1c237a082b7d",
      "documentation": "Summarizes index condition of current node.\n <p/>\n Returned data consists of:\n <ul>\n <li><code>nodeId</code> - Node identifier.</li>\n <li><code>reportTime</code> - Time of this report creation.</li>\n <li><code>issueIndex</code> - Summary of issue index status.</li>\n <li><code>replicationQueues</code> - Map of index replication queues, where\n keys represent nodes from which replication operations came from.</li>\n </ul>\n <p/>\n <code>issueIndex</code> can contain:\n <ul>\n <li><code>indexReadable</code> - If <code>false</code> the end point failed to read data from issue index\n (check JIRA logs for detailed stack trace), otherwise <code>true</code>.\n When <code>false</code> other fields of <code>issueIndex</code> can be not visible.</li>\n <li><code>countInDatabase</code> - Count of issues found in database.</li>\n <li><code>countInIndex</code> - Count of issues found while querying index.</li>\n <li><code>lastUpdatedInDatabase</code> - Time of last update of issue found in database.</li>\n <li><code>lastUpdatedInIndex</code> - Time of last update of issue found while querying index.</li>\n </ul>\n <p/>\n <code>replicationQueues</code>'s map values can contain:\n <ul>\n <li><code>lastConsumedOperation</code> - Last executed index replication operation by current node from sending node's queue.</li>\n <li><code>lastConsumedOperation.id</code> - Identifier of the operation.</li>\n <li><code>lastConsumedOperation.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>lastOperationInQueue</code> - Last index replication operation in sending node's queue.</li>\n <li><code>lastOperationInQueue.id</code> - Identifier of the operation.</li>\n <li><code>lastOperationInQueue.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>queueSize</code> - Number of operations in queue from sending node to current node.</li>\n </ul>",
      "method": "get",
      "endpoint": "api/2/index/summary",
      "responses": [
        {
          "uuid": "1fe84d55-10dd-47b0-bbb7-cef8b2612c47",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebcdb4e0-8ffc-406e-9e62-b522734c6392",
      "documentation": "Creates an issue or a sub-task from a JSON representation.\n <p/>\n The fields that can be set on create, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/createmeta</b> resource.\n If a field is not configured to appear on the create screen, then it will not be in the createmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Creating a sub-task is similar to creating a regular issue, with two important differences:\n <ul>\n <li>the <code>issueType</code> field must correspond to a sub-task issue type (you can use\n <code>/issue/createmeta</code> to discover sub-task issue types), and</li>\n <li>you must provide a <code>parent</code> field in the issue create request containing the id or key of the\n parent issue.</li>\n </ul>",
      "method": "post",
      "endpoint": "api/2/issue",
      "responses": [
        {
          "uuid": "bfa02a80-fda5-47dc-b378-f938c6aa33df",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffd85fbe-de68-41de-916a-ceb2dc05b828",
      "documentation": "Creates issues or sub-tasks from a JSON representation.\n <p/>\n Creates many issues in one bulk operation.\n <p/>\n Creating a sub-task is similar to creating a regular issue. More details can be found in createIssue section:\n {@link IssueResource#createIssue(IssueUpdateBean)}}",
      "method": "post",
      "endpoint": "api/2/issue/bulk",
      "responses": [
        {
          "uuid": "15b71bda-23ce-454c-bfee-686c9598f117",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b0a7e04-37aa-4b49-a387-72ef411bc685",
      "documentation": "Returns the meta data for creating issues. This includes the available projects, issue types and fields,\n including field types and whether or not those fields are required.\n Projects will not be returned if the user does not have permission to create issues in that project.\n <p/>\n The fields in the createmeta correspond to the fields in the create screen for the project/issuetype.\n Fields not in the screen will not be in the createmeta.\n <p/>\n Fields will only be returned if <code>expand=projects.issuetypes.fields</code>.\n <p/>\n The results can be filtered by project and/or issue type, given by the query params.",
      "method": "get",
      "endpoint": "api/2/issue/createmeta",
      "responses": [
        {
          "uuid": "5820f46c-2446-476f-8604-fd815a4aefda",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee755f86-742e-4302-8e08-6d8f9467905f",
      "documentation": "Returns suggested issues which match the auto-completion query for the user which executes this request. This REST\n method will check the user's history and the user's browsing context and select this issues, which match the query.",
      "method": "get",
      "endpoint": "api/2/issue/picker",
      "responses": [
        {
          "uuid": "c2d24f25-1949-4cef-8e1d-48c343192aea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bb5b7a7-ad5d-457f-9955-e07d6fb676a1",
      "documentation": "Delete an issue.\n <p/>\n If the issue has subtasks you must set the parameter deleteSubtasks=true to delete the issue.\n You cannot delete an issue without its subtasks also being deleted.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey",
      "responses": [
        {
          "uuid": "0ac03f25-9990-4f83-8151-432425305852",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa8dd374-bc85-42eb-be74-9865bf3e0b85",
      "documentation": "Returns a full representation of the issue for the given issue key.\n <p>\n An issue JSON consists of the issue key, a collection of fields,\n a link to the workflow transition sub-resource, and (optionally) the HTML rendered values of any fields that support it\n (e.g. if wiki syntax is enabled for the description or comments).\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, all (<code>*all</code>) fields are returned in this get-issue resource. Note: the default is different\n when doing a jql search -- the default there is just navigable fields (<code>*navigable</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-comment</code> - include everything except comments (the default is <code>*all</code> for get-issue)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n The {@code properties} param is similar to {@code fields} and specifies a comma-separated list of issue\n properties to include. Unlike {@code fields}, properties are not included by default. To include them all\n send {@code ?properties=*all}. You can also include only specified properties or exclude some properties\n with a minus (-) sign.\n <p>\n <ul>\n <li>{@code *all} - include all properties</li>\n <li>{@code *all, -prop1} - include all properties except {@code prop1} </li>\n <li>{@code prop1, prop1} - include {@code prop1} and {@code prop2} properties </li>\n </ul>\n </p>\n <p/>\n JIRA will attempt to identify the issue by the <code>issueIdOrKey</code> path parameter. This can be an issue id,\n or an issue key. If the issue cannot be found via an exact match, JIRA will also look for the issue in a case-insensitive way, or\n by looking to see if the issue was moved. In either of these cases, the request will proceed as normal (a 302 or other redirect\n will <b>not</b> be returned). The issue key contained in the response will indicate the current value of issue's key.\n <p/>\n The <code>expand</code> param is used to include, hidden by default, parts of response. This can be used to include:\n <ul>\n <li><code>renderedFields</code> - field values in HTML format</li>\n <li><code>names</code> - display name of each field</li>\n <li><code>schema</code> - schema for each field which describes a type of the field</li>\n <li><code>transitions</code> - all possible transitions for the given issue</li>\n <li><code>operations</code> - all possibles operations which may be applied on issue</li>\n <li><code>editmeta</code> - information about how each field may be edited. It contains field's schema as well.</li>\n <li><code>changelog</code> - history of all changes of the given issue</li>\n <li><code>versionedRepresentations</code> -\n REST representations of all fields. Some field may contain more recent versions. RESET representations are numbered.\n The greatest number always represents the most recent version. It is recommended that the most recent version is used.\n version for these fields which provide a more recent REST representation.\n After including <code>versionedRepresentations</code> \"fields\" field become hidden.</li>\n </ul>",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey",
      "responses": [
        {
          "uuid": "60ea3647-2b42-46d4-967d-c5f26aabc7b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e9a33a4-9628-4a15-b428-58ab34789ce3",
      "documentation": "Edits an issue from a JSON representation.\n <p/>\n The issue can either be updated by setting explicit the field value(s)\n or by using an operation to change the field value.\n <p/>\n The fields that can be updated, in either the fields parameter or the update parameter, can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/editmeta</b> resource.<br>\n If a field is not configured to appear on the edit screen, then it will not be in the editmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Specifying a \"field_id\": field_value in the \"fields\" is a shorthand for a \"set\" operation in the \"update\" section.<br>\n Field should appear either in \"fields\" or \"update\", not in both.",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey",
      "responses": [
        {
          "uuid": "627de1b5-28c5-4218-a8a3-e1b06c325693",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea1f38cf-b098-4669-863a-d46493fe4df2",
      "documentation": "Assigns an issue to a user.\n You can use this resource to assign issues when the user submitting the request has the assign permission but not the\n edit issue permission.\n If the name is \"-1\" automatic assignee is used.  A null name will remove the assignee.",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey/assignee",
      "responses": [
        {
          "uuid": "3681a6ba-fc71-42ab-997d-0c08e4c568cd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd4fae9d-d35f-44c7-9673-d0f94a785d50",
      "documentation": "Add one or more attachments to an issue.\n <p>\n This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client\n libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components\n library provides a\n <a href=\"http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html\">MultiPartEntity</a>\n that makes it simple to submit a multipart POST.\n <p>\n In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection\n on it.  This means you must submit a header of X-Atlassian-Token: no-check with the request, otherwise it will be\n blocked.\n <p>\n The name of the multipart/form-data parameter that contains attachments must be \"file\"\n <p>\n A simple example to upload a file called \"myfile.txt\" to issue REST-123:\n <pre>curl -D- -u admin:admin -X POST -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\" http://myhost/rest/api/2/issue/TEST-123/attachments</pre>",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/attachments",
      "responses": [
        {
          "uuid": "c4bab41e-0765-45f8-8d62-71bb7f763572",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f83f02c-fe84-4fa2-b337-3c699c6da59e",
      "documentation": "Returns all comments for an issue.\n <p>\n Results can be ordered by the \"created\" field which means the date a comment was added.\n </p>",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/comment",
      "responses": [
        {
          "uuid": "0b3405af-53be-4a97-998b-9392393f5b61",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e10b633e-19b3-4c86-963a-31da6e58eaeb",
      "documentation": "Adds a new comment to an issue.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/comment",
      "responses": [
        {
          "uuid": "fc4a7709-4cea-49ea-aa94-7d434e0cd66b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "639188f1-5467-4ea0-9aa8-fce7730c5678",
      "documentation": "Deletes an existing comment .",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/comment/:id",
      "responses": [
        {
          "uuid": "aed71782-8649-4728-8bd6-1e3236eaf516",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "480ecd84-07b1-42d8-8c78-50bacc7a52fe",
      "documentation": "Returns a single comment.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/comment/:id",
      "responses": [
        {
          "uuid": "022bc8c9-8b83-43a0-825e-347ec309b918",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c976817-ffeb-4c99-ba37-ecb277276b0f",
      "documentation": "Updates an existing comment using its JSON representation.",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey/comment/:id",
      "responses": [
        {
          "uuid": "379e1147-685b-4477-94d6-5a191d981003",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "994792ba-d0fa-409c-a5c2-402a63839f24",
      "documentation": "Returns the meta data for editing an issue.\n <p/>\n The fields in the editmeta correspond to the fields in the edit screen for the issue.\n Fields not in the screen will not be in the editmeta.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/editmeta",
      "responses": [
        {
          "uuid": "ee77ce90-7c82-40fe-8740-608ba63fd4c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12a0caac-0da7-48de-8e29-a7777bf950f6",
      "documentation": "Sends a notification (email) to the list or recipients defined in the request.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/notify",
      "responses": [
        {
          "uuid": "cc01c220-d66c-4f4a-97c4-bd33132eed0f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d0bb5f3-8692-4124-979c-21a79f5d80b6",
      "documentation": "Returns the keys of all properties for the issue identified by the key or by the id.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/properties",
      "responses": [
        {
          "uuid": "f483b44f-f4ec-4490-a209-038b031bdac0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cba7c4e-9328-4e72-be10-93c207789c0f",
      "documentation": "Removes the property from the issue identified by the key or by the id. Ths user removing the property is required\n to have permissions to edit the issue.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "6c2e2c8d-7da6-4382-97b4-2dfc88230494",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cd53e05-fc03-4dac-8392-9fad2ba7ac80",
      "documentation": "Returns the value of the property with a given key from the issue identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the issue.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "f931b342-0988-4e73-b40a-5c3e6589d5c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96da8a20-e11a-4194-a91f-52d5a37d37ba",
      "documentation": "Sets the value of the specified issue's property.\n <p>\n You can use this resource to store a custom data against the issue identified by the key or by the id. The user\n who stores the data is required to have permissions to edit the issue.\n </p>",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "8c1d8602-3716-49ac-946d-b4644273d9ee",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e70aa025-a57f-4be6-aed5-e35b4dca744c",
      "documentation": "Delete the remote issue link with the given global id on the issue.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink",
      "responses": [
        {
          "uuid": "22106ba0-c86a-4923-97ca-88ee646f1973",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "deb00923-855b-4753-8144-b431a5c9122a",
      "documentation": "A REST sub-resource representing the remote issue links on the issue.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink",
      "responses": [
        {
          "uuid": "6132495f-4822-4705-b0b7-e5d095fd267d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9265fe8f-1cc6-4e07-8cf0-d5e5c060c639",
      "documentation": "Creates or updates a remote issue link from a JSON representation. If a globalId is provided and a remote issue link\n exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink",
      "responses": [
        {
          "uuid": "5b349264-c8cf-4c98-a47b-c1ff6a8075c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e40dd47d-bbef-4844-8439-af43865f5176",
      "documentation": "Delete the remote issue link with the given id on the issue.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink/:linkId",
      "responses": [
        {
          "uuid": "06e5db35-029b-4268-8a79-84784a3e99bc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6cc60ee8-13fe-4d8a-98df-127fda4c82e8",
      "documentation": "Get the remote issue link with the given id on the issue.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink/:linkId",
      "responses": [
        {
          "uuid": "d36163ec-a5c0-40b2-8c6c-1a6b6d9d8b9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ef30f59-66d7-4e82-9330-46306a0e1098",
      "documentation": "Updates a remote issue link from a JSON representation. Any fields not provided are set to null.",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey/remotelink/:linkId",
      "responses": [
        {
          "uuid": "2312b2e2-5808-44e3-b7d9-8d377cd29419",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5617373-c9ec-4be8-852d-70e2f08f240a",
      "documentation": "Returns an issue's subtask list",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/subtask",
      "responses": [
        {
          "uuid": "312e291f-713c-4c0e-9f41-93f241249a9b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af341764-1d9e-4a52-b0f4-99d82c1067a4",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/subtask/move",
      "responses": [
        {
          "uuid": "d1bf37b9-8167-4432-8a5a-784292435b2d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bcc9f25-179f-4ba0-a5d6-6002f9e8c406",
      "documentation": "Reorders an issue's subtasks by moving the subtask at index \"from\"\n to index \"to\".",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/subtask/move",
      "responses": [
        {
          "uuid": "85a2c524-bf30-4db6-80a3-633108c187eb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba708668-9a2e-4d82-acb5-4128d16292e3",
      "documentation": "Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.\n <p/>\n Fields will only be returned if <code>expand=transitions.fields</code>.\n <p/>\n The fields in the metadata correspond to the fields in the transition screen for that transition.\n Fields not in the screen will not be in the metadata.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/transitions",
      "responses": [
        {
          "uuid": "ad994218-1582-4088-ba4c-418594e5d1f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a13006f9-1691-41dd-8c8f-c36ceb50ae72",
      "documentation": "Perform a transition on an issue.\n When performing the transition you can update or set other issue fields.\n <p/>\n The fields that can be set on transtion, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/transitions?expand=transitions.fields</b> resource.\n If a field is not configured to appear on the transition screen, then it will not be in the transition metadata, and a field\n validation error will occur if it is submitted.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/transitions",
      "responses": [
        {
          "uuid": "3cca102f-299d-4023-83d8-32871e46dfa8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee52d11f-2426-4f6c-8629-d41b6dbd6558",
      "documentation": "Remove your vote from an issue. (i.e. \"unvote\")",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/votes",
      "responses": [
        {
          "uuid": "a5d43bd8-c19c-4be5-8810-70eb31bea6bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4b24d9f-3a03-4375-829b-35b2833813a6",
      "documentation": "A REST sub-resource representing the voters on the issue.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/votes",
      "responses": [
        {
          "uuid": "eb447d0d-5924-4ae0-9c02-b70cd708d16c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b727ac83-1487-4a0a-b5c0-ad44788627b3",
      "documentation": "Cast your vote in favour of an issue.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/votes",
      "responses": [
        {
          "uuid": "45df3fea-fb81-4529-ae6e-bedf8838253b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "127d35e3-a929-4e3b-a700-6249402b157e",
      "documentation": "Removes a user from an issue's watcher list.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/watchers",
      "responses": [
        {
          "uuid": "5ddaefa1-15bb-45b1-aea7-0e9b680b3e45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf713c08-c908-44ca-b38c-8a50a42d64cd",
      "documentation": "Returns the list of watchers for the issue with the given key.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/watchers",
      "responses": [
        {
          "uuid": "5a78c7ea-e153-4062-af07-a533a2f73d7e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fb8c33a-6b70-4181-85de-0622ee42ba80",
      "documentation": "Adds a user to an issue's watcher list.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/watchers",
      "responses": [
        {
          "uuid": "a4a1b56c-310a-48b3-888f-443898400db6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a75c3858-0283-41bb-8cf6-f7528a046d20",
      "documentation": "Returns all work logs for an issue. <br/>\n <strong>Note:</strong> Work logs won't be returned if the Log work field is hidden for the project.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/worklog",
      "responses": [
        {
          "uuid": "4f6280b2-9b0e-405f-8465-f2615c00eb8e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3cbf1ea-1820-4456-8e31-92450d83cb06",
      "documentation": "Adds a new worklog entry to an issue.",
      "method": "post",
      "endpoint": "api/2/issue/:issueIdOrKey/worklog",
      "responses": [
        {
          "uuid": "5c7b95a8-f0f5-4310-94a7-16a62812dda9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3a52cffa-4cbf-4533-a917-417c96713fa1",
      "documentation": "Deletes an existing worklog entry.",
      "method": "delete",
      "endpoint": "api/2/issue/:issueIdOrKey/worklog/:id",
      "responses": [
        {
          "uuid": "e8029be3-9ce8-42ee-a42e-f193a744437a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad0934c3-5038-44f1-a8a1-a889867c3d45",
      "documentation": "Returns a specific worklog. <br/>\n <strong>Note:</strong> The work log won't be returned if the Log work field is hidden for the project.",
      "method": "get",
      "endpoint": "api/2/issue/:issueIdOrKey/worklog/:id",
      "responses": [
        {
          "uuid": "24b39d49-274b-4c61-904b-2fef0f26c499",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f26ec2c-e91c-43ba-ab35-18c014424ffe",
      "documentation": "Updates an existing worklog entry.\n <p>Note that:</p>\n  <ul>\n      <li>Fields possible for editing are: comment, visibility, started, timeSpent and timeSpentSeconds.</li>\n      <li>Either timeSpent or timeSpentSeconds can be set.</li>\n      <li>Fields which are not set will not be updated.</li>\n      <li>For a request to be valid, it has to have at least one field change.</li>\n  </ul>",
      "method": "put",
      "endpoint": "api/2/issue/:issueIdOrKey/worklog/:id",
      "responses": [
        {
          "uuid": "15105b74-bba6-406d-8dfe-181695ea3b00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3adaeabe-cb52-47c3-99f1-864a8d93ddb4",
      "documentation": "Creates an issue link between two issues.\n The user requires the link issue permission for the issue which will be linked to another issue.\n The specified link type in the request is used to create the link and will create a link from the first issue\n to the second issue using the outward description. It also create a link from the second issue to the first issue using the\n inward description of the issue link type.\n It will add the supplied comment to the first issue. The comment can have a restriction who can view it.\n If group is specified, only users of this group can view this comment, if roleLevel is specified only users who have the specified role can view this comment.\n The user who creates the issue link needs to belong to the specified group or have the specified role.",
      "method": "post",
      "endpoint": "api/2/issueLink",
      "responses": [
        {
          "uuid": "a3216471-e1ac-4541-b7af-c5c472baea55",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "162c057a-bff9-4f35-a02e-bdf1d9b4a92a",
      "documentation": "Deletes an issue link with the specified id.\n To be able to delete an issue link you must be able to view both issues and must have the link issue permission\n for at least one of the issues.",
      "method": "delete",
      "endpoint": "api/2/issueLink/:linkId",
      "responses": [
        {
          "uuid": "aa7870f7-6b0c-405a-9bc1-2f706f7b5444",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ab4ab58-6cbe-44aa-ab9e-f0a39462d017",
      "documentation": "Returns an issue link with the specified id.",
      "method": "get",
      "endpoint": "api/2/issueLink/:linkId",
      "responses": [
        {
          "uuid": "33431273-7993-438f-bfc3-6d1371a92da9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10782946-9cb6-48b3-8af6-0512e31cd6e1",
      "documentation": "Returns a list of available issue link types, if issue linking is enabled.\n Each issue link type has an id, a name and a label for the outward and inward link relationship.",
      "method": "get",
      "endpoint": "api/2/issueLinkType",
      "responses": [
        {
          "uuid": "7358ac2d-5291-4d1d-a830-815b59dc0ffb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51df7441-7d36-48f2-8c3f-f3c4ee261452",
      "documentation": "Create a new issue link type.",
      "method": "post",
      "endpoint": "api/2/issueLinkType",
      "responses": [
        {
          "uuid": "839657a4-10d2-4a7a-9a7b-ed8313702065",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b08ae9c-239c-4fed-9cf1-f2f4326e4560",
      "documentation": "Delete the specified issue link type.",
      "method": "delete",
      "endpoint": "api/2/issueLinkType/:issueLinkTypeId",
      "responses": [
        {
          "uuid": "8fe65132-65f8-44c4-8063-6836f32e5c07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40f0757f-7d08-462b-b3de-62edf2cb1bca",
      "documentation": "Returns for a given issue link type id all information about this issue link type.",
      "method": "get",
      "endpoint": "api/2/issueLinkType/:issueLinkTypeId",
      "responses": [
        {
          "uuid": "b3e78e05-5a31-46a1-9877-dedacdd5a5c3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21ecd23a-bbb2-4eee-b08c-bf46698747e3",
      "documentation": "Update the specified issue link type.",
      "method": "put",
      "endpoint": "api/2/issueLinkType/:issueLinkTypeId",
      "responses": [
        {
          "uuid": "1faace68-e0a4-4cd2-8230-08480f72e0a1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3ad4868-3f9a-4051-b890-ce99799ed245",
      "documentation": "Returns all issue security schemes that are defined.",
      "method": "get",
      "endpoint": "api/2/issuesecurityschemes",
      "responses": [
        {
          "uuid": "93edee49-3ec2-4aa2-9cce-9255cd3455ef",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ef8cfaf-d392-4803-9a93-14440b0b5ad5",
      "documentation": "Returns the issue security scheme along with that are defined.",
      "method": "get",
      "endpoint": "api/2/issuesecurityschemes/:id",
      "responses": [
        {
          "uuid": "37f7b21c-8df9-4b98-ab9b-44eef10652e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b230654-4d00-4361-a2dc-1c9836863b89",
      "documentation": "Returns a list of all issue types visible to the user",
      "method": "get",
      "endpoint": "api/2/issuetype",
      "responses": [
        {
          "uuid": "57b2eeba-e42d-49e7-a4ac-b00565f8b9c0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ba92312-ba33-4361-82b6-2b0cfcf20f60",
      "documentation": "Creates an issue type from a JSON representation and adds the issue newly created issue type to the default issue\n type scheme.",
      "method": "post",
      "endpoint": "api/2/issuetype",
      "responses": [
        {
          "uuid": "e5230a02-c4da-43c2-a4f0-035603801972",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eab8a7e4-713e-4fc1-8934-7ca83392738b",
      "documentation": "Deletes the specified issue type. If the issue type has any associated issues, these issues will be migrated to\n the alternative issue type specified in the parameter. You can determine the alternative issue types by calling\n the <b>/rest/api/2/issuetype/{id}/alternatives</b> resource.",
      "method": "delete",
      "endpoint": "api/2/issuetype/:id",
      "responses": [
        {
          "uuid": "e9d649b9-dd58-4709-8e8d-3728d8a740e7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a584db8-79b8-47b8-a7c9-6bcd07e9674e",
      "documentation": "Returns a full representation of the issue type that has the given id.",
      "method": "get",
      "endpoint": "api/2/issuetype/:id",
      "responses": [
        {
          "uuid": "ae5f4a5b-53a4-4f43-a5bf-48657b26085a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf8204ad-3dbb-4691-8f2e-825b1e8b767b",
      "documentation": "Updates the specified issue type from a JSON representation.",
      "method": "put",
      "endpoint": "api/2/issuetype/:id",
      "responses": [
        {
          "uuid": "5ca8b632-af8e-4d1b-994c-ed7b7d8f44ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "945c961c-9d08-4ce3-9536-8fb7a7678e74",
      "documentation": "Returns a list of all alternative issue types for the given issue type id. The list will contain these issues types, to which\n issues assigned to the given issue type can be migrated. The suitable alternatives are issue types which are assigned\n to the same workflow, the same field configuration and the same screen scheme.",
      "method": "get",
      "endpoint": "api/2/issuetype/:id/alternatives",
      "responses": [
        {
          "uuid": "b897684d-4536-472b-bddc-9e48bdc38dbc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab128ef1-a88f-4488-b027-c552ce8e5cfe",
      "documentation": "Converts temporary avatar into a real avatar",
      "method": "post",
      "endpoint": "api/2/issuetype/:id/avatar",
      "responses": [
        {
          "uuid": "7a0294cd-68b3-4b8f-b7dc-6d2d7b6c9d86",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb7f3ab5-ecfc-461e-9de1-2c4fb8df5c58",
      "documentation": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for an issue type: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/issuetype/1/avatar/temporary'\n </pre>",
      "method": "post",
      "endpoint": "api/2/issuetype/:id/avatar/temporary",
      "responses": [
        {
          "uuid": "978b764e-f5dd-4a1f-a07d-4e8ce7f9690c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d378957-911c-43d7-ab8f-c565d893be25",
      "documentation": "Returns the keys of all properties for the issue type identified by the id.",
      "method": "get",
      "endpoint": "api/2/issuetype/:issueTypeId/properties",
      "responses": [
        {
          "uuid": "6a739589-76d3-4609-82db-65a75cacacf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3ff5e20-b553-44ce-9d70-98987d2f2265",
      "documentation": "Removes the property from the issue type identified by the id. Ths user removing the property is required\n to have permissions to edit the issue type.",
      "method": "delete",
      "endpoint": "api/2/issuetype/:issueTypeId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "a12690d1-116b-42cc-8c63-829c67ded62d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b49f2753-a87a-4501-ab25-0b23a8bb4ecf",
      "documentation": "Returns the value of the property with a given key from the issue type identified by the id. The user who retrieves\n the property is required to have permissions to view the issue type.",
      "method": "get",
      "endpoint": "api/2/issuetype/:issueTypeId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "9c1ba552-1f36-40f0-a431-2d9b01ee6252",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92e4fc9f-6297-4fb5-a7ba-e2605c7f859b",
      "documentation": "Sets the value of the specified issue type's property.\n <p>\n You can use this resource to store a custom data against an issue type identified by the id. The user\n who stores the data is required to have permissions to edit an issue type.\n </p>",
      "method": "put",
      "endpoint": "api/2/issuetype/:issueTypeId/properties/:propertyKey",
      "responses": [
        {
          "uuid": "e32fa11b-ff05-43b4-95b7-b5c80b460f51",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7efe6dbc-9914-4623-8421-88ad663b6d3b",
      "documentation": "Returns the auto complete data required for JQL searches.",
      "method": "get",
      "endpoint": "api/2/jql/autocompletedata",
      "responses": [
        {
          "uuid": "55adba7e-ee55-4995-9163-a42e70d70225",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aec56c9-b1f2-4df7-880d-ff13d2c33991",
      "documentation": "Returns auto complete suggestions for JQL search.",
      "method": "get",
      "endpoint": "api/2/jql/autocompletedata/suggestions",
      "responses": [
        {
          "uuid": "c58e713d-c9de-471a-9adb-9b054a94fd40",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "873aea48-6422-49d2-95f7-ada60257947f",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/licenseValidator",
      "responses": [
        {
          "uuid": "4a259aa5-53ad-4623-8089-93d18f179dc6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70c3819d-8c24-4dfa-a06e-377807a069d5",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/monitoring/jmx/areMetricsExposed",
      "responses": [
        {
          "uuid": "3fff1f59-5f3f-40c8-a5ff-bbc945033744",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "037ede3c-476d-4727-ac59-5bd85925aea8",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/monitoring/jmx/getAvailableMetrics",
      "responses": [
        {
          "uuid": "11809c60-f21d-4caf-ad20-541cd91ccf5c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "324acf33-fdff-4e5b-81cc-9cdc3eb1d218",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/monitoring/jmx/startExposing",
      "responses": [
        {
          "uuid": "578a3705-8c3e-4707-8c29-1589a6238e7d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "838b1ac5-876c-4af6-b6da-408d0ec555e2",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/monitoring/jmx/stopExposing",
      "responses": [
        {
          "uuid": "1b1bd409-d935-40b3-a9a2-a2a6cbb8e65a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eacc100a-0fa6-4939-9e61-968a617979d0",
      "documentation": "Returns all permissions in the system and whether the currently logged in user has them. You can optionally provide a specific context to get permissions for\n (projectKey OR projectId OR issueKey OR issueId)\n <ul>\n <li> When no context supplied the project related permissions will return true if the user has that permission in ANY project </li>\n <li> If a project context is provided, project related permissions will return true if the user has the permissions in the specified project.\n For permissions that are determined using issue data (e.g Current Assignee), true will be returned if the user meets the permission criteria in ANY issue in that project </li>\n <li> If an issue context is provided, it will return whether or not the user has each permission in that specific issue</li>\n </ul>\n <p>\n NB: The above means that for issue-level permissions (EDIT_ISSUE for example), hasPermission may be true when no context is provided, or when a project context is provided,\n <b>but</b> may be false for any given (or all) issues. This would occur (for example) if Reporters were given the EDIT_ISSUE permission. This is because\n any user could be a reporter, except in the context of a concrete issue, where the reporter is known.\n </p>\n <p>\n Global permissions will still be returned for all scopes.\n </p>\n <p>\n Prior to version 6.4 this service returned project permissions with keys corresponding to com.atlassian.jira.security.Permissions.Permission constants.\n Since 6.4 those keys are considered deprecated and this service returns system project permission keys corresponding to constants defined in com.atlassian.jira.permission.ProjectPermissions.\n Permissions with legacy keys are still also returned for backwards compatibility, they are marked with an attribute deprecatedKey=true.\n The attribute is missing for project permissions with the current keys.\n </p>",
      "method": "get",
      "endpoint": "api/2/mypermissions",
      "responses": [
        {
          "uuid": "4709c8ed-8669-417a-9eb4-b2721907b2b4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72a4e678-9b26-451a-ae8e-4b0a81d610e3",
      "documentation": "Removes preference of the currently logged in user. Preference key must be provided as input parameters (key). If\n key parameter is not provided or wrong - status code 404. If preference is unset - status code 204.",
      "method": "delete",
      "endpoint": "api/2/mypreferences",
      "responses": [
        {
          "uuid": "f149e0af-903f-45b0-bc52-7d2529035aad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e5a8a67-256d-4ce7-8a84-57919533514f",
      "documentation": "Returns preference of the currently logged in user. Preference key must be provided as input parameter (key). The\n value is returned exactly as it is. If key parameter is not provided or wrong - status code 404. If value is\n found  - status code 200.",
      "method": "get",
      "endpoint": "api/2/mypreferences",
      "responses": [
        {
          "uuid": "d07e956c-ccbd-4647-8c76-9e0910f3ddc0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "845fea2c-dcd2-4cf9-99fe-564441e1abbc",
      "documentation": "Sets preference of the currently logged in user. Preference key must be provided as input parameters (key). Value\n must be provided as post body. If key or value parameter is not provided - status code 404. If preference is set\n - status code 204.",
      "method": "put",
      "endpoint": "api/2/mypreferences",
      "responses": [
        {
          "uuid": "b9f9b0c8-d4fe-4bc0-8ce4-83d10f3b8781",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd5311a7-88d6-4c1c-b4d1-970b2ede7e27",
      "documentation": "Returns currently logged user. This resource cannot be accessed anonymously.",
      "method": "get",
      "endpoint": "api/2/myself",
      "responses": [
        {
          "uuid": "ef33d0d4-8819-4b7c-888b-5634b0b79565",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f854e2e1-aeee-4c26-8008-ba8b1d4ca434",
      "documentation": "Modify currently logged user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed. Only email and display name can be change that way.\n Requires user password.",
      "method": "put",
      "endpoint": "api/2/myself",
      "responses": [
        {
          "uuid": "2d81f8cf-7d90-4ba2-90ef-cf172095b6f9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c3d2dbc-1088-4314-9ea1-fd6f274dba79",
      "documentation": "Modify caller password.",
      "method": "put",
      "endpoint": "api/2/myself/password",
      "responses": [
        {
          "uuid": "38b55c64-5bea-46c4-b113-2af874c96685",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59c06c12-6289-45ea-ba6b-7a1520197aa7",
      "documentation": "Returns a <a href=\"#pagination\">paginated</a> list of notification schemes. In order to access notification scheme, the calling user is\n required to have permissions to administer at least one project associated with the requested notification scheme. Each scheme contains\n a list of events and recipient configured to receive notifications for these events. Consumer should allow events without recipients to appear in response.\n The list is ordered by the scheme's name.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
      "method": "get",
      "endpoint": "api/2/notificationscheme",
      "responses": [
        {
          "uuid": "f6d331b2-d75a-40c4-94f8-ca2a58a4e31c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17b7d382-a0c5-4e2b-a4b0-b67fd6f0ec73",
      "documentation": "Returns a full representation of the notification scheme for the given id. This resource will return a\n notification scheme containing a list of events and recipient configured to receive notifications for these events. Consumer\n should allow events without recipients to appear in response. User accessing\n the data is required to have permissions to administer at least one project associated with the requested notification scheme.\n <p>\n Notification recipients can be:\n <ul>\n <li>current assignee - the value of the notificationType is CurrentAssignee</li>\n <li>issue reporter - the value of the notificationType is Reporter</li>\n <li>current user - the value of the notificationType is CurrentUser</li>\n <li>project lead - the value of the notificationType is ProjectLead</li>\n <li>component lead - the value of the notificationType is ComponentLead</li>\n <li>all watchers - the value of the notification type is AllWatchers</li>\n <li>configured user - the value of the notification type is User. Parameter will contain key of the user. Information about the user will be provided\n if <b>user</b> expand parameter is used. </li>\n <li>configured group - the value of the notification type is Group. Parameter will contain name of the group. Information about the group will be provided\n if <b>group</b> expand parameter is used. </li>\n <li>configured email address - the value of the notification type is EmailAddress, additionally information about the email will be provided.</li>\n <li>users or users in groups in the configured custom fields - the value of the notification type is UserCustomField or GroupCustomField. Parameter\n will contain id of the custom field. Information about the field will be provided if <b>field</b> expand parameter is used. </li>\n <li>configured project role - the value of the notification type is ProjectRole. Parameter will contain project role id. Information about the project role\n will be provided if <b>projectRole</b> expand parameter is used. </li>\n </ul>\n Please see the example for reference.\n </p>\n The events can be JIRA system events or events configured by administrator. In case of the system events, data about theirs\n ids, names and descriptions is provided. In case of custom events, the template event is included as well.",
      "method": "get",
      "endpoint": "api/2/notificationscheme/:id",
      "responses": [
        {
          "uuid": "2888791b-b645-427e-b0c3-4d30bfcf616a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82bc8697-9858-43e3-ae12-a82a9461f70e",
      "documentation": "Returns the list of requirements for the current password policy. For example, \"The password must have at least 10 characters.\",\n \"The password must not be similar to the user's name or email address.\", etc.",
      "method": "get",
      "endpoint": "api/2/password/policy",
      "responses": [
        {
          "uuid": "4796bff9-bcda-409c-9b2f-cb9753a9fcd7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a0c1715-76f1-400c-afba-7e0307a24f1d",
      "documentation": "Returns a list of statements explaining why the password policy would disallow a proposed password for a new user.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action \n where a new user and related password are created, using methods like the ones in \n <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/bc/user/UserService.html\">UserService</a>.      \n For example, you could use this to validate a password in a create user form in the user interface, as the user enters it.<br/>\n The username and new password must be not empty to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when creating a new user, e.g. checking whether a user with the same name already exists.\n </p>",
      "method": "post",
      "endpoint": "api/2/password/policy/createUser",
      "responses": [
        {
          "uuid": "beb73ff2-3683-4cee-be1a-3faac65b190d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22a4ea14-b672-4b98-8d47-af7d6627c746",
      "documentation": "Returns a list of statements explaining why the password policy would disallow a proposed new password for a user with an existing password.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action where the password \n is actually updated, using methods like <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ChangePassword.html\">ChangePassword</a>      \n or <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ResetPassword.html\">ResetPassword</a>. \n For example, you could use this to validate a password in a change password form in the user interface, as the user enters it.<br/>\n The user must exist and the username and new password must be not empty, to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when submitting a password change/reset request, e.g. verifying whether the old password is valid.\n </p>",
      "method": "post",
      "endpoint": "api/2/password/policy/updateUser",
      "responses": [
        {
          "uuid": "9f580c82-0aa1-4f05-b2c5-90f98ea75269",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d3dbbea-aef4-430d-a587-28776c906c9b",
      "documentation": "Returns all permissions that are present in the JIRA instance - Global, Project and the global ones added by plugins",
      "method": "get",
      "endpoint": "api/2/permissions",
      "responses": [
        {
          "uuid": "c4d34dd9-34bd-4544-9b42-1ba94036687c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e1f39f3-e661-4b9c-ad33-21c02b29d498",
      "documentation": "Returns a list of all permission schemes.\n <p>\n By default only shortened beans are returned. If you want to include permissions of all the schemes,\n then specify the <b>permissions</b> expand parameter. Permissions will be included also if you specify\n any other expand parameter.\n </p>",
      "method": "get",
      "endpoint": "api/2/permissionscheme",
      "responses": [
        {
          "uuid": "57067b02-1b34-4f09-963e-43a62472b57a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86aabc19-c9ae-4101-beef-8a777cbfffdf",
      "documentation": "Create a new permission scheme.\n This method can create schemes with a defined permission set, or without.",
      "method": "post",
      "endpoint": "api/2/permissionscheme",
      "responses": [
        {
          "uuid": "3c2e9500-ae90-47e4-ab8c-55904a76b067",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce9ec15c-8813-48c2-95e0-89d3162649ec",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/permissionscheme/:permissionSchemeId/attribute/:attributeKey",
      "responses": [
        {
          "uuid": "497bc192-b433-46b6-88c9-42973c9a5bf0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca8b4d29-bc5d-4330-8662-007097d27b3c",
      "documentation": "Updates or inserts the attribute for a permission scheme specified by permission scheme id.\n The attribute consists of the key and the value. The value will be converted to Boolean using Boolean#valueOf.",
      "method": "put",
      "endpoint": "api/2/permissionscheme/:permissionSchemeId/attribute/:key",
      "responses": [
        {
          "uuid": "ef939fab-647b-4acb-9601-2286f43a70e4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3dea8098-e8cf-4b67-b30c-e05899573c67",
      "documentation": "Deletes a permission scheme identified by the given id.",
      "method": "delete",
      "endpoint": "api/2/permissionscheme/:schemeId",
      "responses": [
        {
          "uuid": "242dd00b-f987-4597-84bc-e8839d9d7823",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63613dbd-d60e-4747-955a-c904fa883b3b",
      "documentation": "Returns a permission scheme identified by the given id.",
      "method": "get",
      "endpoint": "api/2/permissionscheme/:schemeId",
      "responses": [
        {
          "uuid": "6f935bca-7d0f-49ac-b2dd-074a972ea707",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bc14ef9-40bf-47fc-8e8b-513438d01daf",
      "documentation": "Updates a permission scheme.\n <p>\n If the permissions list is present then it will be set in the permission scheme, which basically means it will overwrite any permission grants that\n existed in the permission scheme. Sending an empty list will remove all permission grants from the permission scheme.\n </p>\n <p>\n To update just the name and description, do not send permissions list at all.\n </p>\n <p>\n To add or remove a single permission grant instead of updating the whole list at once use the <b>{schemeId}/permission/</b> resource.\n </p>",
      "method": "put",
      "endpoint": "api/2/permissionscheme/:schemeId",
      "responses": [
        {
          "uuid": "823a0bbf-dece-47ab-b332-e79976b9c201",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0922669-a0b3-4dcd-b900-fb99c9c2760a",
      "documentation": "Returns all permission grants of the given permission scheme.",
      "method": "get",
      "endpoint": "api/2/permissionscheme/:schemeId/permission",
      "responses": [
        {
          "uuid": "bd8ffe6d-bf35-4abf-83df-760162356e2a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7abccbc-8309-4935-8274-1d8b31505615",
      "documentation": "Creates a permission grant in a permission scheme.",
      "method": "post",
      "endpoint": "api/2/permissionscheme/:schemeId/permission",
      "responses": [
        {
          "uuid": "658d2b98-c896-4af9-9b17-4e08bdb61d07",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "381ea422-d944-446e-8426-42ef9c85316d",
      "documentation": "Deletes a permission grant from a permission scheme.",
      "method": "delete",
      "endpoint": "api/2/permissionscheme/:schemeId/permission/:permissionId",
      "responses": [
        {
          "uuid": "4415ca70-55c2-4e44-893a-91e0e9237e55",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4ad65a2-1c47-4b9f-be71-887e5e731336",
      "documentation": "Returns a permission grant identified by the given id.",
      "method": "get",
      "endpoint": "api/2/permissionscheme/:schemeId/permission/:permissionId",
      "responses": [
        {
          "uuid": "12c227ac-ba88-4b1b-a621-f2fc0d1f3052",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1f18758-5843-4903-9abc-79bac404754c",
      "documentation": "Returns a list of all issue priorities.",
      "method": "get",
      "endpoint": "api/2/priority",
      "responses": [
        {
          "uuid": "3b8f1f38-1d20-4c69-9ccf-ae96d04a113e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2cd23bd-b8d5-4e4d-a87b-6f90d0e53daa",
      "documentation": "Returns an issue priority.",
      "method": "get",
      "endpoint": "api/2/priority/:id",
      "responses": [
        {
          "uuid": "7026433d-29b3-45c1-934b-2af807587672",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8d772a3-48b2-4128-9ca4-c77606a559b6",
      "documentation": "Returns all projects which are visible for the currently logged in user. If no user is logged in, it returns the\n list of projects that are visible when using anonymous access.",
      "method": "get",
      "endpoint": "api/2/project",
      "responses": [
        {
          "uuid": "baaeeb6c-c65c-4fae-a4ad-c2decbbd09aa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "209e8666-cf03-4bfa-98de-e2efb3457a11",
      "documentation": "Creates a new project.",
      "method": "post",
      "endpoint": "api/2/project",
      "responses": [
        {
          "uuid": "4fbc3267-5bcd-4995-89e2-1ee9a171acc0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bffe581b-dcb3-42b4-9d20-c1d1a0cba161",
      "documentation": "Returns all the project types defined on the JIRA instance, not taking into account whether\n the license to use those project types is valid or not.",
      "method": "get",
      "endpoint": "api/2/project/type",
      "responses": [
        {
          "uuid": "d149ea59-6769-4630-9c9a-b0d0f6ed768b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4049dd86-d1d3-481d-b05d-c9f092650804",
      "documentation": "Returns the project type with the given key.",
      "method": "get",
      "endpoint": "api/2/project/type/:projectTypeKey",
      "responses": [
        {
          "uuid": "3a1a85d4-0b85-4447-92d8-bb2fb1132aad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71a636c3-3ce2-495f-9931-595b77d33e96",
      "documentation": "Returns the project type with the given key, if it is accessible to the logged in user.\n This takes into account whether the user is licensed on the Application that defines the project type.",
      "method": "get",
      "endpoint": "api/2/project/type/:projectTypeKey/accessible",
      "responses": [
        {
          "uuid": "42ee70af-7b22-460a-a96d-9df9367e77eb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3670fa12-dfc0-48dd-848f-18212cb131b2",
      "documentation": "Deletes a project.",
      "method": "delete",
      "endpoint": "api/2/project/:projectIdOrKey",
      "responses": [
        {
          "uuid": "ba7dc7a0-03d6-4b80-935d-11a4580964f9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c6fde30-0db6-486e-9d73-72bebe5e2459",
      "documentation": "Contains a full representation of a project in JSON format.\n <p>\n All project keys associated with the project will only be returned if <code>expand=projectKeys</code>.\n <p>",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey",
      "responses": [
        {
          "uuid": "947d7b45-4435-4797-a9c0-e984d5807fc6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd5e130f-b84a-41f1-9497-ec5b3e714676",
      "documentation": "Updates a project.\n <p>\n Only non null values sent in JSON will be updated in the project.</p>\n <p>\n Values available for the assigneeType field are: \"PROJECT_LEAD\" and \"UNASSIGNED\".</p>",
      "method": "put",
      "endpoint": "api/2/project/:projectIdOrKey",
      "responses": [
        {
          "uuid": "50a7cdf0-8e6f-45ff-852d-c822261feaa2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe22e0ea-ce71-417f-8c1d-b244cdd6b065",
      "documentation": "Converts temporary avatar into a real avatar",
      "method": "post",
      "endpoint": "api/2/project/:projectIdOrKey/avatar",
      "responses": [
        {
          "uuid": "8d0ddf75-f3cd-4e5a-aa13-e696700ce069",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bce5f8ae-f925-400c-a40c-e8d45aa063ef",
      "documentation": "",
      "method": "put",
      "endpoint": "api/2/project/:projectIdOrKey/avatar",
      "responses": [
        {
          "uuid": "2ca7f7f4-50c2-4abb-a83a-06300b903268",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f89fce35-7a3e-4bda-b7a1-3c512e132d35",
      "documentation": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON.",
      "method": "post",
      "endpoint": "api/2/project/:projectIdOrKey/avatar/temporary",
      "responses": [
        {
          "uuid": "282c2949-c8f0-4899-bba1-d35dfa016ec1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5a3ffff-c954-483e-9ad6-8f28cd9f8ee8",
      "documentation": "Deletes avatar",
      "method": "delete",
      "endpoint": "api/2/project/:projectIdOrKey/avatar/:id",
      "responses": [
        {
          "uuid": "4d09d543-6b13-4c0c-9c0c-9ab70d15b865",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3480b96-506a-4c11-b4f5-c1e726d6a47c",
      "documentation": "Returns all avatars which are visible for the currently logged in user.  The avatars are grouped into\n system and custom.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/avatars",
      "responses": [
        {
          "uuid": "cf3a09fb-3bed-42cd-93d7-4c8642ed5295",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1fc15a1-f7f1-4efa-9167-69e784399d1b",
      "documentation": "Contains a full representation of a the specified project's components.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/components",
      "responses": [
        {
          "uuid": "1e43ab90-d871-41c7-9e7a-4efab0f16518",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d25756c8-84fa-45a8-997a-9c77bf4bf60d",
      "documentation": "Returns the keys of all properties for the project identified by the key or by the id.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/properties",
      "responses": [
        {
          "uuid": "7116df55-6890-43ab-b32c-64af249b5e74",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f1d12cc-cd07-4a79-87b6-22cdee84dd08",
      "documentation": "Removes the property from the project identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the project.",
      "method": "delete",
      "endpoint": "api/2/project/:projectIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "b0a7e14c-2b8f-4e7e-b2b7-d14071e88c7a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "954b2afa-8a64-4233-881b-6f6367c8a17a",
      "documentation": "Returns the value of the property with a given key from the project identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the project.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "8f6ede8a-d899-4f7b-903a-6b56bb58b670",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c478c9a-2e70-4ded-9ea2-132581366c4c",
      "documentation": "Sets the value of the specified project's property.\n <p>\n You can use this resource to store a custom data against the project identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the project.\n </p>",
      "method": "put",
      "endpoint": "api/2/project/:projectIdOrKey/properties/:propertyKey",
      "responses": [
        {
          "uuid": "3a5d57a7-094b-4462-9a13-0dcf2b311f08",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "864ef11e-f9f1-4c65-9a7b-61160998c112",
      "documentation": "Returns all roles in the given project Id or key, with links to full details on each role.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/role",
      "responses": [
        {
          "uuid": "ae3f539c-12f9-4f7d-b300-ede3c031bd64",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cea8e84a-89b1-46f8-9cc9-b091f06e0cf7",
      "documentation": "Deletes actors (users or groups) from a project role.\n <p>\n <ul>\n <li>Delete a user from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?user={username}</code></li>\n <li>Delete a group from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?group={groupname}</code></li>\n </ul>",
      "method": "delete",
      "endpoint": "api/2/project/:projectIdOrKey/role/:id",
      "responses": [
        {
          "uuid": "c055199b-31b6-4940-99bf-deb4d2a4745d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c597b250-bd3d-43d7-bd7c-191111842549",
      "documentation": "Returns the details for a given project role in a project.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/role/:id",
      "responses": [
        {
          "uuid": "4791dc9a-04be-4e38-aac5-c00e1b708a32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e114679-8b6e-40e9-b247-f76a0a346995",
      "documentation": "Adds an actor (user or group) to a project role.",
      "method": "post",
      "endpoint": "api/2/project/:projectIdOrKey/role/:id",
      "responses": [
        {
          "uuid": "b66498bc-1bc1-473c-8ad4-d42c1db7642a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ca2b82c-ac5e-4b4c-86e6-050581901443",
      "documentation": "Updates a project role to include the specified actors (users or groups).",
      "method": "put",
      "endpoint": "api/2/project/:projectIdOrKey/role/:id",
      "responses": [
        {
          "uuid": "a80f1685-a386-4408-b53a-07875e7304a0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9aa9a104-b34c-48c4-b445-811ab0b6b89c",
      "documentation": "Get all issue types with valid status values for a project",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/statuses",
      "responses": [
        {
          "uuid": "f1cbc38f-809c-409c-947d-461c4247a16a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bac7411d-7502-4419-9b87-aa56bd26d4ec",
      "documentation": "Updates the type of a project.",
      "method": "put",
      "endpoint": "api/2/project/:projectIdOrKey/type/:newProjectTypeKey",
      "responses": [
        {
          "uuid": "828d78dd-9a6f-49b6-9792-be1e7ecc5346",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5396fcb4-cd3d-4926-be19-00b622d51059",
      "documentation": "Returns all versions for the specified project. Results are <a href=\"#pagination\">paginated</a>.\n <p>\n Results can be ordered by the following fields:\n <ul>\n <li>sequence</li>\n <li>name</li>\n <li>startDate</li>\n <li>releaseDate</li>\n </ul>\n </p>",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/version",
      "responses": [
        {
          "uuid": "96754e54-5272-4d73-96fb-627304a8eb5a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "664c9888-67bd-4458-88c5-1378f905f5c2",
      "documentation": "Contains a full representation of a the specified project's versions.",
      "method": "get",
      "endpoint": "api/2/project/:projectIdOrKey/versions",
      "responses": [
        {
          "uuid": "a62bfa4e-1cf7-412a-b633-52f9c7f9585f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ecfba7d-3545-4f06-bd64-c09ecca0d7d7",
      "documentation": "Returns the issue security scheme for project.",
      "method": "get",
      "endpoint": "api/2/project/:projectKeyOrId/issuesecuritylevelscheme",
      "responses": [
        {
          "uuid": "37e22f0c-27bc-49fe-a40a-583684ebf290",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df1b93ce-087c-483b-a368-4925a2b85dae",
      "documentation": "Gets a notification scheme associated with the project.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
      "method": "get",
      "endpoint": "api/2/project/:projectKeyOrId/notificationscheme",
      "responses": [
        {
          "uuid": "88e39d1d-9cb4-4cf6-adbf-ade8662f7bd0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfb5fecf-bf34-4b92-a3ec-3f0680c4c682",
      "documentation": "Gets a permission scheme assigned with a project.",
      "method": "get",
      "endpoint": "api/2/project/:projectKeyOrId/permissionscheme",
      "responses": [
        {
          "uuid": "d8a85fd4-e223-420b-a91b-bbc11b781bae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7344f181-567a-4d1c-b19c-b6be7a9388f9",
      "documentation": "Assigns a permission scheme with a project.",
      "method": "put",
      "endpoint": "api/2/project/:projectKeyOrId/permissionscheme",
      "responses": [
        {
          "uuid": "4fe16e9e-c9c7-47dd-afe9-46dbbd3214f0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c41a481-90d5-4c2d-978c-f71c47433318",
      "documentation": "Returns all security levels for the project that the current logged in user has access to.\n If the user does not have the Set Issue Security permission, the list will be empty.",
      "method": "get",
      "endpoint": "api/2/project/:projectKeyOrId/securitylevel",
      "responses": [
        {
          "uuid": "916da132-a753-4c14-a49b-958f83c30709",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98be4b35-2601-4e2f-990d-e917f0d610c5",
      "documentation": "Returns all project categories",
      "method": "get",
      "endpoint": "api/2/projectCategory",
      "responses": [
        {
          "uuid": "285f23a8-38e8-4489-bb38-ea62656162d2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e65b7ded-87c2-4dcd-b2c1-00b1f0d9231a",
      "documentation": "Create a project category via POST.",
      "method": "post",
      "endpoint": "api/2/projectCategory",
      "responses": [
        {
          "uuid": "f6f51c7d-76e4-4d21-85de-80a397f5a208",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbe6f0f3-3a21-4a04-9b35-73414c7cce2a",
      "documentation": "Delete a project category.",
      "method": "delete",
      "endpoint": "api/2/projectCategory/:id",
      "responses": [
        {
          "uuid": "2198ffe3-a63a-4712-8cd0-8f3939f47d94",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6cee7481-65c9-4be8-9ca8-ab9183eab166",
      "documentation": "Contains a representation of a project category in JSON format.",
      "method": "get",
      "endpoint": "api/2/projectCategory/:id",
      "responses": [
        {
          "uuid": "a6693e64-6e15-4ec7-a4f0-b00838ff97bb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04a10f28-0ee5-4351-b4f7-d9af16747f4b",
      "documentation": "Modify a project category via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
      "method": "put",
      "endpoint": "api/2/projectCategory/:id",
      "responses": [
        {
          "uuid": "35215927-28e2-4040-b422-61e0b8150d6b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e84bceb-1a9e-4deb-89ba-3cd55610093e",
      "documentation": "Validates a project key.",
      "method": "get",
      "endpoint": "api/2/projectvalidate/key",
      "responses": [
        {
          "uuid": "4674a0d0-3aed-4b14-af7c-1fe2f3e3e683",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d55de2a-0763-4cfe-8707-9b2c20846f4d",
      "documentation": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
      "method": "get",
      "endpoint": "api/2/reindex",
      "responses": [
        {
          "uuid": "cd86ba39-a556-455c-ad78-e4ad1c5c85ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ab2767c-5827-4f08-b309-1251f4d48cd5",
      "documentation": "Kicks off a reindex.  Need Admin permissions to perform this reindex.",
      "method": "post",
      "endpoint": "api/2/reindex",
      "responses": [
        {
          "uuid": "290e15ce-0a2b-4ccc-b058-6f0e756c357c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52271695-d1a6-4735-af06-b5a44d3288ea",
      "documentation": "Reindexes one or more individual issues.  Indexing is performed synchronously - the call returns when indexing of\n the issues has completed or a failure occurs.\n <p>\n Use either explicitly specified issue IDs or a JQL query to select issues to reindex.",
      "method": "post",
      "endpoint": "api/2/reindex/issue",
      "responses": [
        {
          "uuid": "9c2c1f59-0402-4ad6-80b4-5c1af7b97cfd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c532403-0aa8-4695-8cfa-b69be099ca36",
      "documentation": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
      "method": "get",
      "endpoint": "api/2/reindex/progress",
      "responses": [
        {
          "uuid": "2194a0d8-1260-419b-b0c9-fb0006893cf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "502f1790-290b-41a1-b406-de14952e20c9",
      "documentation": "Executes any pending reindex requests.  Returns a JSON array containing the IDs of the reindex requests\n that are being processed.  Execution is asynchronous - progress of the returned tasks can be monitored through\n other REST calls.",
      "method": "post",
      "endpoint": "api/2/reindex/request",
      "responses": [
        {
          "uuid": "d3735627-e44e-43cf-900a-f5a7fac63ec2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbafe5ff-3ab8-4901-9d39-913ca53333b2",
      "documentation": "Retrieves the progress of a multiple reindex requests.  Only reindex requests that actually exist will be returned\n in the results.",
      "method": "get",
      "endpoint": "api/2/reindex/request/bulk",
      "responses": [
        {
          "uuid": "b271d5e6-c9dd-42ba-92c9-aafbde7571d4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d77140b9-8004-4898-bed7-44208f20164e",
      "documentation": "Retrieves the progress of a single reindex request.",
      "method": "get",
      "endpoint": "api/2/reindex/request/:requestId",
      "responses": [
        {
          "uuid": "5d946545-0080-44fa-8de4-e2bf7a6f6fc9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f17f383-cd86-403f-9780-7830ae99422c",
      "documentation": "Returns a list of all resolutions.",
      "method": "get",
      "endpoint": "api/2/resolution",
      "responses": [
        {
          "uuid": "532ea48f-0c63-4145-8b68-bbcd6002711c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6911a6ce-34d5-4032-a127-4c2573e97c6b",
      "documentation": "Returns a resolution.",
      "method": "get",
      "endpoint": "api/2/resolution/:id",
      "responses": [
        {
          "uuid": "6a63b4c3-69e1-44d1-ab85-e3f32e892959",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "976f5ae1-c9e6-4365-a6a5-727694825eae",
      "documentation": "Get all the ProjectRoles available in JIRA. Currently this list is global.",
      "method": "get",
      "endpoint": "api/2/role",
      "responses": [
        {
          "uuid": "c3c57a87-d52b-4bd0-a11a-cb8992f9cb72",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53b77014-24cd-477b-ad03-63e86afdafd4",
      "documentation": "Creates a new ProjectRole to be available in JIRA.\n The created role does not have any default actors assigned.",
      "method": "post",
      "endpoint": "api/2/role",
      "responses": [
        {
          "uuid": "30ef4ee3-4cf7-499a-a408-59cad5c40afa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eed6e1d-d913-42e2-a5e1-55d9c98f8cf3",
      "documentation": "Deletes a role. May return 403 in the future",
      "method": "delete",
      "endpoint": "api/2/role/:id",
      "responses": [
        {
          "uuid": "d036da83-1794-4c43-a787-cf475039d27f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ac5bdec-236e-4583-bf84-0f90386e6a36",
      "documentation": "Get a specific ProjectRole available in JIRA.",
      "method": "get",
      "endpoint": "api/2/role/:id",
      "responses": [
        {
          "uuid": "4440c26d-fff3-441d-869b-1469297104d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2b2dbde-427d-4d32-a750-12a89ad9cd96",
      "documentation": "Partially updates a roles name or description.",
      "method": "post",
      "endpoint": "api/2/role/:id",
      "responses": [
        {
          "uuid": "3cc86f67-d3fd-4cde-8920-fdf57c8c4138",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dea101f6-33a8-408a-baad-ab8983ffc59e",
      "documentation": "Fully updates a roles. Both name and description must be given.",
      "method": "put",
      "endpoint": "api/2/role/:id",
      "responses": [
        {
          "uuid": "ff523c07-17fd-4b50-9bb1-b2977be7d870",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2202150-4c50-4684-98bb-4f0bd8b0172d",
      "documentation": "Removes default actor from the given role.",
      "method": "delete",
      "endpoint": "api/2/role/:id/actors",
      "responses": [
        {
          "uuid": "8c0a3c24-4bd5-45b5-a64d-680bfef76689",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "692cd78a-192b-422a-91c6-dca1bd2e5f9e",
      "documentation": "Gets default actors for the given role.",
      "method": "get",
      "endpoint": "api/2/role/:id/actors",
      "responses": [
        {
          "uuid": "5686b728-911e-4d21-a30c-d88450bc6f00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da8aed8f-89b3-452d-a19d-1b036a726673",
      "documentation": "Adds default actors to the given role. The request data should contain a list of usernames or a list of groups to add.",
      "method": "post",
      "endpoint": "api/2/role/:id/actors",
      "responses": [
        {
          "uuid": "ac90eb50-9bc1-4a06-bb11-c5f553cb0968",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3172d02-1d94-4ace-b5eb-27d2ce36fd2a",
      "documentation": "Adds field or custom field to the default tab",
      "method": "post",
      "endpoint": "api/2/screens/addToDefault/:fieldId",
      "responses": [
        {
          "uuid": "fd2b1ad4-e9e3-4fe9-9df2-648f0f78d72a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7188820-15b8-49bf-84f9-e2c58e739cc0",
      "documentation": "Gets available fields for screen. i.e ones that haven't already been added.",
      "method": "get",
      "endpoint": "api/2/screens/:screenId/availableFields",
      "responses": [
        {
          "uuid": "cfb1bdf8-8f62-4c85-80ee-34f889da7ad0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d1c4a5c-8fda-4f03-a951-da5f4489362b",
      "documentation": "Returns a list of all tabs for the given screen",
      "method": "get",
      "endpoint": "api/2/screens/:screenId/tabs",
      "responses": [
        {
          "uuid": "a8a179f3-1180-48e6-ba0d-75536a196286",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6afa20d7-71fa-4db8-b611-c8bb6b6020b0",
      "documentation": "Creates tab for given screen",
      "method": "post",
      "endpoint": "api/2/screens/:screenId/tabs",
      "responses": [
        {
          "uuid": "42ad60ea-b23c-4605-bf25-409ebead1b78",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d23b0f76-d74d-44cd-80ba-ecedba03cf56",
      "documentation": "Deletes tab to give screen",
      "method": "delete",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId",
      "responses": [
        {
          "uuid": "5aa785c2-c77e-43bb-a330-07dc89cfb614",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c68a6171-66f8-4119-8a3e-abe3e5a603e9",
      "documentation": "Renames tab on given screen",
      "method": "put",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId",
      "responses": [
        {
          "uuid": "4e6a47a2-ce27-42dc-bd6a-15258ecbc12c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14f1c4fc-caf8-4790-9312-c8e063245f87",
      "documentation": "Gets all fields for a given tab",
      "method": "get",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId/fields",
      "responses": [
        {
          "uuid": "94281baa-3b96-498f-b16e-e2e2b80982ea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fef75130-1dda-4350-a062-8f9c88b150cc",
      "documentation": "Adds field to the given tab.",
      "method": "post",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId/fields",
      "responses": [
        {
          "uuid": "fb7d07ae-5f09-430f-a033-3d0d65833f47",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b04151ea-c403-4470-87c6-be21e85f6d3a",
      "documentation": "Removes field from given tab",
      "method": "delete",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId/fields/:id",
      "responses": [
        {
          "uuid": "cf2f0c94-6bb7-4735-8ee0-1a612fc84ae0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "129f70f0-decc-4c3a-a441-729348a1201e",
      "documentation": "Moves field on the given tab",
      "method": "post",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId/fields/:id/move",
      "responses": [
        {
          "uuid": "3782da0c-b533-4a0d-b416-38ea16e93246",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f4e0a86-f55a-4f42-8402-cb41bd695e95",
      "documentation": "Moves tab position",
      "method": "post",
      "endpoint": "api/2/screens/:screenId/tabs/:tabId/move/:pos",
      "responses": [
        {
          "uuid": "174a3cac-7797-4bc3-b3fe-38cfdecdab7d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f452f058-1da3-420d-b8d6-52811ca072ab",
      "documentation": "Searches for issues using JQL.\n <p>\n <b>Sorting</b>\n the <code>jql</code> parameter is a full <a href=\"http://confluence.atlassian.com/display/JIRA/Advanced+Searching\">JQL</a>\n expression, and includes an <code>ORDER BY</code> clause.\n </p>\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, only navigable (<code>*navigable</code>) fields are returned in this search resource. Note: the default is different\n in the get-issue resource -- the default there all fields (<code>*all</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-description</code> - include navigable fields except the description (the default is <code>*navigable</code> for search)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n </p>\n <p><b>GET vs POST:</b>\n If the JQL query is too large to be encoded as a query param you should instead\n POST to this resource.\n </p>\n <p>\n <b>Expanding Issues in the Search Result:</b>\n It is possible to expand the issues returned by directly specifying the expansion on the expand parameter passed\n in to this resources.\n </p>\n <p>\n For instance, to expand the &quot;changelog&quot; for all the issues on the search result, it is neccesary to\n specify &quot;changelog&quot; as one of the values to expand.\n </p>",
      "method": "get",
      "endpoint": "api/2/search",
      "responses": [
        {
          "uuid": "e07a47ea-1c1c-41d5-8c7b-9eef2a1b8e96",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ccd1564-4a96-4d32-b4f8-3bc20091e1ff",
      "documentation": "Performs a search using JQL.",
      "method": "post",
      "endpoint": "api/2/search",
      "responses": [
        {
          "uuid": "4940b6fd-cd2d-4b2d-8079-0056d4115b74",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1137c954-d5b9-41da-9a68-f8c1bda45ce5",
      "documentation": "Returns a full representation of the security level that has the given id.",
      "method": "get",
      "endpoint": "api/2/securitylevel/:id",
      "responses": [
        {
          "uuid": "21488cf5-53f4-4bc6-ba9b-a082f104ac1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61200e10-3367-42ac-9135-acf6b0cc27d0",
      "documentation": "Returns general information about the current JIRA server.",
      "method": "get",
      "endpoint": "api/2/serverInfo",
      "responses": [
        {
          "uuid": "aa26891c-6490-4dbb-83a4-b753ad41202f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dac2da30-4e66-4a95-80c9-36c15fdf1c78",
      "documentation": "Sets the base URL that is configured for this JIRA instance.",
      "method": "put",
      "endpoint": "api/2/settings/baseUrl",
      "responses": [
        {
          "uuid": "29e2817e-66de-42e6-8e6f-6b44be7e3cd5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb4ae4e4-b1ac-4573-8a0c-2bb99f0fb493",
      "documentation": "Returns the default system columns for issue navigator. Admin permission will be required.",
      "method": "get",
      "endpoint": "api/2/settings/columns",
      "responses": [
        {
          "uuid": "f6d1d746-823a-4a8c-948f-c6efd3323da7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "057c73ba-8a3a-45a4-8287-1b1367139e71",
      "documentation": "Sets the default system columns for issue navigator. Admin permission will be required.",
      "method": "put",
      "endpoint": "api/2/settings/columns",
      "responses": [
        {
          "uuid": "57c29aa7-8eaf-4012-b793-fc77b474be00",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "726cb9e1-0a25-4dca-bc82-7c6da97a83a6",
      "documentation": "Returns a list of all statuses",
      "method": "get",
      "endpoint": "api/2/status",
      "responses": [
        {
          "uuid": "90144672-a9ee-40ac-aa86-192c846581e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6060cfe8-ec6b-4814-a35e-c695968698e9",
      "documentation": "Returns a full representation of the Status having the given id or name.",
      "method": "get",
      "endpoint": "api/2/status/:idOrName",
      "responses": [
        {
          "uuid": "6d8bdedd-5cab-43b3-a2b3-b6b011d2915f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "517451ca-ab08-4217-909e-ca566a024a79",
      "documentation": "Returns a list of all status categories",
      "method": "get",
      "endpoint": "api/2/statuscategory",
      "responses": [
        {
          "uuid": "104f8a95-44a6-402c-b02c-8865c3e46e58",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73eb5fe4-aebd-48b8-8ceb-3594ed582cc1",
      "documentation": "Returns a full representation of the StatusCategory having the given id or key",
      "method": "get",
      "endpoint": "api/2/statuscategory/:idOrKey",
      "responses": [
        {
          "uuid": "8f4003a2-1929-42b5-8246-a9b89eb79dbc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c73f5b2f-409d-4d6c-a343-c936385726ef",
      "documentation": "",
      "method": "get",
      "endpoint": "api/2/universal_avatar/type/:type/owner/:owningObjectId",
      "responses": [
        {
          "uuid": "f2d361eb-0a2f-4b99-8f26-886071fadc73",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7af5688-1b0f-463c-b2d3-01b18e40e36c",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/universal_avatar/type/:type/owner/:owningObjectId/avatar",
      "responses": [
        {
          "uuid": "9ccd5027-9d5f-47d4-b7fc-8010aba81b8c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b479f56-87f3-4e97-8032-1031b4dd29d9",
      "documentation": "Deletes avatar",
      "method": "delete",
      "endpoint": "api/2/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
      "responses": [
        {
          "uuid": "a5608fbc-bd29-4f51-a1f9-e206a875f811",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "339cb124-5d5e-4c7e-b262-f922f2369792",
      "documentation": "",
      "method": "post",
      "endpoint": "api/2/universal_avatar/type/:type/owner/:owningObjectId/temp",
      "responses": [
        {
          "uuid": "c2b98153-b2be-4d20-8ebd-e8fc1916c4fc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b345fd5-695a-42f1-8976-3191252b23a0",
      "documentation": "Returns the result of the last upgrade task.\n\n Returns {@link javax.ws.rs.core.Response#seeOther(java.net.URI)} if still running.",
      "method": "get",
      "endpoint": "api/2/upgrade",
      "responses": [
        {
          "uuid": "576c635d-3e27-4d3d-8d62-9cd9ac416b67",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b539ede3-da21-47d3-9205-500902a569aa",
      "documentation": "Runs any pending delayed upgrade tasks.  Need Admin permissions to do this.",
      "method": "post",
      "endpoint": "api/2/upgrade",
      "responses": [
        {
          "uuid": "b7499ae9-4d77-4eb9-b695-92726165e4a1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51738c47-fa49-4480-96d7-375c50db8b30",
      "documentation": "Removes user.",
      "method": "delete",
      "endpoint": "api/2/user",
      "responses": [
        {
          "uuid": "0e935f03-2107-44af-9c55-df33d45de739",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a454951-99c2-4bad-8619-3e96499c050c",
      "documentation": "Returns a user. This resource cannot be accessed anonymously.",
      "method": "get",
      "endpoint": "api/2/user",
      "responses": [
        {
          "uuid": "36264279-90ae-4560-b0c4-ae213109454b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3754dab-6783-483a-afc9-aca8dfe916f9",
      "documentation": "Create user. By default created user will not be notified with email.\n If password field is not set then password will be randomly generated.",
      "method": "post",
      "endpoint": "api/2/user",
      "responses": [
        {
          "uuid": "130ca75a-df01-45e6-bc37-cfa48ff01107",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "edee87f2-9898-4aef-8cc5-97fb00472907",
      "documentation": "Modify user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed.",
      "method": "put",
      "endpoint": "api/2/user",
      "responses": [
        {
          "uuid": "7f14e52a-14ee-4e9f-8b33-104b1b17a535",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65e210ee-e710-4dcf-b254-dd561c30de3e",
      "documentation": "Remove user from given application. Admin permission will be required to perform this operation.",
      "method": "delete",
      "endpoint": "api/2/user/application",
      "responses": [
        {
          "uuid": "c7bf0d05-5b33-45c2-95f0-9104898c448c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9b2abe1-0ccf-4214-ada1-e2a829c891a2",
      "documentation": "Add user to given application. Admin permission will be required to perform this operation.",
      "method": "post",
      "endpoint": "api/2/user/application",
      "responses": [
        {
          "uuid": "c108534d-6d23-4274-ab0a-ce5e6154d451",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e306dbd-0ec6-4890-a394-5d4f2cc13ceb",
      "documentation": "Returns a list of users that match the search string and can be assigned issues for all the given projects.\n This resource cannot be accessed anonymously.",
      "method": "get",
      "endpoint": "api/2/user/assignable/multiProjectSearch",
      "responses": [
        {
          "uuid": "83101db1-3a2d-40d0-8815-52848aef2182",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fb8c723-d835-4f63-9330-12f067c677ba",
      "documentation": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.\n Please note that this resource should be called with an issue key when a list of assignable users is retrieved\n for editing.  For create only a project key should be supplied.  The list of assignable users may be incorrect\n if it's called with the project key for editing.",
      "method": "get",
      "endpoint": "api/2/user/assignable/search",
      "responses": [
        {
          "uuid": "f7636339-36d3-4ebf-bc3c-766f7c8171c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e4fa52a-756c-49ab-9140-028561c25c42",
      "documentation": "Converts temporary avatar into a real avatar",
      "method": "post",
      "endpoint": "api/2/user/avatar",
      "responses": [
        {
          "uuid": "c9e4af80-9e64-46e5-ba11-dc91a444bf23",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7d831bc-25af-4d14-99ea-e5be8b236448",
      "documentation": "",
      "method": "put",
      "endpoint": "api/2/user/avatar",
      "responses": [
        {
          "uuid": "a6fe6413-e3da-40aa-891c-20cad14f95d4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8686065b-282e-409e-967e-4734255fff06",
      "documentation": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for a user: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p/>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/user/avatar/temporary?username=admin'\n </pre>",
      "method": "post",
      "endpoint": "api/2/user/avatar/temporary",
      "responses": [
        {
          "uuid": "fe392058-2910-4f90-b4a5-81dd56690631",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a0671b4-e101-46b3-95aa-0273dd37b629",
      "documentation": "Deletes avatar",
      "method": "delete",
      "endpoint": "api/2/user/avatar/:id",
      "responses": [
        {
          "uuid": "20e20066-00bd-4b8d-8296-bed386dc2548",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c0d7640-9197-4ddb-a56a-93c2eee636c5",
      "documentation": "Returns all avatars which are visible for the currently logged in user.",
      "method": "get",
      "endpoint": "api/2/user/avatars",
      "responses": [
        {
          "uuid": "43315bb1-8816-4494-a938-f0e988ce0b2a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9298a5aa-c05d-49c9-9650-3df7bed54eab",
      "documentation": "Reset the default columns for the given user to the system default. Admin permission will be required to get\n columns for a user other than the currently logged in user.",
      "method": "delete",
      "endpoint": "api/2/user/columns",
      "responses": [
        {
          "uuid": "b9b632a1-635b-4b84-88a8-55861fe97de0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7b97043-d2b0-4fbb-95d8-5643f9bc6651",
      "documentation": "Returns the default columns for the given user. Admin permission will be required to get columns for a user\n other than the currently logged in user.",
      "method": "get",
      "endpoint": "api/2/user/columns",
      "responses": [
        {
          "uuid": "76cb198e-c595-4d82-8443-b4c6046abe51",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75e24ddc-6033-403c-a669-ce5bf10f5526",
      "documentation": "Sets the default columns for the given user.  Admin permission will be required to get columns for a user\n other than the currently logged in user.",
      "method": "put",
      "endpoint": "api/2/user/columns",
      "responses": [
        {
          "uuid": "27c6d5da-14a7-46b8-be14-c7f95e4fdcde",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be7ec9fa-8b66-4cc7-8a08-218faa857735",
      "documentation": "Modify user password.",
      "method": "put",
      "endpoint": "api/2/user/password",
      "responses": [
        {
          "uuid": "2256d913-b010-4a99-a82e-487174f7460e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37f8defa-cdb3-48a5-a886-50fa56cad488",
      "documentation": "Returns a list of active users that match the search string and have all specified permissions for the project or issue.<br>\n This resource can be accessed by users with ADMINISTER_PROJECT permission for the project or global ADMIN or SYSADMIN rights.",
      "method": "get",
      "endpoint": "api/2/user/permission/search",
      "responses": [
        {
          "uuid": "ecc81093-f8e0-4476-aa44-28a8e2ed02c3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d692967-34c6-477b-8904-0ede14b4c1a6",
      "documentation": "Returns a list of users matching query with highlighting. This resource cannot be accessed anonymously.",
      "method": "get",
      "endpoint": "api/2/user/picker",
      "responses": [
        {
          "uuid": "66dda6ce-238e-432e-b3a6-45603720dcbd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ba4e450-2405-4e49-b473-1eea091865d1",
      "documentation": "Returns the keys of all properties for the user identified by the key or by the id.",
      "method": "get",
      "endpoint": "api/2/user/properties/",
      "responses": [
        {
          "uuid": "1a761061-54fd-47d4-98ce-096712d7665f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebce894e-6e37-44fe-a8af-b7cfaf3a6ca4",
      "documentation": "Removes the property from the user identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the user.",
      "method": "delete",
      "endpoint": "api/2/user/properties/:propertyKey",
      "responses": [
        {
          "uuid": "e098b1fa-7d20-49da-8fdb-40f1734c64d6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84f2262d-7aea-48ce-800e-4c33920ddee6",
      "documentation": "Returns the value of the property with a given key from the user identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the user.",
      "method": "get",
      "endpoint": "api/2/user/properties/:propertyKey",
      "responses": [
        {
          "uuid": "d876e987-78c2-4c0d-b395-0f0b189f16e3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97f61ab5-86e3-43ab-a29e-5d4401c960a0",
      "documentation": "Sets the value of the specified user's property.\n <p>\n You can use this resource to store a custom data against the user identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the user.\n </p>",
      "method": "put",
      "endpoint": "api/2/user/properties/:propertyKey",
      "responses": [
        {
          "uuid": "7b30783e-cc7c-4790-ac1d-379d65453674",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a079f85-807a-4487-9c00-239a706d3a4c",
      "documentation": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.",
      "method": "get",
      "endpoint": "api/2/user/search",
      "responses": [
        {
          "uuid": "6f3c112e-a69d-485d-a352-59873d3d7583",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f0ca07f-29be-44b8-8bce-9bb6481b6f9c",
      "documentation": "Returns a list of active users that match the search string. This resource cannot be accessed anonymously \n and requires the Browse Users global permission.\n Given an issue key this resource will provide a list of users that match the search string and have\n the browse issue permission for the issue provided.",
      "method": "get",
      "endpoint": "api/2/user/viewissue/search",
      "responses": [
        {
          "uuid": "605424a0-806d-490b-8536-f0e805c36d73",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afbb9837-c1d8-4634-b796-d8f7d4035173",
      "documentation": "Create a version via POST.",
      "method": "post",
      "endpoint": "api/2/version",
      "responses": [
        {
          "uuid": "0bbdf1fa-8881-497a-a8d5-a5ed96d254f4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b686371-d8f0-4f44-a13f-22f90b3955c8",
      "documentation": "Returns the remote version links for a given global ID.",
      "method": "get",
      "endpoint": "api/2/version/remotelink",
      "responses": [
        {
          "uuid": "38d25cb0-df6f-4353-a822-d7893e331cda",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fb35758-f19f-4c7c-a398-39ec878138c5",
      "documentation": "Delete a project version.",
      "method": "delete",
      "endpoint": "api/2/version/:id",
      "responses": [
        {
          "uuid": "852023af-4842-4d7b-a355-27e36adc631e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78065634-5d66-4f99-854c-328a5714da14",
      "documentation": "Returns a project version.",
      "method": "get",
      "endpoint": "api/2/version/:id",
      "responses": [
        {
          "uuid": "dcce62e2-9435-484a-a0ab-7b8008eb4f0a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "661b4de2-283b-4363-b310-4072fc0ed92a",
      "documentation": "Modify a version via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
      "method": "put",
      "endpoint": "api/2/version/:id",
      "responses": [
        {
          "uuid": "4787d687-9883-4ec8-b4d1-0300f4976c0f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e16e801f-abed-4374-91dc-17c31f8048a3",
      "documentation": "Merge versions",
      "method": "put",
      "endpoint": "api/2/version/:id/mergeto/:moveIssuesTo",
      "responses": [
        {
          "uuid": "88fcea43-129a-4c26-923d-e9b6ab0f85e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5819c210-54e9-4274-90eb-39afaa018800",
      "documentation": "Modify a version's sequence within a project.\n <p/>\n The move version bean has 2 alternative field value pairs:\n <dl>\n <dt>position</dt><dd>An absolute position, which may have a value of 'First', 'Last', 'Earlier' or 'Later'</dd>\n <dt>after</dt><dd>A version to place this version after.  The value should be the self link of another version</dd>\n </dl>",
      "method": "post",
      "endpoint": "api/2/version/:id/move",
      "responses": [
        {
          "uuid": "f696d22b-9718-4954-bfa4-a65b6201462c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d53d4fd6-2143-4c84-b0ad-616a6322f365",
      "documentation": "Returns a bean containing the number of fixed in and affected issues for the given version.",
      "method": "get",
      "endpoint": "api/2/version/:id/relatedIssueCounts",
      "responses": [
        {
          "uuid": "5672ae19-a967-454a-8ddb-9f0024c7f9b9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae1d285e-c2b7-45b2-86e9-a3d57361436d",
      "documentation": "Delete a project version.",
      "method": "post",
      "endpoint": "api/2/version/:id/removeAndSwap",
      "responses": [
        {
          "uuid": "e59ed392-c103-49bc-90ec-95ee4c161873",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35536c97-8231-45cc-8233-7aa44fba6e9e",
      "documentation": "Returns the number of unresolved issues for the given version",
      "method": "get",
      "endpoint": "api/2/version/:id/unresolvedIssueCount",
      "responses": [
        {
          "uuid": "671503db-f208-4012-9ed8-c5a9cc752ca1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "201a1417-539a-4b33-b566-1edb507443ab",
      "documentation": "Delete all remote version links for a given version ID.",
      "method": "delete",
      "endpoint": "api/2/version/:versionId/remotelink",
      "responses": [
        {
          "uuid": "7216bb89-e99e-47a6-abbe-7e5ad8366031",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17f66271-92d2-4fce-8e80-0662f8819d81",
      "documentation": "Returns the remote version links associated with the given version ID.",
      "method": "get",
      "endpoint": "api/2/version/:versionId/remotelink",
      "responses": [
        {
          "uuid": "43a5db57-beb0-41b6-82c1-c55b60d71f68",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acc50ab5-665a-4adc-872d-c420c5d498ab",
      "documentation": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
      "method": "post",
      "endpoint": "api/2/version/:versionId/remotelink",
      "responses": [
        {
          "uuid": "f1d6daf0-7868-47b1-a1b7-8f88178139d4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35859c86-497f-4d17-9633-5e83abe02c7c",
      "documentation": "Delete a specific remote version link with the given version ID and global ID.",
      "method": "delete",
      "endpoint": "api/2/version/:versionId/remotelink/:globalId",
      "responses": [
        {
          "uuid": "3570ebcb-ef03-459a-9737-372961f8bae9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "521b8ce6-26e7-4f0a-8851-ccb946aa3363",
      "documentation": "A REST sub-resource representing a remote version link",
      "method": "get",
      "endpoint": "api/2/version/:versionId/remotelink/:globalId",
      "responses": [
        {
          "uuid": "787e3064-ffeb-4956-9237-7a892986d79c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfc5bcaa-6984-40ea-80d8-eecd8c7a5586",
      "documentation": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
      "method": "post",
      "endpoint": "api/2/version/:versionId/remotelink/:globalId",
      "responses": [
        {
          "uuid": "07abf50b-90c0-43c8-bbb2-cf94c372d9a7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a6d2701-942a-4d89-9736-f892aceed025",
      "documentation": "Returns all workflows.",
      "method": "get",
      "endpoint": "api/2/workflow",
      "responses": [
        {
          "uuid": "8dbf535e-74ba-4791-95f0-32d54e3fb817",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb465116-992a-4eb9-90a4-d532d5c53d71",
      "documentation": "Delete a property from the passed transition on the passed workflow. It is not an error to delete a property that\n does not exist.",
      "method": "delete",
      "endpoint": "api/2/workflow/api/2/transitions/:id/properties",
      "responses": [
        {
          "uuid": "ebad2984-54d3-4e50-9d1c-55a73055b529",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "245c5695-e803-4173-8352-b4f44a57f5f7",
      "documentation": "Return the property or properties associated with a transition.",
      "method": "get",
      "endpoint": "api/2/workflow/api/2/transitions/:id/properties",
      "responses": [
        {
          "uuid": "22c664ec-6b8c-477d-a290-6cd4c0332a62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35c8d727-52b1-4f8a-9bba-665b680ef100",
      "documentation": "Add a new property to a transition. Trying to add a property that already\n exists will fail.",
      "method": "post",
      "endpoint": "api/2/workflow/api/2/transitions/:id/properties",
      "responses": [
        {
          "uuid": "c07986c1-5efc-4f18-9da6-8cfd16abd4ca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9948312e-7960-463d-ad29-0abc5fe15555",
      "documentation": "Update/add new property to a transition. Trying to update a property that does\n not exist will result in a new property being added.",
      "method": "put",
      "endpoint": "api/2/workflow/api/2/transitions/:id/properties",
      "responses": [
        {
          "uuid": "67347285-6dae-4a93-917e-3f194f718e0c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "078bc56b-316b-4768-8351-687a2adce46f",
      "documentation": "Create a new workflow scheme.\n <p/>\n The body contains a representation of the new scheme. Values not passed are assumed to be set to their defaults.",
      "method": "post",
      "endpoint": "api/2/workflowscheme",
      "responses": [
        {
          "uuid": "3a935ef6-cc0e-48fc-af10-0094f5ecfbf8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a75b3227-ab71-4476-b31b-41657e8cf8cb",
      "documentation": "Delete the passed workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id",
      "responses": [
        {
          "uuid": "ab5f5898-cd13-46d7-8ccc-086026178d0b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "613ce0ab-6287-45c5-90ed-87cf5af076eb",
      "documentation": "Returns the requested workflow scheme to the caller.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id",
      "responses": [
        {
          "uuid": "4f4ecb18-5b63-4d70-b7a5-2ce33e3d6595",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29e9796e-f196-433f-b09e-2271e8ab2cd0",
      "documentation": "Update the passed workflow scheme.\n <p/>\n The body of the request is a representation of the workflow scheme. Values not passed are assumed to indicate\n no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created and/or updated when the actual scheme cannot be edited (e.g. when the scheme is being used by\n a project). Values not appearing the body will not be touched.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id",
      "responses": [
        {
          "uuid": "ae52cc57-a7d9-449e-a9cd-7ff5b8f64614",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "820d6bbb-77bf-4675-9299-819b19e6a697",
      "documentation": "Create a draft for the passed scheme. The draft will be a copy of the state of the parent.",
      "method": "post",
      "endpoint": "api/2/workflowscheme/:id/createdraft",
      "responses": [
        {
          "uuid": "b688ae1f-be62-4a4a-839a-6d130bb10298",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30eeb561-3c7d-458c-b019-172b289f22a9",
      "documentation": "Remove the default workflow from the passed workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/default",
      "responses": [
        {
          "uuid": "0144e29c-92f5-44a9-8637-a51f5a93e5b7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6270dbf-11d8-4a36-9d79-f02d1140453f",
      "documentation": "Return the default workflow from the passed workflow scheme.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/default",
      "responses": [
        {
          "uuid": "a5291da7-d80a-40ed-87bf-5083dcdf58a4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20700caf-3ac3-4758-b532-2c0f37615c66",
      "documentation": "Set the default workflow for the passed workflow scheme.\n <p/>\n The passed representation can have its\n updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme\n cannot be edited.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/default",
      "responses": [
        {
          "uuid": "3da0202a-62f8-4556-bbb4-5623dcd7c274",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ac16e61-1fec-4a0e-85b7-51fc14e0ad8f",
      "documentation": "Delete the passed draft workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/draft",
      "responses": [
        {
          "uuid": "fe67d402-72f7-45c8-b5af-77c0f6c380b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1780e9f-f49b-45a4-84db-a4c652403104",
      "documentation": "Returns the requested draft workflow scheme to the caller.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/draft",
      "responses": [
        {
          "uuid": "757a3be8-9d91-4f1d-ac97-87d8c343a0ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9aa6331-4d97-4903-aba0-ce2373563951",
      "documentation": "Update a draft workflow scheme. The draft will created if necessary.\n <p/>\n The body is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/draft",
      "responses": [
        {
          "uuid": "8af09fb7-5086-427a-ae5f-58ea12555fa1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88f244fc-cec1-47b1-b2ca-518c5c83a1a7",
      "documentation": "Remove the default workflow from the passed draft workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/draft/default",
      "responses": [
        {
          "uuid": "7bfc653f-0516-40b8-bdbf-ad670e92be4f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9060ddcf-b1ff-44a3-a906-cd7fff6e830d",
      "documentation": "Return the default workflow from the passed draft workflow scheme to the caller.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/draft/default",
      "responses": [
        {
          "uuid": "4feb1e5b-03b2-4ed0-8756-b758e5a6302d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bdc1824c-8902-4312-8d21-33896cca3c92",
      "documentation": "Set the default workflow for the passed draft workflow scheme.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/draft/default",
      "responses": [
        {
          "uuid": "f8407a1f-d07a-4f9d-95d2-a87a48187180",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ebac90a-32ac-489f-8ef5-30b2a3f67e38",
      "documentation": "Remove the specified issue type mapping from the draft scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/draft/issuetype/:issueType",
      "responses": [
        {
          "uuid": "ec9fdbc1-ced1-4571-8e21-668252b51aa7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24377f51-95b3-4ceb-affb-8eb241056418",
      "documentation": "Returns the issue type mapping for the passed draft workflow scheme.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/draft/issuetype/:issueType",
      "responses": [
        {
          "uuid": "bd43c14b-dab7-49d2-94b5-4abf19d762e5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f1579c9-5c1b-46a7-aba7-c7a7a1b593ee",
      "documentation": "Set the issue type mapping for the passed draft scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/draft/issuetype/:issueType",
      "responses": [
        {
          "uuid": "fcb73a19-375b-4272-b405-5e77f662824d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "543888f1-59fc-4b40-b1fe-cfd7f0c7cb8c",
      "documentation": "Delete the passed workflow from the draft workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/draft/workflow",
      "responses": [
        {
          "uuid": "2ff08eed-8e06-4155-97a9-de6d4d30a242",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cba5ddd0-c94b-4fa6-8d54-8f1ee04f6da7",
      "documentation": "Returns the draft workflow mappings or requested mapping to the caller.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/draft/workflow",
      "responses": [
        {
          "uuid": "287871a0-73fa-4079-83c8-d5e889a726df",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a98109c5-ecc1-46cc-ba03-ad545f7d5083",
      "documentation": "Update the draft scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/draft/workflow",
      "responses": [
        {
          "uuid": "b0cd6034-245d-45bc-9ac6-9425e0c353b6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae415fde-4b5a-4be2-96be-3e243e10340e",
      "documentation": "Remove the specified issue type mapping from the scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/issuetype/:issueType",
      "responses": [
        {
          "uuid": "d7dbe694-748f-4519-82c0-a48aeda442b0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e66108f-88f7-4f72-954a-cd049ca6f31a",
      "documentation": "Returns the issue type mapping for the passed workflow scheme.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/issuetype/:issueType",
      "responses": [
        {
          "uuid": "b1f5ba51-ac1c-4723-ae5d-5a0a4b6cb429",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfc62946-1487-4083-8b82-2178e43630b5",
      "documentation": "Set the issue type mapping for the passed scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/issuetype/:issueType",
      "responses": [
        {
          "uuid": "e2306735-02dc-42be-902a-d04dba02658c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1acac52b-53dc-4141-9f18-3829bb9df7c9",
      "documentation": "Delete the passed workflow from the workflow scheme.",
      "method": "delete",
      "endpoint": "api/2/workflowscheme/:id/workflow",
      "responses": [
        {
          "uuid": "a0a4f394-f197-441a-b3b3-79d4cd315de8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "150097b8-e055-4630-9ce3-108ed10cc1d7",
      "documentation": "Returns the workflow mappings or requested mapping to the caller for the passed scheme.",
      "method": "get",
      "endpoint": "api/2/workflowscheme/:id/workflow",
      "responses": [
        {
          "uuid": "aaaca94a-6c57-4523-b975-3e29644e9006",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a89adacc-6c80-45b5-9d34-0ac5bd8b78a8",
      "documentation": "Update the scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created/updated when the actual scheme cannot be edited.",
      "method": "put",
      "endpoint": "api/2/workflowscheme/:id/workflow",
      "responses": [
        {
          "uuid": "1ce50c78-c7f5-4dca-9d58-9f9e5ca2755e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47f2afb3-8424-49e6-af25-af540fa1484c",
      "documentation": "Returns worklogs id and delete time of worklogs that was deleted since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs deleted during last minute.",
      "method": "get",
      "endpoint": "api/2/worklog/deleted",
      "responses": [
        {
          "uuid": "79c379a6-b02e-47ef-a19f-bf56baf89a14",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1da18efd-9556-4b2f-b767-07fe5b4074a2",
      "documentation": "Returns worklogs for given worklog ids. Only worklogs to which the calling user has permissions, will be included in the result.\n The returns set of worklogs is limited to 1000 elements.",
      "method": "post",
      "endpoint": "api/2/worklog/list",
      "responses": [
        {
          "uuid": "789ada82-3fd2-4c7a-9dcd-a21e85bea373",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aac24ea9-8a0d-4f01-9b73-b8038ec754d5",
      "documentation": "Returns worklogs id and update time of worklogs that was updated since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs updated during last minute.",
      "method": "get",
      "endpoint": "api/2/worklog/updated",
      "responses": [
        {
          "uuid": "e0cff271-0aea-4e96-8a27-11ef376709ec",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87b81dbb-6895-436c-8da8-5c564441065e",
      "documentation": "Logs the current user out of JIRA, destroying the existing session, if any.",
      "method": "delete",
      "endpoint": "auth/1/session",
      "responses": [
        {
          "uuid": "9e399e3a-da32-46ac-a143-3c7c4a20c651",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d54f7fff-6495-4a75-b442-7f15eecbed52",
      "documentation": "Returns information about the currently authenticated user's session. If the caller is not authenticated they\n will get a 401 Unauthorized status code.",
      "method": "get",
      "endpoint": "auth/1/session",
      "responses": [
        {
          "uuid": "fa8501b8-fe9a-411a-acc0-315197843993",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82b357b6-d9d9-4c24-90d9-14f8a4016cf7",
      "documentation": "Creates a new session for a user in JIRA. Once a session has been successfully created it can be used to access\n any of JIRA's remote APIs and also the web UI by passing the appropriate HTTP Cookie header.\n <p>\n Note that it is generally preferrable to use HTTP BASIC authentication with the REST API. However, this resource\n may be used to mimic the behaviour of JIRA's log-in page (e.g. to display log-in errors to a user).",
      "method": "post",
      "endpoint": "auth/1/session",
      "responses": [
        {
          "uuid": "bfa7ff02-9d4d-4ea7-9873-75e92b7156ef",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7082f99-93c9-4953-86da-62ba527a5345",
      "documentation": "This method invalidates the any current WebSudo session.",
      "method": "delete",
      "endpoint": "auth/1/websudo",
      "responses": [
        {
          "uuid": "f4eb36c6-ade3-4a22-9182-d54889aa2a59",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}