{
  "uuid": "5c6d0004-c800-42c2-8437-fa38030e52ae",
  "lastMigration": 19,
  "name": "Anomaly Finder Client",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c0e70772-c51c-456e-af9c-5f373aeed49c",
      "documentation": "Find anomalies for the entire series in batch.",
      "method": "post",
      "endpoint": "timeseries/entire/detect",
      "responses": [
        {
          "uuid": "7ca79233-43c7-4af9-a9fa-0cd867287f4c",
          "body": "{\n  \"expectedValues\": [\n    {{faker 'random.float'}}\n  ],\n  \"isAnomaly\": [\n    {{faker 'random.boolean'}}\n  ],\n  \"isNegativeAnomaly\": [\n    {{faker 'random.boolean'}}\n  ],\n  \"isPositiveAnomaly\": [\n    {{faker 'random.boolean'}}\n  ],\n  \"lowerMargins\": [\n    {{faker 'random.float'}}\n  ],\n  \"period\": {{faker 'random.number'}},\n  \"upperMargins\": [\n    {{faker 'random.float'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3f149ee-e8cd-450e-9351-df0e29f271e1",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidCustomInterval' 'BadArgument' 'InvalidGranularity' 'InvalidPeriod' 'InvalidModelArgument' 'InvalidSeries')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "617f68fb-c383-4dd5-be18-07e598b34233",
      "documentation": "Detect anomaly status of the latest point in time series.",
      "method": "post",
      "endpoint": "timeseries/last/detect",
      "responses": [
        {
          "uuid": "102e2f93-821e-4f02-9583-a230fb43b4fb",
          "body": "{\n  \"expectedValue\": {{faker 'random.float'}},\n  \"isAnomaly\": {{faker 'random.boolean'}},\n  \"isNegativeAnomaly\": {{faker 'random.boolean'}},\n  \"isPositiveAnomaly\": {{faker 'random.boolean'}},\n  \"lowerMargin\": {{faker 'random.float'}},\n  \"period\": {{faker 'random.number'}},\n  \"suggestedWindow\": {{faker 'random.number'}},\n  \"upperMargin\": {{faker 'random.float'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful operation.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6998a0d4-6663-49ba-85da-f7baaa8791e0",
          "body": "{\n  \"code\": \"{{oneOf (array 'InvalidCustomInterval' 'BadArgument' 'InvalidGranularity' 'InvalidPeriod' 'InvalidModelArgument' 'InvalidSeries')}}\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}