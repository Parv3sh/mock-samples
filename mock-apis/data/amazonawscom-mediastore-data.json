{
  "uuid": "f4bd198b-1170-4b4c-aeb3-4e548b9a4094",
  "lastMigration": 19,
  "name": "AWS Elemental MediaStore Data Plane",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "eace0a6c-8ad5-4431-b120-35ef1224b39a",
      "documentation": "Deletes an object at the specified path.",
      "method": "delete",
      "endpoint": ":Path",
      "responses": [
        {
          "uuid": "4d99b985-c9f9-4f77-aba7-f7bf0c022b76",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5966211f-27fb-4002-8446-71552c3c7ae9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ContainerNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce347c61-e992-46de-b94e-0248fb913779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ObjectNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c17129d7-8807-41ac-b104-96080d8687ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26c73eba-46d1-4d45-ba37-95b21f5f16fd",
      "documentation": "Gets the headers for an object at the specified path.",
      "method": "head",
      "endpoint": ":Path",
      "responses": [
        {
          "uuid": "ce3b70f6-72d7-48bd-a61d-86d9d4ab29d0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb0b28a-641e-4ecf-b6a4-0751dbabebb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ContainerNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40a49a7e-451d-442b-8b23-4305f1bf554c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ObjectNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3132b144-2fa7-4b9e-b5ba-a049332dcf63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a59f1eb3-9801-4a58-9f54-3c5823d44276",
      "documentation": "Downloads the object at the specified path. If the object’s upload availability is set to <code>streaming</code>, AWS Elemental MediaStore downloads the object even if it’s still uploading the object.",
      "method": "get",
      "endpoint": ":Path",
      "responses": [
        {
          "uuid": "846e30c4-5145-402d-b19a-5c86d1539fdd",
          "body": "{\n  \"Body\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a937fbe-fab9-41a4-92dd-878cd8141528",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ContainerNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92060c5e-acbf-4a86-90f0-91ead542601c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ObjectNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "908c79cc-d855-49e9-88af-b84450504131",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RequestedRangeNotSatisfiableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be41310a-633f-435b-bad5-cfdb20ea5344",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e77ee52-e9d1-4419-9b03-e77d29709484",
      "documentation": "Uploads an object to the specified path. Object sizes are limited to 25 MB for standard upload availability and 10 MB for streaming upload availability.",
      "method": "put",
      "endpoint": ":Path",
      "responses": [
        {
          "uuid": "3d1c6c0e-77c7-4bfc-a7a6-06e4b2039af8",
          "body": "{\n  \"ContentSHA256\": \"\",\n  \"ETag\": \"\",\n  \"StorageClass\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97686444-ef99-42c2-8737-d3722f908fb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ContainerNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03c327c5-3b3f-4294-8dcf-5891f9a1c804",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fab5f58-96a8-4282-9742-80d65cb42945",
      "documentation": "Provides a list of metadata entries about folders and objects in the specified folder.",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "caec8ccd-14be-465f-a179-a0847e45d877",
          "body": "{\n  \"Items\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"ETag\": \"\",\n      \"LastModified\": \"{{faker 'date.recent' 365}}\",\n      \"ContentType\": \"\",\n      \"ContentLength\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c6f43e9-1ff9-49d3-b828-326dba86f95c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ContainerNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc4ce0b7-1430-4a6d-a5c7-bff60cf84806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}