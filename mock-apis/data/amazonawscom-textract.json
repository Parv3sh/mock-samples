{
  "uuid": "c39162ca-2b97-44b6-b8e9-e2dd58ab7131",
  "lastMigration": 19,
  "name": "Amazon Textract",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5ddb4e42-d164-4577-8c44-618dca623dff",
      "documentation": "<p>Analyzes an input document for relationships between detected items. </p> <p>The types of information returned are as follows: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code> list. </p> <p>The output is returned in a list of <code>Block</code> objects.</p> <p> <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentAnalysis</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeDocument",
      "responses": [
        {
          "uuid": "241256f9-eeda-4ffd-a345-359d7175e324",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"HumanLoopActivationOutput\": {\n    \"HumanLoopArn\": \"\",\n    \"HumanLoopActivationReasons\": [\n      \"\"\n    ],\n    \"HumanLoopActivationConditionsEvaluationResults\": \"\"\n  },\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a33d851d-e837-4a71-9ba4-7bb49d53d8a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "786facd9-6997-4f46-8c2d-8676e32ab984",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "534bce12-5cc6-4901-a147-a0ddee728933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0ebb266-7749-408e-a94a-ac91d8529ab4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15440b7a-d7b2-4d81-81ef-45956bc082f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584bd2f8-06f7-43f9-b0a1-ee5e338f2537",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e9363e7-55b0-496a-8884-0082f55941b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2143a63-9bf0-430f-a451-0b8a925aa190",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a72ac4a-ba86-4ea2-9e15-9fa71105812b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48c49b37-61a6-4a18-b01a-218927f61cd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "HumanLoopQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ec85fbc-a597-4700-b4a7-199f52ea7673",
      "documentation": "<p>Analyzes an input document for financially related relationships between text.</p> <p>Information is returned as <code>ExpenseDocuments</code> and seperated as follows.</p> <ul> <li> <p> <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store information about the lines of text, such as an item purchased and its price on a receipt.</p> </li> <li> <p> <code>SummaryFields</code>- Contains all other information a receipt, such as header information or the vendors name.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeExpense",
      "responses": [
        {
          "uuid": "78277746-600a-4a0c-8b37-677f8730fd87",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"ExpenseDocuments\": [\n    {\n      \"ExpenseIndex\": {{faker 'random.number'}},\n      \"SummaryFields\": [\n        {\n          \"Type\": {\n            \"Text\": \"\",\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"LabelDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'random.float'}},\n                \"Height\": {{faker 'random.float'}},\n                \"Left\": {{faker 'random.float'}},\n                \"Top\": {{faker 'random.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'random.float'}},\n                  \"Y\": {{faker 'random.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"ValueDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'random.float'}},\n                \"Height\": {{faker 'random.float'}},\n                \"Left\": {{faker 'random.float'}},\n                \"Top\": {{faker 'random.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'random.float'}},\n                  \"Y\": {{faker 'random.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"PageNumber\": {{faker 'random.number'}}\n        }\n      ],\n      \"LineItemGroups\": [\n        {\n          \"LineItemGroupIndex\": {{faker 'random.number'}},\n          \"LineItems\": [\n            {\n              \"LineItemExpenseFields\": [\n                {\n                  \"Type\": {\n                    \"Text\": \"\",\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"LabelDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'random.float'}},\n                        \"Height\": {{faker 'random.float'}},\n                        \"Left\": {{faker 'random.float'}},\n                        \"Top\": {{faker 'random.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'random.float'}},\n                          \"Y\": {{faker 'random.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"ValueDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'random.float'}},\n                        \"Height\": {{faker 'random.float'}},\n                        \"Left\": {{faker 'random.float'}},\n                        \"Top\": {{faker 'random.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'random.float'}},\n                          \"Y\": {{faker 'random.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"PageNumber\": {{faker 'random.number'}}\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec1cf511-9857-4dfc-8373-441d97c9ab5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3827119-b266-4aa1-8fae-28a8ae3e5a4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4157c599-671e-483f-acde-2880814d7c6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0d2c232-f308-4117-9396-a8528847c77f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af1863a9-2c67-4030-8c2c-914972997910",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b4c191-6bc2-47a9-a3d0-38d479136db3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bd0f2d5-87a9-4323-bb51-e3c61f1cc98e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f97fa1b2-62ec-489b-bd74-5d2f6023dc4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44fd91b4-63d3-4415-8c5a-1e2daddb6913",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd0a281b-6465-4b59-8d97-3ccd7c04d632",
      "documentation": "<p>Detects text in the input document. Amazon Textract can detect lines of text and the words that make up a line of text. The input document must be an image in JPEG or PNG format. <code>DetectDocumentText</code> returns the detected text in an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p> <code>DetectDocumentText</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentTextDetection</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.DetectDocumentText",
      "responses": [
        {
          "uuid": "80a57a29-d426-4686-a653-fc6f32064d93",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a9af830-de67-4485-aaa1-7619fc060097",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42c897ef-46d5-4b94-940b-b4d4d22fc70f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31d746fe-6589-4f15-aff7-4971e46ff0d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9235c59f-d840-4c7c-8c9e-4c2b8447da34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afb3ddab-34c8-41a5-9f86-77d76df652e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a200d462-bd15-4d01-bd00-f1f50168a384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "789b852b-bf82-4d59-8932-69439863ee3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b92c771-7894-44d7-84b2-fbc9a58b82dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2d4250b-5be5-45a4-94de-057ad98bda76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02218b38-9a42-40cf-bd25-657398aa0a2a",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that analyzes text in a document.</p> <p>You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which returns a job identifier (<code>JobId</code>). When the text analysis operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p> <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following types of information are returned: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of the <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentAnalysis",
      "responses": [
        {
          "uuid": "99aa1839-a174-4bbf-8df6-3c2a356cfa25",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3108a59-0610-42e0-9dca-85b608e6141f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08741942-89b8-499c-bb88-1d6c0fdc5a4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba1a7991-8c13-440d-9a24-d322f34c622f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e204086-dbfd-47a3-aca3-f940f23e041d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f96c8b5-74ca-4ae8-a197-4ae3fc7d9673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "475494bd-b0d4-4e8b-b963-3099ed5ced3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a34b8a4-a39a-4168-961d-f8110d967a9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12074edd-021f-4c33-851e-25e90ebfbbe1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a95f6330-0e4f-461e-afe2-36d176536917",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that detects text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p>You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>, which returns a job identifier (<code>JobId</code>). When the text detection operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p> <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p>Use the MaxResults parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentTextDetection</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentTextDetection",
      "responses": [
        {
          "uuid": "69f74ab9-ae19-4d96-b4f5-054adf08328a",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cee3f6f-796b-4aa0-b872-a0cac2d02829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5e326b0-2983-435d-9626-d4df38c8ac63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b4dc3c2-bebb-4694-87d7-130ff296e71e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b32624-4522-460a-a0d0-4f0a9284a653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e27e501-2c61-41dc-83b1-a418d3f6afb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eeec0a2-6573-4f38-90e0-5c23f0186166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f85bbc16-7b76-4297-97b6-3e7955b8d265",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b0dca78-781d-4401-b2ef-ffd80239ac00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ab0ecd5-e122-41d4-b1fd-ee766b06f660",
      "documentation": "<p>Starts the asynchronous analysis of an input document for relationships between detected items such as key-value pairs, tables, and selection elements.</p> <p> <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text analysis is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text analysis operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentAnalysis",
      "responses": [
        {
          "uuid": "a63b8577-4f4e-4db2-9d74-bf09afaf664c",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72bf7d45-5874-4c80-aed9-4609a7b8beb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bed6ceab-f340-433b-a764-97a2c5b44ca9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6776fc8-edc3-486e-b6c0-b234a09ce037",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eb52fb6-6210-4265-a0de-d89a32e713dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c936f1f6-5bc7-497c-af55-c6994940c5c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeb84c4f-7661-4ba5-85ae-7b18a0f14161",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb643205-3c8f-46f6-a5cf-238fda9d174a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2437b5eb-b49e-4def-b6ad-aad859e2b6e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaef158e-8bae-496e-a654-c1270bd9ed07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58e515b8-50bd-4b6c-89e9-65c47fa89dab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22ffe35-b75f-46b3-a360-171f495bfb41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "befb266c-061c-4dbb-9201-48e29656937a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9831ee0a-87b8-477e-9c95-67eaa4e04157",
      "documentation": "<p>Starts the asynchronous detection of text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p> <code>StartDocumentTextDetection</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text detection is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentTextDetection",
      "responses": [
        {
          "uuid": "e1c10f91-9760-4d5a-adff-7c23f1e6c6f3",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bab604bb-6c41-40e1-9c6f-98b12f7bda79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f34f4f-f244-418b-bab2-7cf56c2a2714",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "471190ef-f35c-4351-9ee8-4225f5886d22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a499acf5-d161-4547-925e-1e4129a63c5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c246352-791b-4736-a44a-558b27ba18d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "925e9294-b5cb-42cf-a58f-95131c490f0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "494b5fdd-dfbf-43e2-8bb2-6071e4101173",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1411f6ba-d27f-429d-8c96-8a502f2e47d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf5c2023-f2b9-4a4e-8072-5968c97ea7fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60fcaeab-43d9-4872-aaf7-0b28d197cf2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3c712a2-a4a8-4b41-8128-6d0812912f9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "966e9c57-1e6d-40c9-b9f6-02b995900bf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}