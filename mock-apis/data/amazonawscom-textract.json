{
  "uuid": "fce85037-23f9-4c31-865d-e6eb9b071ca4",
  "lastMigration": 19,
  "name": "Amazon Textract",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fa82617b-9abf-4bff-a971-57217471335d",
      "documentation": "<p>Analyzes an input document for relationships between detected items. </p> <p>The types of information returned are as follows: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of <code>FeatureTypes</code>). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>You can choose which type of analysis to perform by specifying the <code>FeatureTypes</code> list. </p> <p>The output is returned in a list of <code>Block</code> objects.</p> <p> <code>AnalyzeDocument</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentAnalysis</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeDocument",
      "responses": [
        {
          "uuid": "1469a309-61a9-4f42-934d-b3b61e9e167e",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"HumanLoopActivationOutput\": {\n    \"HumanLoopArn\": \"\",\n    \"HumanLoopActivationReasons\": [\n      \"\"\n    ],\n    \"HumanLoopActivationConditionsEvaluationResults\": \"\"\n  },\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7013e696-9366-4e7f-acdc-ff193ae974c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d12201-945e-488c-9164-c2d997428ff2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f48a487-54c6-44f3-84e3-29e905e70b42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59fb92d1-4c52-4580-896d-e84949ac762b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3109b0-6412-4ea4-87fe-46113783b80c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4520d3c5-aeab-4baa-ab43-27355c4f3bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51e2f983-124c-4fe6-9a2b-6cffbffad582",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03c7e9d9-974a-48f3-b271-1011883d41f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1d30472-36a5-4aee-95c3-451a7645c6f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01d01a13-fa4e-413d-b0cb-5fa727f8a630",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "HumanLoopQuotaExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03503b93-8cbf-4ef7-9365-146b803e8807",
      "documentation": "<p>Analyzes an input document for financially related relationships between text.</p> <p>Information is returned as <code>ExpenseDocuments</code> and seperated as follows.</p> <ul> <li> <p> <code>LineItemGroups</code>- A data set containing <code>LineItems</code> which store information about the lines of text, such as an item purchased and its price on a receipt.</p> </li> <li> <p> <code>SummaryFields</code>- Contains all other information a receipt, such as header information or the vendors name.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.AnalyzeExpense",
      "responses": [
        {
          "uuid": "ef81f293-e9b4-49cc-9118-f5e1dfd80a4f",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"ExpenseDocuments\": [\n    {\n      \"ExpenseIndex\": {{faker 'random.number'}},\n      \"SummaryFields\": [\n        {\n          \"Type\": {\n            \"Text\": \"\",\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"LabelDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'random.float'}},\n                \"Height\": {{faker 'random.float'}},\n                \"Left\": {{faker 'random.float'}},\n                \"Top\": {{faker 'random.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'random.float'}},\n                  \"Y\": {{faker 'random.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"ValueDetection\": {\n            \"Text\": \"\",\n            \"Geometry\": {\n              \"BoundingBox\": {\n                \"Width\": {{faker 'random.float'}},\n                \"Height\": {{faker 'random.float'}},\n                \"Left\": {{faker 'random.float'}},\n                \"Top\": {{faker 'random.float'}}\n              },\n              \"Polygon\": [\n                {\n                  \"X\": {{faker 'random.float'}},\n                  \"Y\": {{faker 'random.float'}}\n                }\n              ]\n            },\n            \"Confidence\": {{faker 'random.float'}}\n          },\n          \"PageNumber\": {{faker 'random.number'}}\n        }\n      ],\n      \"LineItemGroups\": [\n        {\n          \"LineItemGroupIndex\": {{faker 'random.number'}},\n          \"LineItems\": [\n            {\n              \"LineItemExpenseFields\": [\n                {\n                  \"Type\": {\n                    \"Text\": \"\",\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"LabelDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'random.float'}},\n                        \"Height\": {{faker 'random.float'}},\n                        \"Left\": {{faker 'random.float'}},\n                        \"Top\": {{faker 'random.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'random.float'}},\n                          \"Y\": {{faker 'random.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"ValueDetection\": {\n                    \"Text\": \"\",\n                    \"Geometry\": {\n                      \"BoundingBox\": {\n                        \"Width\": {{faker 'random.float'}},\n                        \"Height\": {{faker 'random.float'}},\n                        \"Left\": {{faker 'random.float'}},\n                        \"Top\": {{faker 'random.float'}}\n                      },\n                      \"Polygon\": [\n                        {\n                          \"X\": {{faker 'random.float'}},\n                          \"Y\": {{faker 'random.float'}}\n                        }\n                      ]\n                    },\n                    \"Confidence\": {{faker 'random.float'}}\n                  },\n                  \"PageNumber\": {{faker 'random.number'}}\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab7a25c2-c612-4d82-9396-d21f3dc3bfc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a911027-d53a-46b9-b4fd-b9da93f5c0b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0340d80a-3d9d-41f5-a144-770eecc1fe27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7ec42eb-da5f-4f6d-a2ed-fbc3344da6c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "632b1dc0-13c6-44fd-b901-d72cf8f61cce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b24e2e-a316-42c9-a7e0-5f3676c30905",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c8a1bf-acaf-4935-8f23-134dcd3a5c2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8064a0b7-2ee5-4f65-afcf-35a9bbc00844",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2731814-551d-41d9-b6b0-a053c29bc366",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3377c3e7-c507-49a7-b36e-368d8f39465b",
      "documentation": "<p>Detects text in the input document. Amazon Textract can detect lines of text and the words that make up a line of text. The input document must be an image in JPEG or PNG format. <code>DetectDocumentText</code> returns the detected text in an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p> <code>DetectDocumentText</code> is a synchronous operation. To analyze documents asynchronously, use <a>StartDocumentTextDetection</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.DetectDocumentText",
      "responses": [
        {
          "uuid": "16ce4998-9ad7-421b-9f8e-9622005a2b4d",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b68b1c71-a102-4382-b38d-63d21602399d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29874cde-5a9a-4b63-ad13-bb29bc6703f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12d64f4b-0adc-4c90-aa44-f165864d373c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2ead155-9939-472e-a737-b858ec6cb753",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f914d75e-4358-4833-bc5f-055415a407e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eb5c9fa-a73f-48ac-8404-6252a1d77913",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa887f0-2513-4110-bdb0-d7763f3a8528",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e214e4b-741b-4d0b-ab7a-e8579b600de7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "892f9eaf-8fc7-4131-a07a-9ab42183d650",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac61d3f8-7227-4be3-9ad6-fc0cbd9d4aa0",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that analyzes text in a document.</p> <p>You start asynchronous text analysis by calling <a>StartDocumentAnalysis</a>, which returns a job identifier (<code>JobId</code>). When the text analysis operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentAnalysis</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentAnalysis</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p> <code>GetDocumentAnalysis</code> returns an array of <a>Block</a> objects. The following types of information are returned: </p> <ul> <li> <p>Form data (key-value pairs). The related information is returned in two <a>Block</a> objects, each of type <code>KEY_VALUE_SET</code>: a KEY <code>Block</code> object and a VALUE <code>Block</code> object. For example, <i>Name: Ana Silva Carolina</i> contains a key and value. <i>Name:</i> is the key. <i>Ana Silva Carolina</i> is the value.</p> </li> <li> <p>Table and table cell data. A TABLE <code>Block</code> object contains information about a detected table. A CELL <code>Block</code> object is returned for each cell in a table.</p> </li> <li> <p>Lines and words of text. A LINE <code>Block</code> object contains one or more WORD <code>Block</code> objects. All lines and words that are detected in the document are returned (including text that doesn't have a relationship with the value of the <code>StartDocumentAnalysis</code> <code>FeatureTypes</code> input parameter). </p> </li> </ul> <p>Selection elements such as check boxes and option buttons (radio buttons) can be detected in form data and in tables. A SELECTION_ELEMENT <code>Block</code> object contains information about a selection element, including the selection status.</p> <p>Use the <code>MaxResults</code> parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentAnalysis</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentAnalysis",
      "responses": [
        {
          "uuid": "0dd1c433-9a1e-4057-82b4-5bddb28ac88e",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"AnalyzeDocumentModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7c6889a-312e-44c4-b664-5df85cbb2579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d5a75f8-20c5-4602-9d78-bddb5fd33423",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09878ed3-2b43-4e5c-a62d-bdd15330f801",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4472f6e-b872-4a76-b7dc-5a3f2e7b2c6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dfc964e-3852-46f3-a93e-d3327e5d2137",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a5a1a68-314c-4c68-a380-add64f054b8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a1b4013-9989-4ca4-aa88-e476921ec408",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8581485-ab59-4178-9529-f5ccd3f7c983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ba35085-c44e-44a4-b295-d0f6666a926a",
      "documentation": "<p>Gets the results for an Amazon Textract asynchronous operation that detects text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p>You start asynchronous text detection by calling <a>StartDocumentTextDetection</a>, which returns a job identifier (<code>JobId</code>). When the text detection operation finishes, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that's registered in the initial call to <code>StartDocumentTextDetection</code>. To get the results of the text-detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetDocumentTextDetection</code>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p> <code>GetDocumentTextDetection</code> returns an array of <a>Block</a> objects. </p> <p>Each document page has as an associated <code>Block</code> of type PAGE. Each PAGE <code>Block</code> object is the parent of LINE <code>Block</code> objects that represent the lines of detected text on a page. A LINE <code>Block</code> object is a parent for each word that makes up the line. Words are represented by <code>Block</code> objects of type WORD.</p> <p>Use the MaxResults parameter to limit the number of blocks that are returned. If there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code> in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call <code>GetDocumentTextDetection</code>, and populate the <code>NextToken</code> request parameter with the token value that's returned from the previous call to <code>GetDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.GetDocumentTextDetection",
      "responses": [
        {
          "uuid": "0138938f-5f50-4f29-9bcc-2e66727b6c6c",
          "body": "{\n  \"DocumentMetadata\": {\n    \"Pages\": {{faker 'random.number'}}\n  },\n  \"JobStatus\": \"\",\n  \"NextToken\": \"\",\n  \"Blocks\": [\n    {\n      \"BlockType\": \"\",\n      \"Confidence\": {{faker 'random.float'}},\n      \"Text\": \"\",\n      \"TextType\": \"\",\n      \"RowIndex\": {{faker 'random.number'}},\n      \"ColumnIndex\": {{faker 'random.number'}},\n      \"RowSpan\": {{faker 'random.number'}},\n      \"ColumnSpan\": {{faker 'random.number'}},\n      \"Geometry\": {\n        \"BoundingBox\": {\n          \"Width\": {{faker 'random.float'}},\n          \"Height\": {{faker 'random.float'}},\n          \"Left\": {{faker 'random.float'}},\n          \"Top\": {{faker 'random.float'}}\n        },\n        \"Polygon\": [\n          {\n            \"X\": {{faker 'random.float'}},\n            \"Y\": {{faker 'random.float'}}\n          }\n        ]\n      },\n      \"Id\": \"\",\n      \"Relationships\": [\n        {\n          \"Type\": \"\",\n          \"Ids\": [\n            \"\"\n          ]\n        }\n      ],\n      \"EntityTypes\": [\n        \"{{oneOf (array 'KEY' 'VALUE')}}\"\n      ],\n      \"SelectionStatus\": \"\",\n      \"Page\": {{faker 'random.number'}}\n    }\n  ],\n  \"Warnings\": [\n    {\n      \"ErrorCode\": \"\",\n      \"Pages\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ],\n  \"StatusMessage\": \"\",\n  \"DetectDocumentTextModelVersion\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "187d4ab7-65d2-466e-bc84-80c21c2bdf2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3df8ce44-b348-48fc-a878-a1deb0ba6e4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8586dc5-604c-4a7f-abb8-c06797af32b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4166f68-d21a-4497-9c52-83eb4967d1fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidJobIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a1c50cb-a045-4fe7-8bf0-4cb27ddcd0ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81d1f9c4-7fdb-4f02-b301-22ee514d4dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "921dafd5-7b19-4449-98b4-72a3b0e57e9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b854b3a-0db9-4212-b1e1-8cce190e74b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44f74200-98d7-4bac-9e2a-1f57ddadacdb",
      "documentation": "<p>Starts the asynchronous analysis of an input document for relationships between detected items such as key-value pairs, tables, and selection elements.</p> <p> <code>StartDocumentAnalysis</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartDocumentAnalysis</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text analysis is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text analysis operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentAnalysis</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-analyzing.html\">Document Text Analysis</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentAnalysis",
      "responses": [
        {
          "uuid": "a18ec0c1-4e30-4557-abfb-2c91fffa7bf7",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d3874c7-cbcd-4f1c-b889-a8d26a00cbc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dc3efee-ca30-4b37-8c58-f2ab16f67be2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f049deb4-afe4-47d0-8252-a602813d6d3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71579796-704f-44db-9e9d-1604b6162b40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "333b8aaf-4dd2-466b-99b5-21343684e362",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0734ea7f-fdac-4008-8fc6-a31ef2ab6635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e675588a-3b2c-4c57-95aa-77a63ab79862",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05749b5e-d834-4ed9-a7a6-5f506e45c656",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa7699a5-5ead-4ddb-9bd1-29a9f8b938ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68fad46b-3ca9-4f28-82d1-bd0545144837",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86059560-7e2e-4648-884b-43b3d5616934",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6af3e525-5f33-4b1d-90a5-8f2b73295df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f638c1a8-1bb7-465c-a0ba-5502ee54d47f",
      "documentation": "<p>Starts the asynchronous detection of text in a document. Amazon Textract can detect lines of text and the words that make up a line of text.</p> <p> <code>StartDocumentTextDetection</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents are stored in an Amazon S3 bucket. Use <a>DocumentLocation</a> to specify the bucket name and file name of the document. </p> <p> <code>StartTextDetection</code> returns a job identifier (<code>JobId</code>) that you use to get the results of the operation. When text detection is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you specify in <code>NotificationChannel</code>. To get the results of the text detection operation, first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetDocumentTextDetection</a>, and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartDocumentTextDetection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/how-it-works-detecting.html\">Document Text Detection</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=Textract.StartDocumentTextDetection",
      "responses": [
        {
          "uuid": "2eb2d9c6-8d6b-4952-a099-698eb0336ce8",
          "body": "{\n  \"JobId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "735cec14-de64-4157-9cb2-69329eac5711",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d86ccbdc-e744-4cc7-9d13-cee633830bb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidS3ObjectException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df0a813-5dfb-470e-903b-5532003a3cbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidKMSKeyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff559647-1b1d-4a61-b5eb-1d1f0180d89b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d44e02d3-ef76-4e8f-9f98-a4aeb98861c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentTooLargeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e4fdb94-5c3b-46f0-983f-a848fd1d09bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "BadDocumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8de2c14c-6380-4a52-b657-4ce1e4db6849",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a83a0aa1-7530-4326-9c80-5caec7982c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ProvisionedThroughputExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "878cac3c-5805-4e97-88c4-78eb397d3edf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "331989ba-070a-4320-89a9-308b0c49181b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a762573a-46f3-4bf4-83d5-dae4b0c668f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "ThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02df7395-2496-44f3-aef8-7915c5679c87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}