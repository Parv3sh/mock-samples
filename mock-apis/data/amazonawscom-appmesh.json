{
  "uuid": "d7d03aa1-3888-4ce1-84a7-a7591271bbc2",
  "lastMigration": 19,
  "name": "AWS App Mesh",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5e4a6810-22ab-4b34-856d-d21945e7a53e",
      "documentation": "<p>Creates a gateway route.</p> <p>A gateway route is attached to a virtual gateway and routes traffic to an existing virtual service. If a route matches a request, it can distribute traffic to a target virtual service.</p> <p>For more information about gateway routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/gateway-routes.html\">Gateway routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "629e961b-3b8d-4388-900e-9f734773c375",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5f4dde5-631f-4738-8dcd-580c1987a504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83ff535d-0c47-4a9e-942f-00c5cacf714d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edea64fe-68c8-4862-83f5-72c5ed0ab1b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ee0ca70-60fd-43b4-8712-33eb74d9ceb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e90bd018-47e8-4565-865d-c50062d6d1ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0be26817-9fb5-4067-8f87-ec6a74949106",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23fa02a6-1ae4-46aa-b543-1cb985525884",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6bbefe3-aa3d-4161-ba1d-2ac5a8c8899c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f00b8a63-cea3-4cfc-b399-e5fdcb159987",
      "documentation": "Returns a list of existing gateway routes that are associated to a virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "1097c6cb-e55e-473b-b00b-e2b8ef886ddf",
          "body": "{\n  \"gatewayRoutes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"gatewayRouteName\": \"\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca1ba724-82cb-4a23-88c8-f2e30d87a486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2918e4c-e697-486d-a67c-80c54bccb4f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6224afb-a358-4963-be2c-b2d888a3e9a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97f38ed2-de1e-41e5-8344-9d068e88e06e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1b0f49a-5787-47b6-bc34-f94d48a46869",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7815b39f-74a1-4f75-8462-5fbdecb9d43c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0880ea58-2de5-4c97-9b2d-3f837b052598",
      "documentation": "<p>Creates a service mesh.</p> <p> A service mesh is a logical boundary for network traffic between services that are represented by resources within the mesh. After you create your service mesh, you can create virtual services, virtual nodes, virtual routers, and routes to distribute traffic between the applications in your mesh.</p> <p>For more information about service meshes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/meshes.html\">Service meshes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "947d668f-f025-45fe-9872-7a4e13d4c0f4",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "149a31fc-5470-4f9e-a30b-1de405afa4e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac0454bf-ae66-4e62-9d3d-6306cd646633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aed5983-4e14-4401-a35a-5c6c924b821c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43a6b789-2a5e-44fd-9327-bcf2a68d7841",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6163542-4dec-4979-b2dc-43a61721bf42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04922cbc-188a-4a02-9306-a5576f5c9dcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e9d0b7-785e-498a-8625-7912854ab2de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b64f7b5-4a94-4400-b679-9625c58670dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d51dc6c-b39a-4a81-b284-e6d29803660a",
      "documentation": "Returns a list of existing service meshes.",
      "method": "get",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "de52580d-ecc4-426c-b235-804e0b22274d",
          "body": "{\n  \"meshes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6331e1a1-1da3-432f-b5c2-662caa91f852",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbb934ae-3e4d-4ffb-98b5-18cf60954ce0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e08f0584-03e2-49de-b5d6-c46cfc450fcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8407757-fe5d-40fa-a214-183b84505712",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4782dc63-40b7-46e2-b4dc-c5ca8d57a04b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b00ef4b-8dd0-4ffe-b079-f5e53b058c93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38dd1ce2-ba0e-45b6-ab2c-d5bf6183e6fa",
      "documentation": "<p>Creates a route that is associated with a virtual router.</p> <p> You can route several different protocols and define a retry policy for a route. Traffic can be routed to one or more virtual nodes.</p> <p>For more information about routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/routes.html\">Routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "dad44aa8-5332-4c60-afc4-3856e857c638",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb4c4583-284e-43e0-89ae-b35ea5d588c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "288d4157-90c9-45b8-aa96-4852a3863b2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be81f849-b12a-4ee0-9f54-2d78feccc89b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f25b17ca-4b3c-4c1e-b04e-cc93db3db86d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4a65233-54a1-4959-bb30-7efac9dcf940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4551945f-bde9-49a6-8187-c198edc139b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09eaf6e8-63e5-4f4f-a33e-f073926df1e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e078383a-e78e-4ce9-9222-a73dff8ee759",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80013f1e-24bc-4542-abdc-c49ce3f28671",
      "documentation": "Returns a list of existing routes in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "953834bd-73f4-4a91-8e97-ac0733f3ab65",
          "body": "{\n  \"nextToken\": \"\",\n  \"routes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"routeName\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e929f2e-38a5-4a33-b191-b0163905d212",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa02a75b-7041-4ac8-8266-ad581d4adb5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0581b018-da8e-406d-9db9-a6685927ebf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e930fd0-c901-4e26-87d0-249b8a742e22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5555917a-82be-4340-a8bc-f74a95114edb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93de4b46-e976-42d0-90f5-d8683c925b84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec0f87c5-5f0f-445a-a44d-1724901f206a",
      "documentation": "<p>Creates a virtual gateway.</p> <p>A virtual gateway allows resources outside your mesh to communicate to resources that are inside your mesh. The virtual gateway represents an Envoy proxy running in an Amazon ECS task, in a Kubernetes service, or on an Amazon EC2 instance. Unlike a virtual node, which represents an Envoy running with an application, a virtual gateway represents Envoy deployed by itself.</p> <p>For more information about virtual gateways, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_gateways.html\">Virtual gateways</a>. </p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "e9ad9cf2-802e-4d94-abcb-612b8cfd50a5",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b36ecd9-cb0a-469b-9f8b-2dff93d4a966",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7595d779-03f2-4bc8-b503-59d702ad1032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f64cf37c-0a00-4bba-8b94-9f1f0048053e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "877f5b36-1381-40f2-b2d2-2f614548ca97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0c040fa-1e4c-4738-95db-83270762d02f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8267f885-55be-4de4-8333-16fac9a2e6b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2627490-7943-4d4f-a414-7cb47d507bae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85674e2c-f59b-47bd-b2d2-95847689425e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96d7140f-799a-41af-af6a-1402804583e6",
      "documentation": "Returns a list of existing virtual gateways in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "61d0863b-bd1e-4539-9fe9-214663c36d72",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualGateways\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec5d520a-7300-4cdb-a7df-86846710f215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e983b4c4-e4ca-418f-b0c7-76931b144eda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cf953d6-e7db-4e59-99ca-3b5626b1f84a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c7a0f3-2c1a-4ad9-babf-aac7a2826e5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6478cf63-98f8-40fa-912e-5313176b8e49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e55ec00-aedc-4429-8c8d-deb05f871cfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c9008bc-97d7-46ce-8a6b-1657edcaa006",
      "documentation": "<p>Creates a virtual node within a service mesh.</p> <p> A virtual node acts as a logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you can specify the service discovery information for your task group, and whether the proxy running in a task group will communicate with other proxies using Transport Layer Security (TLS).</p> <p>You define a <code>listener</code> for any inbound traffic that your virtual node expects. Any virtual service that your virtual node expects to communicate to is specified as a <code>backend</code>.</p> <p>The response metadata for your new virtual node contains the <code>arn</code> that is associated with the virtual node. Set this value to the full ARN; for example, <code>arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp</code>) as the <code>APPMESH_RESOURCE_ARN</code> environment variable for your task group's Envoy proxy container in your task definition or pod spec. This is then mapped to the <code>node.id</code> and <code>node.cluster</code> Envoy parameters.</p> <note> <p>By default, App Mesh uses the name of the resource you specified in <code>APPMESH_RESOURCE_ARN</code> when Envoy is referring to itself in metrics and traces. You can override this behavior by setting the <code>APPMESH_RESOURCE_CLUSTER</code> environment variable with your own name.</p> </note> <p>For more information about virtual nodes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_nodes.html\">Virtual nodes</a>. You must be using <code>1.15.0</code> or later of the Envoy image when setting these variables. For more information aboutApp Mesh Envoy variables, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/envoy.html\">Envoy image</a> in the AWS App Mesh User Guide.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "633b6f75-c3d9-4a4e-91da-1cd4ea7f1d5e",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "573db0a5-74a4-4a1c-a4b7-55630602dc4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "404ba959-b853-49b1-a230-11a0c9818cb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad89c1f-686a-4092-8d44-d06f506753dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55517ee6-e7cd-4a86-9b79-233d69b79168",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5624518c-04fa-4bf8-ac9a-bceeb91be95f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5714e73-964c-43c9-bfa9-046fe55fcdc9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e8c3213-08d3-491e-844e-a5149bf6b3c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e0bdf7a-d1b2-4118-8bd1-17fbfb701fed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06d75a86-850c-4155-8ebd-50878622b1ae",
      "documentation": "Returns a list of existing virtual nodes.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "dc304d23-770f-4ccc-8804-bc3b0d249dbd",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualNodes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualNodeName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35816323-d091-434c-8120-12423105d8df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a10ae8d-ac05-499f-b5a5-0adcf108ffbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9139430a-1306-4330-8ece-bc4a90cb05b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b30f21de-e63b-43e5-b673-6cb1f019abc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aefd7144-8826-438c-a262-b395c3c631d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bd928d8-489a-4736-b9af-e222e7f961da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4252f3fa-02e1-4eb4-8aa8-6a6545b5778f",
      "documentation": "<p>Creates a virtual router within a service mesh.</p> <p>Specify a <code>listener</code> for any inbound traffic that your virtual router receives. Create a virtual router for each protocol and port that you need to route. Virtual routers handle traffic for one or more virtual services within your mesh. After you create your virtual router, create and associate routes for your virtual router that direct incoming requests to different virtual nodes.</p> <p>For more information about virtual routers, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_routers.html\">Virtual routers</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "bf54489f-22bd-466e-9241-0f8f17539bf5",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727f7608-87c2-4999-a446-0f898a854d1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "816c8e62-91d9-41db-857a-0b14f5abcefc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77c6ab85-2f71-4ee2-b028-19704d6ffabf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9ce586e-1f74-4e0f-8b0c-a3675715a321",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f03dea64-2580-46ca-979a-97b59b03a46e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d09059e-67fd-4f11-ad94-616fc34952f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "342db3a3-6d46-48ce-ab40-5001fea8e959",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ccae54-1aad-490d-b733-e83d6183b0e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f2853aa-c6a6-4bc2-be5f-66fecdbf993a",
      "documentation": "Returns a list of existing virtual routers in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "a7fd8891-b121-4294-bf98-008695f1ef64",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualRouters\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cd97aaf-7e40-4fd0-83f4-a34c334ec982",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bda20cd4-2a85-48ee-912f-3bddbe8bc4f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54274af5-a0f5-4597-ae30-898869479faa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7984bfff-c6be-48e4-8e4f-7dc662f01e5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6f70c5a-3c22-4008-84da-81b5ff1d2aa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3553fd06-06ed-4c41-8f7d-eff63f3ce525",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c41b07ae-afe2-436e-b1cb-0f15dcfbfda9",
      "documentation": "<p>Creates a virtual service within a service mesh.</p> <p>A virtual service is an abstraction of a real service that is provided by a virtual node directly or indirectly by means of a virtual router. Dependent services call your virtual service by its <code>virtualServiceName</code>, and those requests are routed to the virtual node or virtual router that is specified as the provider for the virtual service.</p> <p>For more information about virtual services, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_services.html\">Virtual services</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "d90d9a70-b5b2-43fe-b600-d637810efa09",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd189bec-e7e5-40ef-80e1-ae8f4af4a473",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afe455a6-1e9f-4737-b996-b81569c6d881",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "149896f1-ca96-47f1-8bff-70f449f993dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55cbedb9-87e5-4b5e-8196-8ddce31b9a84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6896c353-d640-4bd2-b300-f821437e9f19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11d8bbfb-28a4-4f94-b4ed-b2a95ef4036f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b6432c5-881e-43c2-a738-aaa369ab41ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df5e1e9-56ef-40b2-b93b-13df51d2fcef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2353b283-308f-41fd-8fd0-89db753a36a7",
      "documentation": "Returns a list of existing virtual services in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "59cb79cd-b0ae-4bae-b667-82eb965e5eee",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualServices\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualServiceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eac5c66a-c085-4772-ac09-d44d833e3564",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "790490b0-0dfd-4298-a9d3-23442f54bdfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4384336-90a6-41d0-a60d-48ce3bf65848",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84a722fc-88ec-45e6-9df4-92d2ba1d7e41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1676ae96-b9d0-460a-b800-afd38a25e527",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f25a50c1-963c-4d5d-970b-eb40e7380863",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65540bbe-97bc-48ca-8db6-e7b92076d602",
      "documentation": "Deletes an existing gateway route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "0bf67ede-5a8a-4e74-8173-66707d827e23",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13d8f7b1-48e9-4ed8-99a4-f6ec707bf15a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "395a7380-4ed9-47f1-9cc8-56d7de0d05ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38322457-7668-4161-9a6d-ce00e3cf0be8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f89976d7-1b6e-47a0-8102-bb5f2717556f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a563f58f-0aa1-4632-af25-7178dfa9e07d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a9e2c63-f9bb-4e0f-a54b-5a1c1be32a0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79364693-4dcd-42e1-b2d2-49cacbeb64d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f07b2cfd-4505-4ff7-8b29-afb3a1fc121d",
      "documentation": "Describes an existing gateway route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "d1ef3c7c-a59e-4cf9-88c7-2080dfd7ca35",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e09e4d76-968c-42cf-a302-bc7667db7225",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27d917f9-ad90-4611-b924-00cfbde38cd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d571594-2f8f-45c1-b410-7987d1f24893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52d76923-3bd2-4952-ac00-d420706371d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ec7755d-2cc8-46df-b50f-65345d9239bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7d663bd-abcb-4e74-b31a-d72c6da2a4be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65ea720c-2a9a-46b3-b8b1-fd67bc900b33",
      "documentation": "Updates an existing gateway route that is associated to a specified virtual gateway in a service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "4abb7f24-5b43-4e85-8dac-d42685cb1791",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcbc99f1-c326-49f7-b3cf-a9b917417fef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2376a3a1-bd66-48a6-b094-579201cb7521",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ecb0c34-f8a5-444e-a82a-f7929d1c8817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac8380f7-fb09-460f-a809-4ddbdde4d3ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d951b04c-b8ee-4fb3-aa2d-5b8254d98640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cddd3f31-0623-4aa6-b103-1496f02d5444",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a01389b7-1a9c-48ea-a303-ee95904d237a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "491d98b3-eb79-4437-8efc-6dbcec220bc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51536767-8f00-47aa-82dd-8a9a5aba638f",
      "documentation": "<p>Deletes an existing service mesh.</p> <p>You must delete all resources (virtual services, routes, virtual routers, and virtual nodes) in the service mesh before you can delete the mesh itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "bf1fe11f-e0b9-409e-a7ef-8fe9b9af6929",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c25ab636-c4e7-4728-b351-de1e20bb9227",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccfb591a-69ff-42e2-91a1-63ebaf1d0ed3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5577cc5f-baf4-4872-8430-d7863b410274",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170a1e90-eab6-40ec-9579-9cd8a533351c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "721f33c0-fa1e-41a1-b751-0f4585e70fbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a76b1909-6911-4055-846b-45ed74a2b8bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cacb54a-8e1f-4a5d-b18d-a13b2816fda3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68d19fb9-52c3-4f3e-9d1d-b45f6a151294",
      "documentation": "Describes an existing service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "6159a316-c7a5-485d-baf2-952a135bb509",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eb2c407-70cd-42cb-8371-e89695ad1a00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21156db2-e4e7-4bdd-bc09-60e99a626247",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c63ff91-bf11-4e02-ba94-032a7de9f7a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc50020b-964c-45dd-9df1-b66255c081de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c146b507-9d4e-40f7-868f-5365f82bf625",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8128009e-9afd-406e-8979-46af903a8cab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8154958-2610-47f1-b4dc-a256825e1e7f",
      "documentation": "Updates an existing service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "70095c5a-00f1-4963-8cc4-e93401ce5571",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fef240f8-24a2-4039-b01f-cf34f73e0eaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b04303e8-0cbf-4696-9984-011487852b16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0aac7615-956b-425d-b25e-27a9ed0f2885",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86683d3b-5151-41c1-8a36-4f3531e9afda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf3b2413-ed93-4f10-b2e4-d66d56c627e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e18bd92-ecf5-4b90-b801-dbf48088d26e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47468ea8-ed22-4c1d-95d1-cbff9b21da89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ad81dfe-1b50-493c-9ee9-a03d3d88538d",
      "documentation": "Deletes an existing route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "771ad082-387b-4d52-b9fc-06ebfb4f9426",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b61bf02a-661a-4959-a7b0-d94f25888507",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b506eef9-d24f-4355-a3c6-8fe65c733bb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b12ce7a-fa34-4cec-bcad-7fb03201b243",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e58411a-74b3-41b1-bcee-160ff00034dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "293c8a34-ea5d-4f5b-8d96-72d0dce51dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e513c770-bf5c-4b73-8a59-6026d47b79ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "661807dc-35ca-4852-b847-46c126ea9fd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdf13491-561a-40b5-a1ca-8fd146ea74db",
      "documentation": "Describes an existing route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "8cc67fda-9361-4995-b32d-d2887276ed6d",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff2155b0-1f7b-49c1-af62-03099b67865f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4024a5aa-5582-4c1d-aff9-34cec5f651ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54cfc7c1-f8a3-40d8-aa06-d3e1f52ac0be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce134a57-238c-449c-a341-4f0dac52435a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a65093a-f679-46f4-9093-4d2fb58ff6dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af90248-621d-45eb-9965-d761a41e0902",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f28ff490-bc2e-49d0-bcce-9327d9c1079b",
      "documentation": "Updates an existing route for a specified service mesh and virtual router.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "c76e0fdf-02dd-4ae1-b552-05b4cf3228e5",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88ad4c2a-3b19-4e0e-b97d-983b06b72fc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bcf11cc-f655-44cc-918c-d4fd15b90789",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eb7e8d9-ed6a-4b3b-b71b-61cd6e4dee8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d011ca07-483a-4ceb-8f00-fecfd7fd0b0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f509e7b9-b67c-4959-a0e0-f0254fc391fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f0f34db-9906-4d70-a24a-645e1aa67fd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eaedacc-a2e8-4a00-83e2-99bc3b9426f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b50695e5-3737-4bca-a3fa-bff7890d8597",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7bdfb0c8-43ea-43c1-9e4a-c2facb58c5b8",
      "documentation": "Deletes an existing virtual gateway. You cannot delete a virtual gateway if any gateway routes are associated to it.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "bfcf7b13-aa31-498c-b81c-ca75e0813497",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5df7c0d-aeb5-4715-92ff-f4e4cb86209b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a620ef94-b01d-4823-9d53-420f8bc68787",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b99a4d8c-52ec-46bb-bfbb-e29d2008c04a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db76e462-c313-4015-8742-d8d70977dbab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afe13b1d-1adb-42a3-86ea-417792aac42e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c841573e-1d46-4983-94a6-1f04a544d0cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f60c99ca-8a9e-4f1e-a8c8-92e56b1d1bf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30983076-2e32-420a-8cfe-661d38940c44",
      "documentation": "Describes an existing virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "86a24bdd-64bf-4b9f-9d85-8dc528bfe3f2",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75304c89-6b74-4b5a-a046-ed192fdad449",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a4f0026-f81d-44e9-badf-f9e0bf6fb5db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16752098-f0ed-409d-b902-723c927cb084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2d8d4c8-7932-4650-bf3f-c9ad81feb830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3853af6b-ed03-4469-ab81-d21d736fe860",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0887bdb-ba47-4453-903f-0f38213469e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11e931ec-cbe4-4968-b210-715eb38ade18",
      "documentation": "Updates an existing virtual gateway in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "dcac29ef-811a-4df4-9e16-7c485284b682",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cfbe714-7885-41d0-b160-c6ae44c17b64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1ebb446-c64e-4f74-8f2f-3c09ef6fb293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f633524-8b18-4bc8-8ce7-608205d5a284",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "222b20c9-c18f-4da8-bb8d-8ec21768713c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d319917e-99e5-42ae-bae0-014b35481e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0390a055-3f78-4dee-8a17-6c90a3b2efbc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53e6d50d-0c57-454c-8769-8341fa21c90f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fab6192-775a-4cc7-bc71-4179b181310b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45e3acd6-0d57-4612-9a9f-ac4c37588ca7",
      "documentation": "<p>Deletes an existing virtual node.</p> <p>You must delete any virtual services that list a virtual node as a service provider before you can delete the virtual node itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "87d3cf47-640e-4a7f-9d86-0ff9636c6433",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b983c3-61a9-4178-b1e3-36e410a2df51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd9e6b4b-056f-4558-a1de-5e28b7dfae5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74eef565-f04a-4281-9b79-5d8a13904cdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6a9cc0e-aa5d-4be1-9639-16996766115f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd6ac19b-1be1-45c7-8944-0895f2bbbe28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "329b9f2f-57bd-4cd1-9fc4-a5bdd1eaae4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49b01055-7f1c-4490-b23c-dfaa9f23ebfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb5d655a-b802-479d-baec-716598e5cfeb",
      "documentation": "Describes an existing virtual node.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "d1c16559-f4cf-412c-9d69-03f212df1242",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77ae9b90-4013-4611-b085-ffd64ec6bd42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96968e4c-6e2e-4514-9a5b-7b831549b2b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d748a7f-1e2a-4fc3-a1a2-cb01e1919fc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3131c753-6785-419a-8892-e550613b0523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de02d48d-36ef-4735-bb0d-5ac658f6fb73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee529f7c-daca-4189-96e9-9eab740b0576",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8e36cae-d951-4f29-8e50-b5b85b41be99",
      "documentation": "Updates an existing virtual node in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "2e8e03f1-7156-41c4-9c03-333a19029ec4",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1a306cf-0971-46e1-922f-5dec8a11272a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8e304f7-198e-44cc-a787-bfa144d62aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3ed5c85-3037-4eb9-bdc4-4cad45909c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebef69d8-a2ba-4f98-9573-d57c6407747f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2695ca9-3695-4c9b-939a-59f7ffef0aa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b89b24d-69c3-40a4-8145-c5ce2916908a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1b73947-7db7-451b-a025-fb7c5320eff1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f12ee61-109c-43b6-8c64-b3c4fd72b87f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72b519f1-feba-4837-be20-14b59eafd140",
      "documentation": "<p>Deletes an existing virtual router.</p> <p>You must delete any routes associated with the virtual router before you can delete the router itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "358c4b91-3bb4-4fd0-9132-a6c2bef1fcc2",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6537e6c-068b-492e-8dc9-da5425cee1cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7a9e464-dec6-4661-9c30-932bf8f86ecc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f766d7d-2b85-434d-a912-ab65db1bdef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef208d0c-c45d-406d-9fa4-9d3a2de58f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d679aae-952e-4603-b6ca-bf9d2c536073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca2d699d-046b-4da3-b06c-6e5070265460",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "987e6b38-fef4-4333-9ecf-1f9e4866923d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "797836ad-ec51-4c0f-b74f-830a54d96369",
      "documentation": "Describes an existing virtual router.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "06245183-54e4-43f0-80e6-71be0a01bea7",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e525490c-41f0-4aae-9674-30973586d668",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f1ec731-a563-46e3-9222-80512bbfcd64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0310994-6625-4140-b40b-03cf57fd178d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4264baf9-d51b-4f27-8ee5-f60225eff1e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39d1a1fd-4fd3-480a-912d-5e765da7f90e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2b0a0f0-11be-4ecb-b659-de9a8c3ba35a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d4ff687-4c80-4938-a77c-453255c7ead4",
      "documentation": "Updates an existing virtual router in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "1049f923-96a5-4ee7-8133-7b7697d59722",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "457598ca-12dd-47f4-9486-4e70b1780b11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c70c3703-476c-426b-bb34-bdd132bba8f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e14f654-e4aa-477d-8a88-582a917f7657",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c2adb00-0ba0-4a6c-8ecf-f34499705999",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f895bf85-c524-46a5-80ce-1213fb3a1211",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "494a7728-58be-4715-b75b-15c50ad1ee8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "428ae982-e8ac-433c-a540-905417797453",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8671383-0406-4a46-b2bd-a4364c7d4400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd92b27e-fde2-4926-b16e-bfa083b50518",
      "documentation": "Deletes an existing virtual service.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "43bbc136-18e8-49c5-98dc-f716d415fc89",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12ea0ff3-2c3d-4c25-8f51-af75f42aef04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5d1eb3f-a4a2-4b54-81f0-2674a6c58402",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2f10752-691d-43e9-997b-27bea982968e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "821123d8-7454-4dc1-a20e-6808d64fffd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "361f0cf6-03b3-4ba8-b792-b7dbd7ae1069",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d235bf8d-aa25-4602-b91b-dc808762260f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3050e76c-0fcf-41a1-b656-eccfc51d9f67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65ec1f6f-89c5-40d5-b456-83d60395f52f",
      "documentation": "Describes an existing virtual service.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "12f0c8c5-39f6-4f86-982e-0b08e46d4ef9",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9bfcc32-8c7e-45a5-8c51-67bcbfc90d48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22d394ab-e43a-4128-bb1a-bb46afd88581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6ed0330-2574-4e2a-81a7-95a9465c9f46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02346de7-74b7-49fa-bd58-cd23f86956f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c0f2957-57ea-4ad9-b7c7-876318a91e98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a05bbd61-041f-43a8-8484-8bf7ca2fecb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebb54792-13dc-407f-aaef-b8deccf0621e",
      "documentation": "Updates an existing virtual service in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "2c640185-a043-445e-a6c8-1cc597e07b22",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a31a8434-8424-45dc-b935-0204ded3bb18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2de69c28-4f24-4a37-8ef4-e12648737c4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06d0f4d6-b5ac-4d31-ab2c-b525d2b8ab21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c97721c8-9393-4d96-9212-1f34ffdd6ba1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4e4085d-188c-4c6b-8e4e-d937ad0e7f06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dcc0a04-b810-4741-8069-7bedcaac4ce1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5852561f-2263-412a-9d4c-9ed47d367da9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcd6ce39-4fe4-4fcf-9e37-694d1f4ea286",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eba7b89-ee45-4ce0-8d91-a72eaa91b41a",
      "documentation": "List the tags for an App Mesh resource.",
      "method": "get",
      "endpoint": "v20190125/tags#resourceArn",
      "responses": [
        {
          "uuid": "ff5d03a0-cb8a-4f4a-a869-874551d67706",
          "body": "{\n  \"nextToken\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bcb4c13-3881-43d4-b0a2-d428d77bb675",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b6ff2ca-9e57-41e9-b183-24d8d3db099a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c35db3ff-daa0-44a6-b7cb-3c687fe00453",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f713c377-0c59-4dc9-b852-221f960f5f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7de9e74-290b-49ed-a9e8-f43c5aa48e97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a0ca04f-14be-4ba9-b383-61853ba13a27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "793e2680-7732-411a-abfa-19fa9e49838e",
      "documentation": "Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource aren't specified in the request parameters, they aren't changed. When a resource is deleted, the tags associated with that resource are also deleted.",
      "method": "put",
      "endpoint": "v20190125/tag#resourceArn",
      "responses": [
        {
          "uuid": "3ac6d775-99f2-4459-b1f6-f3a3b1a005d3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16b19c78-7955-4274-8af0-2d52c30acd85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f26b399-a5dd-4958-984f-4c272a105484",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41660bf4-e13f-4bfb-aa45-40ec02972190",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bf30ed6-7dd8-4bb8-ba9d-f2c642315882",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56ffe9e8-7a0b-4662-aa93-15209c3dbf11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "634df120-9404-490d-81da-3a748518cc5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96138a7e-13d2-4ee6-ac79-d19013ed27af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f56ed725-c3f6-4660-9ad0-3dc4a77dc377",
      "documentation": "Deletes specified tags from a resource.",
      "method": "put",
      "endpoint": "v20190125/untag#resourceArn",
      "responses": [
        {
          "uuid": "317cc648-5b4a-4033-8adb-57e618d86e8a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2ae215a-55a5-4379-8077-e34094b185df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62ca0a06-d1d0-4c86-a82d-f948ac5776a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dc5c5b6-047a-4455-a515-34b27a8fb2af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e39b51ed-2be4-4e4f-b6f6-1ee69b4aa952",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f41d710a-2491-4c84-a46f-322f5e820e2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1af5c2b-57c0-4545-b434-6a07975bd98c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}