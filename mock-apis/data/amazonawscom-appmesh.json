{
  "uuid": "f44d4c08-fb48-40e8-bffe-ceb6c07f68d4",
  "lastMigration": 19,
  "name": "AWS App Mesh",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4f522248-6b0f-4f1a-b905-cb7f6cc20da5",
      "documentation": "<p>Creates a gateway route.</p> <p>A gateway route is attached to a virtual gateway and routes traffic to an existing virtual service. If a route matches a request, it can distribute traffic to a target virtual service.</p> <p>For more information about gateway routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/gateway-routes.html\">Gateway routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "771df853-c065-4fe1-94a0-82c7078cfdf4",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "626412f9-2523-49b0-b3d1-28da824a3cdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "933e7462-ab95-4263-a724-f6798b1f25f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "189001df-c8ec-4c83-af56-7d71132089d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14d0b3d0-7f09-4b1e-8d27-4e0d40e5dd40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67d22d12-dd66-4aca-9b94-175a37d0ec4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a31c665-52e5-4066-a1b4-95ea55c80f51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35a69948-761e-413f-a69d-41c5562d698b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ec703f3-8206-43ec-a2ce-b7926f14e3e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afb2e28c-c99d-4e40-b0b7-46f1750b928f",
      "documentation": "Returns a list of existing gateway routes that are associated to a virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes",
      "responses": [
        {
          "uuid": "98538ee5-8e17-4bbf-bd0d-0742ec16dd01",
          "body": "{\n  \"gatewayRoutes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"gatewayRouteName\": \"\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dad0aa2-2178-4069-8aa6-5d625f005165",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "655ec0e4-40fa-48c7-82b9-5f82278d4a58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5a10e3c-7143-45e6-a201-c5696f0b7fc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb2c4f05-7bfa-4adb-b8e0-04e9455b0925",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a70ba08c-5c5d-43c2-9aaf-e5be79536efa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e82b71-0e67-4add-a4dc-e9223ad8af73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f9ac2b7-4894-4c9b-9057-3aaf0a0a4a6c",
      "documentation": "<p>Creates a service mesh.</p> <p> A service mesh is a logical boundary for network traffic between services that are represented by resources within the mesh. After you create your service mesh, you can create virtual services, virtual nodes, virtual routers, and routes to distribute traffic between the applications in your mesh.</p> <p>For more information about service meshes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/meshes.html\">Service meshes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "0602a22d-a937-471e-84b9-03606428135b",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f6ace9c-283d-46fe-b7ab-e1203a865209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f84126e-458a-461c-9816-fbccd6365d62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8998cd05-de57-4b76-84aa-1f8cbf73fe4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20a61c28-0968-462f-af70-e4c80626110e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "262c399f-948a-4b4d-a3a7-ff9ab6a797bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b3a9d96-fad6-4d63-b09c-823e3d28492e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc6a0ff0-eee4-4703-9670-49d7f79c47af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "146979af-ecb3-4a8e-806e-676016279f61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8128e559-8928-4405-b7bd-5c5b9cff7381",
      "documentation": "Returns a list of existing service meshes.",
      "method": "get",
      "endpoint": "v20190125/meshes",
      "responses": [
        {
          "uuid": "1d45601b-f596-4c93-a485-719caa3f657a",
          "body": "{\n  \"meshes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}}\n    }\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d6bbaf4-abc1-42ac-b82e-a632c0d1a123",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32b769b2-d72d-4a19-a8b9-7d11db179ed8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "806996bd-5337-48fa-b548-0f00e176a613",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c04d45f9-02f8-4ad1-b153-d8a0d97d3391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6db7b3b-6368-47d5-a5f4-1e9ffbee7baa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c350104d-c8ec-4d11-97ca-9ad1dacb0434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "107c3e0d-0a42-494b-ab0d-71ebe4a34ac7",
      "documentation": "<p>Creates a route that is associated with a virtual router.</p> <p> You can route several different protocols and define a retry policy for a route. Traffic can be routed to one or more virtual nodes.</p> <p>For more information about routes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/routes.html\">Routes</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "3bede4ed-1b79-4af7-8ceb-bb51e95b9b49",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb876287-c1af-47c4-ba77-4785ab1cdcc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a40436bd-7472-4328-8fda-1615f50641f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c9b4320-ed8a-499b-bba3-3651af37147c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22c916a4-ba5b-4a66-a352-e1baf0f1baa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12c83536-92c8-4203-a792-c2c26204a39d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87ce24fa-eda9-4c6e-bf0f-ff2b7c5a5fd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb7b8c79-570f-45df-a050-fab939212a93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8099bf82-e337-45fa-a660-e4141fb58a3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f76894b-265a-4f68-bc06-561fd0a07377",
      "documentation": "Returns a list of existing routes in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes",
      "responses": [
        {
          "uuid": "04895832-abac-4d92-b900-e252b8bb42d4",
          "body": "{\n  \"nextToken\": \"\",\n  \"routes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"routeName\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f589c40f-5216-4711-bac8-66a230910b4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07ef2abb-ce91-4850-a62a-277688dd3c2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "454d5106-49d0-40c1-beef-270426b1fef7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adb60e6b-7d37-4e1e-b17b-3dfddce291e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7f8ad5e-c5a3-46a2-89d1-766b8d979e69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "318a3474-621b-4191-97dc-43f788cdf182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ac8ada0-e621-46b5-95a2-a25b4c488145",
      "documentation": "<p>Creates a virtual gateway.</p> <p>A virtual gateway allows resources outside your mesh to communicate to resources that are inside your mesh. The virtual gateway represents an Envoy proxy running in an Amazon ECS task, in a Kubernetes service, or on an Amazon EC2 instance. Unlike a virtual node, which represents an Envoy running with an application, a virtual gateway represents Envoy deployed by itself.</p> <p>For more information about virtual gateways, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_gateways.html\">Virtual gateways</a>. </p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "5af25040-4dba-405f-9042-37077c9fa7ba",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a80f53a-e86b-4eae-a19a-91ca4a57d747",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f5afe1e-9647-4f3d-9efa-328ea3fe32a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f58f14a-ccca-4fa6-8f79-d2597f196074",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aea2f551-17e6-454e-a881-bcdca9082314",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70829c4a-cc7f-4a07-8000-7f9d3f20de94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25bfcd0e-7951-499e-bbb7-1346e6f6aea8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "545e5c5e-e0e5-4231-ab21-2fbd40abd973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ae5daae-2125-4eb7-bfaa-17455f22c8a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50599b19-dd2c-4d92-997c-20ff97a8be42",
      "documentation": "Returns a list of existing virtual gateways in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways",
      "responses": [
        {
          "uuid": "bc8c5119-82ae-4700-8670-ba7751a1db96",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualGateways\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualGatewayName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a8e537-e690-4d9e-8567-a6c46474e166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d55acfa-f8eb-45bf-8cd7-cca75cfcfbb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cdf73d9-2fc6-4026-93d3-0cd082aa7cb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9a5b3d-d912-4e4c-b204-a33e8edacaa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2270393-551f-4553-9a3a-0be41f085965",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87c8d496-eacf-4e98-b085-82c47fd3bfec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f04fa9a-905c-4bd2-8f66-44b7003abb4b",
      "documentation": "<p>Creates a virtual node within a service mesh.</p> <p> A virtual node acts as a logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you can specify the service discovery information for your task group, and whether the proxy running in a task group will communicate with other proxies using Transport Layer Security (TLS).</p> <p>You define a <code>listener</code> for any inbound traffic that your virtual node expects. Any virtual service that your virtual node expects to communicate to is specified as a <code>backend</code>.</p> <p>The response metadata for your new virtual node contains the <code>arn</code> that is associated with the virtual node. Set this value to the full ARN; for example, <code>arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp</code>) as the <code>APPMESH_RESOURCE_ARN</code> environment variable for your task group's Envoy proxy container in your task definition or pod spec. This is then mapped to the <code>node.id</code> and <code>node.cluster</code> Envoy parameters.</p> <note> <p>By default, App Mesh uses the name of the resource you specified in <code>APPMESH_RESOURCE_ARN</code> when Envoy is referring to itself in metrics and traces. You can override this behavior by setting the <code>APPMESH_RESOURCE_CLUSTER</code> environment variable with your own name.</p> </note> <p>For more information about virtual nodes, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_nodes.html\">Virtual nodes</a>. You must be using <code>1.15.0</code> or later of the Envoy image when setting these variables. For more information aboutApp Mesh Envoy variables, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/envoy.html\">Envoy image</a> in the AWS App Mesh User Guide.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "5c046a46-5a29-45eb-b2c9-a19b05f29e25",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db97ab6a-4a85-4d3d-905b-fe3005416230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5dac165-102d-4183-81a9-0e17f6b07b9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0b7a331-1913-4f83-9599-4a339531f309",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5263ea75-f4a4-44b3-b78a-97472e6621b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0defb2c7-7e31-4fbd-9cf8-feca2f158371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c125ce3e-eaaf-4e0e-a86a-33b9ef0ff9a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05260ad5-d88b-493b-864a-e9f08fa0b2c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81a943de-5730-4075-80de-2177af03f9f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b4ac02a-6e60-43e9-87b4-4636eb07b4b4",
      "documentation": "Returns a list of existing virtual nodes.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes",
      "responses": [
        {
          "uuid": "c1849c48-72c5-4296-8301-28c79cb11c46",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualNodes\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualNodeName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11f5bfd2-d94b-46f6-aa69-1bbf86306791",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3406934e-076f-4589-ae14-e8778f0abd15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2b26951-ca20-41d8-b85b-6da0aec83d41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52635337-eff7-45d3-8857-cf6e487e781b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e998e7c5-ae20-4aa0-9401-83b273fb6bcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02832b78-d6ed-4cd3-9309-7d5b57a9d140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f56a1e7-35e7-4396-ad73-8bd0e11ed26a",
      "documentation": "<p>Creates a virtual router within a service mesh.</p> <p>Specify a <code>listener</code> for any inbound traffic that your virtual router receives. Create a virtual router for each protocol and port that you need to route. Virtual routers handle traffic for one or more virtual services within your mesh. After you create your virtual router, create and associate routes for your virtual router that direct incoming requests to different virtual nodes.</p> <p>For more information about virtual routers, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_routers.html\">Virtual routers</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "2ad1997a-a6a2-4908-b151-baa1b5708ee1",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7475e0f8-750d-4a26-bd38-0778c18a1239",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "420e60eb-769b-4da7-b94a-b3981ba62d15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "155d2f47-1324-4eb0-a33a-8141c67e0a13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e44f7ca-4fa2-4b3b-949c-f7d3c5ddf591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0644524-9a22-4f17-a7d6-04aef4f32591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18158638-82c5-412f-885e-e40574503b9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6311e0a-c3f7-4a0d-ab4f-f59e2c264bf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c977e83-3aa5-4cf5-9e62-bd6bccad7ddb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1524f00-031f-4ae3-a259-ac08d9b31a24",
      "documentation": "Returns a list of existing virtual routers in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters",
      "responses": [
        {
          "uuid": "9c68b548-1095-40b3-b463-5ff447d4b91d",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualRouters\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualRouterName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf23e815-0a51-4414-8a84-e061004e2f03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6df81950-f204-4536-8773-207e0a256064",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f0b2037-5e2e-4b72-9248-91f7423908f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "167aa6b8-89a9-4c53-8d71-f2f292a655fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62cb7364-0960-413e-803e-9d9ea565f0a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0644e97-771a-4386-a6f1-94ce951da0e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48b5a6fb-2558-4466-9ae2-625fa602551a",
      "documentation": "<p>Creates a virtual service within a service mesh.</p> <p>A virtual service is an abstraction of a real service that is provided by a virtual node directly or indirectly by means of a virtual router. Dependent services call your virtual service by its <code>virtualServiceName</code>, and those requests are routed to the virtual node or virtual router that is specified as the provider for the virtual service.</p> <p>For more information about virtual services, see <a href=\"https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_services.html\">Virtual services</a>.</p>",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "ada726fb-1ff3-4c5b-9898-64db770ba77f",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a843ef8-359a-4a0c-86d5-6279ccdb7954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bdffb22-ae4a-47fd-96f6-cdb87c4aa04f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b1441f0-3317-40a0-9cc5-5cfc970953f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "285b27cf-68ed-44f7-81d4-3510a56399ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f6ee7d-6c98-4740-a263-90e7bc8fe3c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24ed42da-afbf-4221-b706-38cbc3ab2009",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb81be45-7330-49c5-a419-a531b366b3b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e097a5-be7e-4b25-9658-658eaed35ec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "125e5bc5-9b76-46e8-87a3-e6fdd0eede38",
      "documentation": "Returns a list of existing virtual services in a service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices",
      "responses": [
        {
          "uuid": "513b1601-657b-4bdd-ab9f-2192ba2b090b",
          "body": "{\n  \"nextToken\": \"\",\n  \"virtualServices\": [\n    {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshName\": \"\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"version\": {{faker 'random.number'}},\n      \"virtualServiceName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc2e9c43-302c-4f0a-90cb-f69707f68ccc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "920ecea4-766d-4920-87b6-4c185d5953d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a58432c7-7689-4985-88b3-6b4fded5aadf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78b8a2e5-8090-4934-b49b-f5997454260e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebfd02a3-40e8-43dc-945a-7480d50d91d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddffff77-a0ea-4daf-a318-0fec915746b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae2faba4-b67c-41f6-837b-e3f6cd773d9b",
      "documentation": "Deletes an existing gateway route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "3fe65fe2-293d-42fe-9319-3bf6d319edd2",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfa20c37-3504-4943-b56c-4866eb7bd28a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a6f0497-30da-4ae5-8328-18c9e4dd69de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91ce64ea-d5b3-42be-89ea-66e9892907fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8510980-ed02-45cd-a696-4e0ad590a314",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96322697-94d4-4060-96ab-940875d9d604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ce7637a-fd69-4134-af51-0ec8c22d2bfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a52f651-843f-4239-b9fa-233246fdeee3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e9f5112-442d-4969-8f07-28a59b962be2",
      "documentation": "Describes an existing gateway route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "3786a510-4f96-405a-970a-7fb2c648f85e",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "873666af-10ae-4975-8ced-ea14e60b6725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23ac9a47-1345-4a4c-a6d0-c687ffd0b50a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b3a777a-55d0-4871-8df0-ee96cd8b9082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cee383c2-6c08-4642-b66a-123dd74ace90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01bae22d-22dc-406a-9cdd-30d3705b1aeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "408c0020-5691-4c90-8149-596c41b32059",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb793df3-fb18-4014-8a48-f429c477c3df",
      "documentation": "Updates an existing gateway route that is associated to a specified virtual gateway in a service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateway/:virtualGatewayName/gatewayRoutes/:gatewayRouteName",
      "responses": [
        {
          "uuid": "2ba5a1cc-6d18-4edc-b222-6e91aa6d7e38",
          "body": "{\n  \"gatewayRoute\": {\n    \"gatewayRouteName\": \"\",\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"serviceName\": \"\"\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"rewrite\": {\n            \"hostname\": {\n              \"defaultTargetHostname\": \"\"\n            },\n            \"path\": {\n              \"exact\": \"\"\n            },\n            \"prefix\": {\n              \"defaultPrefix\": \"\",\n              \"value\": \"\"\n            }\n          },\n          \"target\": {\n            \"virtualService\": {\n              \"virtualServiceName\": \"\"\n            }\n          }\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"hostname\": {\n            \"exact\": \"\",\n            \"suffix\": \"\"\n          },\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"priority\": {{faker 'random.number'}}\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72360dee-9083-488e-bceb-cb162f711533",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6a965b9-7e9e-48fa-95b5-453e92cd07ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e10aa861-543a-421a-b095-97fa8c537c4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd09657e-d042-4243-9fcd-4003eea62e8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d54137c7-87de-4767-a2cf-138ed2dcff52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07bff73f-acd8-4cf1-977a-811174b65cfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b04bcbc-899a-4911-9e5b-8133f7f8b59a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a93dd908-9e7e-4e2d-9384-f39d042419bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd3f76c0-db57-487a-a8de-57de63cbc99d",
      "documentation": "<p>Deletes an existing service mesh.</p> <p>You must delete all resources (virtual services, routes, virtual routers, and virtual nodes) in the service mesh before you can delete the mesh itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "e116a662-71b9-4627-bf7e-bb0e71741e19",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d77b2e60-5c15-4c6c-bf44-b7f3cfb9774b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a02418b-3f30-4089-8c1c-0ed80b4264e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "156d2fe3-8a32-4e17-9454-d83aa9f5d0aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "837c938e-10a4-46f2-858e-c19e40a703ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7229b741-e673-463c-8095-553af979ed08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98d16e00-fc18-41e6-aea3-480127ef2336",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3097c46f-9530-4d49-9db2-f41276948dc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "817b45bc-0137-4bda-ad66-ce844d4963b2",
      "documentation": "Describes an existing service mesh.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "cb9296f0-8dc3-42bd-9410-64d912e7966f",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d19c37c-5a2b-4519-ad6e-aaaea23057d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d995421-5ab6-43ca-96c5-0af4f6411e7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "636642a8-af46-4725-bf3d-ce6b9606d381",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41e46740-4414-4b34-9ddd-f5d5e3b8f11e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46271b46-8250-4c79-88d4-9346c1f996af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21cc5d27-bde9-40f6-a594-9fb2c473264e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d77353ba-3fa3-416c-82b7-e9073288de0b",
      "documentation": "Updates an existing service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName",
      "responses": [
        {
          "uuid": "8f7a9575-a6aa-462a-bb87-3f2fa847321a",
          "body": "{\n  \"mesh\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"egressFilter\": {\n        \"type\": \"\"\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d65f6ed-f965-4ed9-b710-5cdab400f138",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecdbd717-a5c1-4604-bf06-f232deecedd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74542d9c-f61d-484b-94bd-4144bc5a08ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62e657b0-03a9-4af5-851b-021f4a6b8112",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e73996b7-437b-4a30-839d-85aa72e07a98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d719b9e2-9f7d-4ea6-9b71-d0ac1b4fb8c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48d78d6c-e65f-4172-8d4e-cfd2067bb452",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d48a16ce-b941-44d1-9710-980b12989745",
      "documentation": "Deletes an existing route.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "2dfc34c9-e8d6-4e2e-9a55-40a00fe02405",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "350b4bf6-1984-4923-bee0-52260214e500",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f9876a-cbf9-428f-ae94-1d1d8624e95f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddf2f639-b9ed-409e-b606-e106eb7c53d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e8d8639-6e51-41aa-8511-2ecf10bd6246",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ffd9711-1608-459f-8fd8-2c61f91664b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b5271a7-1681-4b27-a62c-1f563205b8da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "690e2116-bc27-4711-bd71-6d5157410dc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8139d93-ae02-4ec1-a51d-5a5bdae3d5f0",
      "documentation": "Describes an existing route.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "8bbd5209-e2c3-44e7-a8aa-01e7c6d0eb8d",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4394e506-a146-49ea-9f48-9a985d6846a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c421f150-c890-4ae9-a458-286f91dc78a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a9aae77-076b-4949-8319-fdcb96ab67a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71b57ff8-d521-4c4a-a065-2db5ac960b2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52930dfe-8089-4d42-b0ac-4e92a195244b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb81fbca-ff09-4ba8-a926-450974921fa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c600c88b-de62-49ce-bc30-25a20efea4a8",
      "documentation": "Updates an existing route for a specified service mesh and virtual router.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouter/:virtualRouterName/routes/:routeName",
      "responses": [
        {
          "uuid": "f5c9f691-b8af-4f50-9804-a1eb2a827134",
          "body": "{\n  \"route\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"routeName\": \"\",\n    \"spec\": {\n      \"grpcRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"metadata\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"methodName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"retryPolicy\": {\n          \"grpcRetryEvents\": [\n            \"{{oneOf (array 'cancelled' 'deadline-exceeded' 'internal' 'resource-exhausted' 'unavailable')}}\"\n          ],\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"http2Route\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"httpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"match\": {\n          \"headers\": [\n            {\n              \"invert\": {{faker 'random.boolean'}},\n              \"match\": {\n                \"exact\": \"\",\n                \"prefix\": \"\",\n                \"range\": {\n                  \"end\": {{faker 'random.number'}},\n                  \"start\": {{faker 'random.number'}}\n                },\n                \"regex\": \"\",\n                \"suffix\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"method\": \"\",\n          \"path\": {\n            \"exact\": \"\",\n            \"regex\": \"\"\n          },\n          \"prefix\": \"\",\n          \"queryParameters\": [\n            {\n              \"match\": {\n                \"exact\": \"\"\n              },\n              \"name\": \"\"\n            }\n          ],\n          \"scheme\": \"\"\n        },\n        \"retryPolicy\": {\n          \"httpRetryEvents\": [\n            \"\"\n          ],\n          \"maxRetries\": {{faker 'random.number'}},\n          \"perRetryTimeout\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"tcpRetryEvents\": [\n            \"{{oneOf (array 'connection-error')}}\"\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          },\n          \"perRequest\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"priority\": {{faker 'random.number'}},\n      \"tcpRoute\": {\n        \"action\": {\n          \"weightedTargets\": [\n            {\n              \"virtualNode\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"timeout\": {\n          \"idle\": {\n            \"unit\": \"\",\n            \"value\": {{faker 'random.number'}}\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc08a0da-167e-403d-805f-004c540c5968",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36818ea5-6a5f-47b6-af03-16ba96874ff6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c56d4d3f-a09f-442f-ac20-7f735447f156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4738d3c9-3f17-4a69-81c0-9ebaf6e40efb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40c077aa-5cce-451b-806a-ef445edc6bde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ec03f00-411a-44a1-8c37-5123ee58cfd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2048b5a-232a-4c55-a63f-16189711c4c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eddb62e-e013-4cc0-9dfe-8b543fd1ceb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b10096ff-5ecb-4531-ad5a-23fd33b2faad",
      "documentation": "Deletes an existing virtual gateway. You cannot delete a virtual gateway if any gateway routes are associated to it.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "5fb81df2-fb15-4832-8ee3-363d12310624",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d747d10-1c4d-418b-ab88-16be19127994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2369423-a92d-487e-bc84-b000d9f370cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95578774-448f-43b3-ad33-c4546b09c1f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72647b56-0d12-4b28-8831-a9aece48972c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d9c78f5-2dfa-4a0e-beb2-b17a3733978f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a395c0e0-680e-4bfe-b919-198194569875",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73dd0f2d-fead-4e13-a910-3e830dbbe85c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e8c36ab-8ce9-47ba-af79-e071e2eb01ad",
      "documentation": "Describes an existing virtual gateway.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "b25f97d2-1100-4179-ba6d-68ea09a3c766",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da8e51c7-6f4d-4817-8289-5acbb4301ca4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cea9fe25-5898-46fb-b665-ae2371b79320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f917c42-799d-49b6-837e-b0294e530d06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10de8ba3-7f25-4363-9313-3562623a544d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9a576be-bd2d-4d5e-b64b-2b6879e230ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5496806-ef5d-4d9e-b308-aabc26b5ea09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea936d62-45c5-4d40-88c1-c52393b234f3",
      "documentation": "Updates an existing virtual gateway in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualGateways/:virtualGatewayName",
      "responses": [
        {
          "uuid": "d280a671-bf09-42f9-9285-e5393b83424e",
          "body": "{\n  \"virtualGateway\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualGatewayName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fda54838-1fd9-4fba-8380-b46c6e46872d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac84f913-9799-4a28-905e-3ab57281b180",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e44a1466-bd93-49ab-acc0-ad177a2814ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b95f70f-16ed-4a9a-aa5a-89edec73644b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "465bd059-520e-4e78-924a-f6869487871b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2ebf7d-7d2b-4f50-81b0-ebd6e46a545a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c026e289-b067-45ea-8785-f78014e67075",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1bf7307-4d22-403a-8b00-72a8f244d459",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3de49a5-24f6-4ee3-adef-a3ba67dd2f8f",
      "documentation": "<p>Deletes an existing virtual node.</p> <p>You must delete any virtual services that list a virtual node as a service provider before you can delete the virtual node itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "61af3358-e36e-4096-bdbe-83831712bff7",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db0c214-c25d-4d01-93a6-873953ac91a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6903efe-3203-4196-a0c4-3d16f498912f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3550f6b6-e289-4fd6-8b15-bf2b330b6b89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "814fb065-6dbc-4380-a652-ba40e332469c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb6b1c3-2539-4ec1-bf37-be1ac40590ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64143d79-dbbc-4feb-ae04-a4b95b737cda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df29426e-ea0f-4eec-8e84-0ce6a541d435",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de0c7db7-90f8-4051-a8fc-07985607d675",
      "documentation": "Describes an existing virtual node.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "ceae800f-0291-486d-8c2c-b50e17d67c01",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4084eadf-76dc-469e-9af1-19ddcdf06c4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8007db23-288a-4c90-9bdb-6fe8b5432fd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e96c0b2-b048-4350-ade5-7f39e424c069",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8a26bef-02aa-4ce3-a152-1908dbf5fd3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9efa4d-5ba7-4a86-8c51-a7e0952a35f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b899c9d-de00-49b4-b849-ab8bee09c2f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "294292ae-c085-4bf2-92e9-28f77a29f2ff",
      "documentation": "Updates an existing virtual node in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualNodes/:virtualNodeName",
      "responses": [
        {
          "uuid": "2eeb8a48-0eeb-4be2-b1d8-b0834b573bd8",
          "body": "{\n  \"virtualNode\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"backendDefaults\": {\n        \"clientPolicy\": {\n          \"tls\": {\n            \"certificate\": {\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"enforce\": {{faker 'random.boolean'}},\n            \"ports\": [\n              {{faker 'random.number'}}\n            ],\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"acm\": {\n                  \"certificateAuthorityArns\": [\n                    \"\"\n                  ]\n                },\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"backends\": [\n        {\n          \"virtualService\": {\n            \"clientPolicy\": {\n              \"tls\": {\n                \"certificate\": {\n                  \"file\": {\n                    \"certificateChain\": \"\",\n                    \"privateKey\": \"\"\n                  },\n                  \"sds\": {\n                    \"secretName\": \"\"\n                  }\n                },\n                \"enforce\": {{faker 'random.boolean'}},\n                \"ports\": [\n                  {{faker 'random.number'}}\n                ],\n                \"validation\": {\n                  \"subjectAlternativeNames\": {\n                    \"match\": {\n                      \"exact\": [\n                        \"\"\n                      ]\n                    }\n                  },\n                  \"trust\": {\n                    \"acm\": {\n                      \"certificateAuthorityArns\": [\n                        \"\"\n                      ]\n                    },\n                    \"file\": {\n                      \"certificateChain\": \"\"\n                    },\n                    \"sds\": {\n                      \"secretName\": \"\"\n                    }\n                  }\n                }\n              }\n            },\n            \"virtualServiceName\": \"\"\n          }\n        }\n      ],\n      \"listeners\": [\n        {\n          \"connectionPool\": {\n            \"grpc\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"http\": {\n              \"maxConnections\": {{faker 'random.number'}},\n              \"maxPendingRequests\": {{faker 'random.number'}}\n            },\n            \"http2\": {\n              \"maxRequests\": {{faker 'random.number'}}\n            },\n            \"tcp\": {\n              \"maxConnections\": {{faker 'random.number'}}\n            }\n          },\n          \"healthCheck\": {\n            \"healthyThreshold\": {{faker 'random.number'}},\n            \"intervalMillis\": {{faker 'random.number'}},\n            \"path\": \"\",\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\",\n            \"timeoutMillis\": {{faker 'random.number'}},\n            \"unhealthyThreshold\": {{faker 'random.number'}}\n          },\n          \"outlierDetection\": {\n            \"baseEjectionDuration\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"interval\": {\n              \"unit\": \"\",\n              \"value\": {{faker 'random.number'}}\n            },\n            \"maxEjectionPercent\": {{faker 'random.number'}},\n            \"maxServerErrors\": {{faker 'random.number'}}\n          },\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          },\n          \"timeout\": {\n            \"grpc\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"http2\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              },\n              \"perRequest\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            },\n            \"tcp\": {\n              \"idle\": {\n                \"unit\": \"\",\n                \"value\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"tls\": {\n            \"certificate\": {\n              \"acm\": {\n                \"certificateArn\": \"\"\n              },\n              \"file\": {\n                \"certificateChain\": \"\",\n                \"privateKey\": \"\"\n              },\n              \"sds\": {\n                \"secretName\": \"\"\n              }\n            },\n            \"mode\": \"\",\n            \"validation\": {\n              \"subjectAlternativeNames\": {\n                \"match\": {\n                  \"exact\": [\n                    \"\"\n                  ]\n                }\n              },\n              \"trust\": {\n                \"file\": {\n                  \"certificateChain\": \"\"\n                },\n                \"sds\": {\n                  \"secretName\": \"\"\n                }\n              }\n            }\n          }\n        }\n      ],\n      \"logging\": {\n        \"accessLog\": {\n          \"file\": {\n            \"path\": \"\"\n          }\n        }\n      },\n      \"serviceDiscovery\": {\n        \"awsCloudMap\": {\n          \"attributes\": [\n            {\n              \"key\": \"\",\n              \"value\": \"\"\n            }\n          ],\n          \"namespaceName\": \"\",\n          \"serviceName\": \"\"\n        },\n        \"dns\": {\n          \"hostname\": \"\",\n          \"responseType\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualNodeName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2862fc2-dc2b-4541-929e-e9d369f8f980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43dd4e28-e201-43f0-9f20-82661d9a472c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc8e7362-ce44-41d5-93ba-794c040832df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "585263cc-001e-48a5-988c-720962c6e442",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3b787d5-a375-4bac-9b74-16e86961d3d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a0bee27-b7c5-4b39-accf-23dafd3c01cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f515f32-394a-4f0f-aade-ca54fb7387d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0f20430-355a-4d7f-975f-641382cba24a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c1efce8-3301-473e-b08f-0229d63a4e37",
      "documentation": "<p>Deletes an existing virtual router.</p> <p>You must delete any routes associated with the virtual router before you can delete the router itself.</p>",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "02589fa2-5a63-4523-97d3-b623bff16ba0",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3e256fc-6ed1-40ae-9563-d662b3bf61d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7c4d89d-2aaa-4388-ac88-3553e3a9d93f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e08f3a3-ad08-4c3e-aa8e-b05dd3f6fb70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d5f5e32-6058-4435-bc18-517724864265",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "276a17b4-f1a9-41ef-a600-c39b21056da7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a648ebc6-cc21-4472-8275-7b23b1de74a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d33619ba-5b82-470e-9632-cc6713bcbfc4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53178f4d-e734-4de8-a0a4-76bd92642fdd",
      "documentation": "Describes an existing virtual router.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "ad443187-a06c-4f12-ad1d-9a7d8b894424",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af4e9e46-4314-4095-bf85-b4379590d4ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93fe163-6d76-475c-86b1-7b1387ca27e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "732a2557-2771-47ff-82e7-c2470f73448f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d7522de-690d-4ef1-92f6-2f00d687be04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f90cebe7-dccd-4c00-8c87-bcb0739e2f2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88b1dc57-0786-464f-a2b6-6eadf591bf08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b054605d-5030-4f02-9d8d-2fb09abd669f",
      "documentation": "Updates an existing virtual router in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualRouters/:virtualRouterName",
      "responses": [
        {
          "uuid": "c07c7078-b537-42f0-ae9c-5b32b3799a6d",
          "body": "{\n  \"virtualRouter\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"listeners\": [\n        {\n          \"portMapping\": {\n            \"port\": {{faker 'random.number'}},\n            \"protocol\": \"\"\n          }\n        }\n      ]\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualRouterName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "580b0985-0fe8-4884-bce5-7d7d02ae4552",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7053e644-0018-4fb0-9a5f-0c909d845323",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15787bcc-35da-4792-9f27-46863e8fe697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0ebab73-2104-45de-89f5-a4adb2aa6949",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "347f984e-0a44-4a32-8436-9a615e02b219",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dc93d0c-90c2-4884-a5a1-42ece1314bdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce577118-6d2f-4d68-8498-0f57ac3a0b6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f09bd05-5d60-4cb9-81bf-118caec7b21d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3f13e82-33f9-4fc8-ab42-c20ef8f238cc",
      "documentation": "Deletes an existing virtual service.",
      "method": "delete",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "977b3f49-c0e8-4f1c-9206-0a22725e73c0",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "997b2090-b445-4e6e-b2e2-8449e4d2e716",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "553f5b3d-6826-4e41-9c3a-d13b0f9b953f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3f2cf02-c2b2-411d-ac5b-27152072c678",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b2d90e-3329-4f43-bc6a-52fccdbd6dcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d46f2216-0643-46ac-bc06-57da542349c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17fd7e0c-3563-40d5-b1cd-c6b34a8313ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c4c017a-3b1b-42bb-929b-2be231590fa4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2854511-18a6-4a7c-909c-6b0d381431ff",
      "documentation": "Describes an existing virtual service.",
      "method": "get",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "f94c7429-474d-4cc7-84fe-141e73b7399a",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc3c85fd-958e-4b76-8b11-d5f4a7c35e3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dbc87dd-8979-4b00-903e-70666117568a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3afed38-bae5-4d4d-9508-a1afd91dd92b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cea9179-8a79-4078-bd44-5e6413e6e3c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30aef041-97f6-40f0-b21b-ecee12441088",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5d6a551-ec50-44dd-be6a-f31610741d7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "595e4ec1-005d-4071-b3d1-da971aaacc37",
      "documentation": "Updates an existing virtual service in a specified service mesh.",
      "method": "put",
      "endpoint": "v20190125/meshes/:meshName/virtualServices/:virtualServiceName",
      "responses": [
        {
          "uuid": "3247c7a2-c599-41f1-af32-b58038eb2737",
          "body": "{\n  \"virtualService\": {\n    \"meshName\": \"\",\n    \"metadata\": {\n      \"arn\": \"\",\n      \"createdAt\": \"{{faker 'date.recent' 365}}\",\n      \"lastUpdatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"meshOwner\": \"\",\n      \"resourceOwner\": \"\",\n      \"uid\": \"\",\n      \"version\": {{faker 'random.number'}}\n    },\n    \"spec\": {\n      \"provider\": {\n        \"virtualNode\": {\n          \"virtualNodeName\": \"\"\n        },\n        \"virtualRouter\": {\n          \"virtualRouterName\": \"\"\n        }\n      }\n    },\n    \"status\": {\n      \"status\": \"\"\n    },\n    \"virtualServiceName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1398c62b-ffef-4b22-9a4f-bb2e7bf7a94b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc1d6cf0-a094-478c-ad60-c527220d0dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a911d87-9b62-4187-8565-6adcc062af73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fee89a3a-4513-4239-b88e-3cec13383f83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e96868b8-8c6f-4398-96ca-0b8e011c46a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7486402f-e7a4-4ec1-baac-ad2e57244d41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e31437d1-6048-46e0-8cad-369902b58dc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "499e8f1b-4eee-4e77-a109-e56fa04fab18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35cdc9dc-b854-4917-b632-44acc4187e51",
      "documentation": "List the tags for an App Mesh resource.",
      "method": "get",
      "endpoint": "v20190125/tags#resourceArn",
      "responses": [
        {
          "uuid": "401834ce-0d4f-42e1-b7b6-4088f5acf6a3",
          "body": "{\n  \"nextToken\": \"\",\n  \"tags\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "465570fc-6dfc-4bfa-b08f-b8da5f721688",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70ce6630-c2f1-4903-874d-e619d7dbd40b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed4643c9-a62e-42f9-87d9-dab53b9f7878",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eae2ae5e-94af-4bb5-aed3-ec620710e57f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecf0b860-ea7a-405c-90ce-0219d5a62da9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08dc3358-5060-46a2-90db-0cc67d6d4d93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afedd7dc-307b-4351-91b2-ac5e93a4502a",
      "documentation": "Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource aren't specified in the request parameters, they aren't changed. When a resource is deleted, the tags associated with that resource are also deleted.",
      "method": "put",
      "endpoint": "v20190125/tag#resourceArn",
      "responses": [
        {
          "uuid": "b0c83895-dd0c-41a8-9a21-3ce2d91a775e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71b9fca2-f9c0-434a-b6c3-b33b8e4de862",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76e9fdc0-1330-45e7-bb90-2caac575ef0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10efb1de-a4cc-4379-9973-ee4c935e5865",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc110933-288f-4c9f-b103-4b545f06cae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2031cd8-ef20-430d-ae18-8478e67e4e0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b121f61-bd67-4e49-994a-47b2cf641b33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d669932-6706-4292-86b7-4f85ed2f370f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6704bdc-207a-4bca-bcef-ea1cdabf632e",
      "documentation": "Deletes specified tags from a resource.",
      "method": "put",
      "endpoint": "v20190125/untag#resourceArn",
      "responses": [
        {
          "uuid": "b8479073-a598-4eab-b426-eba1519e9ae4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db48a607-732b-4740-a08c-b540837b4175",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd19a282-8728-4d9e-a2a9-62542412ce21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "BadRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86344d38-ea95-4373-a03a-037846675be9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyRequestsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3be7aaba-dc04-41f5-9213-c28c98dd9fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ForbiddenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d1d2962-b9aa-45a9-ada9-c9f13e7a733b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5d3c176-ad44-4330-92ab-30db0a667cd8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}