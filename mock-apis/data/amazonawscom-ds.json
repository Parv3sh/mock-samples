{
  "uuid": "0e10075a-5f4e-46f0-95c2-f5df93c3ec3c",
  "lastMigration": 19,
  "name": "AWS Directory Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3193f7ca-f820-4e72-9a60-e4dc376a5b77",
      "documentation": "Accepts a directory sharing request that was sent from the directory owner account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory",
      "responses": [
        {
          "uuid": "eaf9de22-795b-424a-9b73-e2586399b600",
          "body": "{\n  \"SharedDirectory\": {\n    \"OwnerAccountId\": \"\",\n    \"OwnerDirectoryId\": \"\",\n    \"ShareMethod\": \"\",\n    \"SharedAccountId\": \"\",\n    \"SharedDirectoryId\": \"\",\n    \"ShareStatus\": \"\",\n    \"ShareNotes\": \"\",\n    \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4ae7504-ff4c-42e5-bea0-45e913709470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df3f9467-706c-4a3e-b464-d4080b746dd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b160dd95-37a0-4381-bc1c-73e3207e2c5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df7a7a36-ff8e-46e1-9e6a-829b756aad48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "831ae7e2-a1b7-4eba-a64c-391a931e8fae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7547dac-47d7-4250-8fea-ae35edda0280",
      "documentation": "<p>If the DNS server for your self-managed domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from your Microsoft AD on Amazon Web Services to a peer VPC. </p> <p>Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>AddIpRoutes</i> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddIpRoutes",
      "responses": [
        {
          "uuid": "9a0af4d1-dece-4ffd-bc2e-e8565266412a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ed24d59-de4e-4b2d-9f72-2a5489e77d9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f092567-a111-4443-ba20-20cceef35bfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d87449-fdbb-4781-9d28-8a0b8db9aedb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c211f622-77ea-4a6d-ad65-0cc742800a6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20a94cb4-d997-40fb-a975-d1910f429f00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IpRouteLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47c0d501-48d2-4779-a7a0-b5ab54c8d371",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fa2166c-be5e-4d11-8998-a1b9475eaca8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "131355ee-30c4-4c8f-8623-5a8f36e29f8f",
      "documentation": "Adds two domain controllers in the specified Region for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddRegion",
      "responses": [
        {
          "uuid": "2aef37bf-bf95-4ee3-9d71-2164509b2b53",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10d24e34-2964-48ea-bcfd-781970ba9a54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7600e2c7-95ae-48db-be9f-cd54cd09de4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab204429-b959-4298-bfd2-657f44817f86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4371c00-0755-425f-80cd-8630592d9710",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectoryAlreadyInRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fced5c4-c3de-4bb1-9b1f-e4b81f445a53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f406993e-c24f-40a7-901a-2e276043038a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8f5d1e4-6c9c-47a9-9fc6-1686104c9662",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "RegionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7de916bc-05a2-422d-a2e4-5ad0fc264954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "289c1b7c-6f80-4895-84d0-f230c1f9af65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c279cc90-aada-4a88-8558-9794102fc353",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49bf7643-a096-4193-9fb0-1112d9db4a6a",
      "documentation": "Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddTagsToResource",
      "responses": [
        {
          "uuid": "253d0f66-c65e-4a4f-986b-af977fba5124",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57119b6a-d419-493c-95c4-5b837f997f86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c64dadae-5ca7-49ef-9923-3fb7047abf91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51082632-2020-49e6-bc51-737ba827591a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b53a4db8-d49c-459a-8121-5820c8959dbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4146181-0c83-465d-a5ec-6943b0d0dfe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "087766b9-97b6-4f06-b06d-16d4e73c45ae",
      "documentation": "Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension",
      "responses": [
        {
          "uuid": "eed46e35-3712-4511-88c5-a49d016ce0ec",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75530de3-a59f-4917-9c8b-d883c4172ef8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a40d119-7f38-4dcf-b34a-88afc62d182a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb8adb36-8d9d-42a1-8199-b991becddf78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e3fbb15-c673-4ed5-acba-c9d1fae69d22",
      "documentation": "<p>Creates an AD Connector to connect to a self-managed directory.</p> <p>Before you call <code>ConnectDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>ConnectDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ConnectDirectory",
      "responses": [
        {
          "uuid": "775eded9-eae5-490f-89af-b94e00759a6b",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f687bb1e-6458-4703-9f99-6b0e46507ba1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c7b452d-f521-4481-81dd-cd6ed9cb8490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9d901fc-20a5-40bd-ad44-746def31d9b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e42311a-9d56-489e-a202-8720c78734a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2758f4bf-8a6e-4ead-bc80-3d21c502abac",
      "documentation": "<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateAlias",
      "responses": [
        {
          "uuid": "ccc81629-c298-4842-86da-84e7a86c0c8a",
          "body": "{\n  \"DirectoryId\": \"\",\n  \"Alias\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f29162b8-c7ec-4c11-84a4-5c9d5a4ae985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95f1aedc-c59a-4399-ab39-4edcc17a41f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "592ab000-2c37-442d-9d5f-8c5215de34a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72910e3c-0e7e-4516-94bd-0e1a0297cf21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eb29066-a837-495b-b2a2-7181b97cf335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1aee8aa-c861-477c-a73e-89a1d83319da",
      "documentation": "Creates an Active Directory computer object in the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateComputer",
      "responses": [
        {
          "uuid": "c968d4fa-bc3c-4fda-b28c-9b65dbaf8111",
          "body": "{\n  \"Computer\": {\n    \"ComputerId\": \"\",\n    \"ComputerName\": \"\",\n    \"ComputerAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e06d69e-04b8-447f-9a83-721475586405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98f310c0-a8f4-40ff-a023-1d88830ff935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f1d6ee9-ad4c-4e8d-a4dc-6cb12de66a2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f77ab534-1bfe-4980-aa0f-120d5b43b4ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d10c29b5-d8d3-4f4d-a259-85bd333ad485",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8418ceab-e756-4f9d-bfec-8c8685b6ae81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "299478ff-8b15-45ad-8dd9-008a12763659",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b801c09-4f71-427b-adf3-d13af1c2b9a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e26f13a-502b-4ff8-bbfa-1ddbeb13cb3e",
      "documentation": "Creates a conditional forwarder associated with your Amazon Web Services directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder",
      "responses": [
        {
          "uuid": "1052a4db-4941-4a72-bb15-366acb5f621a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "750c237d-cf4e-4c67-b416-84c0839ddaa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bae06a8f-a92e-4ec5-b734-e3b1036f5e95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fffb52f8-87c1-4d83-89b3-04e5c1411dff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a710d18f-b35e-4b5b-b0b1-fca93d465939",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d58f55a5-fc3f-470a-9da3-529121fb54b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f91fc601-5eea-471f-b069-1dcdbc90df1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "649871b5-2968-4de7-9476-4d3f609f1d14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ca78110-5688-47bb-aaf0-f101f63b8755",
      "documentation": "<p>Creates a Simple AD directory. For more information, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html\">Simple Active Directory</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <code>CreateDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>CreateDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateDirectory",
      "responses": [
        {
          "uuid": "5a9d625c-e561-4c25-b901-86d52a45572d",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d246b757-510a-4c92-bed7-d1b182e9bc50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab50685d-9bb1-4f07-bb23-483364ea014d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a165e65b-fbc9-4a79-a497-1a04c28e3dfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1feb8917-0691-4d76-86ae-9debc21d6d37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2639662b-ef89-4789-b8f2-e9aa4eb7453a",
      "documentation": "Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription",
      "responses": [
        {
          "uuid": "b7cc7264-e1ba-4721-8bd2-3afc1c78c7c4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1dfbc8b-f1ca-4021-b840-194abd816587",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a58f418-6029-4002-96ad-ed68eb92015d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d6ea777-5d13-4d50-8c01-b671f85933f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8264bde2-d0a4-4448-ab30-bbcc500a7523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "259d5db0-5c66-4254-aeec-d98d9fb205e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5225173b-728c-4637-8cc9-0c5f4de71a1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f4068c2-1cab-42fe-9218-511c66f0233b",
      "documentation": "<p>Creates a Microsoft AD directory in the Amazon Web Services Cloud. For more information, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html\">Managed Microsoft AD</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateMicrosoftAD</i> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD",
      "responses": [
        {
          "uuid": "6f1bb046-2d09-445e-b61f-7c9d90324a16",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14fd99f6-dff7-44e8-bdb9-b9730b807616",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a42bf522-1ede-4bf5-9289-1cebbcbd73c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52f16c6e-7e27-4347-928e-bf88d59d3a63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "086289aa-4fc4-4eff-bdd3-e2a95362f422",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b9eccad-662e-4753-bcd1-1e567f40fa97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6826bb3b-a346-4791-8d87-ede1660bf413",
      "documentation": "<p>Creates a snapshot of a Simple AD or Microsoft AD directory in the Amazon Web Services cloud.</p> <note> <p>You cannot take snapshots of AD Connector directories.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateSnapshot",
      "responses": [
        {
          "uuid": "651dc07c-f1f2-4e10-8260-a4461912bc7e",
          "body": "{\n  \"SnapshotId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7474c46a-2321-46ce-a64d-cd39f8a32961",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4025748-2219-411a-ace6-748925c0d5da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79da8bc4-d031-48d1-9ff2-8a98b9933bea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SnapshotLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8a8eba2-3ccd-4aff-a7bf-c223da3f19f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aafa071-9475-402e-b588-ad2f4c36dd07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "073ab843-10a1-43d6-8e3e-119baafc8f55",
      "documentation": "<p>Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain. You can create either a forest trust or an external trust.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateTrust",
      "responses": [
        {
          "uuid": "4cb6f122-e4c2-40ae-ba03-589eb294aeb5",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6504f540-20fb-4833-b4c0-146b4465cd4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8dd8c13-2be2-484d-a473-a7825ff0f534",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eb54c4d-0012-47a2-98e6-747a15b74609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2fd788f-f210-403b-a75e-0b475d1f7946",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eed6ecf-673b-4303-887b-261cd06c9e11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e87a2c6-dc5b-4485-9b69-e17ee6199ccb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00a8d74f-b36e-47d1-a1f6-f3952f26c833",
      "documentation": "Deletes a conditional forwarder that has been set up for your Amazon Web Services directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder",
      "responses": [
        {
          "uuid": "e20fd0d8-20e8-483a-84a5-4c4096e8c3c5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee0ee63b-db86-4299-93f0-f8e9c9f4fa8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27590415-b9c2-409d-81b1-ffa7f0a5fb38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "201d3f17-a2f1-40d2-9f8a-94c744b262dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14686957-9ab1-4ecc-a1aa-b5072753704a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee2cd76c-7066-44ee-9b3b-ecb4ba2b8af0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f8db43b-2ba0-4e2c-8e18-b410c2827c85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaaaf210-7e0c-466d-ac40-39d6d24627f0",
      "documentation": "<p>Deletes an Directory Service directory.</p> <p>Before you call <code>DeleteDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>DeleteDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteDirectory",
      "responses": [
        {
          "uuid": "488258c1-f6b4-4053-84ff-9b8aeb827811",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8416c6e-3fcb-456d-acde-d218472a2498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a08d6309-4242-496d-bc9c-dd097460358c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a4f5063-82ba-4d82-a72d-072077664a31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d9d1468-69b2-4536-b871-bd7fefe6ff49",
      "documentation": "Deletes the specified log subscription.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription",
      "responses": [
        {
          "uuid": "dc509228-6ec9-4790-85f9-c5c2637ea27c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee86a624-0ef0-46e8-9c9b-f53a6d0d7f92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "720c0dfb-8490-46a9-81fb-aef4e0dda083",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04689b11-ba9f-4ef4-a582-82d10e509141",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8d8678b-a02e-4cf0-991f-bf5350606929",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f37d02a-591e-4884-922c-e66b2bf4dd06",
      "documentation": "Deletes a directory snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot",
      "responses": [
        {
          "uuid": "bbd8e464-9e00-4b5f-a83c-87ef3b6a7d90",
          "body": "{\n  \"SnapshotId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7f1611b-0a9b-48d2-896c-dab9619a2a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "314e0aa1-642f-4c46-8468-d30bc76151fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48630765-38e2-47ad-8883-9232e9204670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aff86e78-6d98-446f-bb2d-74cd164af62a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "849e868d-7762-4ef5-8916-2512fb9b464e",
      "documentation": "Deletes an existing trust relationship between your Managed Microsoft AD directory and an external domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteTrust",
      "responses": [
        {
          "uuid": "ba929d88-2287-4405-873d-c7b2c235b681",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4abb1887-2537-4d3b-ad49-bca7c7eaf64a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9951841-5504-43c0-bf89-60408ed3040a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e7a9c1-e6c7-4abc-abd7-84a97d916939",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f04b192d-c0a2-4fa9-a47d-52824cb2a465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c376e77-6ac0-4d86-9534-8c9483ef5e68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e7d9c46-aef0-44e8-ac43-57d4a5534c5a",
      "documentation": "Deletes from the system the certificate that was registered for secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeregisterCertificate",
      "responses": [
        {
          "uuid": "b2a98425-c68d-45ab-9235-fd0b7fe22b96",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad8df76-b050-42ef-a288-32d60b9db477",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8e2457b-1df4-4786-827c-657e35c80f6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "427f85de-e973-4b97-be0f-b92da8b4e81b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CertificateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2791b64-7c27-4c0f-8395-7026f4a6c846",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CertificateInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b83c01a5-221d-476b-8eb3-1fa43c9c7131",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b83baee-9d4b-45e2-915a-58efb6221fb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "395b27e1-5058-4600-8932-96832f76361b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f763a909-b9e0-4f7b-85dc-b978f9e47303",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7175194-a336-41c8-8338-5cdfeda15f1d",
      "documentation": "Removes the specified directory as a publisher to the specified Amazon SNS topic.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic",
      "responses": [
        {
          "uuid": "c1b51899-8cd0-4f4b-b90c-1f6df56e491e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38c5c19b-ed77-4f39-8a5c-47ba47c89c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fe215e5-afc6-4543-9943-a30c5ce48f4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d54c23f6-d24c-4a9f-ba37-2ffc7e7425e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a944a10e-cf9c-49c9-83e8-65b96b414cca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7467578f-05ea-47a0-8713-b84feb48c41a",
      "documentation": "Displays information about the certificate registered for secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeCertificate",
      "responses": [
        {
          "uuid": "1e356b97-8e80-4fba-acc2-76b6d9a4edea",
          "body": "{\n  \"Certificate\": {\n    \"CertificateId\": \"\",\n    \"State\": \"\",\n    \"StateReason\": \"\",\n    \"CommonName\": \"\",\n    \"RegisteredDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"ExpiryDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"Type\": \"\",\n    \"ClientCertAuthSettings\": {\n      \"OCSPUrl\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "783801e4-4f14-4ae1-855c-47f9c99918bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67faac74-dbac-4046-ba6e-7b29ce481384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3cad60c8-776a-4f72-b014-1d35470049ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CertificateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce6c1342-db6f-46ce-a6c3-339c1d332586",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57032caa-00e3-4657-8026-28e3098dee7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06b821ff-f96f-42be-ad56-a5c3d469f756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5509c9b7-8507-46bf-95c1-8453be9c6cf0",
      "documentation": "Retrieves information about the type of client authentication for the specified directory, if the type is specified. If no type is specified, information about all client authentication types that are supported for the specified directory is retrieved. Currently, only <code>SmartCard</code> is supported. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeClientAuthenticationSettings",
      "responses": [
        {
          "uuid": "5c43947d-6462-41bd-ad14-cc010a920936",
          "body": "{\n  \"ClientAuthenticationSettingsInfo\": [\n    {\n      \"Type\": \"\",\n      \"Status\": \"\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b909b02f-7c63-4755-abf5-16a5ca91151b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0149bc0f-c98f-4feb-91c6-e166c9a688e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cebc689c-0b44-46a4-9db1-9345c14b3e53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "685f68c2-5925-4266-8280-e34e82a8550d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f126f4bc-478e-4ad9-9b78-8df1990bd0f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83e26eb4-3687-467a-8169-fae2d022039d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4422c7b6-f233-4c92-acc3-529581b9723d",
      "documentation": "<p>Obtains information about the conditional forwarders for this account.</p> <p>If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders",
      "responses": [
        {
          "uuid": "b23924ba-243a-4859-999b-792967c3145f",
          "body": "{\n  \"ConditionalForwarders\": [\n    {\n      \"RemoteDomainName\": \"\",\n      \"DnsIpAddrs\": [\n        \"\"\n      ],\n      \"ReplicationScope\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d09d42c-e42a-4ce9-a2ab-3359d720af8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fafa382c-7f4d-4138-b820-4dd3a4690287",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a773adf-5a4f-4f69-a706-f5ecac626db9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb801a35-a43b-4b36-ad9a-e00af0c15be7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c5ca6a7-9cce-4add-9330-9ddceba1cf1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c193d8e4-e3a3-41e5-b791-8c9964a36faf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32a96b0d-1ad8-406b-9621-8765ffed21a0",
      "documentation": "<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <code>DirectoryIds</code> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>DescribeDirectoriesResult.NextToken</code> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <code>Limit</code> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeDirectories",
      "responses": [
        {
          "uuid": "6705d9b3-912e-444a-b0a5-491b81b9e6e5",
          "body": "{\n  \"DirectoryDescriptions\": [\n    {\n      \"DirectoryId\": \"\",\n      \"Name\": \"\",\n      \"ShortName\": \"\",\n      \"Size\": \"\",\n      \"Edition\": \"\",\n      \"Alias\": \"\",\n      \"AccessUrl\": \"\",\n      \"Description\": \"\",\n      \"DnsIpAddrs\": [\n        \"\"\n      ],\n      \"Stage\": \"\",\n      \"ShareStatus\": \"\",\n      \"ShareMethod\": \"\",\n      \"ShareNotes\": \"\",\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StageLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Type\": \"\",\n      \"VpcSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupId\": \"\",\n        \"AvailabilityZones\": [\n          \"\"\n        ]\n      },\n      \"ConnectSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"CustomerUserName\": \"\",\n        \"SecurityGroupId\": \"\",\n        \"AvailabilityZones\": [\n          \"\"\n        ],\n        \"ConnectIps\": [\n          \"\"\n        ]\n      },\n      \"RadiusSettings\": {\n        \"RadiusServers\": [\n          \"\"\n        ],\n        \"RadiusPort\": {{faker 'random.number'}},\n        \"RadiusTimeout\": {{faker 'random.number'}},\n        \"RadiusRetries\": {{faker 'random.number'}},\n        \"SharedSecret\": \"\",\n        \"AuthenticationProtocol\": \"\",\n        \"DisplayLabel\": \"\",\n        \"UseSameUsername\": {{faker 'random.boolean'}}\n      },\n      \"RadiusStatus\": \"\",\n      \"StageReason\": \"\",\n      \"SsoEnabled\": {{faker 'random.boolean'}},\n      \"DesiredNumberOfDomainControllers\": {{faker 'random.number'}},\n      \"OwnerDirectoryDescription\": {\n        \"DirectoryId\": \"\",\n        \"AccountId\": \"\",\n        \"DnsIpAddrs\": [\n          \"\"\n        ],\n        \"VpcSettings\": {\n          \"VpcId\": \"\",\n          \"SubnetIds\": [\n            \"\"\n          ],\n          \"SecurityGroupId\": \"\",\n          \"AvailabilityZones\": [\n            \"\"\n          ]\n        },\n        \"RadiusSettings\": {\n          \"RadiusServers\": [\n            \"\"\n          ],\n          \"RadiusPort\": {{faker 'random.number'}},\n          \"RadiusTimeout\": {{faker 'random.number'}},\n          \"RadiusRetries\": {{faker 'random.number'}},\n          \"SharedSecret\": \"\",\n          \"AuthenticationProtocol\": \"\",\n          \"DisplayLabel\": \"\",\n          \"UseSameUsername\": {{faker 'random.boolean'}}\n        },\n        \"RadiusStatus\": \"\"\n      },\n      \"RegionsInfo\": {\n        \"PrimaryRegion\": \"\",\n        \"AdditionalRegions\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfe9a540-0042-4d70-a4f5-a324aaa25935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26e1abf-dfb0-447d-8a79-529e8566d311",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70962de9-a4d8-4ae3-a719-d4680a61a48b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8b3451d-cd20-421b-a2c2-f43c0cc72c58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d560eb8-2e88-49fe-aa11-5ae280fde97f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c44071b-040c-4888-ab20-3e640822fbf1",
      "documentation": "Provides information about any domain controllers in your directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers",
      "responses": [
        {
          "uuid": "b6e3f512-205c-44b9-9fcc-5328c64d78fd",
          "body": "{\n  \"DomainControllers\": [\n    {\n      \"DirectoryId\": \"\",\n      \"DomainControllerId\": \"\",\n      \"DnsIpAddr\": \"\",\n      \"VpcId\": \"\",\n      \"SubnetId\": \"\",\n      \"AvailabilityZone\": \"\",\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatusLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "139eb6de-72c9-4a4d-8b67-961d42d592da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1d80505-9a3c-4476-bcfb-882784585199",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e87cd457-434d-44eb-a556-0a60bbff0a81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34d98a0-0df8-4529-9d10-63c435b52d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a97ca3c-9d0b-43a3-a64d-4491f2e980b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00134281-f0b8-4e7f-a871-7ad951cef353",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45b92855-ddd0-4c7c-8640-57626505120d",
      "documentation": "<p>Obtains information about which Amazon SNS topics receive status messages from the specified directory.</p> <p>If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics",
      "responses": [
        {
          "uuid": "f56a1fb0-5b7f-44b5-81e7-dcd703a098e2",
          "body": "{\n  \"EventTopics\": [\n    {\n      \"DirectoryId\": \"\",\n      \"TopicName\": \"\",\n      \"TopicArn\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56e8b83-7e55-468e-ba59-efe5204737fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e73ef63d-105e-4af3-881a-0ff881764c0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747b226e-11bb-4f50-806b-d26494702ed5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aec7b033-0ec5-4bbe-bcca-c8ed08b2db41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ce2104c-be76-40cd-b2cf-036443876fb8",
      "documentation": "Describes the status of LDAP security for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeLDAPSSettings",
      "responses": [
        {
          "uuid": "ae6fa0f2-925b-4a22-b67c-d4d1d0a942a1",
          "body": "{\n  \"LDAPSSettingsInfo\": [\n    {\n      \"LDAPSStatus\": \"\",\n      \"LDAPSStatusReason\": \"\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7ddb69f-064b-4ffa-8709-b4f4e6104e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e48f56e-48c0-4bb1-b16b-be29626861c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d4c7297-5fee-49a1-b7d5-c274903e259e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55707a09-f547-49f2-8717-7ea71d30c59c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f4879f3-ae6a-486e-8416-fd4851910c48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddf749dc-70cf-4741-ad66-51ad2462c8ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72059c85-29e0-4315-9113-ff83b787e54a",
      "documentation": "Provides information about the Regions that are configured for multi-Region replication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeRegions",
      "responses": [
        {
          "uuid": "f6c08e7c-8f5f-41a9-929e-35d4e11d4ab7",
          "body": "{\n  \"RegionsDescription\": [\n    {\n      \"DirectoryId\": \"\",\n      \"RegionName\": \"\",\n      \"RegionType\": \"\",\n      \"Status\": \"\",\n      \"VpcSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ]\n      },\n      \"DesiredNumberOfDomainControllers\": {{faker 'random.number'}},\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatusLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7024c83f-c395-4e3c-9c4d-fed1c252bc33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "817499ee-025c-4b1e-a962-9d085c5ee0b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b51b661b-75c7-4d78-bd89-a6f9a31f957d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8996c35f-7fda-4f82-914c-87122b6951d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0052e6d3-f650-4b3b-8cc1-6dc8c68abae0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac0717d0-b05d-40ea-926f-ed3bf0e58427",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74fabe55-f438-4e8a-b960-aa8749504cf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fb751b4-42e7-4a77-a0d6-8e6d675e1650",
      "documentation": "Returns the shared directories in your account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories",
      "responses": [
        {
          "uuid": "3dbbafc0-0ae5-47a5-ab3a-b361bfd7a9e5",
          "body": "{\n  \"SharedDirectories\": [\n    {\n      \"OwnerAccountId\": \"\",\n      \"OwnerDirectoryId\": \"\",\n      \"ShareMethod\": \"\",\n      \"SharedAccountId\": \"\",\n      \"SharedDirectoryId\": \"\",\n      \"ShareStatus\": \"\",\n      \"ShareNotes\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed9aae2-3cae-4366-b639-0ce57e8f1bb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c9852fb-a2da-4536-a19b-9c178030d8ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae05919f-477b-4772-a6c8-aff56d3364fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7a655ac-3911-4914-b9c8-c7aaeb902d94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76e4f232-dd2a-4507-9931-d9f5ac2734ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1796b0a9-ecf5-48c0-82f4-40d882775eed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fbfc506-1b81-4795-9ae0-deb30c3ae0e8",
      "documentation": "<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots",
      "responses": [
        {
          "uuid": "ca33b3cf-6851-4d74-9d2d-4058fe9238f8",
          "body": "{\n  \"Snapshots\": [\n    {\n      \"DirectoryId\": \"\",\n      \"SnapshotId\": \"\",\n      \"Type\": \"\",\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37a9660a-74f6-493c-b3a5-19b4b47a0c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4deda0a-f575-4507-9821-e1ac35950a9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "920b7d8c-e2c0-4cf8-9497-a799f895511e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f5fe07f-c24d-4db3-8144-4deb5d6d2230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5644bf18-29f1-4a89-8491-7d6b915ae21f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b33ac7c-a6cb-492f-8274-c2de15727f0b",
      "documentation": "<p>Obtains information about the trust relationships for this account.</p> <p>If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeTrusts",
      "responses": [
        {
          "uuid": "2823a5cf-2e36-4f68-896e-e4446ab152de",
          "body": "{\n  \"Trusts\": [\n    {\n      \"DirectoryId\": \"\",\n      \"TrustId\": \"\",\n      \"RemoteDomainName\": \"\",\n      \"TrustType\": \"\",\n      \"TrustDirection\": \"\",\n      \"TrustState\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"StateLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"TrustStateReason\": \"\",\n      \"SelectiveAuth\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f82a112b-2152-456b-aaaf-ee2ac896309b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8112fac9-ea74-4f6f-83b0-cb3e47abec14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c4b0491-4fc9-4a74-bce6-c573f31d65b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e455bfc-3b51-4655-accf-20007282c265",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0edf8888-5f77-4358-a64f-d03d58b5ef5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2659f46-bd0d-4c51-8e04-4bf1241b6f08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45564b78-ebf6-4869-8989-ee5d02fe6423",
      "documentation": "Disables alternative client authentication methods for the specified directory. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableClientAuthentication",
      "responses": [
        {
          "uuid": "eacbe626-3e4f-4cfd-8932-bcbf1e7d26cc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d72c1ae-eded-4707-bf32-c9616f47bcc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f609eed-a06e-4df7-839b-92f00d4b7aa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "433a7f88-7653-4e39-806b-fba9a72db16e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientAuthStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4b11a87-df23-464b-86a2-a4bde5fe1131",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfbed12f-2ad8-4c06-bb7c-ba7d006d02f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81baa1dd-a866-42a5-b963-d30c93be966e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65de4fa1-b061-4e0f-8aa7-3dfe362954cb",
      "documentation": "Deactivates LDAP secure calls for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableLDAPS",
      "responses": [
        {
          "uuid": "89a5f65c-7570-4dc4-8cba-74fb9a157a7e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1a00939-5a6d-439e-a40b-0fb431b53b63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b527ea3-f8a9-4191-84fd-97a188f48bc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0d4afb0-8f44-470b-bf49-57ffede64cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLDAPSStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df17600a-855e-4c7c-86f6-d450f3bc10d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a616d944-66ea-4ea1-a995-7ade0d2ff9aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87795e79-faf2-470e-a12a-d0b08cdab10a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81fcd6f6-a7e7-4099-b62f-59abd5220015",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0d9fbb3-052a-460b-a0d6-2d58a251cbd1",
      "documentation": "Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableRadius",
      "responses": [
        {
          "uuid": "5e8c7a59-4005-486c-a5e3-1a630159636d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "405a35aa-8cdc-4568-9d81-1a850e9798ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbbca7bc-d72f-4fe3-b8d4-309b14115406",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffe6d7c4-9cc0-4f75-b783-16da98efc696",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c8cfafb-3068-4723-950f-5b1ccbf0a1da",
      "documentation": "Disables single-sign on for a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableSso",
      "responses": [
        {
          "uuid": "2fe37db6-be01-421b-be87-995f68a12736",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd322222-9478-4e37-9bac-ea2cac5ba8a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f2f480e-696a-4c9f-a3e6-088c81acd2ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1686df9-367b-40c1-9551-49e64b6942a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97bed59f-4893-4a84-a029-3216ef54bfda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f6b15d7-4752-44a4-aba1-9d5d3a41c57a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a976a3ee-23c6-4663-b90f-48fdb08ceb14",
      "documentation": "Enables alternative client authentication methods for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableClientAuthentication",
      "responses": [
        {
          "uuid": "55fcf363-4338-4030-ac80-51040bd89734",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e3cf432-01f8-4400-876a-7560358d61fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4af2625c-fb4c-4264-8439-9b013a6b9425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "375ad5d9-825d-4756-a8b9-a22c73130ff9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientAuthStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57be3511-ea30-4989-8acf-25d18f5d0c12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "658212aa-3a63-441f-b1e9-33c6d3ad29bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoAvailableCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56657402-f1fc-4f37-b68a-6f6ee4ecf756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efdb0952-300a-4de3-98a5-5b89e7a790fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fb3d05c-c8d4-4355-9148-1452dd7a55b0",
      "documentation": "Activates the switch for the specific directory to always use LDAP secure calls.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableLDAPS",
      "responses": [
        {
          "uuid": "21bfa186-4c26-4d99-ae21-5f30ef370bc7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "514975fe-5e83-47a6-8de7-e89a83db32eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "018b58c3-817c-4331-98f2-b06a2d12d856",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a98887a7-4d4d-49e3-a067-cb9ca630acef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoAvailableCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e32d6a06-1648-40bc-87a3-41d35d381a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLDAPSStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c4fe756-b011-4154-9d08-258e2dd5ac14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaf41ac1-4cfe-4661-9351-5ecc1d147122",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0b2b1f7-af2b-4d7e-82f7-5fb30247ac25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f869db33-468f-41a0-b5c5-046f5fe1a615",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ed5fe78-ae09-44f3-9d59-fb1e9d663beb",
      "documentation": "Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableRadius",
      "responses": [
        {
          "uuid": "3d116aa5-6716-427b-bba1-d5208793c306",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce523d7c-01e0-4d37-954c-bf769af44e0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5de66d69-6541-4824-b1af-ccbdd927cf05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a781a027-9990-4d2f-ad8b-54ecf39009de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a560047c-2a92-4db5-a6e8-796b12672f7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e7165ee-b25c-478f-be42-158f6e324e42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd93d833-2fcb-4ec2-9cde-1b6b426f8e49",
      "documentation": "Enables single sign-on for a directory. Single sign-on allows users in your directory to access certain Amazon Web Services services from a computer joined to the directory without having to enter their credentials separately.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableSso",
      "responses": [
        {
          "uuid": "d374668a-0f32-4d8f-861d-296aa5b64f64",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899cc141-e5fc-4b51-9684-0aa5f8d7ea8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6da6797-a980-405a-8dea-5eed9420398e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bedaa0bd-11d8-40e3-bf30-ca730badaf6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95ed94f8-959b-416e-8fe2-1e73b5513b7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeeb2f89-e188-4adb-8e39-0fbffbe9bbdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "578b052b-0a12-4ca5-b1d4-90230f36b679",
      "documentation": "Obtains directory limit information for the current Region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits",
      "responses": [
        {
          "uuid": "fe5e118d-acc3-4eb4-a147-009b173aff76",
          "body": "{\n  \"DirectoryLimits\": {\n    \"CloudOnlyDirectoriesLimit\": {{faker 'random.number'}},\n    \"CloudOnlyDirectoriesCurrentCount\": {{faker 'random.number'}},\n    \"CloudOnlyDirectoriesLimitReached\": {{faker 'random.boolean'}},\n    \"CloudOnlyMicrosoftADLimit\": {{faker 'random.number'}},\n    \"CloudOnlyMicrosoftADCurrentCount\": {{faker 'random.number'}},\n    \"CloudOnlyMicrosoftADLimitReached\": {{faker 'random.boolean'}},\n    \"ConnectedDirectoriesLimit\": {{faker 'random.number'}},\n    \"ConnectedDirectoriesCurrentCount\": {{faker 'random.number'}},\n    \"ConnectedDirectoriesLimitReached\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "998d4e17-3b9d-40c5-8a73-6f9b94859002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61d28e2e-6ef4-45ed-bb29-1a8c2f9856a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af1efd88-8265-4573-9c36-e127550f1e60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7f23990-a3d1-441b-b80b-79565915ba5a",
      "documentation": "Obtains the manual snapshot limits for a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits",
      "responses": [
        {
          "uuid": "1c57e4bb-0cdb-4f3e-8d8c-dadaa683f53d",
          "body": "{\n  \"SnapshotLimits\": {\n    \"ManualSnapshotsLimit\": {{faker 'random.number'}},\n    \"ManualSnapshotsCurrentCount\": {{faker 'random.number'}},\n    \"ManualSnapshotsLimitReached\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22ca7569-c2be-4aef-893f-f5a99f907b6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1013aca7-81c0-479d-9108-fb39015c096f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fe9a76e-e9f9-4279-a581-fa787ccb22cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21876a66-fac3-4b6b-99fc-c56703183133",
      "documentation": "For the specified directory, lists all the certificates registered for a secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListCertificates",
      "responses": [
        {
          "uuid": "0d973ad0-19a5-4fab-a103-4c259e5a189c",
          "body": "{\n  \"NextToken\": \"\",\n  \"CertificatesInfo\": [\n    {\n      \"CertificateId\": \"\",\n      \"CommonName\": \"\",\n      \"State\": \"\",\n      \"ExpiryDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66215157-692d-4af2-838c-3a542efed36a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e249514-5dcd-4a07-b39b-95736b9bd21c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a220118e-e298-4577-89c2-2bc56f58b937",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a085051c-b949-44d4-be5c-1c1618387712",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4895abe4-3e18-4d35-995c-108715dc9dd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f564c37-b965-4570-9b21-3b91949e0dac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01509593-44f2-43df-8f6d-f2a68d03e278",
      "documentation": "Lists the address blocks that you have added to a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListIpRoutes",
      "responses": [
        {
          "uuid": "e03b8fa1-0f8b-470a-b787-17bd5cc814d9",
          "body": "{\n  \"IpRoutesInfo\": [\n    {\n      \"DirectoryId\": \"\",\n      \"CidrIp\": \"\",\n      \"IpRouteStatusMsg\": \"\",\n      \"AddedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"IpRouteStatusReason\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f26466b-ae3f-4f84-9257-33ae83f4258c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d7161f-78be-4756-92bd-54900c007d2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a6afa5a-44a9-4aa4-96c9-a810ca4c9b6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d17d334-b36f-428a-8752-85013ddce92d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6557697a-98cd-444f-87de-db7a616f04de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ac8cf40-d63c-4902-8594-aa636fcb8ac5",
      "documentation": "Lists the active log subscriptions for the Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions",
      "responses": [
        {
          "uuid": "c0aec458-2f5a-4585-8f54-d477e134ada6",
          "body": "{\n  \"LogSubscriptions\": [\n    {\n      \"DirectoryId\": \"\",\n      \"LogGroupName\": \"\",\n      \"SubscriptionCreatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cba70871-c008-4ae4-a5f8-65c853dff987",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dd9ab1b-deff-48b6-997d-feecba01e7c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4969c909-c45d-4dd3-b4ca-bf5c3519307c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f0d1a9a-c673-42a9-80d3-b8ffd369917f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "597a7c07-db10-40a8-a7d3-4eebee36c17b",
      "documentation": "Lists all schema extensions applied to a Microsoft AD Directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions",
      "responses": [
        {
          "uuid": "db004bce-ab72-4d1e-aa18-6d9539c2c7f7",
          "body": "{\n  \"SchemaExtensionsInfo\": [\n    {\n      \"DirectoryId\": \"\",\n      \"SchemaExtensionId\": \"\",\n      \"Description\": \"\",\n      \"SchemaExtensionStatus\": \"\",\n      \"SchemaExtensionStatusReason\": \"\",\n      \"StartDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa05c6cc-7a33-42db-a1ea-a81f34c87f04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4fa1671-6d9d-45ca-abbb-6c1e0707bd06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a1285b-87d9-447f-b895-2022218eead4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c9ef5e3-22c1-41b1-9338-0725f945e4a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44438f8a-84c6-411a-a557-838f46005254",
      "documentation": "Lists all tags on a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListTagsForResource",
      "responses": [
        {
          "uuid": "d2ea466c-af34-4a03-8028-68bdd24dc0bd",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "861bf53c-0581-4f1d-9e5a-0a7f9474a29e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "184d0ff7-851f-438b-a955-827b02350793",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f3a4b62-5432-4894-9b9e-67674ab8174f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ced6267b-e043-42e0-ad35-51c985d0508d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b635700a-8eb6-48a5-ac12-4dbeab14720a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62add5c2-2573-41a8-87bd-0662c3273611",
      "documentation": "Registers a certificate for a secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RegisterCertificate",
      "responses": [
        {
          "uuid": "64a3f20c-74e6-400a-a0fe-d14120f3ad15",
          "body": "{\n  \"CertificateId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ccbf823-c881-42ff-8ece-0a0783b69614",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af5706cc-a34d-4049-a8e5-15343412fd63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f573ece-ef7b-4bab-beb3-4a7c1a1e6281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65f0abb1-ceaa-4806-ab97-044f89fb0856",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CertificateLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e86e7595-a48c-4be6-b39a-5cab3b000b1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CertificateAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "645bcc05-0b30-410f-8058-6d0230931be6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d386eac-6427-4808-a337-ec6d1fd9de40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78acbac0-4da1-4429-b82b-8f8687fe3b8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8de0342-f6d3-4aa7-90fe-a5bd186a4143",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe145875-3687-4df1-b851-739689a7182e",
      "documentation": "Associates a directory with an Amazon SNS topic. This establishes the directory as a publisher to the specified Amazon SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic",
      "responses": [
        {
          "uuid": "0c87d40c-9ba5-4639-bef5-de24e5d4df4c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90cdbc9b-049b-4164-8d3a-73ea58318872",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c811cb9f-6a03-4764-80d9-bfe4a2cdff6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5630efa2-3eae-4789-9242-3c122398e2f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38aa8daa-d5b0-408d-a503-f906b5b46797",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4413abaf-ebe4-4f6f-a34c-ba6c89a79bfd",
      "documentation": "Rejects a directory sharing request that was sent from the directory owner account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory",
      "responses": [
        {
          "uuid": "9e70c98d-4e91-4cc8-886e-f89a84af5463",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b80c2734-2527-4a0d-8546-670a1c88ab85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e566a742-afdf-43eb-aed6-79eef27908a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5db0f7c1-e811-4791-a539-22dfd340f258",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9455023-4694-4bb9-a314-760e30eabf01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9011a4bb-4929-4b9e-9efe-7ef430729f39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a61c604-0e28-4296-8ff7-ba640b27eda8",
      "documentation": "Removes IP address blocks from a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes",
      "responses": [
        {
          "uuid": "04a253d7-25cd-48e6-ad4a-8caadb027075",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f5d0195-e464-4a8f-81c6-9ca9599d819d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48f78980-aa5f-4687-9aa7-a19a3f1c2c89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c95df024-6574-48b6-a044-a2a8cd46a5b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fca7885-32e2-4cec-9ed4-42ad532feb41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56669a03-7a93-416d-81f6-8548d0c25079",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aee93b5a-ba72-4eb3-ae07-a8214a392aca",
      "documentation": "Stops all replication and removes the domain controllers from the specified Region. You cannot remove the primary Region with this operation. Instead, use the <code>DeleteDirectory</code> API.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveRegion",
      "responses": [
        {
          "uuid": "ce77553d-673e-4cac-b6eb-5556e5fbc953",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d06a04a-9b7a-45b4-83d5-6d89799e0bbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e373f95c-844e-42ac-8dc2-707f4bee439e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ceaeceaa-8cc9-4386-92ee-d4fceb19781a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "490803f9-a12b-47f9-aee3-dc7f9d6b37b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb3cf9f9-1ac6-4a9b-aa9c-1fe8f5d5f342",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aea2e919-10f7-4aa8-bcac-52a43b336ee6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a4792fa-0487-4389-8402-2a1cb4229e7a",
      "documentation": "Removes tags from a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "15e95aad-ed2b-4b87-9beb-300f21d5dc81",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dc63ebd-7aff-471d-9570-93b4547dedb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb45d871-2679-43bc-8a86-4963644ae263",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4846245e-ee83-4aad-a8ce-5fc3bb4854b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18839c33-a71b-4b98-b32d-b47e3965b3cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d528b144-c38e-4ae2-8835-118c17f1dd86",
      "documentation": "<p>Resets the password for any user in your Managed Microsoft AD or Simple AD directory.</p> <p>You can reset the password for any user in your directory with the following exceptions:</p> <ul> <li> <p>For Simple AD, you cannot reset the password for any user that is a member of either the <b>Domain Admins</b> or <b>Enterprise Admins</b> group except for the administrator user.</p> </li> <li> <p>For Managed Microsoft AD, you can only reset the password for a user that is in an OU based off of the NetBIOS name that you typed when you created your directory. For example, you cannot reset the password for a user in the <b>Amazon Web Services Reserved</b> OU. For more information about the OU structure for an Managed Microsoft AD directory, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html\">What Gets Created</a> in the <i>Directory Service Administration Guide</i>.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ResetUserPassword",
      "responses": [
        {
          "uuid": "6cd4537f-58f5-4679-856a-6a309cffa7cd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4fecaf5-e0aa-4895-af8e-4137087d6a82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7cebe6a-ec55-47a5-a369-a12fcf30c1a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UserDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35cdd2a7-22da-4e60-9f58-1e1d552ba5e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dc4be6e-0b29-4ad7-89c8-d740f02873c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cbbe6b8-b29d-438c-b778-38e4ad9ae968",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ef5263e-fd24-43b0-9b68-7bd53ae1f2bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "284a5d47-ae11-425e-acbf-a941df4ac8fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ae6cedf-2761-4466-9997-553e52d1f90a",
      "documentation": "<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot",
      "responses": [
        {
          "uuid": "621ccc23-8dd0-4be6-a33f-035b746a8258",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37493d00-3a31-4fad-b933-a37f35b3dd58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43aa76a1-830b-4d8c-aef8-5c793d57818a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f621a447-bf18-4a42-9c03-fa2c240b73f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "446e13ff-32fd-450e-a9a1-24c914ffaae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b192342f-4c55-4f70-a97f-da9877f369b3",
      "documentation": "<p>Shares a specified directory (<code>DirectoryId</code>) in your Amazon Web Services account (directory owner) with another Amazon Web Services account (directory consumer). With this operation you can use your directory from any Amazon Web Services account and from any Amazon VPC within an Amazon Web Services Region.</p> <p>When you share your Managed Microsoft AD directory, Directory Service creates a shared directory in the directory consumer account. This shared directory contains the metadata to provide access to the directory within the directory owner account. The shared directory is visible in all VPCs in the directory consumer account.</p> <p>The <code>ShareMethod</code> parameter determines whether the specified directory can be shared between Amazon Web Services accounts inside the same Amazon Web Services organization (<code>ORGANIZATIONS</code>). It also determines whether you can share the directory with any other Amazon Web Services account either inside or outside of the organization (<code>HANDSHAKE</code>).</p> <p>The <code>ShareNotes</code> parameter is only used when <code>HANDSHAKE</code> is called, which sends a directory sharing request to the directory consumer. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ShareDirectory",
      "responses": [
        {
          "uuid": "46d641d8-e8fd-4cb6-9a29-ef79af99353a",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6384ffd8-5b0f-4dcb-bd8a-8d81f611258f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b5f1e4c-3ad6-413f-9870-e69a94db9788",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b1cda9-710c-408b-b354-f0c5866bea81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e9fa1df-f2a7-42c9-8751-8fc2d7e3d96a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5486ae15-21db-461a-937b-c179ad3b47fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c49ddbc-f4c8-4431-a21d-6a12c376b8ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ShareLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb095e90-e7d9-4e09-870b-37f876f6660d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OrganizationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1b73b1a-ca80-40cb-bbf9-c51ed9c89f53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc6fdbab-0d81-440a-b709-a55486aa735f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf5cf703-9b11-4226-8001-ca44dc7ee48c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e83baef8-0203-4141-b6d5-7177a9580ec8",
      "documentation": "Applies a schema extension to a Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension",
      "responses": [
        {
          "uuid": "d3e033b2-560d-49e6-a8eb-4cfb40f7b826",
          "body": "{\n  \"SchemaExtensionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da71261a-92b7-4f79-a8ce-a80d5afd063e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ace55aa7-ceed-4880-bc83-ee832dcf5b2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6818ef55-470f-4334-a277-96cea41aef29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1acae27c-7401-450a-a287-08b9dbef6ea4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b2be6fb-5e80-4e52-b5c4-ae8651f11da1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "190ec358-dcd4-433b-a220-6368e235fa34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d126c01-dc31-4441-9dca-32dd12ad2893",
      "documentation": "Stops the directory sharing between the directory owner and consumer accounts. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UnshareDirectory",
      "responses": [
        {
          "uuid": "c7ca7540-3ecf-453c-b43d-de56016bc6e9",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66252257-0335-4cad-8080-c097db23152e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f63f917-9574-4a3e-886d-e1b5902bf596",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "712fb09c-a77f-4b06-8d7e-34725487b141",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryNotSharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a811a0f5-ec91-4320-9593-cf6f086b027e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a9a6322-b08e-4dd4-b5f5-78d8a5cb5c4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b364d0c-2a65-49ac-ac3b-aecdf1fe310f",
      "documentation": "Updates a conditional forwarder that has been set up for your Amazon Web Services directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder",
      "responses": [
        {
          "uuid": "4aec78ea-7f81-4de4-a14e-28ff90390cf7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8ecfaf0-8b48-44de-a295-4c7d4e3f4c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65dc0445-c21e-49f1-8bc0-01cb7e8cd69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56f0ed4-91cd-4209-91bb-90c2077ce734",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab0cf765-9b33-49bd-a578-2f12ed3de797",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e942ec0-c3d1-485b-bbb8-17e9f871bc62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e260ee3-94dd-4571-8528-8fea31e99f1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf13fefc-889c-4fb7-b510-fbd0c86dc718",
      "documentation": "Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers",
      "responses": [
        {
          "uuid": "ed9ee533-2cb2-46e6-91d5-0338769bfaab",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a75caf7-588f-4f68-bda8-7b496475d6f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d213ed8-7790-4e56-86b2-8ae02f84ecd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e88a6e2a-3094-462f-b630-3969498ec402",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DomainControllerLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e2e28e2-e9f7-452b-8f5e-73e7ac50ea42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ffcd050-4077-454f-bbe4-a1d8afd36a43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f451d9d7-1bea-4fad-826d-41df925f0bfc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7353d2c5-f989-4934-b215-f1a4f01351a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5090180-6158-4697-bde2-c5165823429a",
      "documentation": "Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateRadius",
      "responses": [
        {
          "uuid": "d349bd5a-780c-4e89-9512-21b19c27e3ca",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa6f573-2e63-410f-a506-aed080a45d62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e763c3d3-02d2-46e0-a22f-a96813f573f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80073b5b-e4c9-43d9-bff0-6af78dc0474a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abd508d1-0416-4fd9-a281-cea1511b8488",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ae15a22-9458-4f84-bdab-69c953d1d502",
      "documentation": "Updates the trust that has been set up between your Managed Microsoft AD directory and an self-managed Active Directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateTrust",
      "responses": [
        {
          "uuid": "8c7d502d-1bf7-4646-9fd6-759c6ded6fba",
          "body": "{\n  \"RequestId\": \"\",\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47277b4f-519a-4cd0-8add-23958568e5b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "273b8f3f-2db8-4e4d-b13c-9e86a67bfeb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "045be1d7-8ae6-46f5-ab20-317b7d4e4d61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "159c2046-98b7-42af-860e-37b5c2065c12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4db1835a-7a38-4caa-9509-a87c89072a97",
      "documentation": "<p>Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships.</p> <p>This action verifies a trust relationship between your Managed Microsoft AD directory and an external domain.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.VerifyTrust",
      "responses": [
        {
          "uuid": "e97b9693-339a-4bee-a52a-4dc82380a1ca",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e0d711-7d19-4817-a029-7f51db9d41be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0622d204-f39f-45a7-a091-a99b6ea4cf2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a20b521-4bfe-47da-b91c-7fefe65bad6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d0993b-7659-47ed-8a0f-56f30e4c9f1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e16de37e-1cfc-4888-9162-62102f39d853",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}