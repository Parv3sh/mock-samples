{
  "uuid": "54663185-36ef-4e46-a3c5-9dd05b977ba6",
  "lastMigration": 19,
  "name": "AWS Directory Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1382420e-dbbb-43e9-b428-594028df4de9",
      "documentation": "Accepts a directory sharing request that was sent from the directory owner account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory",
      "responses": [
        {
          "uuid": "cb7431ad-44ca-43ee-8914-540a952ef68c",
          "body": "{\n  \"SharedDirectory\": {\n    \"OwnerAccountId\": \"\",\n    \"OwnerDirectoryId\": \"\",\n    \"ShareMethod\": \"\",\n    \"SharedAccountId\": \"\",\n    \"SharedDirectoryId\": \"\",\n    \"ShareStatus\": \"\",\n    \"ShareNotes\": \"\",\n    \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0fc49b8-d902-43fa-a497-49e794e15aef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82d99642-1f93-424f-92fc-b41419f21d90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c71b73f3-b6ad-4427-93ab-6208c5fd57e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6862571-1dd0-424b-8f04-8b004e6f4482",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d107a20f-bab1-4d59-9b3f-2838dcd0378a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e3f64a3-554c-4968-8418-75b121577463",
      "documentation": "<p>If the DNS server for your self-managed domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from your Microsoft AD on Amazon Web Services to a peer VPC. </p> <p>Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>AddIpRoutes</i> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddIpRoutes",
      "responses": [
        {
          "uuid": "627409f1-6384-4824-97ba-1898ef9bae99",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8be47e88-e8bd-483d-91c3-cd0679836ec4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "652bef28-af6e-4aa4-8f87-a948d7d63f2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "147b7510-bfd5-45a5-b7d9-84d2491ee4b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbcff8cb-e570-4fde-9f81-1431a31a4350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca465c95-0021-4396-83b2-63d212548c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IpRouteLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd42a4a8-666d-4d7f-87d1-c5d702e18dd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf4c5bee-eb32-4bd1-81a1-1160333bded8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a126b95-2f71-4098-8bb4-f5d56dcd7177",
      "documentation": "Adds two domain controllers in the specified Region for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddRegion",
      "responses": [
        {
          "uuid": "b7eca95e-cc51-48ac-be7d-68e720a14bc0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24f97464-8fdf-4e30-b0dc-b44773d3917e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "109c15a3-01d9-43ef-90fb-152b4986a19c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9675ff60-22f6-427e-a969-9c85346a2baf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e7f65f8-41d3-4715-a995-e3b372e4cb54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DirectoryAlreadyInRegionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71387bcf-c0a3-4bbe-8df1-9e279f43e419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52552826-09fc-44e7-aecc-cd64de60df6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf2a79c8-c730-4acd-9ba8-4d9de743d3a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "RegionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a93a5ad-4511-436d-852f-bd7c59cf1099",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22b0998a-69c2-48d5-a3c4-cf359d788a6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3735b35c-5832-4e48-b334-89663a65f8bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7129e863-fb21-476d-83b9-4c4af4811051",
      "documentation": "Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.AddTagsToResource",
      "responses": [
        {
          "uuid": "fd628f5a-d468-416e-b8f4-6c415ac32787",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e90182df-6b5b-4901-9d67-b486b7203b93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9257bac-bfee-4fe0-819a-7a495953c4b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f597b3-4ae7-4483-9b68-55e19765e3ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b39d699-1a1f-463d-a6bc-8c78ade7e98e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf99fdd3-b135-4b5f-8f06-cb52c6ad37c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1fc67895-d309-4eb1-b6e8-fa93b2b41a57",
      "documentation": "Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension",
      "responses": [
        {
          "uuid": "a6586fd5-16ec-4b08-83df-dc84e3aa2609",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bec7d1f-3f1a-4cf1-b577-8333cf0a88d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdd68c95-71e9-41cb-885f-012f8f173883",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed09aa8e-8af4-4420-976f-4a3c5aafc430",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f171178-ff1b-40c5-96c6-f9a38b5dab02",
      "documentation": "<p>Creates an AD Connector to connect to a self-managed directory.</p> <p>Before you call <code>ConnectDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>ConnectDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ConnectDirectory",
      "responses": [
        {
          "uuid": "c2f27b4f-0ca7-4742-9692-7548b83b6bd2",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31b75960-9b25-4f7d-888f-4222a04c9fef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7406112d-b557-4f55-ba00-6d258c4be3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39b39afe-bc2c-4405-b814-e70c49ce003f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4cc72c9-30b3-4290-a93d-60201b87fa03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72359c20-17f7-400d-9dde-8f0f766b4bb7",
      "documentation": "<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateAlias",
      "responses": [
        {
          "uuid": "be1b4d60-80c5-4ee1-983e-37a6e728fc39",
          "body": "{\n  \"DirectoryId\": \"\",\n  \"Alias\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bbe19d9-a536-4276-808e-0422e50b521a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2646c7d2-54aa-4469-904c-b4b47041f9b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ced1bad-98df-4ad5-9813-6606ba926a82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b40f45ff-4967-4a00-aeec-a6961dae8f18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fb19326-6934-4069-9b63-04ccd1edce05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "200feefa-e7b0-47c0-bdaf-f19749fe8096",
      "documentation": "Creates an Active Directory computer object in the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateComputer",
      "responses": [
        {
          "uuid": "3a1eed49-636b-47fc-8007-f6a756abbf60",
          "body": "{\n  \"Computer\": {\n    \"ComputerId\": \"\",\n    \"ComputerName\": \"\",\n    \"ComputerAttributes\": [\n      {\n        \"Name\": \"\",\n        \"Value\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a527ae7-0c3f-47d0-ae21-e6ec9b3885ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeceaf0b-36a2-458e-a000-868abb56071e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7e19441-878b-4962-807f-56542cb25e91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f69adcc1-3e28-4f88-95c7-a027f4b3d315",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f22d66ab-0ce7-4ec3-8045-aca4ad220895",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c76f38ab-f2c9-4fcc-bb85-5b2612e67e8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06d7ce04-fe09-4a92-9c3c-4c3b0614b426",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec7067f8-07d9-4321-9ecf-82a1d8cbeb61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29386ee3-49b7-4eb8-924d-5dbbc631a6b4",
      "documentation": "Creates a conditional forwarder associated with your Amazon Web Services directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder",
      "responses": [
        {
          "uuid": "ed702d1f-2cec-4905-ba7b-0b5cc23b0dba",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72f57505-10d2-4bbf-9f43-048d8826d06d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a573ca-4f93-4d07-8b35-eee6bfdde93c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1fda282-7566-4d0a-bec4-f1c2218c0591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ccafa0a-6d2f-407b-b240-f724c3feb036",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5306aa72-ef8f-4d20-8cd7-0d5a08987ddc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "946a8444-82c9-4d46-a4f3-119176c6aa81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "690b25b1-032c-4fc2-8615-8220f9fe0628",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63939db1-0e52-47c8-813a-dcb161a034b5",
      "documentation": "<p>Creates a Simple AD directory. For more information, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html\">Simple Active Directory</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <code>CreateDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>CreateDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateDirectory",
      "responses": [
        {
          "uuid": "e963e308-4867-4c35-b10a-ec5019bd0e21",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65b4baf5-3f6b-4d87-b994-2ca683a4e1e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e439011c-9ed8-4c7b-a4d5-b93bca0156f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7893c7fb-c256-4a88-8e88-a6d0c94d06fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "620da85d-edcc-4d30-b912-28e6a5219916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "428e7465-f0fb-4839-bebb-9fa503c8b61c",
      "documentation": "Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription",
      "responses": [
        {
          "uuid": "f2d421cb-9f12-491b-8547-ad9969306c50",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8227286c-b794-432d-a1c1-368a01980b3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b360c4e4-1e4d-47e1-b488-532aa2c29d6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e57aa128-adee-4351-be94-6632541d6d1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa72761b-9c74-4c07-a007-9dc98b393c10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32fd21fb-280c-4b6b-99dd-25a12146841a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "336b975a-5ed7-44fe-a712-a0fa1b5cec0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d468df75-9e1f-4e7c-8d24-2458faa0817e",
      "documentation": "<p>Creates a Microsoft AD directory in the Amazon Web Services Cloud. For more information, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html\">Managed Microsoft AD</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateMicrosoftAD</i> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD",
      "responses": [
        {
          "uuid": "e28bfa39-4209-4728-b159-d425576ce086",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d21e993-5d9d-48d9-9c43-85f1c1efa5ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e4dce11-8827-4052-bd7e-0d73253362f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54929c2e-093e-42d7-9dd4-097cd9dd3e34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45ccde82-21a6-4a3c-bafd-72ed44ae2ee5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea24fde0-250f-4795-9863-a6f784706940",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf2dd66f-c5e4-4592-a71c-6511402ced58",
      "documentation": "<p>Creates a snapshot of a Simple AD or Microsoft AD directory in the Amazon Web Services cloud.</p> <note> <p>You cannot take snapshots of AD Connector directories.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateSnapshot",
      "responses": [
        {
          "uuid": "a3b58f81-8bd9-47fb-9d13-c5e1fcaa1dee",
          "body": "{\n  \"SnapshotId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03ccf77b-3235-4455-b854-e6e3e379a21f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b04decd-f42a-4218-9572-24a2f82fa5b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42a5df08-6e1e-4bfe-acbe-23b554028352",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SnapshotLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51f0cb0e-4661-4084-a6d6-a0d14c2c0318",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "948d7d60-45d7-429a-9f87-3f0a10e54781",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f1f4ca3-8771-405c-bb66-b6c8bfeb3279",
      "documentation": "<p>Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain. You can create either a forest trust or an external trust.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.CreateTrust",
      "responses": [
        {
          "uuid": "08a1ed91-7bba-4b42-a3d1-2e0579c9d118",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6daf338b-6621-49c2-818b-94efec891385",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da9b7632-52c8-403e-973c-b9e0f3f9e626",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2ccf1f3-85d6-4170-ac95-7a354d9a6134",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3540ab98-c27f-4c50-9b23-f396e55655fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04fc9f54-c493-44b2-ae3a-c18ae68909d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46764cf0-907d-46ff-b2cd-15b68b724cbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83db2f40-a091-4f96-8b6f-ee837356c148",
      "documentation": "Deletes a conditional forwarder that has been set up for your Amazon Web Services directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder",
      "responses": [
        {
          "uuid": "b0a0d115-bba1-4f8c-9bc9-aa2053bd87e0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "962ac515-a7a8-470f-94df-98f3af1d354c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1d92c28-5596-43c9-bb92-8766bce7c30a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69a49ac6-8fca-450c-a8b9-4d135f84ae81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "655fb2b1-4f33-41f8-8b2b-77d5d67c4c8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bec76a01-2c7a-4100-b9dc-32bc2a9a422d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "421097e2-22d8-49a2-aaeb-a9d107a52450",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32ceaf40-34a6-48e1-b462-42ed4ab5a889",
      "documentation": "<p>Deletes an Directory Service directory.</p> <p>Before you call <code>DeleteDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>DeleteDirectory</code> operation, see <a href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteDirectory",
      "responses": [
        {
          "uuid": "ae124ff7-c2c0-41c0-a045-92d1282b650b",
          "body": "{\n  \"DirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b853db8-4eff-4046-9ca3-ba9ee574023f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0882522f-a2a7-4e98-8252-ac3b8aec8511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c958a5f-e0fa-4190-941b-690619d11d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51757ba2-4da1-448c-adfc-186246e4ae7b",
      "documentation": "Deletes the specified log subscription.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription",
      "responses": [
        {
          "uuid": "d7a7cc6a-a681-42d0-a43a-4cc9b91530bf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f049a83-eede-4670-a317-ebb4e520b8c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f19e87a-0eb7-4f0a-ad43-82105baf0ca2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42066d7c-f9e1-4556-aefd-1ae264478cd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b38f138-e339-477a-96ad-88d4b59be645",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b60795c5-d8d3-47ee-ae83-0950345a3ba9",
      "documentation": "Deletes a directory snapshot.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot",
      "responses": [
        {
          "uuid": "d007dd0f-5bad-40ad-b394-d24623132aef",
          "body": "{\n  \"SnapshotId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e479fff5-623f-4ca2-bb60-3ad229d41b02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b960616-fb24-4c28-921f-e337eb7d03da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35237365-7247-48d1-a14e-ae7482c2510a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6e3668b-bb2c-4e98-aa54-f3b52ca5358a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8c73245-b798-43e8-a100-ee13d97cf56c",
      "documentation": "Deletes an existing trust relationship between your Managed Microsoft AD directory and an external domain.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeleteTrust",
      "responses": [
        {
          "uuid": "cf9d26d8-7ca0-4cd1-8528-d7d7cbc695fb",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bd7738a-4046-46fe-8acb-d269cd8fa003",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "449a2a7b-bbb6-4a08-847c-023d6a20be23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a121031-1299-43b5-8132-e70e1c4a4420",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "604ee590-c04f-4006-91eb-63943691dc94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff609d94-00e6-4b14-9e30-06dfa879d878",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87f759c2-f41c-45f2-9398-6da4fc8bca0d",
      "documentation": "Deletes from the system the certificate that was registered for secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeregisterCertificate",
      "responses": [
        {
          "uuid": "6f00bc3c-c8b9-4853-8182-e541bd69c277",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f748e1bb-4d79-4134-b6ff-d48e28ad1c4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdeaa6af-f5e2-4e3e-9865-e1e50868caa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "032cd4b0-0fa0-4902-8b61-17f48c579fc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CertificateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2190382e-1b4a-44e0-91e0-22861b52d0e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CertificateInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "940ddf72-72cf-4bcf-a058-7d0163cc1c5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daf790ad-ce7f-44c0-885d-83d73c9ef0c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b2d7fd8-44e4-4bb7-bead-32f7870b2475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4185077-f66d-49ec-9ce0-e9bc84b2f79e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "892e221e-8ad5-42d1-80d8-e8a092c4ccd6",
      "documentation": "Removes the specified directory as a publisher to the specified Amazon SNS topic.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic",
      "responses": [
        {
          "uuid": "ace44f23-f732-4eb5-bd86-76fa637c7a70",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a086baf-59dc-45b8-b4e0-48dc46dc6cd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b150d054-2578-4080-a329-0cf3edc3ab19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da70d98d-1212-4157-a23e-8605812fa93c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3eeab37-1a98-4357-8f95-8a9a06c68f1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66dc680f-5631-4994-88af-486c17129c39",
      "documentation": "Displays information about the certificate registered for secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeCertificate",
      "responses": [
        {
          "uuid": "86f9c8f5-4f1b-4fb3-8b20-70df2d9cd365",
          "body": "{\n  \"Certificate\": {\n    \"CertificateId\": \"\",\n    \"State\": \"\",\n    \"StateReason\": \"\",\n    \"CommonName\": \"\",\n    \"RegisteredDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"ExpiryDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"Type\": \"\",\n    \"ClientCertAuthSettings\": {\n      \"OCSPUrl\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22cc20ee-3a6d-4be4-b9a9-fd4926041043",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c53c36c5-1887-4f45-a2c1-d2a48b6e766d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53dd0789-6a78-45f0-8fc8-dff17d6871cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CertificateDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efdd2e6e-cf85-49db-9fd8-5d0cbfe771e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a0f16b3-9c9c-493f-b702-fbcd04194b6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25eea81f-5388-4fff-a9c9-d876d9346d16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48dce4b5-2283-4290-aacb-b65ce6cb3736",
      "documentation": "Retrieves information about the type of client authentication for the specified directory, if the type is specified. If no type is specified, information about all client authentication types that are supported for the specified directory is retrieved. Currently, only <code>SmartCard</code> is supported. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeClientAuthenticationSettings",
      "responses": [
        {
          "uuid": "f4e69cd9-ced8-4110-9470-702e7a0d3a7a",
          "body": "{\n  \"ClientAuthenticationSettingsInfo\": [\n    {\n      \"Type\": \"\",\n      \"Status\": \"\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37acda56-8526-4be7-9913-c9bed0355315",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8927fd4d-8612-4980-8d00-0d705503c72d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eeebd18-bcc0-4d35-bfc2-e362da472b80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ea80cfa-76bb-448e-98a5-004fff9f41cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e612dcef-fefc-4022-a98a-7f927e387b25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ef3fcd2-d2ff-4a2d-b303-59e114c61393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90d91696-17e1-4344-812d-c43ea0b40452",
      "documentation": "<p>Obtains information about the conditional forwarders for this account.</p> <p>If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders",
      "responses": [
        {
          "uuid": "4c4a8f16-1c1f-4bc2-8f4e-18cdc43c8d71",
          "body": "{\n  \"ConditionalForwarders\": [\n    {\n      \"RemoteDomainName\": \"\",\n      \"DnsIpAddrs\": [\n        \"\"\n      ],\n      \"ReplicationScope\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66c7a583-c8be-473c-9782-d173857e7ba0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e9a53ee-95b9-41cc-9790-ef3cf3b70ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38aaa1a2-e759-436c-a681-70ae591068fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51bdc030-8de0-4673-9694-2fccc3a718d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdc6c50c-0aae-4ea3-b23f-15f7c7f93d72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab561f77-4725-4f5a-8008-0c999c03ae56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d69c8bff-2a7d-4e94-8e3f-1fbf8d6af8f7",
      "documentation": "<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <code>DirectoryIds</code> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>DescribeDirectoriesResult.NextToken</code> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <code>Limit</code> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeDirectories",
      "responses": [
        {
          "uuid": "ba390a23-2e48-40d4-95ce-34abcbb33ac6",
          "body": "{\n  \"DirectoryDescriptions\": [\n    {\n      \"DirectoryId\": \"\",\n      \"Name\": \"\",\n      \"ShortName\": \"\",\n      \"Size\": \"\",\n      \"Edition\": \"\",\n      \"Alias\": \"\",\n      \"AccessUrl\": \"\",\n      \"Description\": \"\",\n      \"DnsIpAddrs\": [\n        \"\"\n      ],\n      \"Stage\": \"\",\n      \"ShareStatus\": \"\",\n      \"ShareMethod\": \"\",\n      \"ShareNotes\": \"\",\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StageLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Type\": \"\",\n      \"VpcSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"SecurityGroupId\": \"\",\n        \"AvailabilityZones\": [\n          \"\"\n        ]\n      },\n      \"ConnectSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ],\n        \"CustomerUserName\": \"\",\n        \"SecurityGroupId\": \"\",\n        \"AvailabilityZones\": [\n          \"\"\n        ],\n        \"ConnectIps\": [\n          \"\"\n        ]\n      },\n      \"RadiusSettings\": {\n        \"RadiusServers\": [\n          \"\"\n        ],\n        \"RadiusPort\": {{faker 'random.number'}},\n        \"RadiusTimeout\": {{faker 'random.number'}},\n        \"RadiusRetries\": {{faker 'random.number'}},\n        \"SharedSecret\": \"\",\n        \"AuthenticationProtocol\": \"\",\n        \"DisplayLabel\": \"\",\n        \"UseSameUsername\": {{faker 'random.boolean'}}\n      },\n      \"RadiusStatus\": \"\",\n      \"StageReason\": \"\",\n      \"SsoEnabled\": {{faker 'random.boolean'}},\n      \"DesiredNumberOfDomainControllers\": {{faker 'random.number'}},\n      \"OwnerDirectoryDescription\": {\n        \"DirectoryId\": \"\",\n        \"AccountId\": \"\",\n        \"DnsIpAddrs\": [\n          \"\"\n        ],\n        \"VpcSettings\": {\n          \"VpcId\": \"\",\n          \"SubnetIds\": [\n            \"\"\n          ],\n          \"SecurityGroupId\": \"\",\n          \"AvailabilityZones\": [\n            \"\"\n          ]\n        },\n        \"RadiusSettings\": {\n          \"RadiusServers\": [\n            \"\"\n          ],\n          \"RadiusPort\": {{faker 'random.number'}},\n          \"RadiusTimeout\": {{faker 'random.number'}},\n          \"RadiusRetries\": {{faker 'random.number'}},\n          \"SharedSecret\": \"\",\n          \"AuthenticationProtocol\": \"\",\n          \"DisplayLabel\": \"\",\n          \"UseSameUsername\": {{faker 'random.boolean'}}\n        },\n        \"RadiusStatus\": \"\"\n      },\n      \"RegionsInfo\": {\n        \"PrimaryRegion\": \"\",\n        \"AdditionalRegions\": [\n          \"\"\n        ]\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d00a27ac-e5c9-4380-83ac-2ba1a84f2293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "247e788a-bed7-4638-85be-977bc27cb6d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8305d0b4-05ac-4ba9-8142-353fb3cce9ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4c5003a-54eb-499c-805c-b62e6378a535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc496fe4-62fa-4555-baf5-291c62a37335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db1fea03-1ff0-4df5-940a-7677cc24a109",
      "documentation": "Provides information about any domain controllers in your directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers",
      "responses": [
        {
          "uuid": "53be7a7a-b30b-47c5-8868-f287d2f12694",
          "body": "{\n  \"DomainControllers\": [\n    {\n      \"DirectoryId\": \"\",\n      \"DomainControllerId\": \"\",\n      \"DnsIpAddr\": \"\",\n      \"VpcId\": \"\",\n      \"SubnetId\": \"\",\n      \"AvailabilityZone\": \"\",\n      \"Status\": \"\",\n      \"StatusReason\": \"\",\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatusLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7414fd8e-5278-44b1-a9c3-53d522fe686a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97e30cfd-5ee7-4d38-a3aa-43dfdda15e5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa477422-54f7-4581-8ea2-ed9b2bed2980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc354085-374e-414b-bdd9-1f65696c1e97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c799365-67ea-4cca-8246-1e4747dc7c0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfd87158-ea5a-4d18-a9f7-bdb48d4b77a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50fd72cc-7ca6-4e06-abd2-f1a083f03e2b",
      "documentation": "<p>Obtains information about which Amazon SNS topics receive status messages from the specified directory.</p> <p>If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics",
      "responses": [
        {
          "uuid": "67d5a5c3-d408-4d07-a0f8-326dada1be23",
          "body": "{\n  \"EventTopics\": [\n    {\n      \"DirectoryId\": \"\",\n      \"TopicName\": \"\",\n      \"TopicArn\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1078144-8ed2-4c13-8010-2b9ec15d2eb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c9c06c7-586c-477a-a501-b975acb071b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a6f6cc-f08f-4687-bc00-799495664ac6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02d68120-b4ce-4d26-bff3-970bf3750fa6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f02e06d-b60f-4296-af0b-a9d21bd56aee",
      "documentation": "Describes the status of LDAP security for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeLDAPSSettings",
      "responses": [
        {
          "uuid": "86ebf3b1-127c-4f95-bbf8-a5d171f9a871",
          "body": "{\n  \"LDAPSSettingsInfo\": [\n    {\n      \"LDAPSStatus\": \"\",\n      \"LDAPSStatusReason\": \"\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb76651f-233e-46ad-bf1d-1b13822ff84d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab36a81d-9108-4827-a50e-791a1529cd72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3e76e5-65ba-43b5-bede-f91ec62d4634",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b1ce4fa-5113-4869-9004-0ac82017937f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82ffdaa6-39da-41b0-bf93-319012c06942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7a8aaa0-5eb5-4ffb-9bfc-8c936c7d380b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19b82de8-28fb-4460-85e7-1ecab0e76aa2",
      "documentation": "Provides information about the Regions that are configured for multi-Region replication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeRegions",
      "responses": [
        {
          "uuid": "eb133c90-7e80-4656-bc67-fae69d54368c",
          "body": "{\n  \"RegionsDescription\": [\n    {\n      \"DirectoryId\": \"\",\n      \"RegionName\": \"\",\n      \"RegionType\": \"\",\n      \"Status\": \"\",\n      \"VpcSettings\": {\n        \"VpcId\": \"\",\n        \"SubnetIds\": [\n          \"\"\n        ]\n      },\n      \"DesiredNumberOfDomainControllers\": {{faker 'random.number'}},\n      \"LaunchTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatusLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a162d2d5-c3d5-4463-bb95-abf84bc64871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1079a9f5-a8c2-4eaf-b06d-b420a77684c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72647546-f663-40ac-9070-beca7a794737",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1c7001a-abda-4bab-ad5f-1cafe42adab5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48bdc4b4-d143-4807-b7e4-f18998d4ad91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae3aa122-805b-4dcc-93c2-eaf5c445ad2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf0d873f-6b1a-4248-b389-a0d93b787374",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc70f0c6-2347-434e-98a6-98d3fac5eaa6",
      "documentation": "Returns the shared directories in your account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories",
      "responses": [
        {
          "uuid": "63a2d802-d883-49d5-a652-cea10e4cbdec",
          "body": "{\n  \"SharedDirectories\": [\n    {\n      \"OwnerAccountId\": \"\",\n      \"OwnerDirectoryId\": \"\",\n      \"ShareMethod\": \"\",\n      \"SharedAccountId\": \"\",\n      \"SharedDirectoryId\": \"\",\n      \"ShareStatus\": \"\",\n      \"ShareNotes\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a534ec8d-1cf7-43ed-9b08-10e0aaaa6aff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c85db38-0dc8-4479-88e4-1d3f8ed5020c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8238759-6aec-4755-91d8-b6609f0bd2fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e8b9ff0-edc2-47f8-b4eb-840abab3fd90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e55ca26-059e-45f1-8942-75267fd8d0e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afa76136-4a25-4716-9451-ad401aff4390",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23928b47-1864-401d-9277-2447b166dcd7",
      "documentation": "<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots",
      "responses": [
        {
          "uuid": "60a6708e-a01d-42af-9305-fa810d024a18",
          "body": "{\n  \"Snapshots\": [\n    {\n      \"DirectoryId\": \"\",\n      \"SnapshotId\": \"\",\n      \"Type\": \"\",\n      \"Name\": \"\",\n      \"Status\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e5f0eda-627a-456a-8405-203f76b88f2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ed238d8-fac6-4e50-bb27-e045c8bb1152",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ca3cfe8-3e18-400f-b5a2-c42bc5f89561",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "216b97f1-6e0c-4bcd-b0bd-b346de5e61ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "129bfb8e-2d4a-4c4c-8c1b-7dbb176fe9cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "094e190a-4325-42cf-94ec-e650a3d6b482",
      "documentation": "<p>Obtains information about the trust relationships for this account.</p> <p>If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DescribeTrusts",
      "responses": [
        {
          "uuid": "730f5054-d6e0-4dde-a963-eaffde557ede",
          "body": "{\n  \"Trusts\": [\n    {\n      \"DirectoryId\": \"\",\n      \"TrustId\": \"\",\n      \"RemoteDomainName\": \"\",\n      \"TrustType\": \"\",\n      \"TrustDirection\": \"\",\n      \"TrustState\": \"\",\n      \"CreatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"StateLastUpdatedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"TrustStateReason\": \"\",\n      \"SelectiveAuth\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "565dcb66-05d6-45b6-affa-dcb0a1094d04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68ec6768-e488-4f46-8fad-da335c28fc7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15066c67-a363-424d-9195-1623f288ab86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a78045f-d8b6-4e07-a194-dc4cf9ff8986",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a633081a-522c-415d-9d67-8fa4f85e6b5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fca12d6-8c06-4850-83d2-63241cfbfa17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4c3047a-618c-4994-b97c-6a584032557b",
      "documentation": "Disables alternative client authentication methods for the specified directory. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableClientAuthentication",
      "responses": [
        {
          "uuid": "4fb146fc-76f2-4d65-a44b-a293be13f25a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16b67eec-6704-4812-8b54-fada8106af9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e4bac15-5703-48ce-b6ca-600931a07b1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44b011df-a095-4aa2-8d16-a3f6be594934",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientAuthStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab49b3e6-d47b-4b5f-a6b0-bf28023758c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6973ed3-1873-41c3-a4f2-c1119d8b511b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8f72fc9-00be-4dd0-b9b8-3afa5d217e4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12226e86-d9a4-49f7-b3e1-5451ee59adee",
      "documentation": "Deactivates LDAP secure calls for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableLDAPS",
      "responses": [
        {
          "uuid": "eb3a55f6-7160-4df2-899a-c1e7d728b5b8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c6f48ba-625a-41e8-bb58-ec577a89fa88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d09c40dd-a760-4e78-ae52-14e8e4a56c77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29d43bb4-30ad-4201-b0bd-62af832ece4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidLDAPSStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3067bd5a-15ea-401e-a017-00da0968a2b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b395e0c8-42d5-4b00-818e-d075f968b1c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e37a1a30-81e6-4852-a345-4b76a267f84a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8931314a-24eb-4a6e-85a0-8a9cc45846dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baf9f9da-95da-4995-9a57-c36206c68a0b",
      "documentation": "Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableRadius",
      "responses": [
        {
          "uuid": "2d2c8163-9bcd-4468-9e67-fbcedcaebef3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f6cd032-480f-4b31-92e3-acbcdbf99bb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "512c2b1e-4b0b-4817-b8a4-9080d44395a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dc9ab48-d6ec-4404-abd6-c2a93f3084e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a702a51-b4ca-4179-b474-fd0bfa45dcd7",
      "documentation": "Disables single-sign on for a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.DisableSso",
      "responses": [
        {
          "uuid": "050a4086-36ce-4c32-bf2b-2a7bebb021f1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f96fb30-2044-4d46-a31e-b974d61a831d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17b5ea3b-a6c3-41de-881e-d0d1dacb29c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13d554f-d6e0-4f54-a55b-17358ba46705",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb7fa534-b548-415b-bed1-d15a972c84ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b47e902-538a-45bc-82c2-47cd20c226be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3d5ce9f-68f9-45d8-adab-4e52514013ed",
      "documentation": "Enables alternative client authentication methods for the specified directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableClientAuthentication",
      "responses": [
        {
          "uuid": "f9ae0bbc-d8c4-4707-a46a-86e4c1eed2a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd4ab142-395f-4d49-b393-baf4cafd8da7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd8d59d9-46f9-4ee2-9c28-5d7c78527d7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d1a1b10-f43f-4257-9a14-f95148ff60cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidClientAuthStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b2f3a5a-68c8-4a87-a0be-67d62e90bc0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdd286e5-3407-4cff-b7c7-3dd03e307173",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "NoAvailableCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89faa117-1b05-4b4f-b3d3-e6921c9bd250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a659aa7d-aa91-4140-84d9-284cebe6b1b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa2e8007-439e-40f1-ad63-45a3b8d7f95e",
      "documentation": "Activates the switch for the specific directory to always use LDAP secure calls.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableLDAPS",
      "responses": [
        {
          "uuid": "4fd3e967-ec1b-4081-89d8-7a6cf0f9561d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79ed99fc-cdc3-4fcb-94de-7a848788425b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "800d2fa3-d4c9-4bb6-a0ac-364e51d5774c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d33dd7b3-f39b-4cfa-a93d-aeb89a23d9aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NoAvailableCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a8cf498-2911-4caf-bb66-39ffa884ba74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidLDAPSStatusException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbdbf1aa-7ac7-40bc-8ec5-353a558177f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f6c08eb-f700-412b-b5ba-a5d89eac3799",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6993abe2-2e48-47ed-8ddb-3dcf8f32e2f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a74dc465-04fa-4e9a-ac3a-132293d3e418",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ece69ab5-86fb-4240-987a-300a829a3beb",
      "documentation": "Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableRadius",
      "responses": [
        {
          "uuid": "1b347077-edfe-4e57-af74-fc74215cbf4b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf9f0427-3a51-4fcc-9d4a-c3e494af379f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc8a278e-8f33-4386-8b6d-acc02aee05b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5fb8f17-a3ef-4724-b8f3-0b8a64b525cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f960ff95-eb08-4b39-96bf-bb66c40bf4d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a03ce97d-a821-42f3-8092-054156e33e5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27bfd641-b33a-4bc1-99ff-13dbccffaefa",
      "documentation": "Enables single sign-on for a directory. Single sign-on allows users in your directory to access certain Amazon Web Services services from a computer joined to the directory without having to enter their credentials separately.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.EnableSso",
      "responses": [
        {
          "uuid": "8ef91e87-39cc-481c-b9e4-44e11e2f0d8d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "305b6966-7f4b-4351-838b-0cc065f055b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bae4de6-7490-449f-b979-da05d607e48e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InsufficientPermissionsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "283df8b9-4780-43dc-836c-af3ac0bec86c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthenticationFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d5e961-b100-4eb4-b699-a167e020139b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0078e70b-4a9d-42e9-85ff-f179e97a191f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3fd02e4-4b06-4f4f-886f-0733512682f2",
      "documentation": "Obtains directory limit information for the current Region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits",
      "responses": [
        {
          "uuid": "dc30057e-e9ae-445f-b186-6396750e4c59",
          "body": "{\n  \"DirectoryLimits\": {\n    \"CloudOnlyDirectoriesLimit\": {{faker 'random.number'}},\n    \"CloudOnlyDirectoriesCurrentCount\": {{faker 'random.number'}},\n    \"CloudOnlyDirectoriesLimitReached\": {{faker 'random.boolean'}},\n    \"CloudOnlyMicrosoftADLimit\": {{faker 'random.number'}},\n    \"CloudOnlyMicrosoftADCurrentCount\": {{faker 'random.number'}},\n    \"CloudOnlyMicrosoftADLimitReached\": {{faker 'random.boolean'}},\n    \"ConnectedDirectoriesLimit\": {{faker 'random.number'}},\n    \"ConnectedDirectoriesCurrentCount\": {{faker 'random.number'}},\n    \"ConnectedDirectoriesLimitReached\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef5728b0-643e-4b01-8afc-cffb48b30c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7777df67-0e07-414a-b2c4-39ac8431495e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5945fcc-2a6c-4f2c-880a-75f4f50626d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f81daa7-e9d4-4ff7-8df2-35a530847ca2",
      "documentation": "Obtains the manual snapshot limits for a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits",
      "responses": [
        {
          "uuid": "f58de0cd-0236-44aa-a661-fa34b9e874e9",
          "body": "{\n  \"SnapshotLimits\": {\n    \"ManualSnapshotsLimit\": {{faker 'random.number'}},\n    \"ManualSnapshotsCurrentCount\": {{faker 'random.number'}},\n    \"ManualSnapshotsLimitReached\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13bfe62d-d1b9-4bf9-8e42-7cc7c22c4a9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fab3c0f4-ba97-4e22-a021-1fe27afce651",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b93a19f-e3b7-4e99-98b8-01b005d590f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32cf1a68-a00f-45fe-b5ac-8248b2057fea",
      "documentation": "For the specified directory, lists all the certificates registered for a secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListCertificates",
      "responses": [
        {
          "uuid": "c8a7c76f-4f71-40fc-9a8a-c02e78ab6a41",
          "body": "{\n  \"NextToken\": \"\",\n  \"CertificatesInfo\": [\n    {\n      \"CertificateId\": \"\",\n      \"CommonName\": \"\",\n      \"State\": \"\",\n      \"ExpiryDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4919687-d732-43d1-ae20-67ab2ae2c45b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2321a9ab-24d2-4e6b-ab2f-44bf3acabe9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bb7cf11-bd38-44fe-8bef-004c56fc8205",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1896046-2e73-436d-ae1d-e5428756e585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d68667f7-7f1a-4492-a52e-1cd7a898f38a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4434679-ecbc-474d-b27b-49c2381fe1ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b683e307-3f9b-4800-8c95-98f59afdaa1b",
      "documentation": "Lists the address blocks that you have added to a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListIpRoutes",
      "responses": [
        {
          "uuid": "2f9cfd95-33b1-47ae-ba96-6f6ee483b1c8",
          "body": "{\n  \"IpRoutesInfo\": [\n    {\n      \"DirectoryId\": \"\",\n      \"CidrIp\": \"\",\n      \"IpRouteStatusMsg\": \"\",\n      \"AddedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"IpRouteStatusReason\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e24ee8af-9731-4adc-be07-15d87e305240",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c4b0fa4-bba1-42a6-a4c6-e636a57b293d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e48f609f-c1a1-4861-b363-554fb6796e7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96056d53-d20e-4469-8c47-b893c9652a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb88cb5c-9d5d-40f4-b245-b269434f541a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05e1fd36-edd6-4469-81b7-b6c9fddfb848",
      "documentation": "Lists the active log subscriptions for the Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions",
      "responses": [
        {
          "uuid": "377a7cec-f6de-4998-85cb-76d28dee1344",
          "body": "{\n  \"LogSubscriptions\": [\n    {\n      \"DirectoryId\": \"\",\n      \"LogGroupName\": \"\",\n      \"SubscriptionCreatedDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7119453a-ae3a-4b66-a5be-1242d7ae735b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c91ec33-befa-4020-80ac-db329b57f85c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4bea97a-df8a-486f-8f5e-219748db7954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b11947b-33d4-4981-99a1-95cf0b663f77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3f4d0df-ca42-426d-8c17-585188ccccd5",
      "documentation": "Lists all schema extensions applied to a Microsoft AD Directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions",
      "responses": [
        {
          "uuid": "36aa9781-e99f-4ea2-adfc-855f558e7f99",
          "body": "{\n  \"SchemaExtensionsInfo\": [\n    {\n      \"DirectoryId\": \"\",\n      \"SchemaExtensionId\": \"\",\n      \"Description\": \"\",\n      \"SchemaExtensionStatus\": \"\",\n      \"SchemaExtensionStatusReason\": \"\",\n      \"StartDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndDateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfdef179-8e9c-4d79-8e27-f87d7b6306ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c670562e-cd8a-4710-9947-18d7c297737c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ee47ac-69ac-4326-b40a-516c7739a3fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da0e199a-d80b-4450-8197-e194cec7a98a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df0adb8a-f626-4222-8fe9-f925c648f9c6",
      "documentation": "Lists all tags on a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ListTagsForResource",
      "responses": [
        {
          "uuid": "41098a45-b62e-49d3-bb05-c6fa771400ec",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73c3abe3-8d1c-4f0f-9cef-094e25e97a26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77aaefed-8343-4b68-b276-3f96c0cfa9ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "855274ba-7784-4650-8515-b92b9af1fd69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbc4c895-e588-40da-8580-207b55a0db9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5779b4b9-24b0-4451-87d2-4338e87ba6a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17ce28ac-e1fa-46bc-abdc-7280cf006561",
      "documentation": "Registers a certificate for a secure LDAP or client certificate authentication.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RegisterCertificate",
      "responses": [
        {
          "uuid": "0ee71bc3-a4db-42b8-8aa8-c8629dd0c755",
          "body": "{\n  \"CertificateId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb54bea5-b7cc-4b04-b39b-56088b6ee623",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92b3ed54-1a90-4e98-95c9-16363b82b127",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80ab219e-c8ff-4fdd-a63b-1db5442db5ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidCertificateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05cdcc38-77d0-45ea-a24b-29b3800da67f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CertificateLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1efd182-8a74-4595-8b1a-db20a17e0aef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "CertificateAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2230f82b-13d7-40e5-873c-29da25d88b5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbeb610d-e981-4c7a-8541-380af5210247",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a60bb6fa-55b9-456f-bd51-f548fd1dad91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8cc722-ea79-4f44-ad0c-f50078eaa41e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6b564b6-2448-4591-8ee9-1b5fc370cb36",
      "documentation": "Associates a directory with an Amazon SNS topic. This establishes the directory as a publisher to the specified Amazon SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic",
      "responses": [
        {
          "uuid": "1b5d6840-b08a-423c-9815-a4f45c957812",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4b50a3b-84bc-4753-a1e3-4255f5188a67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57621cb4-871e-47b7-b876-3483fcba51c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c8a9a05-5a8d-473c-8dd8-53be0969aebb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26216e82-98bb-4e36-a361-942cfc365e7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffca9c13-d3f3-40e4-b7f6-b6f55fa694f4",
      "documentation": "Rejects a directory sharing request that was sent from the directory owner account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory",
      "responses": [
        {
          "uuid": "f646ceb3-3fa3-43f0-ab2b-31dfb4137e9f",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abd45fe5-85b3-442d-bde9-53fc2ea405c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bc474e0-034d-4f11-aa1d-2eaa2ed4625e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "613eca95-09ec-4af1-b0b7-3465fa56e2c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96881e30-ee72-4e34-a352-74615a9fcef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe1a4af9-bfdc-4d6b-bad0-2428fcc458fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c466317b-cfe4-4bf9-bcb8-d79d6d0a4d1d",
      "documentation": "Removes IP address blocks from a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes",
      "responses": [
        {
          "uuid": "7ae3fab9-639d-4d3e-b40a-08cb1c779336",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7407a5e9-c72b-4fa0-8935-b85a40f550f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1884658-8ac3-4e36-8e76-5fa60a3fb3a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "864bb517-79bc-4bac-b11d-f5323867fceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "417cb253-a95a-412b-8399-eaf27562519c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c54b724-a6b9-4bd8-9a97-72f37be6cb6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe0298e3-9888-4dfc-8ed9-f769a624ba16",
      "documentation": "Stops all replication and removes the domain controllers from the specified Region. You cannot remove the primary Region with this operation. Instead, use the <code>DeleteDirectory</code> API.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveRegion",
      "responses": [
        {
          "uuid": "53cd0a86-f481-4251-bb8b-7170b2556b19",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67bed0c9-d7d1-44de-a9b8-02fcab2663fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6c09a0-4068-4349-b0c4-3da0f6daad30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1b72263-1e84-4c30-8e60-b1747d0bd782",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e7f270-d2fa-41f3-9195-90027deaf163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0da1abbc-f0ca-4b9f-82e8-14f129c92dae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d395b0b7-7954-4569-ac04-9aa5e79f9928",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "345d7b08-6abb-421a-8601-f41409b471a8",
      "documentation": "Removes tags from a directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "6aea1e74-98c7-4e8d-9c8c-18d15cf89ec0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7197863a-18db-4df4-a77c-821dcc37129f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b7b7740-b2ab-4336-abc3-28ae9bf9a9a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f1b98d0-9ea7-477f-8d21-d2d363487d2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd95a64d-19dc-483c-81ac-20dbe9d64871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c012dc2-88f9-4de1-a67f-e57ad3858ecb",
      "documentation": "<p>Resets the password for any user in your Managed Microsoft AD or Simple AD directory.</p> <p>You can reset the password for any user in your directory with the following exceptions:</p> <ul> <li> <p>For Simple AD, you cannot reset the password for any user that is a member of either the <b>Domain Admins</b> or <b>Enterprise Admins</b> group except for the administrator user.</p> </li> <li> <p>For Managed Microsoft AD, you can only reset the password for a user that is in an OU based off of the NetBIOS name that you typed when you created your directory. For example, you cannot reset the password for a user in the <b>Amazon Web Services Reserved</b> OU. For more information about the OU structure for an Managed Microsoft AD directory, see <a href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html\">What Gets Created</a> in the <i>Directory Service Administration Guide</i>.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ResetUserPassword",
      "responses": [
        {
          "uuid": "42203584-e18d-4d00-b797-c278e0b1c841",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f6dc67d-c0fa-4a8c-ba96-e86495dc3c26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e72abf9-5041-4272-bc0e-c88c98c6eeba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UserDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c69e2070-5a0f-4ad2-9453-3163167266c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPasswordException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6741321c-e9be-4369-8624-82250e4f7fd6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7019e1fe-8b74-471c-a83b-8b305f526f8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d47c0f13-20f4-441c-97e5-a40bc5e0ae17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6398f20-bb82-4d94-bcf8-16c26cdcc557",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9db6b45d-11d5-48ca-a957-298bae5f9023",
      "documentation": "<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot",
      "responses": [
        {
          "uuid": "c3c5a70d-1695-48ff-8895-1751cc24d8e4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27104870-ade8-4277-b29b-43021a56ed05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f9af169-d854-4fc6-b798-521105488a3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60a61516-6db4-4086-8075-80f3ca9574c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "453b6d3d-69db-4186-a34c-762531e3643d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "032ef100-e30c-4811-86c9-31156646f348",
      "documentation": "<p>Shares a specified directory (<code>DirectoryId</code>) in your Amazon Web Services account (directory owner) with another Amazon Web Services account (directory consumer). With this operation you can use your directory from any Amazon Web Services account and from any Amazon VPC within an Amazon Web Services Region.</p> <p>When you share your Managed Microsoft AD directory, Directory Service creates a shared directory in the directory consumer account. This shared directory contains the metadata to provide access to the directory within the directory owner account. The shared directory is visible in all VPCs in the directory consumer account.</p> <p>The <code>ShareMethod</code> parameter determines whether the specified directory can be shared between Amazon Web Services accounts inside the same Amazon Web Services organization (<code>ORGANIZATIONS</code>). It also determines whether you can share the directory with any other Amazon Web Services account either inside or outside of the organization (<code>HANDSHAKE</code>).</p> <p>The <code>ShareNotes</code> parameter is only used when <code>HANDSHAKE</code> is called, which sends a directory sharing request to the directory consumer. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.ShareDirectory",
      "responses": [
        {
          "uuid": "b4322060-3ae4-4f04-bba8-da82a9331c10",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d254e949-db30-44e6-80b9-4e419846960e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryAlreadySharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7712329e-63d0-4b01-9d59-9a35a31c8d21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19db6cf7-2bf9-4ae8-97b2-c227db22709a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35fb2d6c-78a2-4aec-9c14-e9f7efb1d400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3278f402-1532-4cd4-b7ca-4c65cc53cf4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed55cb07-f4f4-4ad4-a019-c2643ddcdc45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ShareLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbdaf38d-906d-4086-a7a3-4b7f7db944c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "OrganizationsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5993e729-f5ef-4865-afc2-b83deb2f6ad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f267ac5a-8fa6-4c7e-9727-71e59db31bc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06f6e7f4-42f4-4ead-81dd-3df60baee0a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "262160b4-1d6a-49f3-aba0-8ace0c6bf78b",
      "documentation": "Applies a schema extension to a Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension",
      "responses": [
        {
          "uuid": "632f8a08-10f9-4113-942e-544d7d22635b",
          "body": "{\n  \"SchemaExtensionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7eab6dd6-2f7b-4965-bd60-c35967441c1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0044680-d53c-46f5-9ae9-be6890bfa4f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f247c2d-3c0c-4cf7-b67b-e73e7c7e2de6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fab92ac-8bf8-4741-a4eb-46ae4cd904e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SnapshotLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "500aeaff-01bb-43c7-8bdb-d7212adebc7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "628c727d-b48b-477b-a955-d7f3de7bec74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "774e38eb-36df-4832-8248-600e42d3acd8",
      "documentation": "Stops the directory sharing between the directory owner and consumer accounts. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UnshareDirectory",
      "responses": [
        {
          "uuid": "5cd4a9ad-7408-4bbf-bd7c-f91bf304b2eb",
          "body": "{\n  \"SharedDirectoryId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e02b64f-e203-4cef-b85e-2911a322921c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4afd431-66b7-413d-aac7-fbc946b64d9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTargetException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6af73e04-cb8e-406d-adca-3f11a6680314",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DirectoryNotSharedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2156b572-c546-4414-88a5-162b4770dc7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14c780c5-543b-464d-ae63-559f7134dcfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efeb2d58-ce9a-4e4c-b057-db61f7a7f6a8",
      "documentation": "Updates a conditional forwarder that has been set up for your Amazon Web Services directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder",
      "responses": [
        {
          "uuid": "cb2d1cb1-b899-4d7b-a9d9-2c1cc3dfba41",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50e93210-4547-46ee-bd72-0aedf9d125d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d1f0b37-915b-4a5a-9e3d-3320c04404f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "498cdd48-03e0-4be1-a7ad-5c9532d1b6f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7015a51a-998d-4188-916f-3c363e54cdbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b364af2-26e9-471c-b339-4c33413087db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "539f96f3-0656-4b65-962c-c261f8685a30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b6fb2d8-cd00-4c61-9c57-c6136efcde00",
      "documentation": "Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers",
      "responses": [
        {
          "uuid": "14add36e-bd4d-498e-aada-1da8d3511c66",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e3d3bc7-9d90-4e7e-8f55-8cd195f040ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b93bc884-d510-4278-a1d4-39e70e6e4379",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DirectoryUnavailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a6f2609-0501-478f-9078-28b6b0cadc8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DomainControllerLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09cf8305-9b1a-4fc5-879e-fe077b2872b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a43bef5a-e5a0-4554-a36f-ef9a25b1c1c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a5ebf63-71c9-42fb-83fc-f4ab61319701",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2936a9f-f661-476a-a92b-6c89678062eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68beec9c-db87-41ad-8d5d-5ba12c1c6677",
      "documentation": "Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateRadius",
      "responses": [
        {
          "uuid": "3b9feb4f-8147-48a8-b2f3-0ba37c3b39e3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfde3f0d-7110-49ed-88f7-21f463ad7c96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "080a96a9-4498-404e-a3db-ff6412226f17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6d0a41b-5350-48db-8eac-5267013410c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "664b3641-35e1-4dd6-a3b7-9e52f57400b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82f338bc-729d-4258-bca8-0a2e6b8467fa",
      "documentation": "Updates the trust that has been set up between your Managed Microsoft AD directory and an self-managed Active Directory.",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.UpdateTrust",
      "responses": [
        {
          "uuid": "a35455a7-0dfb-4871-9cb1-c7f1f321a2c9",
          "body": "{\n  \"RequestId\": \"\",\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b45e02d-bc99-42bd-989b-370753742217",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df373ee8-03d8-4ff9-b2e9-22df9963fbb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3afaa945-d2a2-4a4f-a0c0-d163970bdb15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ba5605b-3ad7-486f-9d10-2c56f818e715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "749a4104-ec22-41c6-ba0e-4d50645e9b9e",
      "documentation": "<p>Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships.</p> <p>This action verifies a trust relationship between your Managed Microsoft AD directory and an external domain.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=DirectoryService_20150416.VerifyTrust",
      "responses": [
        {
          "uuid": "ffc0db70-cac7-4871-b190-55b247250da6",
          "body": "{\n  \"TrustId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5706c8d-5aa8-4d7c-88db-bffab325794e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityDoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "517e9414-d4b8-49e0-a9c2-a37a580442eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd0fda6b-8d3a-492e-aea1-dfb05c305601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ClientException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89276c9-84fa-4aff-80ac-ec5a26373c50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e61de3-5fab-44a1-8c91-be8f5df84048",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "UnsupportedOperationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}