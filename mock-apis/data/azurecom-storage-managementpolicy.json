{
  "uuid": "a6927a2a-83d4-4f07-a831-33ca5c67eadc",
  "lastMigration": 19,
  "name": "StorageManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9a640ede-38b5-4739-ab49-9e23b6db39c6",
      "documentation": "Deletes the data policy rules associated with the specified storage account.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Storage/storageAccounts/:accountName/managementPolicies/:managementPolicyName",
      "responses": [
        {
          "uuid": "edefe2b5-69b9-4293-a28d-5fd762926799",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Delete management policies successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da510ea3-3e43-4d43-b235-274158e61454",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content -- The management policies does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64b2484d-5fe1-4f5a-9000-1842d3de88c0",
      "documentation": "Gets the data policy rules associated with the specified storage account.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Storage/storageAccounts/:accountName/managementPolicies/:managementPolicyName",
      "responses": [
        {
          "uuid": "e06295b6-acce-45de-b501-e06c7fc09976",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Get management policies successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9e77a3e-49fb-4b18-bd43-5ea491e60c74",
      "documentation": "Sets the data policy rules associated with the specified storage account.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Storage/storageAccounts/:accountName/managementPolicies/:managementPolicyName",
      "responses": [
        {
          "uuid": "2e318f47-a393-447e-8ed9-b024f4b9768b",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK -- Get management policies successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}