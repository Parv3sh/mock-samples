{
  "uuid": "3c0c1c68-6300-40ce-ae71-3ec6a272d826",
  "lastMigration": 19,
  "name": "BigQuery Connection API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "008c66d9-b674-440b-861b-ee48afbacf3e",
      "documentation": "Deletes connection and associated credential.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "c586bf0d-61eb-4327-a59f-602ea8a56001",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "402dc45c-188b-499c-8ad5-be2d4e795602",
      "documentation": "Returns specified connection.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "c0800bcb-b677-41c6-b928-3b6ac054a429",
          "body": "{\n  \"cloudSql\": {\n    \"credential\": {\n      \"password\": \"\",\n      \"username\": \"\"\n    },\n    \"database\": \"\",\n    \"instanceId\": \"\",\n    \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n  },\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"friendlyName\": \"\",\n  \"hasCredential\": {{faker 'random.boolean'}},\n  \"lastModifiedTime\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6eb826fe-ae93-46e2-8e64-918680b70b50",
      "documentation": "Sets the credential for the specified connection.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "5fb4ca15-57cb-4d94-9cd2-9d08c0f44176",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5989495-45db-4494-aaa9-f53519b0081b",
      "documentation": "Returns a list of connections in the given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/connections",
      "responses": [
        {
          "uuid": "50b501c1-0b38-4e63-8819-7e09af41365d",
          "body": "{\n  \"connections\": [\n    {\n      \"cloudSql\": {\n        \"credential\": {\n          \"password\": \"\",\n          \"username\": \"\"\n        },\n        \"database\": \"\",\n        \"instanceId\": \"\",\n        \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n      },\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"friendlyName\": \"\",\n      \"hasCredential\": {{faker 'random.boolean'}},\n      \"lastModifiedTime\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c390d71d-f099-4a81-a1c1-f137dc6dfc33",
      "documentation": "Creates a new connection.",
      "method": "post",
      "endpoint": "v1beta1/:parent/connections",
      "responses": [
        {
          "uuid": "0faf3e79-2c82-4e7b-aba1-c01a1f87a42c",
          "body": "{\n  \"cloudSql\": {\n    \"credential\": {\n      \"password\": \"\",\n      \"username\": \"\"\n    },\n    \"database\": \"\",\n    \"instanceId\": \"\",\n    \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n  },\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"friendlyName\": \"\",\n  \"hasCredential\": {{faker 'random.boolean'}},\n  \"lastModifiedTime\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9f53927-eef2-47b1-afe5-cbd095849c92",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "post",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "aaa204e9-7bc6-4751-acef-985bb4c71d5f",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f26f8d4e-4bec-4e8d-b7f5-6f471c343d0c",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "1899191d-ee45-424e-a62d-b0e5670817cd",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8fc38a05-904f-4c08-85c9-3396da7e8c22",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "82d0e6e4-d81d-46f1-8abb-c9f4acb95dda",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}