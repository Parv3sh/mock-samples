{
  "uuid": "ecabb170-1be7-46fe-b847-07c6a4b23a16",
  "lastMigration": 19,
  "name": "BigQuery Connection API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "3fc81915-3bcb-4da3-8e17-2c7e5dbb623e",
      "documentation": "Deletes connection and associated credential.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "cdf54fcd-cde8-42d1-a59b-d0f2c9a9efe9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76b291b0-4aa7-491e-8b01-719d2e0da364",
      "documentation": "Returns specified connection.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "6d7bef8c-f987-4a36-8101-d46ebf21e6d0",
          "body": "{\n  \"cloudSql\": {\n    \"credential\": {\n      \"password\": \"\",\n      \"username\": \"\"\n    },\n    \"database\": \"\",\n    \"instanceId\": \"\",\n    \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n  },\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"friendlyName\": \"\",\n  \"hasCredential\": {{faker 'random.boolean'}},\n  \"lastModifiedTime\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dafb8c4b-00ce-45e6-b6fd-b2040f6ac8af",
      "documentation": "Sets the credential for the specified connection.",
      "method": "patch",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "870ef46e-d806-46e5-9eb9-13c37d043108",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f3ab4c6-b134-4fc9-a722-ca17af73042a",
      "documentation": "Returns a list of connections in the given project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/connections",
      "responses": [
        {
          "uuid": "e1d7b8c5-ff24-4b57-ab3f-a9ac41abae00",
          "body": "{\n  \"connections\": [\n    {\n      \"cloudSql\": {\n        \"credential\": {\n          \"password\": \"\",\n          \"username\": \"\"\n        },\n        \"database\": \"\",\n        \"instanceId\": \"\",\n        \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n      },\n      \"creationTime\": \"\",\n      \"description\": \"\",\n      \"friendlyName\": \"\",\n      \"hasCredential\": {{faker 'random.boolean'}},\n      \"lastModifiedTime\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4bcba2ed-27ba-49f1-b4d8-a2f591ba63c2",
      "documentation": "Creates a new connection.",
      "method": "post",
      "endpoint": "v1beta1/:parent/connections",
      "responses": [
        {
          "uuid": "b9004bde-ce68-4abf-a40b-a1292e3e4deb",
          "body": "{\n  \"cloudSql\": {\n    \"credential\": {\n      \"password\": \"\",\n      \"username\": \"\"\n    },\n    \"database\": \"\",\n    \"instanceId\": \"\",\n    \"type\": \"{{oneOf (array 'DATABASE_TYPE_UNSPECIFIED' 'POSTGRES' 'MYSQL')}}\"\n  },\n  \"creationTime\": \"\",\n  \"description\": \"\",\n  \"friendlyName\": \"\",\n  \"hasCredential\": {{faker 'random.boolean'}},\n  \"lastModifiedTime\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "299e61b2-43bd-4f1c-ab5d-8936b7861216",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "post",
      "endpoint": "v1beta1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "6eb55edb-3097-477d-8be4-3d230e95784a",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22dd4139-ad00-45da-b7d8-a70cbd120fcf",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
      "method": "post",
      "endpoint": "v1beta1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "f06e61ed-05c4-41a6-b433-d08d4b54f7d7",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39ad5734-0b30-4890-9d91-7bd6f1338373",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1beta1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "2c6ae560-7a40-44ae-aa1e-560ce288dfab",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}