{
  "uuid": "a6579a96-4492-443d-ad71-805750f81ce5",
  "lastMigration": 19,
  "name": "Kubernetes Engine API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "de212bde-d1db-4286-8f2c-64da795a0997",
      "documentation": "Lists all clusters owned by a project in either the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters",
      "responses": [
        {
          "uuid": "d8fa2934-6cde-48f2-baa2-05992c0842b0",
          "body": "{\n  \"clusters\": [\n    {\n      \"addonsConfig\": {\n        \"cloudRunConfig\": {\n          \"disabled\": {{faker 'random.boolean'}},\n          \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n        },\n        \"configConnectorConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsCacheConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcePersistentDiskCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcpFilestoreCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gkeBackupAgentConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"horizontalPodAutoscaling\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"httpLoadBalancing\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"istioConfig\": {\n          \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"kalmConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"kubernetesDashboard\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"networkPolicyConfig\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"authenticatorGroupsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"securityGroup\": \"\"\n      },\n      \"autopilot\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"autoscaling\": {\n        \"autoprovisioningLocations\": [\n          \"\"\n        ],\n        \"autoprovisioningNodePoolDefaults\": {\n          \"bootDiskKmsKey\": \"\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskType\": \"\",\n          \"imageType\": \"\",\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"minCpuPlatform\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"serviceAccount\": \"\",\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}}\n          },\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          }\n        },\n        \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n        \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n        \"resourceLimits\": [\n          {\n            \"maximum\": \"\",\n            \"minimum\": \"\",\n            \"resourceType\": \"\"\n          }\n        ]\n      },\n      \"binaryAuthorization\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"clusterIpv4Cidr\": \"\",\n      \"clusterTelemetry\": {\n        \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"confidentialNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"createTime\": \"\",\n      \"currentMasterVersion\": \"\",\n      \"currentNodeCount\": {{faker 'random.number'}},\n      \"currentNodeVersion\": \"\",\n      \"databaseEncryption\": {\n        \"keyName\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n      },\n      \"defaultMaxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"description\": \"\",\n      \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n      \"enableTpu\": {{faker 'random.boolean'}},\n      \"endpoint\": \"\",\n      \"expireTime\": \"\",\n      \"id\": \"\",\n      \"identityServiceConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"initialClusterVersion\": \"\",\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"ipAllocationPolicy\": {\n        \"allowRouteOverlap\": {{faker 'random.boolean'}},\n        \"clusterIpv4Cidr\": \"\",\n        \"clusterIpv4CidrBlock\": \"\",\n        \"clusterSecondaryRangeName\": \"\",\n        \"createSubnetwork\": {{faker 'random.boolean'}},\n        \"nodeIpv4Cidr\": \"\",\n        \"nodeIpv4CidrBlock\": \"\",\n        \"servicesIpv4Cidr\": \"\",\n        \"servicesIpv4CidrBlock\": \"\",\n        \"servicesSecondaryRangeName\": \"\",\n        \"subnetworkName\": \"\",\n        \"tpuIpv4CidrBlock\": \"\",\n        \"useIpAliases\": {{faker 'random.boolean'}},\n        \"useRoutes\": {{faker 'random.boolean'}}\n      },\n      \"labelFingerprint\": \"\",\n      \"legacyAbac\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"locations\": [\n        \"\"\n      ],\n      \"loggingConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        }\n      },\n      \"loggingService\": \"\",\n      \"maintenancePolicy\": {\n        \"resourceVersion\": \"\",\n        \"window\": {\n          \"dailyMaintenanceWindow\": {\n            \"duration\": \"\",\n            \"startTime\": \"\"\n          },\n          \"maintenanceExclusions\": {},\n          \"recurringWindow\": {\n            \"recurrence\": \"\",\n            \"window\": {\n              \"endTime\": \"\",\n              \"maintenanceExclusionOptions\": {\n                \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n              },\n              \"startTime\": \"\"\n            }\n          }\n        }\n      },\n      \"master\": {},\n      \"masterAuth\": {\n        \"clientCertificate\": \"\",\n        \"clientCertificateConfig\": {\n          \"issueClientCertificate\": {{faker 'random.boolean'}}\n        },\n        \"clientKey\": \"\",\n        \"clusterCaCertificate\": \"\",\n        \"password\": \"\",\n        \"username\": \"\"\n      },\n      \"masterAuthorizedNetworksConfig\": {\n        \"cidrBlocks\": [\n          {\n            \"cidrBlock\": \"\",\n            \"displayName\": \"\"\n          }\n        ],\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"masterIpv4CidrBlock\": \"\",\n      \"meshCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"monitoringConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        },\n        \"managedPrometheusConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"monitoringService\": \"\",\n      \"name\": \"\",\n      \"network\": \"\",\n      \"networkConfig\": {\n        \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n        \"defaultSnatStatus\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsConfig\": {\n          \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n          \"clusterDnsDomain\": \"\",\n          \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n        },\n        \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n        \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n        \"network\": \"\",\n        \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n        \"serviceExternalIpsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subnetwork\": \"\"\n      },\n      \"networkPolicy\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n      },\n      \"nodeConfig\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n      \"nodePoolDefaults\": {\n        \"nodeConfigDefaults\": {\n          \"gcfsConfig\": {\n            \"enabled\": {{faker 'random.boolean'}}\n          }\n        }\n      },\n      \"nodePools\": [\n        {\n          \"autoscaling\": {\n            \"autoprovisioned\": {{faker 'random.boolean'}},\n            \"enabled\": {{faker 'random.boolean'}},\n            \"maxNodeCount\": {{faker 'random.number'}},\n            \"minNodeCount\": {{faker 'random.number'}}\n          },\n          \"conditions\": [\n            {\n              \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n              \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n              \"message\": \"\"\n            }\n          ],\n          \"config\": {\n            \"accelerators\": [\n              {\n                \"acceleratorCount\": \"\",\n                \"acceleratorType\": \"\",\n                \"gpuPartitionSize\": \"\"\n              }\n            ],\n            \"advancedMachineFeatures\": {\n              \"threadsPerCore\": \"\"\n            },\n            \"bootDiskKmsKey\": \"\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskType\": \"\",\n            \"ephemeralStorageConfig\": {\n              \"localSsdCount\": {{faker 'random.number'}}\n            },\n            \"gcfsConfig\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"gvnic\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"imageType\": \"\",\n            \"kubeletConfig\": {\n              \"cpuCfsQuota\": {{faker 'random.boolean'}},\n              \"cpuCfsQuotaPeriod\": \"\",\n              \"cpuManagerPolicy\": \"\"\n            },\n            \"labels\": {},\n            \"linuxNodeConfig\": {\n              \"sysctls\": {}\n            },\n            \"localSsdCount\": {{faker 'random.number'}},\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"minCpuPlatform\": \"\",\n            \"nodeGroup\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"preemptible\": {{faker 'random.boolean'}},\n            \"reservationAffinity\": {\n              \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n              \"key\": \"\",\n              \"values\": [\n                \"\"\n              ]\n            },\n            \"sandboxConfig\": {\n              \"sandboxType\": \"\",\n              \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n            },\n            \"serviceAccount\": \"\",\n            \"shieldedInstanceConfig\": {\n              \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n              \"enableSecureBoot\": {{faker 'random.boolean'}}\n            },\n            \"spot\": {{faker 'random.boolean'}},\n            \"tags\": [\n              \"\"\n            ],\n            \"taints\": [\n              {\n                \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"workloadMetadataConfig\": {\n              \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n              \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n            }\n          },\n          \"initialNodeCount\": {{faker 'random.number'}},\n          \"instanceGroupUrls\": [\n            \"\"\n          ],\n          \"locations\": [\n            \"\"\n          ],\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"maxPodsConstraint\": {\n            \"maxPodsPerNode\": \"\"\n          },\n          \"name\": \"\",\n          \"networkConfig\": {\n            \"createPodRange\": {{faker 'random.boolean'}},\n            \"podIpv4CidrBlock\": \"\",\n            \"podRange\": \"\"\n          },\n          \"placementPolicy\": {\n            \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n          },\n          \"podIpv4CidrSize\": {{faker 'random.number'}},\n          \"selfLink\": \"\",\n          \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n          \"statusMessage\": \"\",\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          },\n          \"version\": \"\"\n        }\n      ],\n      \"notificationConfig\": {\n        \"pubsub\": {\n          \"enabled\": {{faker 'random.boolean'}},\n          \"filter\": {\n            \"eventType\": [\n              \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n            ]\n          },\n          \"topic\": \"\"\n        }\n      },\n      \"podSecurityPolicyConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"privateCluster\": {{faker 'random.boolean'}},\n      \"privateClusterConfig\": {\n        \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n        \"enablePrivateNodes\": {{faker 'random.boolean'}},\n        \"masterGlobalAccessConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"masterIpv4CidrBlock\": \"\",\n        \"peeringName\": \"\",\n        \"privateEndpoint\": \"\",\n        \"publicEndpoint\": \"\"\n      },\n      \"releaseChannel\": {\n        \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n      },\n      \"resourceLabels\": {},\n      \"resourceUsageExportConfig\": {\n        \"bigqueryDestination\": {\n          \"datasetId\": \"\"\n        },\n        \"consumptionMeteringConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n      },\n      \"selfLink\": \"\",\n      \"servicesIpv4Cidr\": \"\",\n      \"shieldedNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\",\n      \"tpuConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4CidrBlock\": \"\",\n        \"useServiceNetworking\": {{faker 'random.boolean'}}\n      },\n      \"tpuIpv4CidrBlock\": \"\",\n      \"verticalPodAutoscaling\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"workloadCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"workloadIdentityConfig\": {\n        \"identityNamespace\": \"\",\n        \"identityProvider\": \"\",\n        \"workloadPool\": \"\"\n      },\n      \"zone\": \"\"\n    }\n  ],\n  \"missingZones\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b103775f-a6c4-4142-bda1-b2e1642f40ec",
      "documentation": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters",
      "responses": [
        {
          "uuid": "a15fe234-22ce-40e5-8238-1c7f2d8ec711",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc584ae5-22cc-429f-a9cf-9eea72879215",
      "documentation": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
      "method": "delete",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "79b6f83f-1dc7-4a3d-b83b-a3b109bd9373",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4386bee3-12c9-4458-9bcc-8d5a68c64fee",
      "documentation": "Gets the details for a specific cluster.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "97a0b5f5-76e4-4a9e-8c25-8f8a11548317",
          "body": "{\n  \"addonsConfig\": {\n    \"cloudRunConfig\": {\n      \"disabled\": {{faker 'random.boolean'}},\n      \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n    },\n    \"configConnectorConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"dnsCacheConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gcePersistentDiskCsiDriverConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gcpFilestoreCsiDriverConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gkeBackupAgentConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"horizontalPodAutoscaling\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"httpLoadBalancing\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"istioConfig\": {\n      \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"kalmConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"kubernetesDashboard\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"networkPolicyConfig\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    }\n  },\n  \"authenticatorGroupsConfig\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"securityGroup\": \"\"\n  },\n  \"autopilot\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"autoscaling\": {\n    \"autoprovisioningLocations\": [\n      \"\"\n    ],\n    \"autoprovisioningNodePoolDefaults\": {\n      \"bootDiskKmsKey\": \"\",\n      \"diskSizeGb\": {{faker 'random.number'}},\n      \"diskType\": \"\",\n      \"imageType\": \"\",\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"minCpuPlatform\": \"\",\n      \"oauthScopes\": [\n        \"\"\n      ],\n      \"serviceAccount\": \"\",\n      \"shieldedInstanceConfig\": {\n        \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n        \"enableSecureBoot\": {{faker 'random.boolean'}}\n      },\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      }\n    },\n    \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n    \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n    \"resourceLimits\": [\n      {\n        \"maximum\": \"\",\n        \"minimum\": \"\",\n        \"resourceType\": \"\"\n      }\n    ]\n  },\n  \"binaryAuthorization\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"clusterIpv4Cidr\": \"\",\n  \"clusterTelemetry\": {\n    \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n  },\n  \"conditions\": [\n    {\n      \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n      \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"confidentialNodes\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"createTime\": \"\",\n  \"currentMasterVersion\": \"\",\n  \"currentNodeCount\": {{faker 'random.number'}},\n  \"currentNodeVersion\": \"\",\n  \"databaseEncryption\": {\n    \"keyName\": \"\",\n    \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n  },\n  \"defaultMaxPodsConstraint\": {\n    \"maxPodsPerNode\": \"\"\n  },\n  \"description\": \"\",\n  \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n  \"enableTpu\": {{faker 'random.boolean'}},\n  \"endpoint\": \"\",\n  \"expireTime\": \"\",\n  \"id\": \"\",\n  \"identityServiceConfig\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"initialClusterVersion\": \"\",\n  \"initialNodeCount\": {{faker 'random.number'}},\n  \"instanceGroupUrls\": [\n    \"\"\n  ],\n  \"ipAllocationPolicy\": {\n    \"allowRouteOverlap\": {{faker 'random.boolean'}},\n    \"clusterIpv4Cidr\": \"\",\n    \"clusterIpv4CidrBlock\": \"\",\n    \"clusterSecondaryRangeName\": \"\",\n    \"createSubnetwork\": {{faker 'random.boolean'}},\n    \"nodeIpv4Cidr\": \"\",\n    \"nodeIpv4CidrBlock\": \"\",\n    \"servicesIpv4Cidr\": \"\",\n    \"servicesIpv4CidrBlock\": \"\",\n    \"servicesSecondaryRangeName\": \"\",\n    \"subnetworkName\": \"\",\n    \"tpuIpv4CidrBlock\": \"\",\n    \"useIpAliases\": {{faker 'random.boolean'}},\n    \"useRoutes\": {{faker 'random.boolean'}}\n  },\n  \"labelFingerprint\": \"\",\n  \"legacyAbac\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"location\": \"\",\n  \"locations\": [\n    \"\"\n  ],\n  \"loggingConfig\": {\n    \"componentConfig\": {\n      \"enableComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n      ]\n    }\n  },\n  \"loggingService\": \"\",\n  \"maintenancePolicy\": {\n    \"resourceVersion\": \"\",\n    \"window\": {\n      \"dailyMaintenanceWindow\": {\n        \"duration\": \"\",\n        \"startTime\": \"\"\n      },\n      \"maintenanceExclusions\": {},\n      \"recurringWindow\": {\n        \"recurrence\": \"\",\n        \"window\": {\n          \"endTime\": \"\",\n          \"maintenanceExclusionOptions\": {\n            \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n          },\n          \"startTime\": \"\"\n        }\n      }\n    }\n  },\n  \"master\": {},\n  \"masterAuth\": {\n    \"clientCertificate\": \"\",\n    \"clientCertificateConfig\": {\n      \"issueClientCertificate\": {{faker 'random.boolean'}}\n    },\n    \"clientKey\": \"\",\n    \"clusterCaCertificate\": \"\",\n    \"password\": \"\",\n    \"username\": \"\"\n  },\n  \"masterAuthorizedNetworksConfig\": {\n    \"cidrBlocks\": [\n      {\n        \"cidrBlock\": \"\",\n        \"displayName\": \"\"\n      }\n    ],\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"masterIpv4CidrBlock\": \"\",\n  \"meshCertificates\": {\n    \"enableCertificates\": {{faker 'random.boolean'}}\n  },\n  \"monitoringConfig\": {\n    \"componentConfig\": {\n      \"enableComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n      ]\n    },\n    \"managedPrometheusConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    }\n  },\n  \"monitoringService\": \"\",\n  \"name\": \"\",\n  \"network\": \"\",\n  \"networkConfig\": {\n    \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n    \"defaultSnatStatus\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"dnsConfig\": {\n      \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n      \"clusterDnsDomain\": \"\",\n      \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n    },\n    \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n    \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n    \"network\": \"\",\n    \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n    \"serviceExternalIpsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subnetwork\": \"\"\n  },\n  \"networkPolicy\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n  },\n  \"nodeConfig\": {\n    \"accelerators\": [\n      {\n        \"acceleratorCount\": \"\",\n        \"acceleratorType\": \"\",\n        \"gpuPartitionSize\": \"\"\n      }\n    ],\n    \"advancedMachineFeatures\": {\n      \"threadsPerCore\": \"\"\n    },\n    \"bootDiskKmsKey\": \"\",\n    \"diskSizeGb\": {{faker 'random.number'}},\n    \"diskType\": \"\",\n    \"ephemeralStorageConfig\": {\n      \"localSsdCount\": {{faker 'random.number'}}\n    },\n    \"gcfsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gvnic\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"imageType\": \"\",\n    \"kubeletConfig\": {\n      \"cpuCfsQuota\": {{faker 'random.boolean'}},\n      \"cpuCfsQuotaPeriod\": \"\",\n      \"cpuManagerPolicy\": \"\"\n    },\n    \"labels\": {},\n    \"linuxNodeConfig\": {\n      \"sysctls\": {}\n    },\n    \"localSsdCount\": {{faker 'random.number'}},\n    \"machineType\": \"\",\n    \"metadata\": {},\n    \"minCpuPlatform\": \"\",\n    \"nodeGroup\": \"\",\n    \"oauthScopes\": [\n      \"\"\n    ],\n    \"preemptible\": {{faker 'random.boolean'}},\n    \"reservationAffinity\": {\n      \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n      \"key\": \"\",\n      \"values\": [\n        \"\"\n      ]\n    },\n    \"sandboxConfig\": {\n      \"sandboxType\": \"\",\n      \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n    },\n    \"serviceAccount\": \"\",\n    \"shieldedInstanceConfig\": {\n      \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n      \"enableSecureBoot\": {{faker 'random.boolean'}}\n    },\n    \"spot\": {{faker 'random.boolean'}},\n    \"tags\": [\n      \"\"\n    ],\n    \"taints\": [\n      {\n        \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"workloadMetadataConfig\": {\n      \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n      \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n    }\n  },\n  \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n  \"nodePoolDefaults\": {\n    \"nodeConfigDefaults\": {\n      \"gcfsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      }\n    }\n  },\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ],\n  \"notificationConfig\": {\n    \"pubsub\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"filter\": {\n        \"eventType\": [\n          \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n        ]\n      },\n      \"topic\": \"\"\n    }\n  },\n  \"podSecurityPolicyConfig\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"privateCluster\": {{faker 'random.boolean'}},\n  \"privateClusterConfig\": {\n    \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n    \"enablePrivateNodes\": {{faker 'random.boolean'}},\n    \"masterGlobalAccessConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"masterIpv4CidrBlock\": \"\",\n    \"peeringName\": \"\",\n    \"privateEndpoint\": \"\",\n    \"publicEndpoint\": \"\"\n  },\n  \"releaseChannel\": {\n    \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n  },\n  \"resourceLabels\": {},\n  \"resourceUsageExportConfig\": {\n    \"bigqueryDestination\": {\n      \"datasetId\": \"\"\n    },\n    \"consumptionMeteringConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n  },\n  \"selfLink\": \"\",\n  \"servicesIpv4Cidr\": \"\",\n  \"shieldedNodes\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n  \"statusMessage\": \"\",\n  \"subnetwork\": \"\",\n  \"tpuConfig\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"ipv4CidrBlock\": \"\",\n    \"useServiceNetworking\": {{faker 'random.boolean'}}\n  },\n  \"tpuIpv4CidrBlock\": \"\",\n  \"verticalPodAutoscaling\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"workloadCertificates\": {\n    \"enableCertificates\": {{faker 'random.boolean'}}\n  },\n  \"workloadIdentityConfig\": {\n    \"identityNamespace\": \"\",\n    \"identityProvider\": \"\",\n    \"workloadPool\": \"\"\n  },\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eaca62e-6643-4b83-ad93-b686c444b9cb",
      "documentation": "Updates the settings for a specific cluster.",
      "method": "put",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "2aa60826-e604-4919-9691-4dd396f02f83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3fb5636-5190-4335-aabe-59026951a135",
      "documentation": "Sets the addons for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/addons",
      "responses": [
        {
          "uuid": "b124671c-2d9f-40ae-95f6-dbd8ce9537fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e28a8672-2b6b-4013-8f32-f1b77e3cefdf",
      "documentation": "Enables or disables the ABAC authorization mechanism on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/legacyAbac",
      "responses": [
        {
          "uuid": "1bd5768b-73b3-4287-b582-eee8b6ebccf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27b6a7f8-a85c-4f78-b924-4c12dfd8c4a0",
      "documentation": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/locations",
      "responses": [
        {
          "uuid": "a01337fa-7ab5-48ab-9cef-280f4a830e48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a3bc40b-a95c-42f2-83dc-4003db6b9aec",
      "documentation": "Sets the logging service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/logging",
      "responses": [
        {
          "uuid": "8fa1b833-ca51-41da-99e4-2f2ea5b12f31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10f48141-21cf-428b-8564-9d3f4def1584",
      "documentation": "Updates the master for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/master",
      "responses": [
        {
          "uuid": "37f2e7ec-50e0-4c4a-a593-166b454d2e1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51311521-788c-4957-8141-fdfb087c58cc",
      "documentation": "Sets the monitoring service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/monitoring",
      "responses": [
        {
          "uuid": "4c578ad9-b9d8-45da-b515-a3768052f292",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfdaaf8e-2804-424c-b0cd-1453b4b16a38",
      "documentation": "Lists the node pools for a cluster.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools",
      "responses": [
        {
          "uuid": "d33617bb-2ad2-426c-bd9c-cec0927ea18c",
          "body": "{\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63af8254-fdec-4032-8aac-8b4aad65bc4f",
      "documentation": "Creates a node pool for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools",
      "responses": [
        {
          "uuid": "7ec5959e-4e6a-4688-b99d-b7aa25b558e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9280e2e3-2e19-457d-a482-88ef571e54ae",
      "documentation": "Deletes a node pool from a cluster.",
      "method": "delete",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId",
      "responses": [
        {
          "uuid": "fa8e0517-0b14-442e-afaf-749ccbfccabd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6256be4-d862-4334-9461-897738caf44e",
      "documentation": "Retrieves the requested node pool.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId",
      "responses": [
        {
          "uuid": "213e1333-dd15-4f06-97ad-61d2e223485f",
          "body": "{\n  \"autoscaling\": {\n    \"autoprovisioned\": {{faker 'random.boolean'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"maxNodeCount\": {{faker 'random.number'}},\n    \"minNodeCount\": {{faker 'random.number'}}\n  },\n  \"conditions\": [\n    {\n      \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n      \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"config\": {\n    \"accelerators\": [\n      {\n        \"acceleratorCount\": \"\",\n        \"acceleratorType\": \"\",\n        \"gpuPartitionSize\": \"\"\n      }\n    ],\n    \"advancedMachineFeatures\": {\n      \"threadsPerCore\": \"\"\n    },\n    \"bootDiskKmsKey\": \"\",\n    \"diskSizeGb\": {{faker 'random.number'}},\n    \"diskType\": \"\",\n    \"ephemeralStorageConfig\": {\n      \"localSsdCount\": {{faker 'random.number'}}\n    },\n    \"gcfsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gvnic\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"imageType\": \"\",\n    \"kubeletConfig\": {\n      \"cpuCfsQuota\": {{faker 'random.boolean'}},\n      \"cpuCfsQuotaPeriod\": \"\",\n      \"cpuManagerPolicy\": \"\"\n    },\n    \"labels\": {},\n    \"linuxNodeConfig\": {\n      \"sysctls\": {}\n    },\n    \"localSsdCount\": {{faker 'random.number'}},\n    \"machineType\": \"\",\n    \"metadata\": {},\n    \"minCpuPlatform\": \"\",\n    \"nodeGroup\": \"\",\n    \"oauthScopes\": [\n      \"\"\n    ],\n    \"preemptible\": {{faker 'random.boolean'}},\n    \"reservationAffinity\": {\n      \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n      \"key\": \"\",\n      \"values\": [\n        \"\"\n      ]\n    },\n    \"sandboxConfig\": {\n      \"sandboxType\": \"\",\n      \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n    },\n    \"serviceAccount\": \"\",\n    \"shieldedInstanceConfig\": {\n      \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n      \"enableSecureBoot\": {{faker 'random.boolean'}}\n    },\n    \"spot\": {{faker 'random.boolean'}},\n    \"tags\": [\n      \"\"\n    ],\n    \"taints\": [\n      {\n        \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"workloadMetadataConfig\": {\n      \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n      \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n    }\n  },\n  \"initialNodeCount\": {{faker 'random.number'}},\n  \"instanceGroupUrls\": [\n    \"\"\n  ],\n  \"locations\": [\n    \"\"\n  ],\n  \"management\": {\n    \"autoRepair\": {{faker 'random.boolean'}},\n    \"autoUpgrade\": {{faker 'random.boolean'}},\n    \"upgradeOptions\": {\n      \"autoUpgradeStartTime\": \"\",\n      \"description\": \"\"\n    }\n  },\n  \"maxPodsConstraint\": {\n    \"maxPodsPerNode\": \"\"\n  },\n  \"name\": \"\",\n  \"networkConfig\": {\n    \"createPodRange\": {{faker 'random.boolean'}},\n    \"podIpv4CidrBlock\": \"\",\n    \"podRange\": \"\"\n  },\n  \"placementPolicy\": {\n    \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n  },\n  \"podIpv4CidrSize\": {{faker 'random.number'}},\n  \"selfLink\": \"\",\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n  \"statusMessage\": \"\",\n  \"upgradeSettings\": {\n    \"maxSurge\": {{faker 'random.number'}},\n    \"maxUnavailable\": {{faker 'random.number'}}\n  },\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea41dbb3-3e76-49af-9aba-fe5b7c66dcfe",
      "documentation": "Sets the autoscaling settings of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/autoscaling",
      "responses": [
        {
          "uuid": "ae5ae726-8cc0-4f09-ba54-05bb062759ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e44333f1-505e-4115-bb52-4e9f4a5a571f",
      "documentation": "Sets the NodeManagement options for a node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/setManagement",
      "responses": [
        {
          "uuid": "7d03b76e-cba4-4efe-bddd-f26032d4ca6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "685121ae-9390-4a41-8a93-eb9488a5113e",
      "documentation": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/setSize",
      "responses": [
        {
          "uuid": "eb590602-6eff-4a2f-9f81-89a907aecc79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0cc2d5e-ca20-4eba-9fee-10043d355268",
      "documentation": "Updates the version and/or image type of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/update",
      "responses": [
        {
          "uuid": "d40e5995-4e75-4a07-ac2a-2ee26230ab41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e6ccd33-69ea-4f45-9534-c5bca0d78fbd",
      "documentation": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId:rollback",
      "responses": [
        {
          "uuid": "3e4aa41b-e103-4e0b-a108-79bb044a4c42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa83bbef-cd78-4e7f-9cfe-1615f1428409",
      "documentation": "Sets labels on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/resourceLabels",
      "responses": [
        {
          "uuid": "385f5bd7-ae58-431c-968e-990dbec31d07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3f366ed-ed57-40da-bf50-28fa89b93ec6",
      "documentation": "Completes master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:completeIpRotation",
      "responses": [
        {
          "uuid": "f1a46612-1f8c-4f42-a869-195395819217",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38d20e7a-9672-43ef-a34e-8d7a2ad9ae44",
      "documentation": "Sets the maintenance policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setMaintenancePolicy",
      "responses": [
        {
          "uuid": "cf32ceb9-d7f8-4501-8326-91e4070f351d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc1dc62e-7aa5-433b-860a-76aabaa3d325",
      "documentation": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setMasterAuth",
      "responses": [
        {
          "uuid": "e35fa745-45cd-4bfa-bded-6c48f2e2413c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "95eaffb4-8e45-4a90-a6be-1efade371782",
      "documentation": "Enables or disables Network Policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setNetworkPolicy",
      "responses": [
        {
          "uuid": "1aa1da52-a989-41e4-9f0b-867f1220ccaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec3d324f-7501-4313-b1c0-684cbf5aa63b",
      "documentation": "Starts master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:startIpRotation",
      "responses": [
        {
          "uuid": "b458759f-6dd1-4f59-a164-3e4d69bfc666",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c70b933e-5124-4116-87d9-076aa9c15cbb",
      "documentation": "Lists all operations in a project in the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations",
      "responses": [
        {
          "uuid": "0cd60173-6fff-427c-8783-6872873e3ef9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd858a3c-6428-44e5-9720-0d27dfdbe00e",
      "documentation": "Gets the specified operation.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations/:operationId",
      "responses": [
        {
          "uuid": "adbf707e-039f-42b4-9558-127f1791468b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d20ef67-122c-4592-baf1-2658a4f604bf",
      "documentation": "Cancels the specified operation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations/:operationId:cancel",
      "responses": [
        {
          "uuid": "484bb4b7-e94e-4c1b-9724-da178ac2561b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c247f478-c9a4-4387-a3c8-83f2d241ad0a",
      "documentation": "Returns configuration info about the Google Kubernetes Engine service.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/serverconfig",
      "responses": [
        {
          "uuid": "c446900b-45e3-4139-b888-d27be8d8c756",
          "body": "{\n  \"channels\": [\n    {\n      \"availableVersions\": [\n        {\n          \"reason\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\",\n      \"defaultVersion\": \"\",\n      \"validVersions\": [\n        \"\"\n      ]\n    }\n  ],\n  \"defaultClusterVersion\": \"\",\n  \"defaultImageType\": \"\",\n  \"validImageTypes\": [\n    \"\"\n  ],\n  \"validMasterVersions\": [\n    \"\"\n  ],\n  \"validNodeVersions\": [\n    \"\"\n  ],\n  \"windowsVersionMaps\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "521ca2c7-b4cc-4600-be6c-598be1e09b4a",
      "documentation": "Deletes a node pool from a cluster.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "a9fb818a-ef94-4250-9557-1b35ba71644f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42aab16e-e5b8-4e71-af10-a174be938982",
      "documentation": "Gets the specified operation.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "8516dd6d-9da0-4a41-be3d-f70a453d0504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e80e16f3-75d9-43b9-852c-6687863d4b73",
      "documentation": "Updates the version and/or image type of a specific node pool.",
      "method": "put",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "44701b09-7652-4327-8ced-9b5579752bb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "28c64280-9a4f-48da-bd91-7a98aab934aa",
      "documentation": "Returns configuration info about the Google Kubernetes Engine service.",
      "method": "get",
      "endpoint": "v1beta1/:name/serverConfig",
      "responses": [
        {
          "uuid": "49f7daca-9b94-45f3-94a3-177134ddad9d",
          "body": "{\n  \"channels\": [\n    {\n      \"availableVersions\": [\n        {\n          \"reason\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\",\n      \"defaultVersion\": \"\",\n      \"validVersions\": [\n        \"\"\n      ]\n    }\n  ],\n  \"defaultClusterVersion\": \"\",\n  \"defaultImageType\": \"\",\n  \"validImageTypes\": [\n    \"\"\n  ],\n  \"validMasterVersions\": [\n    \"\"\n  ],\n  \"validNodeVersions\": [\n    \"\"\n  ],\n  \"windowsVersionMaps\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f53bf3e-aabf-4792-83e7-7197d39af648",
      "documentation": "Cancels the specified operation.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "80fbc4af-459d-43bc-9f2d-5d7074450fce",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2b093189-436e-48ba-baa7-2c7c2cc1e685",
      "documentation": "Completes master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/:name:completeIpRotation",
      "responses": [
        {
          "uuid": "b12379de-8f72-4252-a26b-e273d6413d0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd3463f4-50b2-4d89-82d9-d7c40778a2d4",
      "documentation": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
      "method": "post",
      "endpoint": "v1beta1/:name:rollback",
      "responses": [
        {
          "uuid": "1736bc5f-48bd-4158-97c6-cda69fd730a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "828c82d2-ed99-414b-963a-429ca0434a54",
      "documentation": "Sets the addons for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setAddons",
      "responses": [
        {
          "uuid": "d0db1d90-0af7-42f0-8487-4c61f21897ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13d1db87-1238-45dc-b779-a8c9fd63987c",
      "documentation": "Sets the autoscaling settings of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/:name:setAutoscaling",
      "responses": [
        {
          "uuid": "bfae9c3a-dd20-4951-8ab1-3d5ae0a2f493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea244af7-9935-4459-985b-9cd27b7ebf7d",
      "documentation": "Enables or disables the ABAC authorization mechanism on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLegacyAbac",
      "responses": [
        {
          "uuid": "61552797-34bf-4eb4-84af-912a50304389",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e247bee8-aa8e-405d-8f36-4d4c32955ae7",
      "documentation": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLocations",
      "responses": [
        {
          "uuid": "2fa816b0-93d3-4d52-8729-c7da7b5a0b9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa5b541a-4cea-4120-a596-fc6312cb485b",
      "documentation": "Sets the logging service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLogging",
      "responses": [
        {
          "uuid": "b85a5fde-dc72-4e59-8cb5-7afd9ab0c511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "474d24ae-1ff0-4761-b928-12afd1164a06",
      "documentation": "Sets the maintenance policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMaintenancePolicy",
      "responses": [
        {
          "uuid": "db2e3d50-6782-4d15-87ad-c58ecbd826fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85c8fafb-de8a-48c7-afc8-a7fc134387fc",
      "documentation": "Sets the NodeManagement options for a node pool.",
      "method": "post",
      "endpoint": "v1beta1/:name:setManagement",
      "responses": [
        {
          "uuid": "8fb80694-272c-4011-9266-5fd6a9b1b1d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea568724-95eb-4b01-a586-d20d1eabaa3d",
      "documentation": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMasterAuth",
      "responses": [
        {
          "uuid": "461d720d-1ffc-47c8-be37-967d6dbca877",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "903ee8ce-3719-490c-8ca9-5db5896c201a",
      "documentation": "Sets the monitoring service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMonitoring",
      "responses": [
        {
          "uuid": "3115a0b1-8f47-4384-b326-06f810374a59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c9f8d24-7bfd-4bd1-b2a6-3dcc107ef5b9",
      "documentation": "Enables or disables Network Policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setNetworkPolicy",
      "responses": [
        {
          "uuid": "842b56c3-36a2-4d72-b316-c725564ab686",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "522796e8-7978-4322-8326-9a14bd5957c4",
      "documentation": "Sets labels on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setResourceLabels",
      "responses": [
        {
          "uuid": "0030804d-16fd-449d-9b84-8e289670487e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b85fbf8-e415-42c2-8329-8feb1eae247c",
      "documentation": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
      "method": "post",
      "endpoint": "v1beta1/:name:setSize",
      "responses": [
        {
          "uuid": "53fd2b90-f3fa-43d5-8eb5-2810adc156c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da9107f2-0c96-4915-ae62-cb488d55f928",
      "documentation": "Starts master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/:name:startIpRotation",
      "responses": [
        {
          "uuid": "269a3930-ad5c-48ba-87b0-e53651d5eb92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de3ef627-fce3-405b-8a30-a413b1a3317c",
      "documentation": "Updates the master for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:updateMaster",
      "responses": [
        {
          "uuid": "cf33af6e-0dbf-47bd-a691-351fcf764954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "670df2cd-0e12-4062-9479-9b953323567f",
      "documentation": "Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details. This API is not yet intended for general use, and is not available for all clusters.",
      "method": "get",
      "endpoint": "v1beta1/:parent/.well-known/openid-configuration",
      "responses": [
        {
          "uuid": "d8a6b0ae-87cc-427c-ab87-1c7b3bbcc307",
          "body": "{\n  \"cacheHeader\": {\n    \"age\": \"\",\n    \"directive\": \"\",\n    \"expires\": \"\"\n  },\n  \"claims_supported\": [\n    \"\"\n  ],\n  \"grant_types\": [\n    \"\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"\"\n  ],\n  \"issuer\": \"\",\n  \"jwks_uri\": \"\",\n  \"response_types_supported\": [\n    \"\"\n  ],\n  \"subject_types_supported\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac53a777-b2f4-448a-b97f-f218f086bf07",
      "documentation": "Lists subnetworks that can be used for creating clusters in a project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/aggregated/usableSubnetworks",
      "responses": [
        {
          "uuid": "8f8bd87d-e241-4eed-9591-a8bb7b5420f7",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"subnetworks\": [\n    {\n      \"ipCidrRange\": \"\",\n      \"network\": \"\",\n      \"secondaryIpRanges\": [\n        {\n          \"ipCidrRange\": \"\",\n          \"rangeName\": \"\",\n          \"status\": \"{{oneOf (array 'UNKNOWN' 'UNUSED' 'IN_USE_SERVICE' 'IN_USE_SHAREABLE_POD' 'IN_USE_MANAGED_POD')}}\"\n        }\n      ],\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aca501b2-fff4-4de3-b17b-e9419e6b680f",
      "documentation": "Lists all clusters owned by a project in either the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/:parent/clusters",
      "responses": [
        {
          "uuid": "c07dcfc8-f5c3-41bc-8f10-fce6fe4ceff9",
          "body": "{\n  \"clusters\": [\n    {\n      \"addonsConfig\": {\n        \"cloudRunConfig\": {\n          \"disabled\": {{faker 'random.boolean'}},\n          \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n        },\n        \"configConnectorConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsCacheConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcePersistentDiskCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcpFilestoreCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gkeBackupAgentConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"horizontalPodAutoscaling\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"httpLoadBalancing\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"istioConfig\": {\n          \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"kalmConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"kubernetesDashboard\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"networkPolicyConfig\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"authenticatorGroupsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"securityGroup\": \"\"\n      },\n      \"autopilot\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"autoscaling\": {\n        \"autoprovisioningLocations\": [\n          \"\"\n        ],\n        \"autoprovisioningNodePoolDefaults\": {\n          \"bootDiskKmsKey\": \"\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskType\": \"\",\n          \"imageType\": \"\",\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"minCpuPlatform\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"serviceAccount\": \"\",\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}}\n          },\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          }\n        },\n        \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n        \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n        \"resourceLimits\": [\n          {\n            \"maximum\": \"\",\n            \"minimum\": \"\",\n            \"resourceType\": \"\"\n          }\n        ]\n      },\n      \"binaryAuthorization\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"clusterIpv4Cidr\": \"\",\n      \"clusterTelemetry\": {\n        \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"confidentialNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"createTime\": \"\",\n      \"currentMasterVersion\": \"\",\n      \"currentNodeCount\": {{faker 'random.number'}},\n      \"currentNodeVersion\": \"\",\n      \"databaseEncryption\": {\n        \"keyName\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n      },\n      \"defaultMaxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"description\": \"\",\n      \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n      \"enableTpu\": {{faker 'random.boolean'}},\n      \"endpoint\": \"\",\n      \"expireTime\": \"\",\n      \"id\": \"\",\n      \"identityServiceConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"initialClusterVersion\": \"\",\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"ipAllocationPolicy\": {\n        \"allowRouteOverlap\": {{faker 'random.boolean'}},\n        \"clusterIpv4Cidr\": \"\",\n        \"clusterIpv4CidrBlock\": \"\",\n        \"clusterSecondaryRangeName\": \"\",\n        \"createSubnetwork\": {{faker 'random.boolean'}},\n        \"nodeIpv4Cidr\": \"\",\n        \"nodeIpv4CidrBlock\": \"\",\n        \"servicesIpv4Cidr\": \"\",\n        \"servicesIpv4CidrBlock\": \"\",\n        \"servicesSecondaryRangeName\": \"\",\n        \"subnetworkName\": \"\",\n        \"tpuIpv4CidrBlock\": \"\",\n        \"useIpAliases\": {{faker 'random.boolean'}},\n        \"useRoutes\": {{faker 'random.boolean'}}\n      },\n      \"labelFingerprint\": \"\",\n      \"legacyAbac\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"locations\": [\n        \"\"\n      ],\n      \"loggingConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        }\n      },\n      \"loggingService\": \"\",\n      \"maintenancePolicy\": {\n        \"resourceVersion\": \"\",\n        \"window\": {\n          \"dailyMaintenanceWindow\": {\n            \"duration\": \"\",\n            \"startTime\": \"\"\n          },\n          \"maintenanceExclusions\": {},\n          \"recurringWindow\": {\n            \"recurrence\": \"\",\n            \"window\": {\n              \"endTime\": \"\",\n              \"maintenanceExclusionOptions\": {\n                \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n              },\n              \"startTime\": \"\"\n            }\n          }\n        }\n      },\n      \"master\": {},\n      \"masterAuth\": {\n        \"clientCertificate\": \"\",\n        \"clientCertificateConfig\": {\n          \"issueClientCertificate\": {{faker 'random.boolean'}}\n        },\n        \"clientKey\": \"\",\n        \"clusterCaCertificate\": \"\",\n        \"password\": \"\",\n        \"username\": \"\"\n      },\n      \"masterAuthorizedNetworksConfig\": {\n        \"cidrBlocks\": [\n          {\n            \"cidrBlock\": \"\",\n            \"displayName\": \"\"\n          }\n        ],\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"masterIpv4CidrBlock\": \"\",\n      \"meshCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"monitoringConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        },\n        \"managedPrometheusConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"monitoringService\": \"\",\n      \"name\": \"\",\n      \"network\": \"\",\n      \"networkConfig\": {\n        \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n        \"defaultSnatStatus\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsConfig\": {\n          \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n          \"clusterDnsDomain\": \"\",\n          \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n        },\n        \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n        \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n        \"network\": \"\",\n        \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n        \"serviceExternalIpsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subnetwork\": \"\"\n      },\n      \"networkPolicy\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n      },\n      \"nodeConfig\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n      \"nodePoolDefaults\": {\n        \"nodeConfigDefaults\": {\n          \"gcfsConfig\": {\n            \"enabled\": {{faker 'random.boolean'}}\n          }\n        }\n      },\n      \"nodePools\": [\n        {\n          \"autoscaling\": {\n            \"autoprovisioned\": {{faker 'random.boolean'}},\n            \"enabled\": {{faker 'random.boolean'}},\n            \"maxNodeCount\": {{faker 'random.number'}},\n            \"minNodeCount\": {{faker 'random.number'}}\n          },\n          \"conditions\": [\n            {\n              \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n              \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n              \"message\": \"\"\n            }\n          ],\n          \"config\": {\n            \"accelerators\": [\n              {\n                \"acceleratorCount\": \"\",\n                \"acceleratorType\": \"\",\n                \"gpuPartitionSize\": \"\"\n              }\n            ],\n            \"advancedMachineFeatures\": {\n              \"threadsPerCore\": \"\"\n            },\n            \"bootDiskKmsKey\": \"\",\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskType\": \"\",\n            \"ephemeralStorageConfig\": {\n              \"localSsdCount\": {{faker 'random.number'}}\n            },\n            \"gcfsConfig\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"gvnic\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"imageType\": \"\",\n            \"kubeletConfig\": {\n              \"cpuCfsQuota\": {{faker 'random.boolean'}},\n              \"cpuCfsQuotaPeriod\": \"\",\n              \"cpuManagerPolicy\": \"\"\n            },\n            \"labels\": {},\n            \"linuxNodeConfig\": {\n              \"sysctls\": {}\n            },\n            \"localSsdCount\": {{faker 'random.number'}},\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"minCpuPlatform\": \"\",\n            \"nodeGroup\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"preemptible\": {{faker 'random.boolean'}},\n            \"reservationAffinity\": {\n              \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n              \"key\": \"\",\n              \"values\": [\n                \"\"\n              ]\n            },\n            \"sandboxConfig\": {\n              \"sandboxType\": \"\",\n              \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n            },\n            \"serviceAccount\": \"\",\n            \"shieldedInstanceConfig\": {\n              \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n              \"enableSecureBoot\": {{faker 'random.boolean'}}\n            },\n            \"spot\": {{faker 'random.boolean'}},\n            \"tags\": [\n              \"\"\n            ],\n            \"taints\": [\n              {\n                \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"workloadMetadataConfig\": {\n              \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n              \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n            }\n          },\n          \"initialNodeCount\": {{faker 'random.number'}},\n          \"instanceGroupUrls\": [\n            \"\"\n          ],\n          \"locations\": [\n            \"\"\n          ],\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"maxPodsConstraint\": {\n            \"maxPodsPerNode\": \"\"\n          },\n          \"name\": \"\",\n          \"networkConfig\": {\n            \"createPodRange\": {{faker 'random.boolean'}},\n            \"podIpv4CidrBlock\": \"\",\n            \"podRange\": \"\"\n          },\n          \"placementPolicy\": {\n            \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n          },\n          \"podIpv4CidrSize\": {{faker 'random.number'}},\n          \"selfLink\": \"\",\n          \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n          \"statusMessage\": \"\",\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          },\n          \"version\": \"\"\n        }\n      ],\n      \"notificationConfig\": {\n        \"pubsub\": {\n          \"enabled\": {{faker 'random.boolean'}},\n          \"filter\": {\n            \"eventType\": [\n              \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n            ]\n          },\n          \"topic\": \"\"\n        }\n      },\n      \"podSecurityPolicyConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"privateCluster\": {{faker 'random.boolean'}},\n      \"privateClusterConfig\": {\n        \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n        \"enablePrivateNodes\": {{faker 'random.boolean'}},\n        \"masterGlobalAccessConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"masterIpv4CidrBlock\": \"\",\n        \"peeringName\": \"\",\n        \"privateEndpoint\": \"\",\n        \"publicEndpoint\": \"\"\n      },\n      \"releaseChannel\": {\n        \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n      },\n      \"resourceLabels\": {},\n      \"resourceUsageExportConfig\": {\n        \"bigqueryDestination\": {\n          \"datasetId\": \"\"\n        },\n        \"consumptionMeteringConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n      },\n      \"selfLink\": \"\",\n      \"servicesIpv4Cidr\": \"\",\n      \"shieldedNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\",\n      \"tpuConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4CidrBlock\": \"\",\n        \"useServiceNetworking\": {{faker 'random.boolean'}}\n      },\n      \"tpuIpv4CidrBlock\": \"\",\n      \"verticalPodAutoscaling\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"workloadCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"workloadIdentityConfig\": {\n        \"identityNamespace\": \"\",\n        \"identityProvider\": \"\",\n        \"workloadPool\": \"\"\n      },\n      \"zone\": \"\"\n    }\n  ],\n  \"missingZones\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5850128-3681-4979-ad9d-e90a063ae2a6",
      "documentation": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
      "method": "post",
      "endpoint": "v1beta1/:parent/clusters",
      "responses": [
        {
          "uuid": "9dbae29e-2e9a-4b36-9ae1-60b04a625f86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15404f09-1878-4e9a-b2ed-714c2f96fc7f",
      "documentation": "Gets the public component of the cluster signing keys in JSON Web Key format. This API is not yet intended for general use, and is not available for all clusters.",
      "method": "get",
      "endpoint": "v1beta1/:parent/jwks",
      "responses": [
        {
          "uuid": "aeca4f9b-180a-4baf-95c8-d1d8fb928950",
          "body": "{\n  \"cacheHeader\": {\n    \"age\": \"\",\n    \"directive\": \"\",\n    \"expires\": \"\"\n  },\n  \"keys\": [\n    {\n      \"alg\": \"\",\n      \"crv\": \"\",\n      \"e\": \"\",\n      \"kid\": \"\",\n      \"kty\": \"\",\n      \"n\": \"\",\n      \"use\": \"\",\n      \"x\": \"\",\n      \"y\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d545ee74-1d3f-4399-aa7a-9d0e2493c842",
      "documentation": "Fetches locations that offer Google Kubernetes Engine.",
      "method": "get",
      "endpoint": "v1beta1/:parent/locations",
      "responses": [
        {
          "uuid": "cf1cddf9-1aa2-4368-add5-ec967ffc06cd",
          "body": "{\n  \"locations\": [\n    {\n      \"name\": \"\",\n      \"recommended\": {{faker 'random.boolean'}},\n      \"type\": \"{{oneOf (array 'LOCATION_TYPE_UNSPECIFIED' 'ZONE' 'REGION')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1045f25f-7ba1-4057-91fd-926c786b5f9a",
      "documentation": "Lists the node pools for a cluster.",
      "method": "get",
      "endpoint": "v1beta1/:parent/nodePools",
      "responses": [
        {
          "uuid": "ec41ffc3-71e3-4acd-b7b9-ebd86ae15164",
          "body": "{\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d0d0dda-6cf3-44e0-b16a-1a094cc541f8",
      "documentation": "Creates a node pool for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:parent/nodePools",
      "responses": [
        {
          "uuid": "9f9800ff-5c1b-447c-bf3b-322d3f56c6a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1837c364-51b3-4a54-a3bb-e8d198296d2e",
      "documentation": "Lists all operations in a project in the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/:parent/operations",
      "responses": [
        {
          "uuid": "e1713f64-2eb6-4e73-9752-07f8ecd90299",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}