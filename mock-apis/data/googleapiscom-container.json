{
  "uuid": "a48c8537-19ba-4cad-9b77-834a3cd43f31",
  "lastMigration": 19,
  "name": "Kubernetes Engine API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "22c78c9f-1b8b-45ba-9476-5fcdff76370b",
      "documentation": "Lists all clusters owned by a project in either the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters",
      "responses": [
        {
          "uuid": "0679d4f5-06a2-481d-bccb-68e754fcd56d",
          "body": "{\n  \"clusters\": [\n    {\n      \"addonsConfig\": {\n        \"cloudRunConfig\": {\n          \"disabled\": {{faker 'random.boolean'}},\n          \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n        },\n        \"configConnectorConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsCacheConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcePersistentDiskCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcpFilestoreCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gkeBackupAgentConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"horizontalPodAutoscaling\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"httpLoadBalancing\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"istioConfig\": {\n          \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"kalmConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"kubernetesDashboard\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"networkPolicyConfig\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"authenticatorGroupsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"securityGroup\": \"\"\n      },\n      \"autopilot\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"autoscaling\": {\n        \"autoprovisioningLocations\": [\n          \"\"\n        ],\n        \"autoprovisioningNodePoolDefaults\": {\n          \"bootDiskKmsKey\": \"\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskType\": \"\",\n          \"imageType\": \"\",\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"minCpuPlatform\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"serviceAccount\": \"\",\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}}\n          },\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          }\n        },\n        \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n        \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n        \"resourceLimits\": [\n          {\n            \"maximum\": \"\",\n            \"minimum\": \"\",\n            \"resourceType\": \"\"\n          }\n        ]\n      },\n      \"binaryAuthorization\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"clusterIpv4Cidr\": \"\",\n      \"clusterTelemetry\": {\n        \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"confidentialNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"createTime\": \"\",\n      \"currentMasterVersion\": \"\",\n      \"currentNodeCount\": {{faker 'random.number'}},\n      \"currentNodeVersion\": \"\",\n      \"databaseEncryption\": {\n        \"keyName\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n      },\n      \"defaultMaxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"description\": \"\",\n      \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n      \"enableTpu\": {{faker 'random.boolean'}},\n      \"endpoint\": \"\",\n      \"expireTime\": \"\",\n      \"id\": \"\",\n      \"identityServiceConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"initialClusterVersion\": \"\",\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"ipAllocationPolicy\": {\n        \"allowRouteOverlap\": {{faker 'random.boolean'}},\n        \"clusterIpv4Cidr\": \"\",\n        \"clusterIpv4CidrBlock\": \"\",\n        \"clusterSecondaryRangeName\": \"\",\n        \"createSubnetwork\": {{faker 'random.boolean'}},\n        \"nodeIpv4Cidr\": \"\",\n        \"nodeIpv4CidrBlock\": \"\",\n        \"servicesIpv4Cidr\": \"\",\n        \"servicesIpv4CidrBlock\": \"\",\n        \"servicesSecondaryRangeName\": \"\",\n        \"subnetworkName\": \"\",\n        \"tpuIpv4CidrBlock\": \"\",\n        \"useIpAliases\": {{faker 'random.boolean'}},\n        \"useRoutes\": {{faker 'random.boolean'}}\n      },\n      \"labelFingerprint\": \"\",\n      \"legacyAbac\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"locations\": [\n        \"\"\n      ],\n      \"loggingConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        }\n      },\n      \"loggingService\": \"\",\n      \"maintenancePolicy\": {\n        \"resourceVersion\": \"\",\n        \"window\": {\n          \"dailyMaintenanceWindow\": {\n            \"duration\": \"\",\n            \"startTime\": \"\"\n          },\n          \"maintenanceExclusions\": {},\n          \"recurringWindow\": {\n            \"recurrence\": \"\",\n            \"window\": {\n              \"endTime\": \"\",\n              \"maintenanceExclusionOptions\": {\n                \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n              },\n              \"startTime\": \"\"\n            }\n          }\n        }\n      },\n      \"master\": {},\n      \"masterAuth\": {\n        \"clientCertificate\": \"\",\n        \"clientCertificateConfig\": {\n          \"issueClientCertificate\": {{faker 'random.boolean'}}\n        },\n        \"clientKey\": \"\",\n        \"clusterCaCertificate\": \"\",\n        \"password\": \"\",\n        \"username\": \"\"\n      },\n      \"masterAuthorizedNetworksConfig\": {\n        \"cidrBlocks\": [\n          {\n            \"cidrBlock\": \"\",\n            \"displayName\": \"\"\n          }\n        ],\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"masterIpv4CidrBlock\": \"\",\n      \"meshCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"monitoringConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        },\n        \"managedPrometheusConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"monitoringService\": \"\",\n      \"name\": \"\",\n      \"network\": \"\",\n      \"networkConfig\": {\n        \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n        \"defaultSnatStatus\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsConfig\": {\n          \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n          \"clusterDnsDomain\": \"\",\n          \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n        },\n        \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n        \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n        \"network\": \"\",\n        \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n        \"serviceExternalIpsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subnetwork\": \"\"\n      },\n      \"networkPolicy\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n      },\n      \"nodeConfig\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"confidentialNodes\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\",\n          \"podPidsLimit\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n      \"nodePoolAutoConfig\": {\n        \"networkTags\": {\n          \"tags\": [\n            \"\"\n          ]\n        }\n      },\n      \"nodePoolDefaults\": {\n        \"nodeConfigDefaults\": {\n          \"gcfsConfig\": {\n            \"enabled\": {{faker 'random.boolean'}}\n          }\n        }\n      },\n      \"nodePools\": [\n        {\n          \"autoscaling\": {\n            \"autoprovisioned\": {{faker 'random.boolean'}},\n            \"enabled\": {{faker 'random.boolean'}},\n            \"maxNodeCount\": {{faker 'random.number'}},\n            \"minNodeCount\": {{faker 'random.number'}}\n          },\n          \"conditions\": [\n            {\n              \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n              \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n              \"message\": \"\"\n            }\n          ],\n          \"config\": {\n            \"accelerators\": [\n              {\n                \"acceleratorCount\": \"\",\n                \"acceleratorType\": \"\",\n                \"gpuPartitionSize\": \"\"\n              }\n            ],\n            \"advancedMachineFeatures\": {\n              \"threadsPerCore\": \"\"\n            },\n            \"bootDiskKmsKey\": \"\",\n            \"confidentialNodes\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskType\": \"\",\n            \"ephemeralStorageConfig\": {\n              \"localSsdCount\": {{faker 'random.number'}}\n            },\n            \"gcfsConfig\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"gvnic\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"imageType\": \"\",\n            \"kubeletConfig\": {\n              \"cpuCfsQuota\": {{faker 'random.boolean'}},\n              \"cpuCfsQuotaPeriod\": \"\",\n              \"cpuManagerPolicy\": \"\",\n              \"podPidsLimit\": \"\"\n            },\n            \"labels\": {},\n            \"linuxNodeConfig\": {\n              \"sysctls\": {}\n            },\n            \"localSsdCount\": {{faker 'random.number'}},\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"minCpuPlatform\": \"\",\n            \"nodeGroup\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"preemptible\": {{faker 'random.boolean'}},\n            \"reservationAffinity\": {\n              \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n              \"key\": \"\",\n              \"values\": [\n                \"\"\n              ]\n            },\n            \"sandboxConfig\": {\n              \"sandboxType\": \"\",\n              \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n            },\n            \"serviceAccount\": \"\",\n            \"shieldedInstanceConfig\": {\n              \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n              \"enableSecureBoot\": {{faker 'random.boolean'}}\n            },\n            \"spot\": {{faker 'random.boolean'}},\n            \"tags\": [\n              \"\"\n            ],\n            \"taints\": [\n              {\n                \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"workloadMetadataConfig\": {\n              \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n              \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n            }\n          },\n          \"initialNodeCount\": {{faker 'random.number'}},\n          \"instanceGroupUrls\": [\n            \"\"\n          ],\n          \"locations\": [\n            \"\"\n          ],\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"maxPodsConstraint\": {\n            \"maxPodsPerNode\": \"\"\n          },\n          \"name\": \"\",\n          \"networkConfig\": {\n            \"createPodRange\": {{faker 'random.boolean'}},\n            \"podIpv4CidrBlock\": \"\",\n            \"podRange\": \"\"\n          },\n          \"placementPolicy\": {\n            \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n          },\n          \"podIpv4CidrSize\": {{faker 'random.number'}},\n          \"selfLink\": \"\",\n          \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n          \"statusMessage\": \"\",\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          },\n          \"version\": \"\"\n        }\n      ],\n      \"notificationConfig\": {\n        \"pubsub\": {\n          \"enabled\": {{faker 'random.boolean'}},\n          \"filter\": {\n            \"eventType\": [\n              \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n            ]\n          },\n          \"topic\": \"\"\n        }\n      },\n      \"podSecurityPolicyConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"privateCluster\": {{faker 'random.boolean'}},\n      \"privateClusterConfig\": {\n        \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n        \"enablePrivateNodes\": {{faker 'random.boolean'}},\n        \"masterGlobalAccessConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"masterIpv4CidrBlock\": \"\",\n        \"peeringName\": \"\",\n        \"privateEndpoint\": \"\",\n        \"publicEndpoint\": \"\"\n      },\n      \"releaseChannel\": {\n        \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n      },\n      \"resourceLabels\": {},\n      \"resourceUsageExportConfig\": {\n        \"bigqueryDestination\": {\n          \"datasetId\": \"\"\n        },\n        \"consumptionMeteringConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n      },\n      \"selfLink\": \"\",\n      \"servicesIpv4Cidr\": \"\",\n      \"shieldedNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\",\n      \"tpuConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4CidrBlock\": \"\",\n        \"useServiceNetworking\": {{faker 'random.boolean'}}\n      },\n      \"tpuIpv4CidrBlock\": \"\",\n      \"verticalPodAutoscaling\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"workloadAltsConfig\": {\n        \"enableAlts\": {{faker 'random.boolean'}}\n      },\n      \"workloadCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"workloadIdentityConfig\": {\n        \"identityNamespace\": \"\",\n        \"identityProvider\": \"\",\n        \"workloadPool\": \"\"\n      },\n      \"zone\": \"\"\n    }\n  ],\n  \"missingZones\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07afdf93-7fa2-43aa-96ba-a56f9f15f783",
      "documentation": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters",
      "responses": [
        {
          "uuid": "823f29b3-157e-41a5-9623-d1e3001bdaab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a4d1c24-7583-40b3-9363-99f2d0a21068",
      "documentation": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
      "method": "delete",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "3e78e638-6eb5-4426-8074-426e8cad7d86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8fa207a-cbd7-4c3e-b1a3-7f59567adea4",
      "documentation": "Gets the details for a specific cluster.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "642a4e64-5535-4dd6-9be5-1dc8db4e4612",
          "body": "{\n  \"addonsConfig\": {\n    \"cloudRunConfig\": {\n      \"disabled\": {{faker 'random.boolean'}},\n      \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n    },\n    \"configConnectorConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"dnsCacheConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gcePersistentDiskCsiDriverConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gcpFilestoreCsiDriverConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gkeBackupAgentConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"horizontalPodAutoscaling\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"httpLoadBalancing\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"istioConfig\": {\n      \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"kalmConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"kubernetesDashboard\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"networkPolicyConfig\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    }\n  },\n  \"authenticatorGroupsConfig\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"securityGroup\": \"\"\n  },\n  \"autopilot\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"autoscaling\": {\n    \"autoprovisioningLocations\": [\n      \"\"\n    ],\n    \"autoprovisioningNodePoolDefaults\": {\n      \"bootDiskKmsKey\": \"\",\n      \"diskSizeGb\": {{faker 'random.number'}},\n      \"diskType\": \"\",\n      \"imageType\": \"\",\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"minCpuPlatform\": \"\",\n      \"oauthScopes\": [\n        \"\"\n      ],\n      \"serviceAccount\": \"\",\n      \"shieldedInstanceConfig\": {\n        \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n        \"enableSecureBoot\": {{faker 'random.boolean'}}\n      },\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      }\n    },\n    \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n    \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n    \"resourceLimits\": [\n      {\n        \"maximum\": \"\",\n        \"minimum\": \"\",\n        \"resourceType\": \"\"\n      }\n    ]\n  },\n  \"binaryAuthorization\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"clusterIpv4Cidr\": \"\",\n  \"clusterTelemetry\": {\n    \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n  },\n  \"conditions\": [\n    {\n      \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n      \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"confidentialNodes\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"createTime\": \"\",\n  \"currentMasterVersion\": \"\",\n  \"currentNodeCount\": {{faker 'random.number'}},\n  \"currentNodeVersion\": \"\",\n  \"databaseEncryption\": {\n    \"keyName\": \"\",\n    \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n  },\n  \"defaultMaxPodsConstraint\": {\n    \"maxPodsPerNode\": \"\"\n  },\n  \"description\": \"\",\n  \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n  \"enableTpu\": {{faker 'random.boolean'}},\n  \"endpoint\": \"\",\n  \"expireTime\": \"\",\n  \"id\": \"\",\n  \"identityServiceConfig\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"initialClusterVersion\": \"\",\n  \"initialNodeCount\": {{faker 'random.number'}},\n  \"instanceGroupUrls\": [\n    \"\"\n  ],\n  \"ipAllocationPolicy\": {\n    \"allowRouteOverlap\": {{faker 'random.boolean'}},\n    \"clusterIpv4Cidr\": \"\",\n    \"clusterIpv4CidrBlock\": \"\",\n    \"clusterSecondaryRangeName\": \"\",\n    \"createSubnetwork\": {{faker 'random.boolean'}},\n    \"nodeIpv4Cidr\": \"\",\n    \"nodeIpv4CidrBlock\": \"\",\n    \"servicesIpv4Cidr\": \"\",\n    \"servicesIpv4CidrBlock\": \"\",\n    \"servicesSecondaryRangeName\": \"\",\n    \"subnetworkName\": \"\",\n    \"tpuIpv4CidrBlock\": \"\",\n    \"useIpAliases\": {{faker 'random.boolean'}},\n    \"useRoutes\": {{faker 'random.boolean'}}\n  },\n  \"labelFingerprint\": \"\",\n  \"legacyAbac\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"location\": \"\",\n  \"locations\": [\n    \"\"\n  ],\n  \"loggingConfig\": {\n    \"componentConfig\": {\n      \"enableComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n      ]\n    }\n  },\n  \"loggingService\": \"\",\n  \"maintenancePolicy\": {\n    \"resourceVersion\": \"\",\n    \"window\": {\n      \"dailyMaintenanceWindow\": {\n        \"duration\": \"\",\n        \"startTime\": \"\"\n      },\n      \"maintenanceExclusions\": {},\n      \"recurringWindow\": {\n        \"recurrence\": \"\",\n        \"window\": {\n          \"endTime\": \"\",\n          \"maintenanceExclusionOptions\": {\n            \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n          },\n          \"startTime\": \"\"\n        }\n      }\n    }\n  },\n  \"master\": {},\n  \"masterAuth\": {\n    \"clientCertificate\": \"\",\n    \"clientCertificateConfig\": {\n      \"issueClientCertificate\": {{faker 'random.boolean'}}\n    },\n    \"clientKey\": \"\",\n    \"clusterCaCertificate\": \"\",\n    \"password\": \"\",\n    \"username\": \"\"\n  },\n  \"masterAuthorizedNetworksConfig\": {\n    \"cidrBlocks\": [\n      {\n        \"cidrBlock\": \"\",\n        \"displayName\": \"\"\n      }\n    ],\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"masterIpv4CidrBlock\": \"\",\n  \"meshCertificates\": {\n    \"enableCertificates\": {{faker 'random.boolean'}}\n  },\n  \"monitoringConfig\": {\n    \"componentConfig\": {\n      \"enableComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n      ]\n    },\n    \"managedPrometheusConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    }\n  },\n  \"monitoringService\": \"\",\n  \"name\": \"\",\n  \"network\": \"\",\n  \"networkConfig\": {\n    \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n    \"defaultSnatStatus\": {\n      \"disabled\": {{faker 'random.boolean'}}\n    },\n    \"dnsConfig\": {\n      \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n      \"clusterDnsDomain\": \"\",\n      \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n    },\n    \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n    \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n    \"network\": \"\",\n    \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n    \"serviceExternalIpsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subnetwork\": \"\"\n  },\n  \"networkPolicy\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n  },\n  \"nodeConfig\": {\n    \"accelerators\": [\n      {\n        \"acceleratorCount\": \"\",\n        \"acceleratorType\": \"\",\n        \"gpuPartitionSize\": \"\"\n      }\n    ],\n    \"advancedMachineFeatures\": {\n      \"threadsPerCore\": \"\"\n    },\n    \"bootDiskKmsKey\": \"\",\n    \"confidentialNodes\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"diskSizeGb\": {{faker 'random.number'}},\n    \"diskType\": \"\",\n    \"ephemeralStorageConfig\": {\n      \"localSsdCount\": {{faker 'random.number'}}\n    },\n    \"gcfsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gvnic\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"imageType\": \"\",\n    \"kubeletConfig\": {\n      \"cpuCfsQuota\": {{faker 'random.boolean'}},\n      \"cpuCfsQuotaPeriod\": \"\",\n      \"cpuManagerPolicy\": \"\",\n      \"podPidsLimit\": \"\"\n    },\n    \"labels\": {},\n    \"linuxNodeConfig\": {\n      \"sysctls\": {}\n    },\n    \"localSsdCount\": {{faker 'random.number'}},\n    \"machineType\": \"\",\n    \"metadata\": {},\n    \"minCpuPlatform\": \"\",\n    \"nodeGroup\": \"\",\n    \"oauthScopes\": [\n      \"\"\n    ],\n    \"preemptible\": {{faker 'random.boolean'}},\n    \"reservationAffinity\": {\n      \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n      \"key\": \"\",\n      \"values\": [\n        \"\"\n      ]\n    },\n    \"sandboxConfig\": {\n      \"sandboxType\": \"\",\n      \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n    },\n    \"serviceAccount\": \"\",\n    \"shieldedInstanceConfig\": {\n      \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n      \"enableSecureBoot\": {{faker 'random.boolean'}}\n    },\n    \"spot\": {{faker 'random.boolean'}},\n    \"tags\": [\n      \"\"\n    ],\n    \"taints\": [\n      {\n        \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"workloadMetadataConfig\": {\n      \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n      \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n    }\n  },\n  \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n  \"nodePoolAutoConfig\": {\n    \"networkTags\": {\n      \"tags\": [\n        \"\"\n      ]\n    }\n  },\n  \"nodePoolDefaults\": {\n    \"nodeConfigDefaults\": {\n      \"gcfsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      }\n    }\n  },\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"confidentialNodes\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\",\n          \"podPidsLimit\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ],\n  \"notificationConfig\": {\n    \"pubsub\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"filter\": {\n        \"eventType\": [\n          \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n        ]\n      },\n      \"topic\": \"\"\n    }\n  },\n  \"podSecurityPolicyConfig\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"privateCluster\": {{faker 'random.boolean'}},\n  \"privateClusterConfig\": {\n    \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n    \"enablePrivateNodes\": {{faker 'random.boolean'}},\n    \"masterGlobalAccessConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"masterIpv4CidrBlock\": \"\",\n    \"peeringName\": \"\",\n    \"privateEndpoint\": \"\",\n    \"publicEndpoint\": \"\"\n  },\n  \"releaseChannel\": {\n    \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n  },\n  \"resourceLabels\": {},\n  \"resourceUsageExportConfig\": {\n    \"bigqueryDestination\": {\n      \"datasetId\": \"\"\n    },\n    \"consumptionMeteringConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n  },\n  \"selfLink\": \"\",\n  \"servicesIpv4Cidr\": \"\",\n  \"shieldedNodes\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n  \"statusMessage\": \"\",\n  \"subnetwork\": \"\",\n  \"tpuConfig\": {\n    \"enabled\": {{faker 'random.boolean'}},\n    \"ipv4CidrBlock\": \"\",\n    \"useServiceNetworking\": {{faker 'random.boolean'}}\n  },\n  \"tpuIpv4CidrBlock\": \"\",\n  \"verticalPodAutoscaling\": {\n    \"enabled\": {{faker 'random.boolean'}}\n  },\n  \"workloadAltsConfig\": {\n    \"enableAlts\": {{faker 'random.boolean'}}\n  },\n  \"workloadCertificates\": {\n    \"enableCertificates\": {{faker 'random.boolean'}}\n  },\n  \"workloadIdentityConfig\": {\n    \"identityNamespace\": \"\",\n    \"identityProvider\": \"\",\n    \"workloadPool\": \"\"\n  },\n  \"zone\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd54111a-1a95-4116-88ff-e9663725edb6",
      "documentation": "Updates the settings for a specific cluster.",
      "method": "put",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId",
      "responses": [
        {
          "uuid": "250332ee-f8c4-41d8-aaee-d62bba62b232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac69698b-4944-4e8e-9bc1-9595da4e7637",
      "documentation": "Sets the addons for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/addons",
      "responses": [
        {
          "uuid": "24ae3e28-08d7-4ef2-8070-1fe283b89a26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba399a97-2cf2-475e-b579-6b884a02a29d",
      "documentation": "Enables or disables the ABAC authorization mechanism on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/legacyAbac",
      "responses": [
        {
          "uuid": "ee33a968-6b74-49fb-b0eb-2da3b98b1bb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ee22bcc-00e1-4f4b-8e0f-0a96160de687",
      "documentation": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/locations",
      "responses": [
        {
          "uuid": "663ad139-a51f-464f-aa87-20e78063b83d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75adfdae-1a15-4da7-bb0e-70a298dfe681",
      "documentation": "Sets the logging service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/logging",
      "responses": [
        {
          "uuid": "166436b8-301b-4672-92f3-d87d7efe629c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "991f79bb-dd88-41ae-aab9-83f2bc285460",
      "documentation": "Updates the master for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/master",
      "responses": [
        {
          "uuid": "792ac356-d959-4ef1-bb3c-21449efbe832",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f81072d2-58a6-4a92-af5b-748101a7bd92",
      "documentation": "Sets the monitoring service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/monitoring",
      "responses": [
        {
          "uuid": "c0c82439-6b7d-4755-8f46-0af684abc4be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "884c6609-4236-4c3c-b109-fc7d4128f89b",
      "documentation": "Lists the node pools for a cluster.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools",
      "responses": [
        {
          "uuid": "644bade6-184a-4242-a9bd-8c60c211ceb7",
          "body": "{\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"confidentialNodes\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\",\n          \"podPidsLimit\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52dd9dd8-3964-46c4-b9a1-018eb49fde88",
      "documentation": "Creates a node pool for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools",
      "responses": [
        {
          "uuid": "39c2d013-67a5-4a21-b2fb-3cf5887f98f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf55f24b-a61d-4a20-b26a-0e72403e3dd3",
      "documentation": "Deletes a node pool from a cluster.",
      "method": "delete",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId",
      "responses": [
        {
          "uuid": "7baa2f76-5f7d-435d-bef8-6f843767c565",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "88c41f4c-3108-4cff-a2a8-3fd68f3cb58a",
      "documentation": "Retrieves the requested node pool.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId",
      "responses": [
        {
          "uuid": "494b770e-1bde-4225-91db-af7212d0b3e0",
          "body": "{\n  \"autoscaling\": {\n    \"autoprovisioned\": {{faker 'random.boolean'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"maxNodeCount\": {{faker 'random.number'}},\n    \"minNodeCount\": {{faker 'random.number'}}\n  },\n  \"conditions\": [\n    {\n      \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n      \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n      \"message\": \"\"\n    }\n  ],\n  \"config\": {\n    \"accelerators\": [\n      {\n        \"acceleratorCount\": \"\",\n        \"acceleratorType\": \"\",\n        \"gpuPartitionSize\": \"\"\n      }\n    ],\n    \"advancedMachineFeatures\": {\n      \"threadsPerCore\": \"\"\n    },\n    \"bootDiskKmsKey\": \"\",\n    \"confidentialNodes\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"diskSizeGb\": {{faker 'random.number'}},\n    \"diskType\": \"\",\n    \"ephemeralStorageConfig\": {\n      \"localSsdCount\": {{faker 'random.number'}}\n    },\n    \"gcfsConfig\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"gvnic\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"imageType\": \"\",\n    \"kubeletConfig\": {\n      \"cpuCfsQuota\": {{faker 'random.boolean'}},\n      \"cpuCfsQuotaPeriod\": \"\",\n      \"cpuManagerPolicy\": \"\",\n      \"podPidsLimit\": \"\"\n    },\n    \"labels\": {},\n    \"linuxNodeConfig\": {\n      \"sysctls\": {}\n    },\n    \"localSsdCount\": {{faker 'random.number'}},\n    \"machineType\": \"\",\n    \"metadata\": {},\n    \"minCpuPlatform\": \"\",\n    \"nodeGroup\": \"\",\n    \"oauthScopes\": [\n      \"\"\n    ],\n    \"preemptible\": {{faker 'random.boolean'}},\n    \"reservationAffinity\": {\n      \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n      \"key\": \"\",\n      \"values\": [\n        \"\"\n      ]\n    },\n    \"sandboxConfig\": {\n      \"sandboxType\": \"\",\n      \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n    },\n    \"serviceAccount\": \"\",\n    \"shieldedInstanceConfig\": {\n      \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n      \"enableSecureBoot\": {{faker 'random.boolean'}}\n    },\n    \"spot\": {{faker 'random.boolean'}},\n    \"tags\": [\n      \"\"\n    ],\n    \"taints\": [\n      {\n        \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"workloadMetadataConfig\": {\n      \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n      \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n    }\n  },\n  \"initialNodeCount\": {{faker 'random.number'}},\n  \"instanceGroupUrls\": [\n    \"\"\n  ],\n  \"locations\": [\n    \"\"\n  ],\n  \"management\": {\n    \"autoRepair\": {{faker 'random.boolean'}},\n    \"autoUpgrade\": {{faker 'random.boolean'}},\n    \"upgradeOptions\": {\n      \"autoUpgradeStartTime\": \"\",\n      \"description\": \"\"\n    }\n  },\n  \"maxPodsConstraint\": {\n    \"maxPodsPerNode\": \"\"\n  },\n  \"name\": \"\",\n  \"networkConfig\": {\n    \"createPodRange\": {{faker 'random.boolean'}},\n    \"podIpv4CidrBlock\": \"\",\n    \"podRange\": \"\"\n  },\n  \"placementPolicy\": {\n    \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n  },\n  \"podIpv4CidrSize\": {{faker 'random.number'}},\n  \"selfLink\": \"\",\n  \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n  \"statusMessage\": \"\",\n  \"upgradeSettings\": {\n    \"maxSurge\": {{faker 'random.number'}},\n    \"maxUnavailable\": {{faker 'random.number'}}\n  },\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1184d0da-14f4-49d4-adf4-fe1a0fd8e529",
      "documentation": "Sets the autoscaling settings of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/autoscaling",
      "responses": [
        {
          "uuid": "b95939de-b1f5-4577-9e53-fdccbe2e3168",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5940175a-c514-4904-8d19-7f8ee66d44f9",
      "documentation": "Sets the NodeManagement options for a node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/setManagement",
      "responses": [
        {
          "uuid": "b6dc9d73-09b1-4632-84e8-330c50f820f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3c43e2a-2807-49dd-8cec-bb17aea65f35",
      "documentation": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/setSize",
      "responses": [
        {
          "uuid": "f290b85a-686d-4909-9ff4-e343b631f2a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f7f9613-17f7-420d-bcbb-e47327aeed34",
      "documentation": "Updates the version and/or image type of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId/update",
      "responses": [
        {
          "uuid": "219f0d29-590f-49c0-9925-5ebff42c1118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "195068e4-ecc4-4717-ad7b-a35451bc54cc",
      "documentation": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/nodePools/:nodePoolId:rollback",
      "responses": [
        {
          "uuid": "40d56536-2172-425d-854c-bf35d246d980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f6aa94d-c834-42d1-9e86-e03e090eae5b",
      "documentation": "Sets labels on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId/resourceLabels",
      "responses": [
        {
          "uuid": "a7bd8f7a-ddc4-4a34-a8b1-59f0c5f11e6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68f8843c-d523-4fe5-94ef-1bf8cfb73990",
      "documentation": "Completes master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:completeIpRotation",
      "responses": [
        {
          "uuid": "2e089a58-574c-4ba4-9211-d271515c7f15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5987a6a0-46c4-4cb5-8bba-d27bc6684769",
      "documentation": "Sets the maintenance policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setMaintenancePolicy",
      "responses": [
        {
          "uuid": "8139dffa-3f10-49c8-97ce-9b333471b0ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fafcc8c5-e8f4-45f7-8692-cfa0aa596146",
      "documentation": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setMasterAuth",
      "responses": [
        {
          "uuid": "96332729-f912-4863-bf7d-c1424bb656b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d80d29d3-e764-4f33-a8b5-83c316df78cb",
      "documentation": "Enables or disables Network Policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:setNetworkPolicy",
      "responses": [
        {
          "uuid": "d62a68ac-f246-40bb-b540-fffb097c5273",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13afda97-214a-40d7-a233-f600b0128e1b",
      "documentation": "Starts master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/clusters/:clusterId:startIpRotation",
      "responses": [
        {
          "uuid": "dd554545-0624-46ad-98dc-70ef2b093d84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "916c5a5a-4402-48ca-8398-bcf04035869b",
      "documentation": "Lists all operations in a project in the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations",
      "responses": [
        {
          "uuid": "7f98da15-6279-4482-9165-e4f0ad221f44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cf9e296-e796-452e-b505-e6629591878a",
      "documentation": "Gets the specified operation.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations/:operationId",
      "responses": [
        {
          "uuid": "52ccf285-6d24-47ca-ad7f-f77d29a7c0da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "614c8baf-bf84-40a3-882f-c085b66b1cca",
      "documentation": "Cancels the specified operation.",
      "method": "post",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/operations/:operationId:cancel",
      "responses": [
        {
          "uuid": "eabc9f9c-fbbc-4a90-9558-8754703edcbf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d799a2f1-bea9-4dac-9c40-428c54ae4133",
      "documentation": "Returns configuration info about the Google Kubernetes Engine service.",
      "method": "get",
      "endpoint": "v1beta1/projects/:projectId/zones/:zone/serverconfig",
      "responses": [
        {
          "uuid": "42f00a97-4cb9-4613-918d-ab26631799a9",
          "body": "{\n  \"channels\": [\n    {\n      \"availableVersions\": [\n        {\n          \"reason\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\",\n      \"defaultVersion\": \"\",\n      \"validVersions\": [\n        \"\"\n      ]\n    }\n  ],\n  \"defaultClusterVersion\": \"\",\n  \"defaultImageType\": \"\",\n  \"validImageTypes\": [\n    \"\"\n  ],\n  \"validMasterVersions\": [\n    \"\"\n  ],\n  \"validNodeVersions\": [\n    \"\"\n  ],\n  \"windowsVersionMaps\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9eec762e-1f82-44b2-9724-fcb8ccf0341c",
      "documentation": "Deletes a node pool from a cluster.",
      "method": "delete",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "3f5a0ea3-b834-499e-8fa0-ff2589f0c3e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be517acf-d345-4a93-a4f9-6ef92914c66a",
      "documentation": "Gets the specified operation.",
      "method": "get",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "22ad6381-f8da-4250-9f47-fb8b2527c535",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "273822e4-6c3c-44b8-a279-72059a7f648f",
      "documentation": "Updates the version and/or image type of a specific node pool.",
      "method": "put",
      "endpoint": "v1beta1/:name",
      "responses": [
        {
          "uuid": "206c1230-a9d9-45c4-9dd0-de4da57ccdea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dce5e95b-1ab5-4695-95f4-45ceb53778cc",
      "documentation": "Returns configuration info about the Google Kubernetes Engine service.",
      "method": "get",
      "endpoint": "v1beta1/:name/serverConfig",
      "responses": [
        {
          "uuid": "cabd60d7-706a-4d25-b93c-6e805545904a",
          "body": "{\n  \"channels\": [\n    {\n      \"availableVersions\": [\n        {\n          \"reason\": \"\",\n          \"version\": \"\"\n        }\n      ],\n      \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\",\n      \"defaultVersion\": \"\",\n      \"validVersions\": [\n        \"\"\n      ]\n    }\n  ],\n  \"defaultClusterVersion\": \"\",\n  \"defaultImageType\": \"\",\n  \"validImageTypes\": [\n    \"\"\n  ],\n  \"validMasterVersions\": [\n    \"\"\n  ],\n  \"validNodeVersions\": [\n    \"\"\n  ],\n  \"windowsVersionMaps\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8588ee82-09b4-4c25-bbfe-9881cf109874",
      "documentation": "Cancels the specified operation.",
      "method": "post",
      "endpoint": "v1beta1/:name:cancel",
      "responses": [
        {
          "uuid": "cc5713c0-0d32-4cfd-8e9c-dbe40fe3e9ca",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99c5514b-52e2-4c52-a760-19374ecbfa14",
      "documentation": "Completes master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/:name:completeIpRotation",
      "responses": [
        {
          "uuid": "9377e388-5a00-4cbc-8870-6ec275285cb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b3996c1-14b7-453d-ad03-4cfb98ef1013",
      "documentation": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
      "method": "post",
      "endpoint": "v1beta1/:name:rollback",
      "responses": [
        {
          "uuid": "568b4fac-73cf-47e9-bcf7-9c244aa5e879",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8f48a76-bd87-432d-9d5a-b65fc4c62834",
      "documentation": "Sets the addons for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setAddons",
      "responses": [
        {
          "uuid": "86ff69eb-2ca0-4a98-b53b-f610ac0458fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aaaa387b-37ea-496c-8912-a350181d5d6b",
      "documentation": "Sets the autoscaling settings of a specific node pool.",
      "method": "post",
      "endpoint": "v1beta1/:name:setAutoscaling",
      "responses": [
        {
          "uuid": "cebfa41e-2a31-40e3-b781-a16d26a33c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a47479b7-8616-48ba-9193-7c1a5c228907",
      "documentation": "Enables or disables the ABAC authorization mechanism on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLegacyAbac",
      "responses": [
        {
          "uuid": "7b9e735c-e224-4b60-9363-402bd0cbcbcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16c3d5d3-5847-4c61-8534-090fa9c6f271",
      "documentation": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLocations",
      "responses": [
        {
          "uuid": "6c62dee8-209f-412f-95c3-2e116fe8b985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65602fb1-072a-4c8b-b4d8-dd36749076b9",
      "documentation": "Sets the logging service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setLogging",
      "responses": [
        {
          "uuid": "f9e21169-1636-45e1-83ef-383b75e7ea4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "338fd6c3-2bd3-48d3-b099-db2910d83096",
      "documentation": "Sets the maintenance policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMaintenancePolicy",
      "responses": [
        {
          "uuid": "50bdb032-83af-4ce1-a681-e2dffb943649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46891e8c-5498-4e68-9060-2491f0994b73",
      "documentation": "Sets the NodeManagement options for a node pool.",
      "method": "post",
      "endpoint": "v1beta1/:name:setManagement",
      "responses": [
        {
          "uuid": "22c36fd1-bd7a-4665-be0b-49dc546a5a25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "539e2a1e-e9d5-4a94-868e-17262444fb1f",
      "documentation": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMasterAuth",
      "responses": [
        {
          "uuid": "3ca648b0-be3d-4ca9-adc0-fe339d9fe0e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93f32479-201d-48e5-89ac-d176fbdc3cda",
      "documentation": "Sets the monitoring service for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setMonitoring",
      "responses": [
        {
          "uuid": "f82f7ed0-7d9e-41ab-9dbc-be480519a5e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3fc2c84-b72e-411e-87a3-9efa153aaa8f",
      "documentation": "Enables or disables Network Policy for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setNetworkPolicy",
      "responses": [
        {
          "uuid": "15f0ead2-1d8f-406a-b196-c79dccbb5c21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93fabc5e-ca8e-455c-9572-5cc42d586a39",
      "documentation": "Sets labels on a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:setResourceLabels",
      "responses": [
        {
          "uuid": "5a2a0752-cf79-496f-b931-c9b89d888c43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c8de388e-1315-4f9b-9c7d-467d454b717e",
      "documentation": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
      "method": "post",
      "endpoint": "v1beta1/:name:setSize",
      "responses": [
        {
          "uuid": "b249ce9d-33c7-47f8-9eb9-63615b77fb64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b05f01da-b20e-49b1-95bc-a8d3797a25f5",
      "documentation": "Starts master IP rotation.",
      "method": "post",
      "endpoint": "v1beta1/:name:startIpRotation",
      "responses": [
        {
          "uuid": "1c8996ae-0e2e-4a93-997d-7fc4e6c1f8fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0ca9295-d38b-4e49-83ca-ec298f026b38",
      "documentation": "Updates the master for a specific cluster.",
      "method": "post",
      "endpoint": "v1beta1/:name:updateMaster",
      "responses": [
        {
          "uuid": "44d46c2f-82a5-4893-9652-32c93f7ab481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb1d83bd-c69c-4380-8889-8e430a8ea444",
      "documentation": "Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details. This API is not yet intended for general use, and is not available for all clusters.",
      "method": "get",
      "endpoint": "v1beta1/:parent/.well-known/openid-configuration",
      "responses": [
        {
          "uuid": "42bb6689-bda9-4322-a149-2aa4ba8dcc5d",
          "body": "{\n  \"cacheHeader\": {\n    \"age\": \"\",\n    \"directive\": \"\",\n    \"expires\": \"\"\n  },\n  \"claims_supported\": [\n    \"\"\n  ],\n  \"grant_types\": [\n    \"\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"\"\n  ],\n  \"issuer\": \"\",\n  \"jwks_uri\": \"\",\n  \"response_types_supported\": [\n    \"\"\n  ],\n  \"subject_types_supported\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a02808d4-2ca8-4782-a9ee-26830ecce69a",
      "documentation": "Lists subnetworks that can be used for creating clusters in a project.",
      "method": "get",
      "endpoint": "v1beta1/:parent/aggregated/usableSubnetworks",
      "responses": [
        {
          "uuid": "3e75e6be-684a-437d-a1e9-0c581746fb4a",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"subnetworks\": [\n    {\n      \"ipCidrRange\": \"\",\n      \"network\": \"\",\n      \"secondaryIpRanges\": [\n        {\n          \"ipCidrRange\": \"\",\n          \"rangeName\": \"\",\n          \"status\": \"{{oneOf (array 'UNKNOWN' 'UNUSED' 'IN_USE_SERVICE' 'IN_USE_SHAREABLE_POD' 'IN_USE_MANAGED_POD')}}\"\n        }\n      ],\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07b388e7-f489-426e-9062-49aaaec0cbc7",
      "documentation": "Lists all clusters owned by a project in either the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/:parent/clusters",
      "responses": [
        {
          "uuid": "3318a2e3-035e-4283-9659-7c457651cc51",
          "body": "{\n  \"clusters\": [\n    {\n      \"addonsConfig\": {\n        \"cloudRunConfig\": {\n          \"disabled\": {{faker 'random.boolean'}},\n          \"loadBalancerType\": \"{{oneOf (array 'LOAD_BALANCER_TYPE_UNSPECIFIED' 'LOAD_BALANCER_TYPE_EXTERNAL' 'LOAD_BALANCER_TYPE_INTERNAL')}}\"\n        },\n        \"configConnectorConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsCacheConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcePersistentDiskCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gcpFilestoreCsiDriverConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gkeBackupAgentConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"horizontalPodAutoscaling\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"httpLoadBalancing\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"istioConfig\": {\n          \"auth\": \"{{oneOf (array 'AUTH_NONE' 'AUTH_MUTUAL_TLS')}}\",\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"kalmConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"kubernetesDashboard\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"networkPolicyConfig\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"authenticatorGroupsConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"securityGroup\": \"\"\n      },\n      \"autopilot\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"autoscaling\": {\n        \"autoprovisioningLocations\": [\n          \"\"\n        ],\n        \"autoprovisioningNodePoolDefaults\": {\n          \"bootDiskKmsKey\": \"\",\n          \"diskSizeGb\": {{faker 'random.number'}},\n          \"diskType\": \"\",\n          \"imageType\": \"\",\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"minCpuPlatform\": \"\",\n          \"oauthScopes\": [\n            \"\"\n          ],\n          \"serviceAccount\": \"\",\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}}\n          },\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          }\n        },\n        \"autoscalingProfile\": \"{{oneOf (array 'PROFILE_UNSPECIFIED' 'OPTIMIZE_UTILIZATION' 'BALANCED')}}\",\n        \"enableNodeAutoprovisioning\": {{faker 'random.boolean'}},\n        \"resourceLimits\": [\n          {\n            \"maximum\": \"\",\n            \"minimum\": \"\",\n            \"resourceType\": \"\"\n          }\n        ]\n      },\n      \"binaryAuthorization\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"clusterIpv4Cidr\": \"\",\n      \"clusterTelemetry\": {\n        \"type\": \"{{oneOf (array 'UNSPECIFIED' 'DISABLED' 'ENABLED' 'SYSTEM_ONLY')}}\"\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"confidentialNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"createTime\": \"\",\n      \"currentMasterVersion\": \"\",\n      \"currentNodeCount\": {{faker 'random.number'}},\n      \"currentNodeVersion\": \"\",\n      \"databaseEncryption\": {\n        \"keyName\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'ENCRYPTED' 'DECRYPTED')}}\"\n      },\n      \"defaultMaxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"description\": \"\",\n      \"enableKubernetesAlpha\": {{faker 'random.boolean'}},\n      \"enableTpu\": {{faker 'random.boolean'}},\n      \"endpoint\": \"\",\n      \"expireTime\": \"\",\n      \"id\": \"\",\n      \"identityServiceConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"initialClusterVersion\": \"\",\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"ipAllocationPolicy\": {\n        \"allowRouteOverlap\": {{faker 'random.boolean'}},\n        \"clusterIpv4Cidr\": \"\",\n        \"clusterIpv4CidrBlock\": \"\",\n        \"clusterSecondaryRangeName\": \"\",\n        \"createSubnetwork\": {{faker 'random.boolean'}},\n        \"nodeIpv4Cidr\": \"\",\n        \"nodeIpv4CidrBlock\": \"\",\n        \"servicesIpv4Cidr\": \"\",\n        \"servicesIpv4CidrBlock\": \"\",\n        \"servicesSecondaryRangeName\": \"\",\n        \"subnetworkName\": \"\",\n        \"tpuIpv4CidrBlock\": \"\",\n        \"useIpAliases\": {{faker 'random.boolean'}},\n        \"useRoutes\": {{faker 'random.boolean'}}\n      },\n      \"labelFingerprint\": \"\",\n      \"legacyAbac\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"location\": \"\",\n      \"locations\": [\n        \"\"\n      ],\n      \"loggingConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        }\n      },\n      \"loggingService\": \"\",\n      \"maintenancePolicy\": {\n        \"resourceVersion\": \"\",\n        \"window\": {\n          \"dailyMaintenanceWindow\": {\n            \"duration\": \"\",\n            \"startTime\": \"\"\n          },\n          \"maintenanceExclusions\": {},\n          \"recurringWindow\": {\n            \"recurrence\": \"\",\n            \"window\": {\n              \"endTime\": \"\",\n              \"maintenanceExclusionOptions\": {\n                \"scope\": \"{{oneOf (array 'NO_UPGRADES' 'NO_MINOR_UPGRADES' 'NO_MINOR_OR_NODE_UPGRADES')}}\"\n              },\n              \"startTime\": \"\"\n            }\n          }\n        }\n      },\n      \"master\": {},\n      \"masterAuth\": {\n        \"clientCertificate\": \"\",\n        \"clientCertificateConfig\": {\n          \"issueClientCertificate\": {{faker 'random.boolean'}}\n        },\n        \"clientKey\": \"\",\n        \"clusterCaCertificate\": \"\",\n        \"password\": \"\",\n        \"username\": \"\"\n      },\n      \"masterAuthorizedNetworksConfig\": {\n        \"cidrBlocks\": [\n          {\n            \"cidrBlock\": \"\",\n            \"displayName\": \"\"\n          }\n        ],\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"masterIpv4CidrBlock\": \"\",\n      \"meshCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"monitoringConfig\": {\n        \"componentConfig\": {\n          \"enableComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'SYSTEM_COMPONENTS' 'WORKLOADS')}}\"\n          ]\n        },\n        \"managedPrometheusConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"monitoringService\": \"\",\n      \"name\": \"\",\n      \"network\": \"\",\n      \"networkConfig\": {\n        \"datapathProvider\": \"{{oneOf (array 'DATAPATH_PROVIDER_UNSPECIFIED' 'LEGACY_DATAPATH' 'ADVANCED_DATAPATH')}}\",\n        \"defaultSnatStatus\": {\n          \"disabled\": {{faker 'random.boolean'}}\n        },\n        \"dnsConfig\": {\n          \"clusterDns\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'PLATFORM_DEFAULT' 'CLOUD_DNS')}}\",\n          \"clusterDnsDomain\": \"\",\n          \"clusterDnsScope\": \"{{oneOf (array 'DNS_SCOPE_UNSPECIFIED' 'CLUSTER_SCOPE' 'VPC_SCOPE')}}\"\n        },\n        \"enableIntraNodeVisibility\": {{faker 'random.boolean'}},\n        \"enableL4ilbSubsetting\": {{faker 'random.boolean'}},\n        \"network\": \"\",\n        \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED' 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE' 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL')}}\",\n        \"serviceExternalIpsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subnetwork\": \"\"\n      },\n      \"networkPolicy\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"provider\": \"{{oneOf (array 'PROVIDER_UNSPECIFIED' 'CALICO')}}\"\n      },\n      \"nodeConfig\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"confidentialNodes\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\",\n          \"podPidsLimit\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"nodeIpv4CidrSize\": {{faker 'random.number'}},\n      \"nodePoolAutoConfig\": {\n        \"networkTags\": {\n          \"tags\": [\n            \"\"\n          ]\n        }\n      },\n      \"nodePoolDefaults\": {\n        \"nodeConfigDefaults\": {\n          \"gcfsConfig\": {\n            \"enabled\": {{faker 'random.boolean'}}\n          }\n        }\n      },\n      \"nodePools\": [\n        {\n          \"autoscaling\": {\n            \"autoprovisioned\": {{faker 'random.boolean'}},\n            \"enabled\": {{faker 'random.boolean'}},\n            \"maxNodeCount\": {{faker 'random.number'}},\n            \"minNodeCount\": {{faker 'random.number'}}\n          },\n          \"conditions\": [\n            {\n              \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n              \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n              \"message\": \"\"\n            }\n          ],\n          \"config\": {\n            \"accelerators\": [\n              {\n                \"acceleratorCount\": \"\",\n                \"acceleratorType\": \"\",\n                \"gpuPartitionSize\": \"\"\n              }\n            ],\n            \"advancedMachineFeatures\": {\n              \"threadsPerCore\": \"\"\n            },\n            \"bootDiskKmsKey\": \"\",\n            \"confidentialNodes\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"diskSizeGb\": {{faker 'random.number'}},\n            \"diskType\": \"\",\n            \"ephemeralStorageConfig\": {\n              \"localSsdCount\": {{faker 'random.number'}}\n            },\n            \"gcfsConfig\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"gvnic\": {\n              \"enabled\": {{faker 'random.boolean'}}\n            },\n            \"imageType\": \"\",\n            \"kubeletConfig\": {\n              \"cpuCfsQuota\": {{faker 'random.boolean'}},\n              \"cpuCfsQuotaPeriod\": \"\",\n              \"cpuManagerPolicy\": \"\",\n              \"podPidsLimit\": \"\"\n            },\n            \"labels\": {},\n            \"linuxNodeConfig\": {\n              \"sysctls\": {}\n            },\n            \"localSsdCount\": {{faker 'random.number'}},\n            \"machineType\": \"\",\n            \"metadata\": {},\n            \"minCpuPlatform\": \"\",\n            \"nodeGroup\": \"\",\n            \"oauthScopes\": [\n              \"\"\n            ],\n            \"preemptible\": {{faker 'random.boolean'}},\n            \"reservationAffinity\": {\n              \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n              \"key\": \"\",\n              \"values\": [\n                \"\"\n              ]\n            },\n            \"sandboxConfig\": {\n              \"sandboxType\": \"\",\n              \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n            },\n            \"serviceAccount\": \"\",\n            \"shieldedInstanceConfig\": {\n              \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n              \"enableSecureBoot\": {{faker 'random.boolean'}}\n            },\n            \"spot\": {{faker 'random.boolean'}},\n            \"tags\": [\n              \"\"\n            ],\n            \"taints\": [\n              {\n                \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n                \"key\": \"\",\n                \"value\": \"\"\n              }\n            ],\n            \"workloadMetadataConfig\": {\n              \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n              \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n            }\n          },\n          \"initialNodeCount\": {{faker 'random.number'}},\n          \"instanceGroupUrls\": [\n            \"\"\n          ],\n          \"locations\": [\n            \"\"\n          ],\n          \"management\": {\n            \"autoRepair\": {{faker 'random.boolean'}},\n            \"autoUpgrade\": {{faker 'random.boolean'}},\n            \"upgradeOptions\": {\n              \"autoUpgradeStartTime\": \"\",\n              \"description\": \"\"\n            }\n          },\n          \"maxPodsConstraint\": {\n            \"maxPodsPerNode\": \"\"\n          },\n          \"name\": \"\",\n          \"networkConfig\": {\n            \"createPodRange\": {{faker 'random.boolean'}},\n            \"podIpv4CidrBlock\": \"\",\n            \"podRange\": \"\"\n          },\n          \"placementPolicy\": {\n            \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n          },\n          \"podIpv4CidrSize\": {{faker 'random.number'}},\n          \"selfLink\": \"\",\n          \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n          \"statusMessage\": \"\",\n          \"upgradeSettings\": {\n            \"maxSurge\": {{faker 'random.number'}},\n            \"maxUnavailable\": {{faker 'random.number'}}\n          },\n          \"version\": \"\"\n        }\n      ],\n      \"notificationConfig\": {\n        \"pubsub\": {\n          \"enabled\": {{faker 'random.boolean'}},\n          \"filter\": {\n            \"eventType\": [\n              \"{{oneOf (array 'EVENT_TYPE_UNSPECIFIED' 'UPGRADE_AVAILABLE_EVENT' 'UPGRADE_EVENT' 'SECURITY_BULLETIN_EVENT')}}\"\n            ]\n          },\n          \"topic\": \"\"\n        }\n      },\n      \"podSecurityPolicyConfig\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"privateCluster\": {{faker 'random.boolean'}},\n      \"privateClusterConfig\": {\n        \"enablePrivateEndpoint\": {{faker 'random.boolean'}},\n        \"enablePrivateNodes\": {{faker 'random.boolean'}},\n        \"masterGlobalAccessConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"masterIpv4CidrBlock\": \"\",\n        \"peeringName\": \"\",\n        \"privateEndpoint\": \"\",\n        \"publicEndpoint\": \"\"\n      },\n      \"releaseChannel\": {\n        \"channel\": \"{{oneOf (array 'UNSPECIFIED' 'RAPID' 'REGULAR' 'STABLE')}}\"\n      },\n      \"resourceLabels\": {},\n      \"resourceUsageExportConfig\": {\n        \"bigqueryDestination\": {\n          \"datasetId\": \"\"\n        },\n        \"consumptionMeteringConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"enableNetworkEgressMetering\": {{faker 'random.boolean'}}\n      },\n      \"selfLink\": \"\",\n      \"servicesIpv4Cidr\": \"\",\n      \"shieldedNodes\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RECONCILING' 'STOPPING' 'ERROR' 'DEGRADED')}}\",\n      \"statusMessage\": \"\",\n      \"subnetwork\": \"\",\n      \"tpuConfig\": {\n        \"enabled\": {{faker 'random.boolean'}},\n        \"ipv4CidrBlock\": \"\",\n        \"useServiceNetworking\": {{faker 'random.boolean'}}\n      },\n      \"tpuIpv4CidrBlock\": \"\",\n      \"verticalPodAutoscaling\": {\n        \"enabled\": {{faker 'random.boolean'}}\n      },\n      \"workloadAltsConfig\": {\n        \"enableAlts\": {{faker 'random.boolean'}}\n      },\n      \"workloadCertificates\": {\n        \"enableCertificates\": {{faker 'random.boolean'}}\n      },\n      \"workloadIdentityConfig\": {\n        \"identityNamespace\": \"\",\n        \"identityProvider\": \"\",\n        \"workloadPool\": \"\"\n      },\n      \"zone\": \"\"\n    }\n  ],\n  \"missingZones\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3312beb2-be91-400e-ba68-a8f031968c69",
      "documentation": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
      "method": "post",
      "endpoint": "v1beta1/:parent/clusters",
      "responses": [
        {
          "uuid": "798f0b61-f1b3-4995-bffb-83b9af223948",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f912b53e-ac01-42b8-8c8b-9dc6a173342d",
      "documentation": "Gets the public component of the cluster signing keys in JSON Web Key format. This API is not yet intended for general use, and is not available for all clusters.",
      "method": "get",
      "endpoint": "v1beta1/:parent/jwks",
      "responses": [
        {
          "uuid": "b60c63ce-7862-4a79-b77c-d331a8d0be3e",
          "body": "{\n  \"cacheHeader\": {\n    \"age\": \"\",\n    \"directive\": \"\",\n    \"expires\": \"\"\n  },\n  \"keys\": [\n    {\n      \"alg\": \"\",\n      \"crv\": \"\",\n      \"e\": \"\",\n      \"kid\": \"\",\n      \"kty\": \"\",\n      \"n\": \"\",\n      \"use\": \"\",\n      \"x\": \"\",\n      \"y\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5a6e1b4-5bca-414e-b37a-7c97f4c123ca",
      "documentation": "Fetches locations that offer Google Kubernetes Engine.",
      "method": "get",
      "endpoint": "v1beta1/:parent/locations",
      "responses": [
        {
          "uuid": "4aa5cb97-8fd2-4f7a-b5d7-b574002ef904",
          "body": "{\n  \"locations\": [\n    {\n      \"name\": \"\",\n      \"recommended\": {{faker 'random.boolean'}},\n      \"type\": \"{{oneOf (array 'LOCATION_TYPE_UNSPECIFIED' 'ZONE' 'REGION')}}\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f094aee1-9641-400f-88cc-5fc773f75454",
      "documentation": "Lists the node pools for a cluster.",
      "method": "get",
      "endpoint": "v1beta1/:parent/nodePools",
      "responses": [
        {
          "uuid": "22a1f5c8-567f-4730-a294-c9fcce8396c4",
          "body": "{\n  \"nodePools\": [\n    {\n      \"autoscaling\": {\n        \"autoprovisioned\": {{faker 'random.boolean'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"maxNodeCount\": {{faker 'random.number'}},\n        \"minNodeCount\": {{faker 'random.number'}}\n      },\n      \"conditions\": [\n        {\n          \"canonicalCode\": \"{{oneOf (array 'OK' 'CANCELLED' 'UNKNOWN' 'INVALID_ARGUMENT' 'DEADLINE_EXCEEDED' 'NOT_FOUND' 'ALREADY_EXISTS' 'PERMISSION_DENIED' 'UNAUTHENTICATED' 'RESOURCE_EXHAUSTED' 'FAILED_PRECONDITION' 'ABORTED' 'OUT_OF_RANGE' 'UNIMPLEMENTED' 'INTERNAL' 'UNAVAILABLE' 'DATA_LOSS')}}\",\n          \"code\": \"{{oneOf (array 'UNKNOWN' 'GCE_STOCKOUT' 'GKE_SERVICE_ACCOUNT_DELETED' 'GCE_QUOTA_EXCEEDED' 'SET_BY_OPERATOR' 'CLOUD_KMS_KEY_ERROR' 'CA_EXPIRING')}}\",\n          \"message\": \"\"\n        }\n      ],\n      \"config\": {\n        \"accelerators\": [\n          {\n            \"acceleratorCount\": \"\",\n            \"acceleratorType\": \"\",\n            \"gpuPartitionSize\": \"\"\n          }\n        ],\n        \"advancedMachineFeatures\": {\n          \"threadsPerCore\": \"\"\n        },\n        \"bootDiskKmsKey\": \"\",\n        \"confidentialNodes\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"diskSizeGb\": {{faker 'random.number'}},\n        \"diskType\": \"\",\n        \"ephemeralStorageConfig\": {\n          \"localSsdCount\": {{faker 'random.number'}}\n        },\n        \"gcfsConfig\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"gvnic\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"imageType\": \"\",\n        \"kubeletConfig\": {\n          \"cpuCfsQuota\": {{faker 'random.boolean'}},\n          \"cpuCfsQuotaPeriod\": \"\",\n          \"cpuManagerPolicy\": \"\",\n          \"podPidsLimit\": \"\"\n        },\n        \"labels\": {},\n        \"linuxNodeConfig\": {\n          \"sysctls\": {}\n        },\n        \"localSsdCount\": {{faker 'random.number'}},\n        \"machineType\": \"\",\n        \"metadata\": {},\n        \"minCpuPlatform\": \"\",\n        \"nodeGroup\": \"\",\n        \"oauthScopes\": [\n          \"\"\n        ],\n        \"preemptible\": {{faker 'random.boolean'}},\n        \"reservationAffinity\": {\n          \"consumeReservationType\": \"{{oneOf (array 'UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n          \"key\": \"\",\n          \"values\": [\n            \"\"\n          ]\n        },\n        \"sandboxConfig\": {\n          \"sandboxType\": \"\",\n          \"type\": \"{{oneOf (array 'UNSPECIFIED' 'GVISOR')}}\"\n        },\n        \"serviceAccount\": \"\",\n        \"shieldedInstanceConfig\": {\n          \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n          \"enableSecureBoot\": {{faker 'random.boolean'}}\n        },\n        \"spot\": {{faker 'random.boolean'}},\n        \"tags\": [\n          \"\"\n        ],\n        \"taints\": [\n          {\n            \"effect\": \"{{oneOf (array 'EFFECT_UNSPECIFIED' 'NO_SCHEDULE' 'PREFER_NO_SCHEDULE' 'NO_EXECUTE')}}\",\n            \"key\": \"\",\n            \"value\": \"\"\n          }\n        ],\n        \"workloadMetadataConfig\": {\n          \"mode\": \"{{oneOf (array 'MODE_UNSPECIFIED' 'GCE_METADATA' 'GKE_METADATA')}}\",\n          \"nodeMetadata\": \"{{oneOf (array 'UNSPECIFIED' 'SECURE' 'EXPOSE' 'GKE_METADATA_SERVER')}}\"\n        }\n      },\n      \"initialNodeCount\": {{faker 'random.number'}},\n      \"instanceGroupUrls\": [\n        \"\"\n      ],\n      \"locations\": [\n        \"\"\n      ],\n      \"management\": {\n        \"autoRepair\": {{faker 'random.boolean'}},\n        \"autoUpgrade\": {{faker 'random.boolean'}},\n        \"upgradeOptions\": {\n          \"autoUpgradeStartTime\": \"\",\n          \"description\": \"\"\n        }\n      },\n      \"maxPodsConstraint\": {\n        \"maxPodsPerNode\": \"\"\n      },\n      \"name\": \"\",\n      \"networkConfig\": {\n        \"createPodRange\": {{faker 'random.boolean'}},\n        \"podIpv4CidrBlock\": \"\",\n        \"podRange\": \"\"\n      },\n      \"placementPolicy\": {\n        \"type\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'COMPACT')}}\"\n      },\n      \"podIpv4CidrSize\": {{faker 'random.number'}},\n      \"selfLink\": \"\",\n      \"status\": \"{{oneOf (array 'STATUS_UNSPECIFIED' 'PROVISIONING' 'RUNNING' 'RUNNING_WITH_ERROR' 'RECONCILING' 'STOPPING' 'ERROR')}}\",\n      \"statusMessage\": \"\",\n      \"upgradeSettings\": {\n        \"maxSurge\": {{faker 'random.number'}},\n        \"maxUnavailable\": {{faker 'random.number'}}\n      },\n      \"version\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "591ebcbf-f3c4-4d22-9f20-b17e5de69435",
      "documentation": "Creates a node pool for a cluster.",
      "method": "post",
      "endpoint": "v1beta1/:parent/nodePools",
      "responses": [
        {
          "uuid": "4ef18319-ec38-4169-93ac-81624fd7d88b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91dec188-560d-4b2b-a54c-6beaf1cec928",
      "documentation": "Lists all operations in a project in the specified zone or all zones.",
      "method": "get",
      "endpoint": "v1beta1/:parent/operations",
      "responses": [
        {
          "uuid": "59f08c0f-af81-4b7e-adf4-ea84e0609671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}