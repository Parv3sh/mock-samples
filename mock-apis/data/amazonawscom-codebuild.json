{
  "uuid": "5857fc84-a19e-4bcd-9532-18481f586b93",
  "lastMigration": 19,
  "name": "AWS CodeBuild",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f58451b7-f120-4b2e-afb8-938ef007df4c",
      "documentation": "Deletes one or more builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchDeleteBuilds",
      "responses": [
        {
          "uuid": "f7642a5f-4146-4839-8558-a6dd6650d8a4",
          "body": "{\n  \"buildsDeleted\": [\n    \"\"\n  ],\n  \"buildsNotDeleted\": [\n    {\n      \"id\": \"\",\n      \"statusCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc3385a9-cba0-4a8a-b923-5822d062d56e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7cf77e6-512d-468b-8eae-5a08e7bbc002",
      "documentation": "Retrieves information about one or more batch builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetBuildBatches",
      "responses": [
        {
          "uuid": "8cc8436c-f7b9-4392-8c41-039a0bb81d19",
          "body": "{\n  \"buildBatches\": [\n    {\n      \"id\": \"\",\n      \"arn\": \"\",\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentPhase\": \"\",\n      \"buildBatchStatus\": \"\",\n      \"sourceVersion\": \"\",\n      \"resolvedSourceVersion\": \"\",\n      \"projectName\": \"\",\n      \"phases\": [\n        {\n          \"phaseType\": \"\",\n          \"phaseStatus\": \"\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\",\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"durationInSeconds\": {{faker 'random.number'}},\n          \"contexts\": [\n            {\n              \"statusCode\": \"\",\n              \"message\": \"\"\n            }\n          ]\n        }\n      ],\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'random.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'random.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'random.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'random.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"location\": \"\",\n          \"sha256sum\": \"\",\n          \"md5sum\": \"\",\n          \"overrideArtifactName\": {{faker 'random.boolean'}},\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'random.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"logConfig\": {\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"buildTimeoutInMinutes\": {{faker 'random.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n      \"complete\": {{faker 'random.boolean'}},\n      \"initiator\": \"\",\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"encryptionKey\": \"\",\n      \"buildBatchNumber\": {{faker 'random.number'}},\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"buildBatchConfig\": {\n        \"serviceRole\": \"\",\n        \"combineArtifacts\": {{faker 'random.boolean'}},\n        \"restrictions\": {\n          \"maximumBuildsAllowed\": {{faker 'random.number'}},\n          \"computeTypesAllowed\": [\n            \"\"\n          ]\n        },\n        \"timeoutInMins\": {{faker 'random.number'}}\n      },\n      \"buildGroups\": [\n        {\n          \"identifier\": \"\",\n          \"dependsOn\": [\n            \"\"\n          ],\n          \"ignoreFailure\": {{faker 'random.boolean'}},\n          \"currentBuildSummary\": {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          },\n          \"priorBuildSummaryList\": [\n            {\n              \"arn\": \"\",\n              \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n              \"buildStatus\": \"\",\n              \"primaryArtifact\": {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              },\n              \"secondaryArtifacts\": [\n                {\n                  \"type\": \"\",\n                  \"location\": \"\",\n                  \"identifier\": \"\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"debugSessionEnabled\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"buildBatchesNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4341744-0a8e-4a1c-abc5-2048c081ced0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90f210aa-7d57-4128-a398-0bc816d70d28",
      "documentation": "Gets information about one or more builds.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetBuilds",
      "responses": [
        {
          "uuid": "2a9fcca8-fc98-4458-af2a-e6e128450ada",
          "body": "{\n  \"builds\": [\n    {\n      \"id\": \"\",\n      \"arn\": \"\",\n      \"buildNumber\": {{faker 'random.number'}},\n      \"startTime\": \"{{faker 'date.recent' 365}}\",\n      \"endTime\": \"{{faker 'date.recent' 365}}\",\n      \"currentPhase\": \"\",\n      \"buildStatus\": \"\",\n      \"sourceVersion\": \"\",\n      \"resolvedSourceVersion\": \"\",\n      \"projectName\": \"\",\n      \"phases\": [\n        {\n          \"phaseType\": \"\",\n          \"phaseStatus\": \"\",\n          \"startTime\": \"{{faker 'date.recent' 365}}\",\n          \"endTime\": \"{{faker 'date.recent' 365}}\",\n          \"durationInSeconds\": {{faker 'random.number'}},\n          \"contexts\": [\n            {\n              \"statusCode\": \"\",\n              \"message\": \"\"\n            }\n          ]\n        }\n      ],\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'random.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'random.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'random.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'random.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"location\": \"\",\n          \"sha256sum\": \"\",\n          \"md5sum\": \"\",\n          \"overrideArtifactName\": {{faker 'random.boolean'}},\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'random.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"logs\": {\n        \"groupName\": \"\",\n        \"streamName\": \"\",\n        \"deepLink\": \"\",\n        \"s3DeepLink\": \"\",\n        \"cloudWatchLogsArn\": \"\",\n        \"s3LogsArn\": \"\",\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"timeoutInMinutes\": {{faker 'random.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n      \"buildComplete\": {{faker 'random.boolean'}},\n      \"initiator\": \"\",\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"networkInterface\": {\n        \"subnetId\": \"\",\n        \"networkInterfaceId\": \"\"\n      },\n      \"encryptionKey\": \"\",\n      \"exportedEnvironmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"reportArns\": [\n        \"\"\n      ],\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"debugSession\": {\n        \"sessionEnabled\": {{faker 'random.boolean'}},\n        \"sessionTarget\": \"\"\n      },\n      \"buildBatchArn\": \"\"\n    }\n  ],\n  \"buildsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb8ba58c-819d-4b18-8d5f-391635caecbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "293c991b-1728-451f-8c59-187c37d60b75",
      "documentation": "Gets information about one or more build projects.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetProjects",
      "responses": [
        {
          "uuid": "815b6036-69ec-4fae-9c68-8e25fcd5a135",
          "body": "{\n  \"projects\": [\n    {\n      \"name\": \"\",\n      \"arn\": \"\",\n      \"description\": \"\",\n      \"source\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      },\n      \"secondarySources\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"gitCloneDepth\": {{faker 'random.number'}},\n          \"gitSubmodulesConfig\": {\n            \"fetchSubmodules\": {{faker 'random.boolean'}}\n          },\n          \"buildspec\": \"\",\n          \"auth\": {\n            \"type\": \"\",\n            \"resource\": \"\"\n          },\n          \"reportBuildStatus\": {{faker 'random.boolean'}},\n          \"buildStatusConfig\": {\n            \"context\": \"\",\n            \"targetUrl\": \"\"\n          },\n          \"insecureSsl\": {{faker 'random.boolean'}},\n          \"sourceIdentifier\": \"\"\n        }\n      ],\n      \"sourceVersion\": \"\",\n      \"secondarySourceVersions\": [\n        {\n          \"sourceIdentifier\": \"\",\n          \"sourceVersion\": \"\"\n        }\n      ],\n      \"artifacts\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      },\n      \"secondaryArtifacts\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"path\": \"\",\n          \"namespaceType\": \"\",\n          \"name\": \"\",\n          \"packaging\": \"\",\n          \"overrideArtifactName\": {{faker 'random.boolean'}},\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"artifactIdentifier\": \"\",\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      ],\n      \"cache\": {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"modes\": [\n          \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n        ]\n      },\n      \"environment\": {\n        \"type\": \"\",\n        \"image\": \"\",\n        \"computeType\": \"\",\n        \"environmentVariables\": [\n          {\n            \"name\": \"\",\n            \"value\": \"\",\n            \"type\": \"\"\n          }\n        ],\n        \"privilegedMode\": {{faker 'random.boolean'}},\n        \"certificate\": \"\",\n        \"registryCredential\": {\n          \"credential\": \"\",\n          \"credentialProvider\": \"\"\n        },\n        \"imagePullCredentialsType\": \"\"\n      },\n      \"serviceRole\": \"\",\n      \"timeoutInMinutes\": {{faker 'random.number'}},\n      \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n      \"encryptionKey\": \"\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"webhook\": {\n        \"url\": \"\",\n        \"payloadUrl\": \"\",\n        \"secret\": \"\",\n        \"branchFilter\": \"\",\n        \"filterGroups\": [\n          [\n            {\n              \"type\": \"\",\n              \"pattern\": \"\",\n              \"excludeMatchedPattern\": {{faker 'random.boolean'}}\n            }\n          ]\n        ],\n        \"buildType\": \"\",\n        \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"vpcConfig\": {\n        \"vpcId\": \"\",\n        \"subnets\": [\n          \"\"\n        ],\n        \"securityGroupIds\": [\n          \"\"\n        ]\n      },\n      \"badge\": {\n        \"badgeEnabled\": {{faker 'random.boolean'}},\n        \"badgeRequestUrl\": \"\"\n      },\n      \"logsConfig\": {\n        \"cloudWatchLogs\": {\n          \"status\": \"\",\n          \"groupName\": \"\",\n          \"streamName\": \"\"\n        },\n        \"s3Logs\": {\n          \"status\": \"\",\n          \"location\": \"\",\n          \"encryptionDisabled\": {{faker 'random.boolean'}},\n          \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n        }\n      },\n      \"fileSystemLocations\": [\n        {\n          \"type\": \"\",\n          \"location\": \"\",\n          \"mountPoint\": \"\",\n          \"identifier\": \"\",\n          \"mountOptions\": \"\"\n        }\n      ],\n      \"buildBatchConfig\": {\n        \"serviceRole\": \"\",\n        \"combineArtifacts\": {{faker 'random.boolean'}},\n        \"restrictions\": {\n          \"maximumBuildsAllowed\": {{faker 'random.number'}},\n          \"computeTypesAllowed\": [\n            \"\"\n          ]\n        },\n        \"timeoutInMins\": {{faker 'random.number'}}\n      },\n      \"concurrentBuildLimit\": {{faker 'random.number'}},\n      \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n      \"publicProjectAlias\": \"\",\n      \"resourceAccessRole\": \"\"\n    }\n  ],\n  \"projectsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ba575f7-29ae-43fd-848a-85e154b9e72f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd2545d5-e705-4692-8923-908d31fb61c7",
      "documentation": " Returns an array of report groups. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetReportGroups",
      "responses": [
        {
          "uuid": "d635f94a-ce80-4f3a-9106-c095d9d3c124",
          "body": "{\n  \"reportGroups\": [\n    {\n      \"arn\": \"\",\n      \"name\": \"\",\n      \"type\": \"\",\n      \"exportConfig\": {\n        \"exportConfigType\": \"\",\n        \"s3Destination\": {\n          \"bucket\": \"\",\n          \"bucketOwner\": \"\",\n          \"path\": \"\",\n          \"packaging\": \"\",\n          \"encryptionKey\": \"\",\n          \"encryptionDisabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"tags\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"status\": \"\"\n    }\n  ],\n  \"reportGroupsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3d3ce0f-0baa-423c-8f33-d38702cd1dc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31986081-7f19-4860-b0e1-34e359b58f35",
      "documentation": " Returns an array of reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.BatchGetReports",
      "responses": [
        {
          "uuid": "795ffa07-fff1-44cc-9ae5-18e5297b11ce",
          "body": "{\n  \"reports\": [\n    {\n      \"arn\": \"\",\n      \"type\": \"\",\n      \"name\": \"\",\n      \"reportGroupArn\": \"\",\n      \"executionId\": \"\",\n      \"status\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"expired\": \"{{faker 'date.recent' 365}}\",\n      \"exportConfig\": {\n        \"exportConfigType\": \"\",\n        \"s3Destination\": {\n          \"bucket\": \"\",\n          \"bucketOwner\": \"\",\n          \"path\": \"\",\n          \"packaging\": \"\",\n          \"encryptionKey\": \"\",\n          \"encryptionDisabled\": {{faker 'random.boolean'}}\n        }\n      },\n      \"truncated\": {{faker 'random.boolean'}},\n      \"testSummary\": {\n        \"total\": {{faker 'random.number'}},\n        \"statusCounts\": {},\n        \"durationInNanoSeconds\": {{faker 'random.number'}}\n      },\n      \"codeCoverageSummary\": {\n        \"lineCoveragePercentage\": {{faker 'random.float'}},\n        \"linesCovered\": {{faker 'random.number'}},\n        \"linesMissed\": {{faker 'random.number'}},\n        \"branchCoveragePercentage\": {{faker 'random.float'}},\n        \"branchesCovered\": {{faker 'random.number'}},\n        \"branchesMissed\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"reportsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "631ae744-f120-4974-b028-cfb169f4e938",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4684c2f5-0c80-4e5e-bffe-be1879361d07",
      "documentation": "Creates a build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateProject",
      "responses": [
        {
          "uuid": "d9b14871-7f54-4db7-8bb7-16a0a52cb6df",
          "body": "{\n  \"project\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"description\": \"\",\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"sourceVersion\": \"\",\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"path\": \"\",\n      \"namespaceType\": \"\",\n      \"name\": \"\",\n      \"packaging\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"timeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"encryptionKey\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"webhook\": {\n      \"url\": \"\",\n      \"payloadUrl\": \"\",\n      \"secret\": \"\",\n      \"branchFilter\": \"\",\n      \"filterGroups\": [\n        [\n          {\n            \"type\": \"\",\n            \"pattern\": \"\",\n            \"excludeMatchedPattern\": {{faker 'random.boolean'}}\n          }\n        ]\n      ],\n      \"buildType\": \"\",\n      \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"badge\": {\n      \"badgeEnabled\": {{faker 'random.boolean'}},\n      \"badgeRequestUrl\": \"\"\n    },\n    \"logsConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'random.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'random.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'random.number'}}\n    },\n    \"concurrentBuildLimit\": {{faker 'random.number'}},\n    \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n    \"publicProjectAlias\": \"\",\n    \"resourceAccessRole\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d7d65dc-ea3f-4236-a4d2-7620cc28c609",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f81ac69a-77fa-4dba-a563-8f96fe5c7073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aac3ed1a-73f0-4696-a187-0141f4598b46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7f865bf-e7c1-42b9-8b95-88883023e97c",
      "documentation": " Creates a report group. A report group contains a collection of reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateReportGroup",
      "responses": [
        {
          "uuid": "67ca1b9d-2239-449a-8c21-4145c44bd8f2",
          "body": "{\n  \"reportGroup\": {\n    \"arn\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"exportConfig\": {\n      \"exportConfigType\": \"\",\n      \"s3Destination\": {\n        \"bucket\": \"\",\n        \"bucketOwner\": \"\",\n        \"path\": \"\",\n        \"packaging\": \"\",\n        \"encryptionKey\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}}\n      }\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea94416d-e288-4926-921e-c1dee24e6d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7ed60f4-00d0-421b-82ed-54ab34376f00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d88573c-e49b-4173-913b-2df10bcfcb83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "615c96dd-adca-44b0-bc41-71610d692396",
      "documentation": "<p>For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.</p> <important> <p>If you enable webhooks for an CodeBuild project, and the project is used as a build step in CodePipeline, then two identical builds are created for each commit. One build is triggered through webhooks, and one through CodePipeline. Because billing is on a per-build basis, you are billed for both builds. Therefore, if you are using CodePipeline, we recommend that you disable webhooks in CodeBuild. In the CodeBuild console, clear the Webhook box. For more information, see step 5 in <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console\">Change a Build Project's Settings</a>.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.CreateWebhook",
      "responses": [
        {
          "uuid": "31b0c411-48b9-470d-8cfd-6c3a5acdabd6",
          "body": "{\n  \"webhook\": {\n    \"url\": \"\",\n    \"payloadUrl\": \"\",\n    \"secret\": \"\",\n    \"branchFilter\": \"\",\n    \"filterGroups\": [\n      [\n        {\n          \"type\": \"\",\n          \"pattern\": \"\",\n          \"excludeMatchedPattern\": {{faker 'random.boolean'}}\n        }\n      ]\n    ],\n    \"buildType\": \"\",\n    \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ba545dc-044a-4162-a53e-2a2507c9d134",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77e6a28f-ac95-43a7-8008-5ec3798e25b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b5f7931-1093-4d84-bb1b-d338d45f820f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "665fd71f-5c50-4edb-8920-90f086c06232",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d9aca5c-4f9a-4a07-9ff2-e39931387959",
      "documentation": "Deletes a batch build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteBuildBatch",
      "responses": [
        {
          "uuid": "8632a2b6-a139-4ecb-a23d-b357f6f6bac9",
          "body": "{\n  \"statusCode\": \"\",\n  \"buildsDeleted\": [\n    \"\"\n  ],\n  \"buildsNotDeleted\": [\n    {\n      \"id\": \"\",\n      \"statusCode\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d3eaebe-3c8f-4289-88c0-f63d2a3c5d8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9227a690-8bad-4360-afcc-70645b09d7de",
      "documentation": " Deletes a build project. When you delete a project, its builds are not deleted. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteProject",
      "responses": [
        {
          "uuid": "dc18a8c0-d1d0-4d35-b381-f6efa5fc7388",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f978cccd-9203-4711-b6a2-2a5fe624f259",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7989f6ac-0aaf-42d5-afb5-12d60bafb520",
      "documentation": " Deletes a report. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteReport",
      "responses": [
        {
          "uuid": "6717edfd-bf16-416d-8e01-dac1a30a8e31",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbc22bd7-cc8a-44e6-94f4-1e5d972f8970",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e748c67d-d443-4f9d-b908-1331974275b9",
      "documentation": "Deletes a report group. Before you delete a report group, you must delete its reports. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteReportGroup",
      "responses": [
        {
          "uuid": "0c6d716f-16c3-4c38-b19c-9aaa1d05b554",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a743d3a6-9a8d-405e-9e27-90be5f316d29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f9c397f-9d9b-465b-a260-a35421b67fda",
      "documentation": " Deletes a resource policy that is identified by its resource ARN. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "2f1ad94e-61ee-43ad-9b94-2e33c67508b6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59cd6863-1ad5-4e45-a575-d9f89cd2d8ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6a0ea3e-ef7a-45bd-895f-dbdd2b1ab494",
      "documentation": " Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteSourceCredentials",
      "responses": [
        {
          "uuid": "611ae593-01ea-4d18-90f1-835e67d5206e",
          "body": "{\n  \"arn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9f2130d-a08b-47a0-aa4f-1af3da8dd1e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d8f8f09-0a4c-46a8-9db9-ea67ec8f2a58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5b8d8c5-5af0-4f53-88db-fb1e28d3f550",
      "documentation": "For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops CodeBuild from rebuilding the source code every time a code change is pushed to the repository.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DeleteWebhook",
      "responses": [
        {
          "uuid": "cdf6e1b2-38e2-46aa-ad79-50ef59fc6c2c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc73829c-7c0b-468f-82e5-5de77d3e83f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9f9c153-a272-48bd-b015-219a047c30b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4816ae87-bc5a-4f07-abd7-e2d284c8f86b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad1550bf-dbd8-410c-aca1-e3364ace3cd9",
      "documentation": "Retrieves one or more code coverage reports.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DescribeCodeCoverages",
      "responses": [
        {
          "uuid": "5c3011f5-4a1b-4c23-abf9-0ba7783409dd",
          "body": "{\n  \"nextToken\": \"\",\n  \"codeCoverages\": [\n    {\n      \"id\": \"\",\n      \"reportARN\": \"\",\n      \"filePath\": \"\",\n      \"lineCoveragePercentage\": {{faker 'random.float'}},\n      \"linesCovered\": {{faker 'random.number'}},\n      \"linesMissed\": {{faker 'random.number'}},\n      \"branchCoveragePercentage\": {{faker 'random.float'}},\n      \"branchesCovered\": {{faker 'random.number'}},\n      \"branchesMissed\": {{faker 'random.number'}},\n      \"expired\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2d858b2-a7da-444e-a24c-ed8e91e8ac42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37aaf090-5363-4292-b7b2-33b87238cf2b",
      "documentation": " Returns a list of details about test cases for a report. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.DescribeTestCases",
      "responses": [
        {
          "uuid": "763e7076-e5bc-4d86-81d0-7f71c45b873f",
          "body": "{\n  \"nextToken\": \"\",\n  \"testCases\": [\n    {\n      \"reportArn\": \"\",\n      \"testRawDataPath\": \"\",\n      \"prefix\": \"\",\n      \"name\": \"\",\n      \"status\": \"\",\n      \"durationInNanoSeconds\": {{faker 'random.number'}},\n      \"message\": \"\",\n      \"expired\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3ed1723-bb69-4c9c-855d-6bb6e0e6bbf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4245bb41-d364-4149-98f3-477ac999134c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59422c90-6dc8-4dc0-95a8-1636938ba8d3",
      "documentation": "Analyzes and accumulates test report values for the specified test reports.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.GetReportGroupTrend",
      "responses": [
        {
          "uuid": "773a6eb1-9df0-4707-a8f3-68f5ef3fb73d",
          "body": "{\n  \"stats\": {\n    \"average\": \"\",\n    \"max\": \"\",\n    \"min\": \"\"\n  },\n  \"rawData\": [\n    {\n      \"reportArn\": \"\",\n      \"data\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c09df21-bfde-43f9-a3e3-c8f061bba2c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a41b419e-a9c5-402d-a65f-e17c2fd8400f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d32fb732-8edd-407a-bf80-c1161f969c71",
      "documentation": " Gets a resource policy that is identified by its resource ARN. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.GetResourcePolicy",
      "responses": [
        {
          "uuid": "eca30e31-1ba3-4bc4-9718-6d3f4c98263d",
          "body": "{\n  \"policy\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "925b31a3-14e2-47ef-8ec4-1fa86c9fd63f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84096a63-f48a-4e0d-b1f8-6eb672b84911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0be9353f-4ed8-459f-8134-1f588dda1edf",
      "documentation": " Imports the source repository credentials for an CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ImportSourceCredentials",
      "responses": [
        {
          "uuid": "30a5ea20-1c7f-4665-9e93-5023193a5890",
          "body": "{\n  \"arn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0463832-1bb0-4c04-8d66-1e590f1caf38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79e83286-b29d-4f66-a5c8-0ecf7151e858",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "144864be-b65a-4323-89bc-5322fc90dafd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acab7175-a526-44c3-8a08-21f67df63107",
      "documentation": "Resets the cache for a project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.InvalidateProjectCache",
      "responses": [
        {
          "uuid": "0bcbeff2-bdcc-4c78-bbd3-bb92f6b66b63",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c6371f2-66fa-456c-b124-e84ca57bb855",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "022dd6b5-7f86-47e5-8f00-783129d305af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd4e736a-b33e-48fd-9cef-d21626b77237",
      "documentation": "Retrieves the identifiers of your build batches in the current region.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildBatches",
      "responses": [
        {
          "uuid": "087c4b58-f425-4e61-a1e7-825e2c4ad19d",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7919925f-1b8d-4a8b-9c79-3388e9707b7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9f2d0ce-563f-4a79-ab67-888a76ab4323",
      "documentation": "Retrieves the identifiers of the build batches for a specific project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildBatchesForProject",
      "responses": [
        {
          "uuid": "49f147dc-578b-476e-81e5-ca3ccfd3a8a1",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95a2b790-15db-4c7c-8c07-ba6f7635d962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "084b33c5-da28-43f1-8616-1bc91f672005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "994676a5-b88f-4254-9aa6-2900e1a484dd",
      "documentation": "Gets a list of build IDs, with each build ID representing a single build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuilds",
      "responses": [
        {
          "uuid": "af25a801-570e-45c8-a1bc-2a2b0b0743d9",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13d7e8e1-34e2-4b70-b1fc-c8aeaf91b9b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80f04426-6d4b-4040-9a81-307153f30694",
      "documentation": "Gets a list of build identifiers for the specified build project, with each build identifier representing a single build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListBuildsForProject",
      "responses": [
        {
          "uuid": "11b3ad60-9274-4758-b03c-e53e348ad73c",
          "body": "{\n  \"ids\": [\n    \"\"\n  ],\n  \"nextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8d7c77f-2626-4ec5-b9e5-89ecea1ab7fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "509c47c4-98d7-4796-ad81-8ceb0598038b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d880a83-f277-4b48-a52f-e91bc0a30203",
      "documentation": "Gets information about Docker images that are managed by CodeBuild.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListCuratedEnvironmentImages",
      "responses": [
        {
          "uuid": "64826982-1092-4fb4-ada1-3959c94e397b",
          "body": "{\n  \"platforms\": [\n    {\n      \"platform\": \"\",\n      \"languages\": [\n        {\n          \"language\": \"\",\n          \"images\": [\n            {\n              \"name\": \"\",\n              \"description\": \"\",\n              \"versions\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b17a9ca-61c6-48ac-9139-615e2c0ab4be",
      "documentation": "Gets a list of build project names, with each build project name representing a single build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListProjects",
      "responses": [
        {
          "uuid": "c2f1b6a3-2f76-434b-9153-3b8252320f3c",
          "body": "{\n  \"nextToken\": \"\",\n  \"projects\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4becc5c-1fc6-4581-a18e-9f3730ecfded",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60e1c041-41f0-4bec-b408-498dc26e212c",
      "documentation": " Gets a list ARNs for the report groups in the current Amazon Web Services account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReportGroups",
      "responses": [
        {
          "uuid": "56e4047a-b692-4957-84e1-9831f121afe1",
          "body": "{\n  \"nextToken\": \"\",\n  \"reportGroups\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "335f0df0-858d-4537-bb56-29dea2aaca6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c2ae852-d015-47e8-a453-2b8525c428c1",
      "documentation": " Returns a list of ARNs for the reports in the current Amazon Web Services account. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReports",
      "responses": [
        {
          "uuid": "ae253465-506f-4332-a87e-acd286c45f20",
          "body": "{\n  \"nextToken\": \"\",\n  \"reports\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce07180d-e999-4b0b-8a25-59c02c36a292",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54d12c4e-6efb-4cb2-a9df-4408dd9f6a0a",
      "documentation": " Returns a list of ARNs for the reports that belong to a <code>ReportGroup</code>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListReportsForReportGroup",
      "responses": [
        {
          "uuid": "03eca061-f5dd-4f6b-83bc-469af9245a77",
          "body": "{\n  \"nextToken\": \"\",\n  \"reports\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "068bc35f-07dd-4c38-b16d-65f9665e855b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7ab9ff4-271b-4653-b607-f024baf8ddf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e941cd11-3023-4a66-8cd6-c7ff0e6e0ef1",
      "documentation": " Gets a list of projects that are shared with other Amazon Web Services accounts or users. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSharedProjects",
      "responses": [
        {
          "uuid": "6f1356fd-7c70-4dda-800f-409796ec7931",
          "body": "{\n  \"nextToken\": \"\",\n  \"projects\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ebfd221-9eb2-459b-910e-f059d8a246e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69bef228-4c02-41cb-9c72-0abdfc09312a",
      "documentation": " Gets a list of report groups that are shared with other Amazon Web Services accounts or users. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSharedReportGroups",
      "responses": [
        {
          "uuid": "4259278a-619b-46b9-a18b-f19733dab33f",
          "body": "{\n  \"nextToken\": \"\",\n  \"reportGroups\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd57fea2-3896-458c-afe5-0fc48d3f64fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19d90694-6c5e-4d66-afaf-ad21fb403060",
      "documentation": " Returns a list of <code>SourceCredentialsInfo</code> objects. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.ListSourceCredentials",
      "responses": [
        {
          "uuid": "ffed8262-9d6f-4fc1-b34f-4d00219209d3",
          "body": "{\n  \"sourceCredentialsInfos\": [\n    {\n      \"arn\": \"\",\n      \"serverType\": \"\",\n      \"authType\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88b90fdd-145c-46ac-8585-4fd91292c08b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03db524a-ccd1-47ac-b856-0ae20417f6c1",
      "documentation": " Stores a resource policy for the ARN of a <code>Project</code> or <code>ReportGroup</code> object. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.PutResourcePolicy",
      "responses": [
        {
          "uuid": "2b03084a-7a3b-42a6-b63e-3d391af3fa99",
          "body": "{\n  \"resourceArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a899f5f5-29bc-4ba7-a674-0b40d85e0bd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "231e234f-da98-49d6-87a3-4f77d61cbf85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3222f0d3-e426-4d7c-be98-93057df44e35",
      "documentation": "Restarts a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.RetryBuild",
      "responses": [
        {
          "uuid": "cec5feff-4c42-49ce-864e-36406efc516f",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"buildComplete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'random.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7cfd08d-a959-418b-914c-f99f9ad7f486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77eb4d75-a815-4411-bf5d-0605159b48aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f30d1bb-11fb-4a90-9a9c-bb5f3eb7b70e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5efb75e4-4c0f-44d1-893b-89d876251036",
      "documentation": "Restarts a failed batch build. Only batch builds that have failed can be retried.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.RetryBuildBatch",
      "responses": [
        {
          "uuid": "202ed333-6341-4efb-a55f-966714601330",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"complete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'random.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'random.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'random.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'random.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'random.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "876acbeb-725a-46df-a649-5f5b5b8fecc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "681d9498-fc01-4acd-997b-9ba5b143bc05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04c2b68b-e766-473b-b4c4-313febd6d096",
      "documentation": "Starts running a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StartBuild",
      "responses": [
        {
          "uuid": "af300ee2-b983-4a3e-a2b3-97de9b6e9c45",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"buildComplete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'random.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b311ee8-3670-415f-aee6-0bc6f5d710ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d04dd4c0-eb34-4621-857e-c50c3a613543",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e331200-1d10-464b-ba6e-74cd253b690d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f65f7c5f-f2a2-4544-9e1f-15560acd2b79",
      "documentation": "Starts a batch build for a project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StartBuildBatch",
      "responses": [
        {
          "uuid": "f870a517-8a24-40b4-be16-125df8a0f734",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"complete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'random.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'random.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'random.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'random.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'random.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0fb3648-ab90-47f2-b60e-f06cf84c3089",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abad9dcb-90a7-443a-b8fe-30b0c54b4a4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56f3405a-a104-499d-a576-2852ea80ff7b",
      "documentation": "Attempts to stop running a build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StopBuild",
      "responses": [
        {
          "uuid": "0bdfd364-1ee9-4e7a-bb6a-b07c2079d78f",
          "body": "{\n  \"build\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"buildNumber\": {{faker 'random.number'}},\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logs\": {\n      \"groupName\": \"\",\n      \"streamName\": \"\",\n      \"deepLink\": \"\",\n      \"s3DeepLink\": \"\",\n      \"cloudWatchLogsArn\": \"\",\n      \"s3LogsArn\": \"\",\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"timeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"buildComplete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"networkInterface\": {\n      \"subnetId\": \"\",\n      \"networkInterfaceId\": \"\"\n    },\n    \"encryptionKey\": \"\",\n    \"exportedEnvironmentVariables\": [\n      {\n        \"name\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"reportArns\": [\n      \"\"\n    ],\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"debugSession\": {\n      \"sessionEnabled\": {{faker 'random.boolean'}},\n      \"sessionTarget\": \"\"\n    },\n    \"buildBatchArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "591a491a-254e-4617-abe1-39f1beeaab10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "711a7bae-14d8-468e-8990-4249a02d527d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1dde66fe-2fa8-41b5-afd5-72b307c832a7",
      "documentation": "Stops a running batch build.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.StopBuildBatch",
      "responses": [
        {
          "uuid": "e9b72364-73c1-4973-bb09-32756aa2cd5c",
          "body": "{\n  \"buildBatch\": {\n    \"id\": \"\",\n    \"arn\": \"\",\n    \"startTime\": \"{{faker 'date.recent' 365}}\",\n    \"endTime\": \"{{faker 'date.recent' 365}}\",\n    \"currentPhase\": \"\",\n    \"buildBatchStatus\": \"\",\n    \"sourceVersion\": \"\",\n    \"resolvedSourceVersion\": \"\",\n    \"projectName\": \"\",\n    \"phases\": [\n      {\n        \"phaseType\": \"\",\n        \"phaseStatus\": \"\",\n        \"startTime\": \"{{faker 'date.recent' 365}}\",\n        \"endTime\": \"{{faker 'date.recent' 365}}\",\n        \"durationInSeconds\": {{faker 'random.number'}},\n        \"contexts\": [\n          {\n            \"statusCode\": \"\",\n            \"message\": \"\"\n          }\n        ]\n      }\n    ],\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"location\": \"\",\n      \"sha256sum\": \"\",\n      \"md5sum\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"location\": \"\",\n        \"sha256sum\": \"\",\n        \"md5sum\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"logConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"buildTimeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"complete\": {{faker 'random.boolean'}},\n    \"initiator\": \"\",\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"encryptionKey\": \"\",\n    \"buildBatchNumber\": {{faker 'random.number'}},\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'random.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'random.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'random.number'}}\n    },\n    \"buildGroups\": [\n      {\n        \"identifier\": \"\",\n        \"dependsOn\": [\n          \"\"\n        ],\n        \"ignoreFailure\": {{faker 'random.boolean'}},\n        \"currentBuildSummary\": {\n          \"arn\": \"\",\n          \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n          \"buildStatus\": \"\",\n          \"primaryArtifact\": {\n            \"type\": \"\",\n            \"location\": \"\",\n            \"identifier\": \"\"\n          },\n          \"secondaryArtifacts\": [\n            {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            }\n          ]\n        },\n        \"priorBuildSummaryList\": [\n          {\n            \"arn\": \"\",\n            \"requestedOn\": \"{{faker 'date.recent' 365}}\",\n            \"buildStatus\": \"\",\n            \"primaryArtifact\": {\n              \"type\": \"\",\n              \"location\": \"\",\n              \"identifier\": \"\"\n            },\n            \"secondaryArtifacts\": [\n              {\n                \"type\": \"\",\n                \"location\": \"\",\n                \"identifier\": \"\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"debugSessionEnabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6201ef7d-7211-435f-b2e6-a370e55eb11c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d3f42dc-f315-46bc-954b-d6e0811bc86f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f83cc2d-1f75-4226-a0ce-c1ad75c13d80",
      "documentation": "Changes the settings of a build project.",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateProject",
      "responses": [
        {
          "uuid": "c3643546-49ab-450d-99fa-ef5dd4cf4c68",
          "body": "{\n  \"project\": {\n    \"name\": \"\",\n    \"arn\": \"\",\n    \"description\": \"\",\n    \"source\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"gitCloneDepth\": {{faker 'random.number'}},\n      \"gitSubmodulesConfig\": {\n        \"fetchSubmodules\": {{faker 'random.boolean'}}\n      },\n      \"buildspec\": \"\",\n      \"auth\": {\n        \"type\": \"\",\n        \"resource\": \"\"\n      },\n      \"reportBuildStatus\": {{faker 'random.boolean'}},\n      \"buildStatusConfig\": {\n        \"context\": \"\",\n        \"targetUrl\": \"\"\n      },\n      \"insecureSsl\": {{faker 'random.boolean'}},\n      \"sourceIdentifier\": \"\"\n    },\n    \"secondarySources\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"gitCloneDepth\": {{faker 'random.number'}},\n        \"gitSubmodulesConfig\": {\n          \"fetchSubmodules\": {{faker 'random.boolean'}}\n        },\n        \"buildspec\": \"\",\n        \"auth\": {\n          \"type\": \"\",\n          \"resource\": \"\"\n        },\n        \"reportBuildStatus\": {{faker 'random.boolean'}},\n        \"buildStatusConfig\": {\n          \"context\": \"\",\n          \"targetUrl\": \"\"\n        },\n        \"insecureSsl\": {{faker 'random.boolean'}},\n        \"sourceIdentifier\": \"\"\n      }\n    ],\n    \"sourceVersion\": \"\",\n    \"secondarySourceVersions\": [\n      {\n        \"sourceIdentifier\": \"\",\n        \"sourceVersion\": \"\"\n      }\n    ],\n    \"artifacts\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"path\": \"\",\n      \"namespaceType\": \"\",\n      \"name\": \"\",\n      \"packaging\": \"\",\n      \"overrideArtifactName\": {{faker 'random.boolean'}},\n      \"encryptionDisabled\": {{faker 'random.boolean'}},\n      \"artifactIdentifier\": \"\",\n      \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n    },\n    \"secondaryArtifacts\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"path\": \"\",\n        \"namespaceType\": \"\",\n        \"name\": \"\",\n        \"packaging\": \"\",\n        \"overrideArtifactName\": {{faker 'random.boolean'}},\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"artifactIdentifier\": \"\",\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    ],\n    \"cache\": {\n      \"type\": \"\",\n      \"location\": \"\",\n      \"modes\": [\n        \"{{oneOf (array 'LOCAL_DOCKER_LAYER_CACHE' 'LOCAL_SOURCE_CACHE' 'LOCAL_CUSTOM_CACHE')}}\"\n      ]\n    },\n    \"environment\": {\n      \"type\": \"\",\n      \"image\": \"\",\n      \"computeType\": \"\",\n      \"environmentVariables\": [\n        {\n          \"name\": \"\",\n          \"value\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"privilegedMode\": {{faker 'random.boolean'}},\n      \"certificate\": \"\",\n      \"registryCredential\": {\n        \"credential\": \"\",\n        \"credentialProvider\": \"\"\n      },\n      \"imagePullCredentialsType\": \"\"\n    },\n    \"serviceRole\": \"\",\n    \"timeoutInMinutes\": {{faker 'random.number'}},\n    \"queuedTimeoutInMinutes\": {{faker 'random.number'}},\n    \"encryptionKey\": \"\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"webhook\": {\n      \"url\": \"\",\n      \"payloadUrl\": \"\",\n      \"secret\": \"\",\n      \"branchFilter\": \"\",\n      \"filterGroups\": [\n        [\n          {\n            \"type\": \"\",\n            \"pattern\": \"\",\n            \"excludeMatchedPattern\": {{faker 'random.boolean'}}\n          }\n        ]\n      ],\n      \"buildType\": \"\",\n      \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"vpcConfig\": {\n      \"vpcId\": \"\",\n      \"subnets\": [\n        \"\"\n      ],\n      \"securityGroupIds\": [\n        \"\"\n      ]\n    },\n    \"badge\": {\n      \"badgeEnabled\": {{faker 'random.boolean'}},\n      \"badgeRequestUrl\": \"\"\n    },\n    \"logsConfig\": {\n      \"cloudWatchLogs\": {\n        \"status\": \"\",\n        \"groupName\": \"\",\n        \"streamName\": \"\"\n      },\n      \"s3Logs\": {\n        \"status\": \"\",\n        \"location\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}},\n        \"bucketOwnerAccess\": \"{{oneOf (array 'NONE' 'READ_ONLY' 'FULL')}}\"\n      }\n    },\n    \"fileSystemLocations\": [\n      {\n        \"type\": \"\",\n        \"location\": \"\",\n        \"mountPoint\": \"\",\n        \"identifier\": \"\",\n        \"mountOptions\": \"\"\n      }\n    ],\n    \"buildBatchConfig\": {\n      \"serviceRole\": \"\",\n      \"combineArtifacts\": {{faker 'random.boolean'}},\n      \"restrictions\": {\n        \"maximumBuildsAllowed\": {{faker 'random.number'}},\n        \"computeTypesAllowed\": [\n          \"\"\n        ]\n      },\n      \"timeoutInMins\": {{faker 'random.number'}}\n    },\n    \"concurrentBuildLimit\": {{faker 'random.number'}},\n    \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\",\n    \"publicProjectAlias\": \"\",\n    \"resourceAccessRole\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0f52b7e-c405-4196-af6b-13939db9e040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a088e226-1c0d-4dd1-975d-e0188b9f43ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f34b04a-1f5a-45e6-9461-2cc5bc5340f1",
      "documentation": "<p>Changes the public visibility for a project. The project's build results, logs, and artifacts are available to the general public. For more information, see <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/public-builds.html\">Public build projects</a> in the <i>CodeBuild User Guide</i>.</p> <important> <p>The following should be kept in mind when making your projects public:</p> <ul> <li> <p>All of a project's build results, logs, and artifacts, including builds that were run when the project was private, are available to the general public.</p> </li> <li> <p>All build logs and artifacts are available to the public. Environment variables, source code, and other sensitive information may have been output to the build logs and artifacts. You must be careful about what information is output to the build logs. Some best practice are:</p> <ul> <li> <p>Do not store sensitive values, especially Amazon Web Services access key IDs and secret access keys, in environment variables. We recommend that you use an Amazon EC2 Systems Manager Parameter Store or Secrets Manager to store sensitive values.</p> </li> <li> <p>Follow <a href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/webhooks.html#webhook-best-practices\">Best practices for using webhooks</a> in the <i>CodeBuild User Guide</i> to limit which entities can trigger a build, and do not store the buildspec in the project itself, to ensure that your webhooks are as secure as possible.</p> </li> </ul> </li> <li> <p>A malicious user can use public builds to distribute malicious artifacts. We recommend that you review all pull requests to verify that the pull request is a legitimate change. We also recommend that you validate any artifacts with their checksums to make sure that the correct artifacts are being downloaded.</p> </li> </ul> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateProjectVisibility",
      "responses": [
        {
          "uuid": "64d6cda7-2b17-446c-b156-fe9431cd6903",
          "body": "{\n  \"projectArn\": \"\",\n  \"publicProjectAlias\": \"\",\n  \"projectVisibility\": \"{{oneOf (array 'PUBLIC_READ' 'PRIVATE')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1163466-a9c2-4633-9ea9-c3de7bdaf32c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "251ee3f3-865e-4f1b-a652-9874b223374d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1ecc43a-1966-4c59-bcb9-21a81112c284",
      "documentation": " Updates a report group. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateReportGroup",
      "responses": [
        {
          "uuid": "8649c6fb-9af2-47c9-8670-6fe8d8041b0a",
          "body": "{\n  \"reportGroup\": {\n    \"arn\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"exportConfig\": {\n      \"exportConfigType\": \"\",\n      \"s3Destination\": {\n        \"bucket\": \"\",\n        \"bucketOwner\": \"\",\n        \"path\": \"\",\n        \"packaging\": \"\",\n        \"encryptionKey\": \"\",\n        \"encryptionDisabled\": {{faker 'random.boolean'}}\n      }\n    },\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"lastModified\": \"{{faker 'date.recent' 365}}\",\n    \"tags\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "063d873f-1d36-4994-bfc8-b0fdddd02c16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82b484aa-136a-4ec5-9ac2-60957b48d935",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09bb5552-324b-4d30-9b16-1aef328789fb",
      "documentation": "<p> Updates the webhook associated with an CodeBuild build project. </p> <note> <p> If you use Bitbucket for your repository, <code>rotateSecret</code> is ignored. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=CodeBuild_20161006.UpdateWebhook",
      "responses": [
        {
          "uuid": "62b855ce-b05c-416e-8b5a-febcf3a000be",
          "body": "{\n  \"webhook\": {\n    \"url\": \"\",\n    \"payloadUrl\": \"\",\n    \"secret\": \"\",\n    \"branchFilter\": \"\",\n    \"filterGroups\": [\n      [\n        {\n          \"type\": \"\",\n          \"pattern\": \"\",\n          \"excludeMatchedPattern\": {{faker 'random.boolean'}}\n        }\n      ]\n    ],\n    \"buildType\": \"\",\n    \"lastModifiedSecret\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e8fee17-a615-4961-be8c-fb85d7e3d947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01c7d7a8-796f-4c12-b9d1-2b78a8dba324",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "646e3241-c17c-4c15-b18a-23744c5443ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OAuthProviderException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}