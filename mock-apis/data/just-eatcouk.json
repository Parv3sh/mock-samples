{
  "uuid": "5e233160-eaa5-486c-a00e-c8c8abeb919e",
  "lastMigration": 19,
  "name": "Just Eat UK",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d064f142-4739-4141-aeba-3505d20d9bcf",
      "documentation": "Acceptance requested",
      "method": "post",
      "endpoint": "acceptance-requested",
      "responses": [
        {
          "uuid": "124932d3-4437-4f7b-a0a0-fcd086980c2d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e29d4412-cadd-472e-a106-4b8111574005",
      "documentation": "Attempted delivery query resolved",
      "method": "put",
      "endpoint": "attempted-delivery-query-resolved",
      "responses": [
        {
          "uuid": "41ffffe4-ad70-4bf5-969d-bb30dd7f8080",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d04be599-fefa-485f-a893-86f6ea71b66e",
      "documentation": "Get Checkout",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "97c41c26-e1af-4b3c-b529-ac7f072235cd",
          "body": "{\n  \"customer\": {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"phoneNumber\": \"\"\n  },\n  \"fulfilment\": {\n    \"location\": {\n      \"address\": {\n        \"administrativeArea\": \"\",\n        \"lines\": [\n          \"\"\n        ],\n        \"locality\": \"\",\n        \"postalCode\": \"\"\n      },\n      \"geolocation\": {\n        \"latitude\": {{faker 'random.number'}},\n        \"longitude\": {{faker 'random.number'}}\n      }\n    },\n    \"time\": {\n      \"asap\": {{faker 'random.boolean'}},\n      \"scheduled\": {\n        \"from\": \"\",\n        \"to\": \"\"\n      }\n    }\n  },\n  \"isFulfillable\": {{faker 'random.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ],\n  \"restaurant\": {\n    \"availabilityId\": \"\",\n    \"id\": \"\"\n  },\n  \"serviceType\": \"{{oneOf (array 'delivery' 'collection')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3da5904-24f9-4cc8-8ee0-fe3df6312901",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42b9114d-bef8-41b8-8e71-b14330645621",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad4dfbf-1615-4b58-99b9-0b5dd2edee49",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7e6e69d-15c1-4563-a1fa-0a426ea3e9fa",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "664fdc99-8b7f-4c94-ab31-c25aac3bc9e6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2074ec1-ed1b-465f-ba33-e1394ac4c5a7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eae50892-2d9f-4050-8e2d-57d24f6f5eb8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d212ff1b-1d83-4288-ac44-ec588a2378c7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69144a0e-5e42-4fa2-92c5-7d655f3e3295",
      "documentation": "Update Checkout",
      "method": "patch",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "2d016dbe-87fc-47de-a58e-46116a16281a",
          "body": "{\n  \"isFulfillable\": {{faker 'random.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e2b5bce-8846-48ef-a27c-e4db2f72585e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID' 'INVALID_REQUEST' 'FIRST_NAME_INVALID' 'LAST_NAME_INVALID' 'PHONE_NUMBER_INVALID' 'DATE_OF_BIRTH_INVALID' 'FULFILMENT_TIME_INVALID' 'ADDRESS_LINES_INVALID' 'LOCALITY_INVALID' 'ADMINISTRATIVE_AREA_INVALID' 'POSTAL_CODE_INVALID' 'GEOLOCATION_INVALID' 'DELIVERY_NOTE_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09f08594-6734-45a1-a946-d18e4fddff97",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9a42b29-c885-4809-83b3-e610d3551f92",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49ea6a92-cd56-4893-a59f-66d50fa5d5ff",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6821c6dd-5ee8-49ae-b6ef-8218ee994cdc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc61212d-1a58-4eeb-b91e-575fa986ec0c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "646e6c7a-bd84-4733-9450-f999e37bace2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727937a2-edef-40b7-a305-b741f8c04ea8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ba64554-916b-41ee-ae9a-07409c7cb61c",
      "documentation": "Get Available Fulfilment Times",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId/fulfilment/availabletimes",
      "responses": [
        {
          "uuid": "4bc1c336-0dc3-4a1c-bf24-c8eea2ad3d6b",
          "body": "{\n  \"asapAvailable\": {{faker 'random.boolean'}},\n  \"times\": [\n    {\n      \"from\": \"{{faker 'date.recent' 365}}\",\n      \"to\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e7300f7-d1f9-422d-8144-d7b07d76d4d0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86261559-8948-400c-bb6d-5e135fb5a124",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "457b9677-3db2-4de2-9c6f-b31714450cb6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'FULFILMENT_TIME_BANDS_INVALID' 'FULFILMENT_TIME_BANDS_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0fb772d-a64b-4394-aff8-41674b6b1461",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bfabe94-be0c-49a0-b222-31795f6efb64",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7042ec44-a33f-4919-9c6b-abb88b98520b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a71608fd-d44c-440b-91e9-dc3562afa205",
      "documentation": "Get consumers details",
      "method": "get",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "2389c4c0-b1bb-4306-a7d6-150a81341169",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "726cf8b1-1ba6-4a34-aff6-445617f19e84",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03a9b130-0be5-48fa-a2d1-6a45d5b397e0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b388eb-5feb-4fb1-be90-fc18d918639a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "256ef066-3bd9-412f-8d5c-6be193107532",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 501,
          "label": "The operation has not been implemented",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7cbb098-fb2e-4023-97e3-d615e38f3850",
      "documentation": "Create consumer",
      "method": "post",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "7dd32ca1-ef39-4ca0-96fe-a360429efae7",
          "body": "{\n  \"token\": \"SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=\",\n  \"type\": \"otac\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Consumer created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a762bc17-1020-47f7-9437-ccdeeb4d7b3c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30ad5e02-2519-4d1d-9adf-4381899c6019",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2470a19f-9b88-45f5-9e7b-ba4485ce9a0a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "800be976-ce7c-4948-b5f8-1ba50b1b2501",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The specified email already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "356f9ad2-717d-44e1-bba6-2b68f105e465",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e6ec51f-7cb3-4ff2-bb40-d909e99019b6",
      "documentation": "Get communication preferences",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences",
      "responses": [
        {
          "uuid": "46c93554-7b9f-45e6-bfc2-dd0210e50c84",
          "body": "{\n  \"marketing\": {\n    \"isDefault\": {{faker 'random.boolean'}},\n    \"subscribedChannels\": [\n      \"{{oneOf (array 'email' 'sms' 'push')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f413200-bbeb-4697-9bdc-cfb0ebc3ac4e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3f1d5db-cac1-443c-b5cb-ad667dd62ff4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a829196c-6c17-413d-bc7e-95811f80744a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0f2f14e-f061-4c95-bb05-592e671802c4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fdfec441-35d9-4db6-b018-985efe3adc28",
      "documentation": "Get channel subscriptions for a given consumer's communication preference type",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "09aeca36-4ab2-4d1b-a5ed-5f3de052dbbc",
          "body": "{\n  \"isDefault\": {{faker 'random.boolean'}},\n  \"subscribedChannels\": [\n    \"{{oneOf (array 'email' 'sms' 'push')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dde234e3-20c7-4bf7-9050-2a8da9269f54",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca1a09ee-f449-45f6-b1cd-a515f5d59bc8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c797d6b-846a-416b-9629-730b504aab0d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a30e17a5-6729-4c9c-a814-b9e22b8a0ab1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75992232-3afc-4bb5-b16d-e49ccff7fce8",
      "documentation": "Set only the channel subscriptions for a given consumer's communication preference type",
      "method": "put",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "11a427e8-306e-46a6-91bb-cc89ea5f0793",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "459f2fd7-5007-4dd6-9753-6915671c81ad",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7384c5b9-efe3-4604-89c1-a14a67bf3300",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3651097-bbf0-49b5-8ca5-eadfaa3e7605",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6ec56f01-2783-4a07-a916-b48e28ea00ac",
      "documentation": "Remove subscription of a specific communication preference channel",
      "method": "delete",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "7c887253-630b-4e9a-b7a1-e54cd9df1be0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bed67da-b76f-4efa-a0f4-8735bf85e7e7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b945b098-918d-4e0c-9c6b-dc3b54faf1a1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac7f56db-d290-4852-99b8-36b8b3945238",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38436efd-d82e-4a76-897d-ad4c07509107",
      "documentation": "Subscribe to a specific communication preference channel",
      "method": "post",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "1dbdc036-7c39-48f8-bce9-3d7f450c7fd7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be1b4823-fac4-4712-9767-04f984e04a64",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83d1afd2-5d18-4b67-8eb6-039d541f0d29",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c3a01d-1153-4c29-8b9e-d1d489aa886a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b881b14-cc03-4214-b82f-24a5a68782f8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e664de5-76fd-43be-8a4e-93ea0782a186",
      "documentation": "Delivery Attempt Failed",
      "method": "put",
      "endpoint": "delivery-failed",
      "responses": [
        {
          "uuid": "25593fc6-b8c1-49ff-aa57-efff00d57c66",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34e33b89-d0b8-4a7f-ba16-135bc82f089e",
      "documentation": "Get restaurant delivery fees",
      "method": "get",
      "endpoint": "delivery-fees/:tenant",
      "responses": [
        {
          "uuid": "7c9702e2-fd8b-4d9f-9cec-d54fe3355580",
          "body": "{\n  \"restaurants\": [\n    {\n      \"bands\": [\n        {\n          \"fee\": 250,\n          \"minimumAmount\": 1000\n        },\n        {\n          \"fee\": 0,\n          \"minimumAmount\": 2000\n        }\n      ],\n      \"minimumOrderValue\": 1000,\n      \"restaurantId\": \"5678\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08ef89c5-dd37-4ea0-94e2-f2bc8de3aba1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c49917da-1e54-47b2-8f81-0fe4e6214c08",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4811d11-7317-4f1f-8880-2a2788394186",
      "documentation": "Get delivery estimate",
      "method": "get",
      "endpoint": "delivery/estimate",
      "responses": [
        {
          "uuid": "db1274cf-ce03-48c8-9d6f-9e8278d96a1a",
          "body": "{\n  \"DurationInMinutes\": \"\",\n  \"RestaurantReference\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68ed34c9-c251-468e-8191-89779352f288",
      "documentation": "Get your delivery pools",
      "method": "get",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "2be2d419-0c97-44d8-901f-d18bef2fe314",
          "body": "{\n  \"delivery-pool-id\": {\n    \"name\": \"\",\n    \"restaurants\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63178503-d8fb-4215-9384-60241eeb9df8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24b8583d-b4e0-40a4-bd6e-e5123d7c3450",
      "documentation": "Create a new delivery pool",
      "method": "post",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "31a91655-22c5-45c7-a24f-93c25979051f",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Pool has been created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2736b345-122a-4696-93f6-ad1361174631",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73ba64b9-5134-4698-96c6-922dc89ede82",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d76f70f-f5df-43bf-9691-911f6a9d10e5",
      "documentation": "Delete a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "6b2fde09-19f0-4aa4-b4d4-bdcccfef33df",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ad9b228-ef93-4e06-95c0-9ee5f119fdd2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4976aabe-0572-4824-96d0-3ce3715ff34b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "493f5dc9-41cb-476b-b2dc-022547b55dc9",
      "documentation": "Get an individual delivery pool",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "f8a86314-2953-4a1d-9625-fd127c8a19db",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e46bfd0-930f-4096-94e7-4d0455119fdf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08340dc3-ca96-4388-815b-2c20cd60326f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "292c13b7-939e-497d-b405-bc6a69ea3f53",
      "documentation": "Modify a delivery pool",
      "method": "patch",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "aa97ed22-6c22-40bc-8333-5a2c6004d851",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "531dfe9b-912c-4353-950a-e2b76cfb8e24",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d63b0e56-bd3f-4920-9460-7b99fa232c37",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68ea8883-9ec5-4931-96c8-078b65cb9f66",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e21a20d9-6db1-42fe-a040-9cd2009ab3ac",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c44129be-ea43-45f3-b1d4-841d01d70f8c",
      "documentation": "Replace an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "a36a2495-3bc7-4718-81c9-17f937984a40",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been replaced",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06b0ae0c-4d4f-44d9-9501-f3d8ab20a0d0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "130ffa74-c7b8-4df8-96db-6c67059c9864",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "130e14d2-784d-4ee8-8af4-76527029fcd2",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb563d62-2c8e-47bb-8ddd-1bdb9904e206",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e3884e9-2e49-4061-960b-c5ead7daf185",
      "documentation": "Get availability for pickup",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "cef06343-b323-49a2-ac8b-ffdc69820f64",
          "body": "{\n  \"bestGuess\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70753571-52fd-4878-af56-fd3e55906f70",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d82afe7-b213-4ecd-8785-73cb39682ac6",
      "documentation": "Set availability for pickup",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "f685be62-9252-4335-b6cb-b6b249767970",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4d6790b-4373-4b82-bfb1-b540654f6fcc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8e6a03e-e948-4d0e-8f63-357cb04f6570",
      "documentation": "Set the delivery pools daily start and end times",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/hours",
      "responses": [
        {
          "uuid": "1e08c41e-fc43-49f3-b43c-90b5971da59f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool hours have been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d519cab-4f8d-4432-9e16-f06493a2d387",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08b86372-accd-4a14-86c9-83966db63321",
      "documentation": "Remove restaurants from a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "eec7be11-94ea-44dc-87b7-522e9ff4c05a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29e03de2-d1e5-46fd-9264-7cacbe2284aa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "238eacac-1c55-4d20-9010-35a38a169566",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "473ad444-6830-4cfc-a4d9-eba8a378b341",
      "documentation": "Add restaurants to an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "c783cc85-218b-4d09-a657-5daa6d16ff16",
          "body": "{\n  \"restaurants\": [\n    10202,\n    10203\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e8bcbf9-bff1-405c-bcb7-ae02c9decc3a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e70a09a-d18a-4258-a156-d8e4f691cf1b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7cc05ea-862d-47ac-ae95-e72f5e5f6d0e",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The restaurants could not be added to the pool. Typically this is because they are already assigned to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c2227b5-ea24-4b09-a48f-4187f23cbdeb",
      "documentation": "Driver Assigned to Delivery",
      "method": "put",
      "endpoint": "driver-assigned-to-delivery",
      "responses": [
        {
          "uuid": "64acd0c8-bf5d-4f8d-8fd1-ee2f8b4ac933",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd10ef36-9bfb-4bf5-99cd-5c4c4d6cab1e",
      "documentation": "Driver at delivery address",
      "method": "put",
      "endpoint": "driver-at-delivery-address",
      "responses": [
        {
          "uuid": "f1251ea2-b56b-49c4-b9b2-a94afb1735ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "398e6c99-3a52-4037-bb4b-0f238b7bb9b2",
      "documentation": "Driver at restaurant",
      "method": "put",
      "endpoint": "driver-at-restaurant",
      "responses": [
        {
          "uuid": "bfd2da2d-31bc-4d99-a2d7-3a36550c3e29",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48e59e05-88c3-4da9-acfc-24ac8f985606",
      "documentation": "Driver has delivered order",
      "method": "put",
      "endpoint": "driver-has-delivered-order",
      "responses": [
        {
          "uuid": "39a30a25-24ea-4811-a5a9-7e83b6c449f7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "747937d5-b727-4cc6-9369-c8539749303c",
      "documentation": "Driver Location",
      "method": "put",
      "endpoint": "driver-location",
      "responses": [
        {
          "uuid": "972ff995-850b-403d-8676-bfda78fa43d1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e669901-7ba4-4bdf-af82-de4d913324c8",
      "documentation": "Driver on their way to delivery address",
      "method": "put",
      "endpoint": "driver-on-their-way-to-delivery-address",
      "responses": [
        {
          "uuid": "f83a5fad-74ad-4485-8701-389d9f2df67f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45064ea6-f51c-47a4-8a97-0b3fd34d14af",
      "documentation": "late order compensation query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-compensation-query",
      "responses": [
        {
          "uuid": "3e52db2f-9269-4ed0-bb33-1b6d51694e19",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7980df6-6e0e-4763-9aa0-e89e9a60d7c5",
      "documentation": "late order query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-query",
      "responses": [
        {
          "uuid": "59e33e39-4744-4c2e-86ee-a5763943c939",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9306204-2fd4-4040-ae96-9616a6d0ae69",
      "documentation": "Menu ingestion complete",
      "method": "post",
      "endpoint": "menu-ingestion-complete",
      "responses": [
        {
          "uuid": "9b055967-30ee-4cf1-bdfb-a93fb0e2357a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb6a4565-9e89-442e-92a7-923b95d06976",
      "documentation": "Order accepted",
      "method": "post",
      "endpoint": "order-accepted",
      "responses": [
        {
          "uuid": "e2d487a1-ea73-4207-9cd6-76c587ef682e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "917e7e89-3100-4624-b5a2-fe3f8597da2e",
      "documentation": "Order cancelled",
      "method": "post",
      "endpoint": "order-cancelled",
      "responses": [
        {
          "uuid": "8154ca88-c135-446a-9193-7b62ad6f137e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77ae29db-7cb1-404d-b364-b6f329ac2698",
      "documentation": "Order Eligible For Restaurant Compensation",
      "method": "post",
      "endpoint": "order-eligible-for-restaurant-compensation",
      "responses": [
        {
          "uuid": "d4e9b7fa-b83c-4982-ad36-adc2b3c084ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cac1fb29-9041-4d96-841c-19d3b2afc4cc",
      "documentation": "Order ready for pickup",
      "method": "put",
      "endpoint": "order-is-ready-for-pickup",
      "responses": [
        {
          "uuid": "262b21fb-3ddb-4d00-98bf-3aca3f0f878d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Upon successful receipt of the event, delivery partners should return a 200 HTTP status code indicating acknowledgement of transmission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1c3dffe-2fee-4ddc-9568-96a619d7b818",
          "body": "{\n  \"Details\": \"\",\n  \"Message\": \"\",\n  \"OrderId\": \"\",\n  \"Timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the unlikely case of unknown errors, JUST EAT will log a raw response. If possible, the response should have the following format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2613c4b5-eb54-4ca2-a6e6-9f2fa8aab9bc",
      "documentation": "Order ready for preparation (async)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-async",
      "responses": [
        {
          "uuid": "c0f4099e-9524-4edc-bd53-62456a1c3996",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Upon successful receipt of this event, a `202` status code should be returned, indicating the request has been accepted. You should then later respond with the result of processing this request, via the [callback URL](#section/Async-Webhooks) endpoint.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aad6d7e3-b710-40db-b2d9-0a26ed14bcf5",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Should the initial validation of the order fail, return a `400` status code. NOTE: In this instance we do not also expect a failure callback via the async callback URL.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be4a7379-e587-4c9c-b94d-ad5dac472aad",
      "documentation": "Order ready for preparation (sync)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-sync",
      "responses": [
        {
          "uuid": "5ab7819d-6d73-47ac-a7eb-6e4c46b6a0ce",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60d7a0fe-e7d3-48e7-9da9-20b33432118d",
      "documentation": "Order rejected",
      "method": "post",
      "endpoint": "order-rejected",
      "responses": [
        {
          "uuid": "0435ac2e-aa46-496b-ad57-065026db0cc1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d15f051-6308-4ea8-b4b8-8db2d2bac089",
      "documentation": "Order requires delivery acceptance",
      "method": "put",
      "endpoint": "order-requires-delivery-acceptance",
      "responses": [
        {
          "uuid": "481048aa-3ea8-4309-8cd7-a65bf1652e08",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "In the event of successful handling of the request, a 201 status code should be returned, indicating acknowledgement of transmission success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63484bdc-fe5b-438b-9ec2-04bd35455b8e",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": \"{{oneOf (array 'outside_hours' 'too_busy' 'too_far' 'not_supported' 'bad_address' 'bad_request' 'restaurant_not_configured' 'duplicate' 'other')}}\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the case that the order cannot be accepted, an appropriate HTTP status code, such as 400 (Bad request) or 500 (Internal server error) should be returned.  In addition to the HTTP status code, a specific reason code and explanatory message should be provided within the response body",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e97a3f13-d770-4324-b892-5d74e3a90ee0",
      "documentation": "Order time updated",
      "method": "post",
      "endpoint": "order-time-updated",
      "responses": [
        {
          "uuid": "11c8bc4b-fe1a-4fe9-a1ce-ea7ab6f17adc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b943168-605a-485f-9ca3-001483ec3261",
      "documentation": "Create order",
      "method": "post",
      "endpoint": "orders",
      "responses": [
        {
          "uuid": "f4bdc954-4404-4176-8db6-e4e7f6f808c2",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daaba147-091e-4608-a852-27d6f73f1c3d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - Request is for deprecated API version or has failed validation in some way - see response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e2d2202-4695-474f-b129-db8ebbe66c6f",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - you've already told us about an order with this `OrderReference`",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43db5051-fe91-4d37-bce6-dccf3788a4ca",
      "documentation": "Update current driver locations (bulk upload)",
      "method": "put",
      "endpoint": "orders/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "13a55611-5fd8-4857-aad3-e618ff9971ed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80ae61dd-ddce-4d9a-bccc-65c721f855e8",
      "documentation": "Accept order",
      "method": "put",
      "endpoint": "orders/:orderId/accept",
      "responses": [
        {
          "uuid": "7364e608-fe27-4537-83b6-1aa2807aba4e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6118d450-6b40-4f7f-a97f-08b58431f09d",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c5120a5-84f3-4d34-a17d-1cbaeb377172",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9239982-3477-427a-b792-a43e8f824f9b",
      "documentation": "Cancel order",
      "method": "put",
      "endpoint": "orders/:orderId/cancel",
      "responses": [
        {
          "uuid": "06918d95-03fb-412f-ad64-a5ab3631a578",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d65d799-5320-402f-80bb-02867dfa7133",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af304ecc-240c-4051-aa63-bef0963094cc",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has already been cancelled",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26f42e74-404f-495b-8c89-bdc999995368",
      "documentation": "Complete order",
      "method": "post",
      "endpoint": "orders/:orderId/complete",
      "responses": [
        {
          "uuid": "20eee218-7c34-4387-9462-94fa37a2611f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "660b8e32-6859-488b-9666-e1cd970568e8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71fde74b-5d47-41d5-89f2-0cefbcb4be5e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order has already been marked as cancelled or complete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9f671ce-51ca-4fd4-9bfc-911612fc0e91",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48007670-4345-4960-a5ef-176e3ffa2275",
      "documentation": "Update order with driver at delivery address details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atdeliveryaddress",
      "responses": [
        {
          "uuid": "b9f02a20-fc45-4386-90de-bde93a58dc8b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "91de88f2-ce40-4b1a-97c0-e30779d2c055",
      "documentation": "Update order with driver at restaurant details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestaurant",
      "responses": [
        {
          "uuid": "0f803b19-28fe-43e6-84c7-be3fe9af8176",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "481b6f80-8028-4c02-9ec7-ada48e84c70a",
      "documentation": "Update the driver's estimated time to arrive at the Restaurant",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestauranteta",
      "responses": [
        {
          "uuid": "785214ef-d01b-42bd-a80f-dbc68eea79cc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a130d346-769d-40b4-994c-b6243a34e884",
      "documentation": "Update order with delivered details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/delivered",
      "responses": [
        {
          "uuid": "b8697ac4-b9f0-48c3-aeb3-3b18ea7794fb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44619bea-f6fa-4f32-9027-3d0b4b27710d",
      "documentation": "Update order with driver assigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverassigned",
      "responses": [
        {
          "uuid": "7e1d2531-ce41-48ae-ae35-97f671f2d408",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c6d7d9d-59f9-4365-a28e-5fc398d201fc",
      "documentation": "Update the driver's current location",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "8678b8d6-a479-46b3-87c4-0635b7f4ccc7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "78de8603-ab69-4f2d-8a6b-1fb2d9f5065e",
      "documentation": "Update order with driver unassigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverunassigned",
      "responses": [
        {
          "uuid": "d93e197e-6010-400c-bf7e-cec2413d9094",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d11e024b-665d-4fea-a0b2-065109638653",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21d187e6-1c4e-4cc1-8404-670acdd05adf",
      "documentation": "Update order with driver on its way details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/onitsway",
      "responses": [
        {
          "uuid": "1089216d-bdc9-47e2-b46c-e3e9570cfd52",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c6eca1b-a58f-42cb-8baf-dbec42958d84",
      "documentation": "Update order ETA",
      "method": "put",
      "endpoint": "orders/:orderId/duedate",
      "responses": [
        {
          "uuid": "0eca1c70-bd9a-4e20-8bfe-fb8837397242",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b99bb63-5242-4768-bbda-77e6fcd17e17",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The due date is missing, or out of range (either in the past, or > 7 days in the future).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b730b973-4920-42b4-a017-1434bc25cb49",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The order could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "501dccd0-d4e9-455b-8597-c2983dd77e9d",
      "documentation": "Ignore order",
      "method": "put",
      "endpoint": "orders/:orderId/ignore",
      "responses": [
        {
          "uuid": "de740469-189e-46d4-a070-ee460a3120ff",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b21b20-1835-4f95-bfe6-de2dd4d36a09",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9be1080-d283-4af2-ae2e-5f27d7ad4797",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f89c2e7-1be0-43fa-a02a-741835fe2166",
      "documentation": "Mark order as ready for collection",
      "method": "post",
      "endpoint": "orders/:orderId/readyforcollection",
      "responses": [
        {
          "uuid": "6504e42f-ba24-442d-b88d-5a1250781c34",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46e651e2-23cf-401e-ad80-5a168093f1ca",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request - order cannot be marked as ready for collection because it is not a collection order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae395c5c-878a-4ea2-88a1-2224dc0da7d2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "527a899e-9115-477a-aa7d-955ae66ee8af",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order is not in the accepted state",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb43da7a-ab3e-4784-9758-e58e93423c6c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b81ef32-e154-49ed-ab81-b2ebc0b5fccb",
      "documentation": "Reject order",
      "method": "put",
      "endpoint": "orders/:orderId/reject",
      "responses": [
        {
          "uuid": "912386cb-46a5-4e7c-acf2-6b5cc3ad2708",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c5ebc82-c1ee-4ec7-ab60-f6138995b6e4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e238ee50-ff58-4bac-bfb9-b051c6037ccf",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a334e39-1bea-4850-893e-e4fb26c94ce5",
      "documentation": "Response to Late Order Update Request",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateorder/restaurantresponse",
      "responses": [
        {
          "uuid": "51a45c3d-5dc8-426f-8c9d-1389df423526",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "968eb19c-3635-4801-8c40-2211db7001ae",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid i.e. missing a required parameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3be4c482-f801-4dc3-b8cc-7a0df6f52339",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc415106-031e-46d5-85f6-2a23d839e077",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca902824-bd38-4ed1-ba98-8f16a0bc9bdb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9988f81f-55ca-46f1-b11c-ac56e6336f85",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc3d37c8-a395-4b4e-aedb-e5571eb44664",
      "documentation": "Update late order compensation request with Restaurant response",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateordercompensation/restaurantresponse",
      "responses": [
        {
          "uuid": "cc4e8fe0-eb40-4f7b-8d2a-4a06965f2419",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be0d7e33-c5d0-44dd-8372-afc8dc24898e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid - e.g. contains missing or invalid parameters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a61367-279b-42de-9a6a-2db935b8b58f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e448f8-cfd1-4a40-9a8a-4422cd57fe3f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3008d7a-6ca1-4832-9e91-b7ff3fa16512",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1176ea7-2ca1-4546-8a36-692df6f6612d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1fd5b91-e4fc-4598-a6f4-07c001c00ec4",
      "documentation": "Create Compensation requests",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/restaurantqueries/compensation",
      "responses": [
        {
          "uuid": "eac292d8-6932-4785-a359-bf212d38a239",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "853cf1b8-8889-44ec-b947-47d0f641c1c1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40fc1782-88ae-4ec1-8e46-86199820f655",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "071bf99b-f0e2-4d53-995b-5e48fd827c58",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - credentials provided by consumer do not allow access to this resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbb907e7-f53b-4b0b-92a7-69dec5d65f13",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5496d6e-916b-41ee-a6e3-4de910d2275d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - returned if tried to claim compensation for an order that is not eligible",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e404dade-3c14-4038-918f-5718870eac9d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "975d7fab-552a-46e3-9d2e-ed7dd7635e52",
      "documentation": "Customer Requested Redelivery",
      "method": "put",
      "endpoint": "redelivery-requested",
      "responses": [
        {
          "uuid": "299f1471-a236-41a2-b6a6-314af0637ac0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dde764c1-b50b-474b-80aa-a6a2c57021a3",
      "documentation": "Restaurant Offline Status",
      "method": "put",
      "endpoint": "restaurant-offline-status",
      "responses": [
        {
          "uuid": "bc2e0c4c-6ae0-42d0-9cae-c488f0854730",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d89c4695-9422-4b16-be53-8d021e68f072",
      "documentation": "Restaurant Online Status",
      "method": "put",
      "endpoint": "restaurant-online-status",
      "responses": [
        {
          "uuid": "07f2f6a9-0fae-4ecd-9695-ec9e23b820e9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bf3ff49-b827-486b-a750-f6f0ca9df694",
      "documentation": "Get restaurants by location",
      "method": "get",
      "endpoint": "restaurants/bylatlong",
      "responses": [
        {
          "uuid": "b3007db8-8870-4abb-908d-84cc7257f1c8",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'random.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'random.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'random.number'}},\n    \"Longitude\": {{faker 'random.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'random.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'random.number'}},\n        \"Longitude\": {{faker 'random.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'random.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"IsTopCuisine\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'random.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'random.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'random.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'random.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'random.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'random.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'random.number'}},\n        \"RangeLower\": {{faker 'random.number'}},\n        \"RangeUpper\": {{faker 'random.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'random.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'random.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'random.number'}},\n      \"DriveInfoCalculated\": {{faker 'random.boolean'}},\n      \"HygieneRating\": {{faker 'random.number'}},\n      \"Id\": {{faker 'random.number'}},\n      \"IsBrand\": {{faker 'random.boolean'}},\n      \"IsCloseBy\": {{faker 'random.boolean'}},\n      \"IsCollection\": {{faker 'random.boolean'}},\n      \"IsDelivery\": {{faker 'random.boolean'}},\n      \"IsFreeDelivery\": {{faker 'random.boolean'}},\n      \"IsHalal\": {{faker 'random.boolean'}},\n      \"IsNew\": {{faker 'random.boolean'}},\n      \"IsOpenNow\": {{faker 'random.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'random.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'random.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'random.boolean'}},\n      \"IsPremier\": {{faker 'random.boolean'}},\n      \"IsSponsored\": {{faker 'random.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'random.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'random.boolean'}},\n      \"IsTestRestaurant\": {{faker 'random.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'random.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'random.number'}},\n      \"MinimumDeliveryValue\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'random.number'}},\n      \"OfferPercent\": {{faker 'random.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'random.number'}},\n        \"Count\": {{faker 'random.number'}},\n        \"StarRating\": {{faker 'random.number'}}\n      },\n      \"RatingAverage\": {{faker 'random.number'}},\n      \"RatingStars\": {{faker 'random.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'random.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'random.number'}},\n      \"SecondDateRanking\": {{faker 'random.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'random.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'random.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'random.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'random.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'random.number'}},\n    \"rankedIds\": [\n      {{faker 'random.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca792ec0-99fa-4566-b799-7997695c49b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00e97497-0fe4-4c2f-a8d0-d56c354d3e31",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb898fb8-4578-445d-8412-2fc74a8cfc6d",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3193f50a-3fac-452c-a8c3-8b69d95929ab",
      "documentation": "Get restaurants by postcode",
      "method": "get",
      "endpoint": "restaurants/bypostcode/:postcode",
      "responses": [
        {
          "uuid": "0d10492f-a0a6-4f92-970f-331e79079b81",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'random.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'random.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'random.number'}},\n    \"Longitude\": {{faker 'random.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'random.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'random.number'}},\n        \"Longitude\": {{faker 'random.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'random.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"IsTopCuisine\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'random.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'random.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'random.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'random.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'random.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'random.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'random.number'}},\n        \"RangeLower\": {{faker 'random.number'}},\n        \"RangeUpper\": {{faker 'random.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'random.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'random.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'random.number'}},\n      \"DriveInfoCalculated\": {{faker 'random.boolean'}},\n      \"HygieneRating\": {{faker 'random.number'}},\n      \"Id\": {{faker 'random.number'}},\n      \"IsBrand\": {{faker 'random.boolean'}},\n      \"IsCloseBy\": {{faker 'random.boolean'}},\n      \"IsCollection\": {{faker 'random.boolean'}},\n      \"IsDelivery\": {{faker 'random.boolean'}},\n      \"IsFreeDelivery\": {{faker 'random.boolean'}},\n      \"IsHalal\": {{faker 'random.boolean'}},\n      \"IsNew\": {{faker 'random.boolean'}},\n      \"IsOpenNow\": {{faker 'random.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'random.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'random.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'random.boolean'}},\n      \"IsPremier\": {{faker 'random.boolean'}},\n      \"IsSponsored\": {{faker 'random.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'random.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'random.boolean'}},\n      \"IsTestRestaurant\": {{faker 'random.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'random.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'random.number'}},\n      \"MinimumDeliveryValue\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'random.number'}},\n      \"OfferPercent\": {{faker 'random.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'random.number'}},\n        \"Count\": {{faker 'random.number'}},\n        \"StarRating\": {{faker 'random.number'}}\n      },\n      \"RatingAverage\": {{faker 'random.number'}},\n      \"RatingStars\": {{faker 'random.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'random.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'random.number'}},\n      \"SecondDateRanking\": {{faker 'random.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'random.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'random.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'random.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'random.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'random.number'}},\n    \"rankedIds\": [\n      {{faker 'random.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d51a759-fcab-476a-8c94-9edcf5300420",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93a4835-7348-4598-91d1-b93fd8f72356",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f72108-7b25-4b96-bbeb-c6706c2e305a",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0f7364b-90bd-4835-909a-91278989e4e1",
      "documentation": "Set ETA for pickup",
      "method": "put",
      "endpoint": "restaurants/driver/eta",
      "responses": [
        {
          "uuid": "1632fba3-fe4f-4a15-b36f-1440f36f3b7a",
          "body": "{\n  \"ignoredRestaurantIds\": [\n    \"123\",\n    \"456\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27690c93-dd69-46f2-b48a-b78ba8dff1cf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13d874b6-a6e0-4b3c-bb91-47c5c7db8e97",
      "documentation": "Get product catalogue",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue",
      "responses": [
        {
          "uuid": "6c824076-9276-497d-b75e-d4e9c348e86d",
          "body": "{\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a826c1be-f322-4cd6-978a-0943260de20e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No product catalogue found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73b14428-2cf3-4759-bad8-ec06342c453e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68d65335-20bb-4f39-b082-0f40c02ce9bf",
      "documentation": "Get all availabilities",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/availabilities",
      "responses": [
        {
          "uuid": "0da70064-cb27-42fb-96ee-0b3554f70266",
          "body": "{\n  \"availabilities\": [\n    {\n      \"description\": \"Menu items available for delivery during weekdays for lunch.\",\n      \"id\": \"1-lunch-delivery\",\n      \"name\": \"Delivery Lunch\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"11:30:00\",\n          \"toDateTime\": \"14:30:00\"\n        }\n      ]\n    },\n    {\n      \"description\": \"Menu items available for delivery during weekdays for dinner.\",\n      \"id\": \"1-dinner-delivery\",\n      \"name\": \"Delivery Dinner\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"16:30:00\",\n          \"toDateTime\": \"22:00:00\"\n        }\n      ]\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a06b9527-931c-4219-9857-3a0efa6d3a00",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de8b4d98-5366-4f51-8919-ed6a20b2458b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d32675bb-d1e6-4ec5-9842-43b186970142",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "154531d5-e31d-4cd6-84df-bf71cb3299bf",
      "documentation": "Get all categories",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories",
      "responses": [
        {
          "uuid": "6973017c-bbda-4dd6-82a4-89375d340261",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"Sumptuous starters\",\n      \"id\": \"3\",\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"Magnificent mains\",\n      \"id\": \"4\",\n      \"name\": \"Mains\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57755d70-cd96-40e4-8f97-0c212e314616",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c4a168c-653f-493d-9ebe-76a628d6e7f8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edd38356-72a5-4c32-b0d5-8975b8142867",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "719fd091-b7d2-4434-8643-3b49ac246355",
      "documentation": "Get all category item IDs",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories/:categoryId/items",
      "responses": [
        {
          "uuid": "7342f162-bffc-43e9-ada8-8a9e75bac8f9",
          "body": "{\n  \"itemIds\": [\n    \"65143901\",\n    \"65143902\",\n    \"65143903\",\n    \"65143904\",\n    \"65143905\"\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cb7a592-718b-4798-aa06-9e9ebffb263a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c359942c-733f-408d-ba3b-b69925bad47e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7024032-ad49-4681-baaf-b65a4f840b95",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ca56f9b-608d-4c59-af1d-7d43e8c47aba",
      "documentation": "Get all menu items",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items",
      "responses": [
        {
          "uuid": "aeafec6a-75f6-4e5b-acec-fe88278fea17",
          "body": "{\n  \"items\": [\n    {\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec947769-6ec7-4f09-9c9c-fcf13bf218de",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bc962ee-4d4b-4c03-8914-b0400f432ded",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No menu items found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0c02f25-426c-47e6-a67c-281babcbcd2f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c81eb7de-55ea-4f8d-98a8-10db9ab64cb4",
      "documentation": "Get all menu item deal groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups",
      "responses": [
        {
          "uuid": "024d9628-e90a-4fec-99ae-4743c364dfdc",
          "body": "{\n  \"dealGroups\": [\n    {\n      \"id\": \"23435309-1\",\n      \"name\": \"Choose your base\",\n      \"numberOfChoices\": 1\n    },\n    {\n      \"id\": \"23435309-2\",\n      \"name\": \"Choose your halves\",\n      \"numberOfChoices\": 2\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17a9c778-10bf-4cbb-bc10-3289fc710cfa",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8d8a3a4-16e0-4be5-bb3b-9dc35a2f4096",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "818f620b-f5e6-427a-ab53-927117e0f5b8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2ee05b34-f271-4212-8112-ee6790295a0d",
      "documentation": "Get all deal item variations for a deal group",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups/:dealGroupId/dealitemvariations",
      "responses": [
        {
          "uuid": "792b289a-f600-45f9-8b4a-02ea39f3651c",
          "body": "{\n  \"dealItemVariations\": [\n    {\n      \"additionPrice\": 50,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 1,\n      \"minChoices\": 0\n    },\n    {\n      \"additionPrice\": 100,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 2,\n      \"minChoices\": 1\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bf7e917-3ca7-4c66-90a0-afa7bbb2e964",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f99ae251-a1e5-4214-b1df-3f7c45fdeec0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal item variations found for given `tenant`, `restaurantId`, `itemId` and `dealGroupId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73fba7f9-2d88-435b-bda8-75e9e884b614",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a514550c-dba8-4277-a8dc-3517de7c10b5",
      "documentation": "Get all menu item modifier groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/modifiergroups",
      "responses": [
        {
          "uuid": "c47d4aec-43b5-4dec-89cc-9c4cc2f93feb",
          "body": "{\n  \"modifierGroups\": [\n    {\n      \"id\": \"8547130-req-1\",\n      \"maxChoices\": 1,\n      \"minChoices\": 1,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 0,\n          \"id\": \"854500\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Classic Crust\"\n        },\n        {\n          \"additionPrice\": 200,\n          \"id\": \"854600\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Stuffed Crust\"\n        }\n      ],\n      \"name\": \"Choose your crust\"\n    },\n    {\n      \"id\": \"8547130-opt-1\",\n      \"maxChoices\": 10,\n      \"minChoices\": 0,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1000\",\n          \"maxChoices\": 2,\n          \"minChoices\": 0,\n          \"name\": \"Mozzarella Cheese\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1001\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Ham\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1002\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Red Onion\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1003\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Pepperoni\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1004\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Olives\"\n        }\n      ],\n      \"name\": \"Any extra toppings?\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1866f9a5-3515-461e-8159-165a15138320",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b370a645-5403-4f70-81c7-f2ba2c3729d1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No modifier groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "204ab9dc-e87d-464b-a1dd-9a34da09cc81",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c858230-f0db-4bdc-b5f3-354135d55340",
      "documentation": "Get all menu item variations",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/variations",
      "responses": [
        {
          "uuid": "410b84f4-31ac-4e1d-bcf9-f150d89868de",
          "body": "{\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  },\n  \"variations\": [\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 500,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8547121\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"Half\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 1000,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": false,\n      \"id\": \"8547130\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"12 inch\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery-weekday\",\n        \"2-lunch-collection-weekday\",\n        \"3-dinner-delivery-weekday\",\n        \"4-dinner-collection-weekday\"\n      ],\n      \"basePrice\": 1200,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8543123\",\n      \"kitchenNumber\": \"200\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"14 inch\",\n      \"type\": \"variation\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc649a95-8fb9-455d-9891-fca43f8b7751",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb2f7a37-b725-43a5-96cd-07d4f0776fae",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No variations found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb9c4fca-cc99-4ecb-9b5e-ce37cb1959c1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0430a840-7242-40fc-b6b0-937feb21f7c9",
      "documentation": "Get claims",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims",
      "responses": [
        {
          "uuid": "dedb98f6-8ba0-4498-9990-3c6cf4e9aa78",
          "body": "{\n  \"claims\": [\n    {\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"954226580\",\n      \"id\": \"z2749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"LateOrder\",\n      \"orderId\": \"z27tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 4000\n      },\n      \"restaurantResponse\": {\n        \"decision\": \"Accepted\",\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 4000\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Pizza\",\n          \"quantity\": 1,\n          \"reference\": \"productid%t5y6574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"451226580\",\n      \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Damaged\",\n      \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n      \"resolution\": null,\n      \"restaurantResponse\": null,\n      \"state\": \"Open\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 3800\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"151226580\",\n      \"id\": \"1f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"a23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Rejected\",\n        \"resolvedChannel\": \"PartnerCentre\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 0\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": {\n          \"comments\": null,\n          \"reason\": \"OrderWasHot\"\n        }\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226580\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": \"Meat was terribly cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\",\n          \"name\": \"Meat\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574593\",\n          \"totalClaimed\": 2900,\n          \"unitPrice\": 3000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226588\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e038\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorz\",\n      \"resolution\": {\n        \"decision\": \"PartiallyAccepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          },\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1d6a2ed-abf8-449b-ad2c-c64efba3751b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. has incorrect date limiter format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69b3f067-9e58-4da4-b67a-718cb1056a61",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9435fb0e-1458-4b44-9fec-faf650d8ed6c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "893c8dc8-4d5a-48ed-b663-b0b493e3bd7f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f29f5846-6b59-4b1b-9994-a86b9296df7d",
      "documentation": "Get order claim",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id",
      "responses": [
        {
          "uuid": "cd7c8faf-a3d1-4591-99b9-193bdba12586",
          "body": "{\n  \"affectedItems\": [\n    {\n      \"additionalContext\": \"Potato skin was damaged\",\n      \"decision\": \"Rejected\",\n      \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Potato skin\",\n      \"quantity\": 1,\n      \"reference\": \"productid%4t56574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    },\n    {\n      \"additionalContext\": \"Pizza was damaged too\",\n      \"decision\": \"Accepted\",\n      \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Pizza\",\n      \"quantity\": 1,\n      \"reference\": \"productid%t5y6574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n  \"friendlyOrderReference\": \"451226580\",\n  \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n  \"issueType\": \"Damaged\",\n  \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n  \"resolution\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"resolvedChannel\": \"PartnerCentre\",\n    \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n    \"totalClaimedAccepted\": 1900\n  },\n  \"restaurantResponse\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"items\": [\n      {\n        \"decision\": \"Rejected\",\n        \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      },\n      {\n        \"decision\": \"Accepted\",\n        \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      }\n    ],\n    \"justification\": {\n      \"comments\": \"The food was packed properly\",\n      \"reason\": \"Other\"\n    }\n  },\n  \"state\": \"Closed\",\n  \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n  \"totalClaimed\": 3800\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db28efb-33ad-477a-ba56-ef9cee1716cf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7414cd63-9f40-497e-bfdd-2b9ddaa6eedf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d76c061f-445a-4d8e-8311-368edf488c93",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a76097f-b534-4257-8690-40153d423470",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85ab485e-0a36-45f7-9251-698022e33344",
      "documentation": "Submit a restaurant response for the claim",
      "method": "post",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse",
      "responses": [
        {
          "uuid": "52f09de1-29fb-489e-87a4-4136b9dea058",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Request succeeded. Your response to the claim has been submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77bb892e-a44a-4c9e-98bb-87ed374fc606",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. decision value is incorrect",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ada8711-e5e4-433a-ac93-55839f7c5c45",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbb89c90-3d98-42f4-939f-cb483d3904b7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fefefbc-ad8a-489a-91c9-2ff18febb829",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7619275f-52a9-4f6f-9012-c7605194be91",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to resolve is has been resolved",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d7db176-3508-4894-b2c6-aa0b0cdccf8f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable. The claim you are attempting to update does not contain the items from the request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dee83d5-4e1a-427a-a8ee-3933638cb009",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "345e3d10-2937-4e8c-b227-cd2c75335458",
      "documentation": "Add reason and comments to the response",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse/justification",
      "responses": [
        {
          "uuid": "5c95c12b-5b96-43b2-8afa-6de0f05e17ae",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Request succeeded. Justification was successfully submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cce5b28-5113-4d47-8907-d057a41f3699",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. reason doesn't match any of the predefined values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "492fc714-0180-43f1-bd46-e769eaa9fbb8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fd9e7e0-f778-414f-af7f-1a590f1acaf2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c581d98c-4029-4bdc-b2d9-f4a14e4889c5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd5fe8d9-be69-436b-bc30-3604e27781b4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to update is older than the current claim. Fetch the last copy of the entity and try the request again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96145f8c-ed47-42fb-9be5-cee4d601e589",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2d37619-0565-4092-94b2-80aeebd72c1f",
      "documentation": "Get Restaurant Fees",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "fa2f2a9a-8955-4d2d-a9fe-5d36b7bbede9",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37af055b-ba58-4d62-b4a5-0c6befe56050",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df430cd-0093-4fa7-8da3-9be7c231959f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9943ee3-2d21-4e6d-84f3-d706b4353dac",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5bd8584-8ec3-483e-b636-db7b9d9569f0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ad5462f-f314-49cf-9443-f58aec7aefd6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d95b09c-f521-4c81-b04f-191d1e99aa8e",
      "documentation": "Create or Update Restaurant Fees",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "54f1d04a-1469-4ce5-bdb7-7553c8d3f6e0",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28009286-efe0-4d82-b490-426f892ea858",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70054539-57dc-4fa6-8e3e-9d591fb3225a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7dbd88e0-c489-416b-989e-73c25d81ba41",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb32b111-4705-4bd6-a3bf-4678fbce2b58",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f589bc6-cdac-4f83-a207-d8af5b0377d0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56c6dfeb-0451-49ab-be06-9947f3e995bf",
      "documentation": "Get the latest version of the restaurant's full menu",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "56b2d135-bfb2-4f89-ba2c-25131729dc0f",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"\",\n      \"id\": \"3\",\n      \"itemIds\": [\n        \"65143901\"\n      ],\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"4\",\n      \"itemIds\": [\n        \"23435309\",\n        \"33445308\"\n      ],\n      \"name\": \"Deals\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"5\",\n      \"itemIds\": [\n        \"8547130\",\n        \"8547140\"\n      ],\n      \"name\": \"Pizzas\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"6\",\n      \"itemIds\": [\n        \"6537130\",\n        \"6537140\"\n      ],\n      \"name\": \"Drinks\"\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"items\": [\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"1577341\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-1\",\n          \"name\": \"Choose your base\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"8547121\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"3547157\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 50,\n              \"dealItemVariationId\": \"8548153\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-2\",\n          \"name\": \"Choose your halves\",\n          \"numberOfChoices\": 2\n        }\n      ],\n      \"description\": \"Choose each half.\",\n      \"id\": \"23435309\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Half-and-half Pizza\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"23435309-1\",\n            \"23435309-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"23435309\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750011\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750021\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"23435309\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-1\",\n          \"name\": \"Choose your pizza\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 13,\n              \"dealItemVariationId\": \"6537130\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"6537140\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"7739164\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-2\",\n          \"name\": \"Choose your drink\",\n          \"numberOfChoices\": 1\n        }\n      ],\n      \"description\": \"Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.\",\n      \"id\": \"33445308\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"14 inch Pizza & A Drink For 1\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"33445308-1\",\n            \"33445308-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"33445308\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"65143901-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"834502\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pitta Bread\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835700\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Sourdough\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"835601\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Wholemeal\"\n            }\n          ],\n          \"name\": \"Choose your bread\"\n        },\n        {\n          \"id\": \"65143901-req-2\",\n          \"maxChoices\": 2,\n          \"minChoices\": 2,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835340\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Tzatziki\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835341\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Taramasalata\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825344\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Hummus\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825346\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Onion\"\n            }\n          ],\n          \"name\": \"Choose your dips\"\n        }\n      ],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 650,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"65143901\",\n          \"kitchenNumber\": \"90\",\n          \"modifierGroupsIds\": [\n            \"65143901-req-1\",\n            \"65143901-req-2\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"1577341\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"1577341-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Crust\"\n        }\n      ],\n      \"name\": \"Base\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"1577341\",\n          \"modifierGroupsIds\": [\n            \"1577341-req-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547130-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547130-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8547121\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547130\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery-weekday\",\n            \"2-lunch-collection-weekday\",\n            \"3-dinner-delivery-weekday\",\n            \"4-dinner-collection-weekday\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8543123\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547140\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 4,\n              \"minChoices\": 2,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        },\n        {\n          \"id\": \"9755052-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 250,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"9755052-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Double Pepperoni\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8548153\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547140\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"9750021\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9755052\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"9755052-req-1\",\n            \"9755052-opt-1\"\n          ],\n          \"name\": \"18 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"3547157\",\n      \"labels\": [\n        \"vegetarian\"\n      ],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Vegetarian\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"3547157\",\n          \"kitchenNumber\": \"121\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537130\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Coca-Cola\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537130\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750011\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537140\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Diet Coke\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537140\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750312\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"7739164\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Bottle of Lager\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"7739164\",\n          \"kitchenNumber\": \"700\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    }\n  ],\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 301,
          "label": "Temporary Redirect. The redirect will contain the signed URL that the client needs to access the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5ebb762-9b4d-4c63-9c36-e0583da5e731",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. We were unable to process the request due to data you sent us",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcadf035-cdbb-4283-8cc7-a9953f9c844f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38203118-b62d-44fa-86cd-e81fcd91ec28",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1782b87-38a0-4fa2-92d0-6e7efb6bb005",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27ed57c8-834f-4f98-a99a-9a7755e0fe47",
      "documentation": "Create or update a menu",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "f1701ecd-1eff-4fe2-91a7-e400cdf986c3",
          "body": "{\n  \"correlationId\": \"64bef5ee-7265-47f8-9aee-28bc74f00b13\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "857b8f6c-b95f-46a9-b877-e37c04dd90ea",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6dc9975-7be9-45dd-a9ef-230f8ca82fac",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a939352d-9b7f-4cc8-958e-5f3695642604",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db0fc9ea-36e4-4a2c-aad0-37a51deb62f9",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd4b8d96-86d7-421d-a6c4-e64af9142119",
      "documentation": "Get the restaurant's delivery and collection lead times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes",
      "responses": [
        {
          "uuid": "2115b43c-2b3f-4825-b689-b4c02864e5f8",
          "body": "[\n  {\n    \"dayOfWeek\": \"Monday\",\n    \"lowerBoundMinutes\": 35,\n    \"serviceType\": \"Delivery\",\n    \"upperBoundMinutes\": 50\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e69a671-3070-40ef-9ddd-991d65e8ce7e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "808c714d-e2aa-4daf-95f2-76555fe1c658",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - the restaurant still uses deprecated approach of Lunch and Night menus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9173e461-e9f9-40c2-97b5-5dbab599b81a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d240f83-aaf3-4b06-bfb6-a10a4b6a2b37",
      "documentation": "Update the restaurant's delivery and collection lead times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes/:dayOfWeek/:serviceType",
      "responses": [
        {
          "uuid": "4cbff0d5-a395-4699-8837-3fa1aef07b27",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "238124d0-77e7-4dcd-931b-cc04f85dd145",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80d87289-71c1-4e78-93c8-84d8fd437ea9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17cc3b9a-4686-4d1f-a0dc-a78af09794c0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0be24de5-0d3e-4fa9-8e7d-54c8e2ca22a4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a77bb75-d215-4eb6-a676-0e9ffb654c63",
      "documentation": "Get service times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "5cd61b84-69d8-4887-b309-da5727d06fae",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The restaurant's service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3492165-a9b1-4756-98e6-8aceaf75854f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9c1004a-f1e7-4273-9620-b07c5a92e1c5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "029b2d45-cf6e-4773-be5b-7ff2ef469acb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79f8b7b5-009e-48d3-83cc-e380eba3df6b",
      "documentation": "Create or update service times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "a7cf3192-9aec-44b6-88b7-a210b163f37f",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2086041-b35e-4fbf-90ee-070166a41eb7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc7b378a-741e-45cb-afb2-6b1943421e37",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4426023-108d-45a9-8096-a1c1cfbedf2b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3589073c-e014-4252-9f94-fbf5785a8767",
      "documentation": "Get auto-completed search terms",
      "method": "get",
      "endpoint": "search/autocomplete/:tenant",
      "responses": [
        {
          "uuid": "f2b1b80c-bf97-46a7-b2b8-289427aa5127",
          "body": "{\n  \"terms\": [\n    {\n      \"classification\": \"Restaurant\",\n      \"term\": \"Pizza Palace\"\n    },\n    {\n      \"classification\": \"Cuisine\",\n      \"term\": \"Pizza\"\n    },\n    {\n      \"classification\": \"Dish\",\n      \"term\": \"Large Hawaiian\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7f7bcdf-66f6-4abf-a49f-1830d7160ac6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\",\n        \"fields\": [\n          \"\"\n        ]\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34a9769c-17e0-4af6-8dbe-f3c13a78dd86",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f554d036-65d3-4d25-bdca-4df26193574e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66bc9ea0-3a0c-45e6-8c6b-9899f0f06220",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b11538ec-3fa8-461e-8f72-270c853ec420",
      "documentation": "Search restaurants",
      "method": "get",
      "endpoint": "search/restaurants/:tenant",
      "responses": [
        {
          "uuid": "fb8b739c-1849-4ea3-8027-a3bece7ff956",
          "body": "{\n  \"restaurants\": [\n    {\n      \"isSponsored\": true,\n      \"products\": [\n        {\n          \"fullName\": \"Chicken Korma\",\n          \"price\": 799,\n          \"productId\": \"289347\"\n        },\n        {\n          \"fullName\": \"Chicken Madras\",\n          \"price\": 699,\n          \"productId\": \"563454\"\n        }\n      ],\n      \"restaurantId\": \"110230\"\n    },\n    {\n      \"isSponsored\": false,\n      \"products\": [\n        {\n          \"fullName\": \"BBQ Chicken Pizza\",\n          \"price\": 1099,\n          \"productId\": \"67832\"\n        },\n        {\n          \"fullName\": \"Chicken Burger\",\n          \"price\": 899,\n          \"productId\": \"23567\"\n        }\n      ],\n      \"restaurantId\": \"229390\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57cb2e9e-1e54-4990-8696-9fae1a4af152",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b638f5b6-efc9-4b8c-8668-e5cd09f4fcf4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6bca152-0790-4b0a-9021-8a63b0116702",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - search term rejected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "544e4fda-92d1-4c89-bff5-8a51c28cf21c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "725fb4f3-e2ec-419d-931d-9d208d94146b",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40c377e1-d936-4adc-8868-9fc5fb58b91f",
      "documentation": "Send to POS failed",
      "method": "post",
      "endpoint": "send-to-pos-failed",
      "responses": [
        {
          "uuid": "bf02be1d-a564-440b-aff9-63d11c4e8d81",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e754db3-43a0-4eff-b481-90afea1beb81",
      "documentation": "Create Offline Event",
      "method": "post",
      "endpoint": "v1/:tenant/restaurants/event/offline",
      "responses": [
        {
          "uuid": "40791bfb-b6b1-46a1-885f-1c355b9d350b",
          "body": "{\n  \"restaurantEventId\": \"03bff206-d136-405f-b789-95190e9711a4\",\n  \"restaurantIds\": \"12345\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10744961-7df8-41ec-bc2e-5842afb4ae32",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9cc4c32-761e-428b-a12e-385e8ee755fc",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c49980e4-a606-4d3b-b630-2b45b8682865",
      "documentation": "Delete Offline Event",
      "method": "delete",
      "endpoint": "v1/:tenant/restaurants/:id/event/offline",
      "responses": [
        {
          "uuid": "4e8a5d84-26e0-4610-ac7d-c5b694ee5e5b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No Events to Delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32b69966-79aa-41b9-a7f7-352eca133853",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Request Succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e2b3624-441e-4e25-affe-599e9c3a714c",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccb088a0-f214-4150-846c-e89dafa3f425",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86fe4c6b-9004-405f-a1b1-c097c3e6355b",
      "documentation": "Delivery Attempt Failed",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery",
      "responses": [
        {
          "uuid": "24c28ac6-d07c-4200-81f4-ad50acb26a27",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f8cf201-4b88-4551-bf93-270a3981bf8c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad844be0-6ca7-43bc-9b71-14c0e2c91ace",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fc82556-0093-43ef-9bff-85499d214007",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f313dd-e8fd-474e-b52e-0800e72a0c1a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aab5d052-9faa-4326-b7ed-8f22fc5dd2db",
      "documentation": "Request Redelivery of the Order",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery/resolution/redeliverorder",
      "responses": [
        {
          "uuid": "72be17ec-9011-402a-b14e-7f6e66fc315d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cca130af-e642-4ebb-a3f8-ee32a18d715e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1459bd71-2463-46a2-b1fd-ec3a30785ad4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28a14a9e-5e13-41a5-815e-32045a625e98",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9d6ff1-c6bc-403d-9072-accd5a108014",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}