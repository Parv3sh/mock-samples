{
  "uuid": "294b375f-4d78-482d-b82b-8a10cd108cc4",
  "lastMigration": 19,
  "name": "Just Eat UK",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "90a17159-beab-4eb7-bb43-ca22488b3930",
      "documentation": "Acceptance requested",
      "method": "post",
      "endpoint": "acceptance-requested",
      "responses": [
        {
          "uuid": "1fffc8fc-502e-49ca-ad5c-4fc365fb38ae",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a1a1f3f-c75f-4505-b265-d0ca96f796ce",
      "documentation": "Attempted delivery query resolved",
      "method": "put",
      "endpoint": "attempted-delivery-query-resolved",
      "responses": [
        {
          "uuid": "6674f75f-5f16-4dae-9c4b-392ec54d0f27",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f84c34f7-96a6-41db-96ae-ddc7058b8cc1",
      "documentation": "Get Checkout",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "f01a2a15-79a8-425e-b66e-6ffa26f41187",
          "body": "{\n  \"customer\": {\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"phoneNumber\": \"\"\n  },\n  \"fulfilment\": {\n    \"location\": {\n      \"address\": {\n        \"administrativeArea\": \"\",\n        \"lines\": [\n          \"\"\n        ],\n        \"locality\": \"\",\n        \"postalCode\": \"\"\n      },\n      \"geolocation\": {\n        \"latitude\": {{faker 'random.number'}},\n        \"longitude\": {{faker 'random.number'}}\n      }\n    },\n    \"time\": {\n      \"asap\": {{faker 'random.boolean'}},\n      \"scheduled\": {\n        \"from\": \"\",\n        \"to\": \"\"\n      }\n    }\n  },\n  \"isFulfillable\": {{faker 'random.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ],\n  \"restaurant\": {\n    \"availabilityId\": \"\",\n    \"id\": \"\"\n  },\n  \"serviceType\": \"{{oneOf (array 'delivery' 'collection')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d513a001-3f08-4e7f-8570-2ef767948170",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3a2d1f4-75d9-4570-946e-a3fc0d9d89a7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a22cad68-32a3-409f-b6c6-11f687e3ac0c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce6b167c-103c-4830-aed6-0c62496bb172",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "850733ce-df88-4eab-a09f-7f6373591fb9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "374c03a1-79ca-49f9-bc18-a2fbd77e338d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42da9599-99db-4964-9a53-496ffc39bb55",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d854d582-71c4-4920-ab4d-694803c692c6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fddb0396-129b-4cda-876d-bd0ea2acbc96",
      "documentation": "Update Checkout",
      "method": "patch",
      "endpoint": "checkout/:tenant/:checkoutId",
      "responses": [
        {
          "uuid": "25ee2364-8d29-40a9-b3db-d538fb13116d",
          "body": "{\n  \"isFulfillable\": {{faker 'random.boolean'}},\n  \"issues\": [\n    {\n      \"code\": \"{{oneOf (array 'RESTAURANT_NOT_TAKING_ORDERS' 'SERVICE_TYPE_UNAVAILABLE' 'ITEMS_UNORDERABLE' 'ADDITIONAL_ITEMS_REQUIRED' 'MINIMUM_ORDER_VALUE_NOT_MET' 'FULFILMENT_TIME_UNAVAILABLE' 'LOCATION_UNDELIVERABLE' 'AGE_VERIFICATION_FAILED' 'FIRST_NAME_REQUIRED' 'PHONE_NUMBER_REQUIRED' 'DATE_OF_BIRTH_REQUIRED' 'FULFILMENT_TIME_REQUIRED' 'ADDRESS_LINES_REQUIRED' 'LOCALITY_REQUIRED' 'ADMINISTRATIVE_AREA_REQUIRED' 'POSTAL_CODE_REQUIRED' 'GEOLOCATION_REQUIRED')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "222c5b6d-7b6e-4c81-bd1d-8902b8861f9b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID' 'INVALID_REQUEST' 'FIRST_NAME_INVALID' 'LAST_NAME_INVALID' 'PHONE_NUMBER_INVALID' 'DATE_OF_BIRTH_INVALID' 'FULFILMENT_TIME_INVALID' 'ADDRESS_LINES_INVALID' 'LOCALITY_INVALID' 'ADMINISTRATIVE_AREA_INVALID' 'POSTAL_CODE_INVALID' 'GEOLOCATION_INVALID' 'DELIVERY_NOTE_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd8f76fa-4d54-40c9-b732-bfc7b80f68ca",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "UNAUTHORIZED : Missing authentication credentials to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cea2fcc-4906-4279-9179-316caac7d856",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "FORBIDDEN : Not authorised to access target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e15b3c0-388f-4e1f-9da5-4a3075a3ba7b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6997b48-5ed8-4c0d-bc60-fd301ef9005a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'CHECKOUT_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b3b97b6-8f61-418a-831d-f90f4ef4ae5d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc5fb7fc-a564-4daa-8123-67d6d9a950bb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e23873f-ca52-40e3-8e97-8489331bc529",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5e084ac-01a2-4662-8dcd-cff82ac32993",
      "documentation": "Get Available Fulfilment Times",
      "method": "get",
      "endpoint": "checkout/:tenant/:checkoutId/fulfilment/availabletimes",
      "responses": [
        {
          "uuid": "4761edd2-e03a-4895-9945-aee8d6827138",
          "body": "{\n  \"asapAvailable\": {{faker 'random.boolean'}},\n  \"times\": [\n    {\n      \"from\": \"{{faker 'date.recent' 365}}\",\n      \"to\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK : Request has succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40d9e931-c14d-4ded-aaa0-8a557fb3819e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_INVALID' 'CHECKOUT_ID_INVALID')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "BAD REQUEST : Cannot process the request due to error by client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c94fbd24-72c1-41a9-8ff3-7e3870da409a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'TENANT_NOT_SUPPORTED' 'CHECKOUT_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "NOT FOUND : Target resource could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc41d5bb-c7cd-419b-802c-23de934f153f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"{{oneOf (array 'FULFILMENT_TIME_BANDS_INVALID' 'FULFILMENT_TIME_BANDS_NOT_FOUND')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "CONFLICT : Request not completed as it conflicts with target resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4837beec-6d70-4a60-a005-9260336805bf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "980825f4-7f24-40db-9acb-d3ca009ea5fb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "347dfb7c-523c-4d36-bf76-6d9c4d6a0d0b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8118658a-8877-4a14-97b0-c8f26eb439b4",
      "documentation": "Get consumers details",
      "method": "get",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "283089d7-dc6a-4240-ada0-cd02090a460b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6323e8fd-3215-420f-95ce-ec149e475c06",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22127b73-e9ab-4e3e-a26b-151ba2907710",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ba61296-c436-4697-b25c-670b467f85c4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdf036a5-23fb-4150-a383-a5a2cb4a47ba",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 501,
          "label": "The operation has not been implemented",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "220d693e-9a53-4cff-bfb8-2cf60efa5278",
      "documentation": "Create consumer",
      "method": "post",
      "endpoint": "consumers/:tenant",
      "responses": [
        {
          "uuid": "c5157cec-d49c-406b-ab0d-05eac5ac84d7",
          "body": "{\n  \"token\": \"SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=\",\n  \"type\": \"otac\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Consumer created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d05bef8b-3e83-4ec4-b160-123ef5c087f4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1714d229-209b-41e9-b0bb-baa955874511",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e56bac2a-0758-4a95-856d-596e5b7a8b54",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "The specified tenant does not exist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94c88eaf-0fde-4e38-b822-072960e64273",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "The specified email already exists.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54aae789-0dce-49fc-965e-90afbb71fa4b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "986e1a32-33c8-4d52-b428-ef2049038eaa",
      "documentation": "Get communication preferences",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences",
      "responses": [
        {
          "uuid": "8c64f1cb-613e-439b-80ba-add5f218c80b",
          "body": "{\n  \"marketing\": {\n    \"isDefault\": {{faker 'random.boolean'}},\n    \"subscribedChannels\": [\n      \"{{oneOf (array 'email' 'sms' 'push')}}\"\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "498b5057-f827-42be-a3a6-f8ed651db1d7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daa89dd4-eadd-47bd-8871-d1d41621f7cf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7332101-4fe2-4a3b-bc63-aa6e1afda6ed",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3184e17-6d19-44a7-ab3d-dad5863da91b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61855cba-5aa7-478a-831f-9673a8a659f3",
      "documentation": "Get channel subscriptions for a given consumer's communication preference type",
      "method": "get",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "526feee2-bc23-4afc-b78d-b51d7e1d086e",
          "body": "{\n  \"isDefault\": {{faker 'random.boolean'}},\n  \"subscribedChannels\": [\n    \"{{oneOf (array 'email' 'sms' 'push')}}\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e11f55d4-8fc9-469d-95c8-d4b1d063cc91",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3f27e5-8aa6-4047-a79e-51526fef75d9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c97e5e00-6b64-463d-9c26-af131093ad86",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "448abb6b-f9b9-4bef-a149-30163f5f5ee4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bce8762a-296d-4c25-8a54-733595afc78e",
      "documentation": "Set only the channel subscriptions for a given consumer's communication preference type",
      "method": "put",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type",
      "responses": [
        {
          "uuid": "baec84a4-eab5-40f4-8a48-d1af1692d731",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6117ebee-aa4d-40a3-9736-b767ae893641",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f160f15-0270-4f79-96a5-925fa4e06286",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dfbf953-bf55-4eaf-b5af-0166c4cd972a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2aa6b9de-197b-4e25-8194-5385b4bc4e85",
      "documentation": "Remove subscription of a specific communication preference channel",
      "method": "delete",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "18ea9a01-c98e-4e76-99fa-b602fc2cce0d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfce7f34-f241-470a-96f0-2d29b817ce28",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0ea9870-406b-48eb-809c-bfe5f70540fd",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6273ec8e-e1bf-486a-aaac-bc0fb0295253",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "beece5b9-0a84-4f4f-8cd8-c245520d1639",
      "documentation": "Subscribe to a specific communication preference channel",
      "method": "post",
      "endpoint": "consumers/:tenant/me/communication-preferences/:type/subscribedChannels/:channel",
      "responses": [
        {
          "uuid": "957c853e-c3be-4efd-97fb-22ac954c9ec8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f75b31bc-8e6e-4674-8fee-b02b7aaa2866",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a1d895c-2254-4aa6-b020-ddddbb38ef53",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b26ebb97-6246-420e-acd5-e7eb41c6becb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1850d9dc-1a60-410c-9b63-4ad1280bf923",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6daa6a8-053a-4927-8d15-9753b7f50845",
      "documentation": "Delivery Attempt Failed",
      "method": "put",
      "endpoint": "delivery-failed",
      "responses": [
        {
          "uuid": "0d513b64-53a5-475d-b233-e2967f7c0753",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2be5ab7c-236f-49d8-a87b-33b9da57c0e0",
      "documentation": "Get restaurant delivery fees",
      "method": "get",
      "endpoint": "delivery-fees/:tenant",
      "responses": [
        {
          "uuid": "c969223f-fdcd-4bff-8c59-9970bbbe1651",
          "body": "{\n  \"restaurants\": [\n    {\n      \"bands\": [\n        {\n          \"fee\": 250,\n          \"minimumAmount\": 1000\n        },\n        {\n          \"fee\": 0,\n          \"minimumAmount\": 2000\n        }\n      ],\n      \"minimumOrderValue\": 1000,\n      \"restaurantId\": \"5678\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "878fd292-878e-4500-9234-ff8dd101d0b3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d023d96c-136f-444e-89dd-4546d20e4c2f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3779238-786b-4711-84a8-e82a1ad95abd",
      "documentation": "Get delivery estimate",
      "method": "get",
      "endpoint": "delivery/estimate",
      "responses": [
        {
          "uuid": "50b444d0-8b0f-44b5-bf07-edc6737e4380",
          "body": "{\n  \"DurationInMinutes\": \"\",\n  \"RestaurantReference\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e814035-b29b-4910-bab5-554f9323c459",
      "documentation": "Get your delivery pools",
      "method": "get",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "26e1e5b4-917e-4d43-99c1-1ed18fda9dc9",
          "body": "{\n  \"delivery-pool-id\": {\n    \"name\": \"\",\n    \"restaurants\": [\n      {{faker 'random.number'}}\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ca1397c-77d8-4884-ad18-1e581207abe7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "148c2394-9858-45db-8a33-2b052a9ede43",
      "documentation": "Create a new delivery pool",
      "method": "post",
      "endpoint": "delivery/pools",
      "responses": [
        {
          "uuid": "53de6b2d-f2ce-43d9-9c8f-b45ba04d2d1e",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Pool has been created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a59bfca1-9c50-4063-acb6-18d787fe7d05",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9607d6f-d2fa-4c59-9f9c-8c80c6f295ab",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c228e21-51c1-4191-b04e-9748033a741f",
      "documentation": "Delete a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "4e1103e3-e89e-4c51-a1da-2c1a4c948d05",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5391aeae-29b8-447f-9409-a3862916f83f",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a57eba-2e67-4a87-a138-fd285b04ae54",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "712d20e2-da27-4b5f-8b88-93c32ef31cff",
      "documentation": "Get an individual delivery pool",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "3b91b118-bae1-4163-977a-649066ea9c6f",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f6ea4df-2f35-45e0-85bc-fad414169c54",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f01b4972-f33c-42fb-b7b4-7ed9e34ded07",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af75c23a-e172-409c-835f-ccfcadf8c3d9",
      "documentation": "Modify a delivery pool",
      "method": "patch",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "2b6b77bf-616f-4449-9042-141667a3f8f5",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6df53b8-42af-487c-ac43-396c48592cd0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a989934-f7aa-41be-b5f7-66cf4a942530",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dba19f5-7232-4b4a-8d48-7d1739d07a4b",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec1c9d42-deae-486e-ae1b-28392a9ade46",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0cc837f-d50b-488e-8521-27ea091194d3",
      "documentation": "Replace an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId",
      "responses": [
        {
          "uuid": "872d0989-2a56-4572-8a78-004efc1999de",
          "body": "{\n  \"name\": \"\",\n  \"restaurants\": [\n    {{faker 'random.number'}}\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Pool has been replaced",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ac99302-9133-4500-a72d-5467aa6586c8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30af4c2d-b9c9-4244-8147-86a2c9c69991",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd4155bb-8b15-4f41-a7f3-b791b68d34e1",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "A restaurant in your request already belongs to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1b7842b-69da-46a9-8dba-428cbc542e74",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a24f4d68-6846-4c01-a3d2-c9249c3b0f28",
      "documentation": "Get availability for pickup",
      "method": "get",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "e9d92981-f23f-4244-b32d-85e3072fc104",
          "body": "{\n  \"bestGuess\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8377fd5c-350c-4cca-9c90-8ee3bbdcc2d7",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e3bde8c-e4fe-4a1f-a1af-e71a17caab57",
      "documentation": "Set availability for pickup",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/availability/relative",
      "responses": [
        {
          "uuid": "41966f3b-1f24-4065-8c8a-4b015876f3bf",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc6c20dc-4559-4c0e-898b-92f635abbb76",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e246062a-f649-4984-8044-7a0c6e492c4f",
      "documentation": "Set the delivery pools daily start and end times",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/hours",
      "responses": [
        {
          "uuid": "1ff18dda-bbc1-46b5-983f-7805a77fdc36",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool hours have been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11c081c6-123e-4ef8-866c-27436d1ee738",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ab6bf87-8179-4df0-8b3e-0800d1c8fed4",
      "documentation": "Remove restaurants from a delivery pool",
      "method": "delete",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "4f715917-0bac-40e2-9687-59389ca83b23",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Pool has been updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63623222-d15d-4687-b5f4-8da2195527fe",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "703ad80a-cbf6-4851-b11a-712c8caa9ea2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9108074a-f197-4ba3-9881-3dc21225c6e9",
      "documentation": "Add restaurants to an existing delivery pool",
      "method": "put",
      "endpoint": "delivery/pools/:deliveryPoolId/restaurants",
      "responses": [
        {
          "uuid": "9da605b1-5335-4406-a761-60816d6a3075",
          "body": "{\n  \"restaurants\": [\n    10202,\n    10203\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df082ddc-6cf2-4670-8fc0-b6b06f607aca",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8340c630-6111-4752-a855-65d172ed6836",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The pool could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0ee9b77-22c7-4c44-9a1c-f8626a3462be",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "The restaurants could not be added to the pool. Typically this is because they are already assigned to another pool",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbf9dbcb-9cf3-42bf-9ba7-20897fb05a05",
      "documentation": "Driver Assigned to Delivery",
      "method": "put",
      "endpoint": "driver-assigned-to-delivery",
      "responses": [
        {
          "uuid": "1b6e9ad3-1a69-40a7-b8df-0a49f14ff3f1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d450905-1816-4ff8-ae3b-95ec34ab7d7e",
      "documentation": "Driver at delivery address",
      "method": "put",
      "endpoint": "driver-at-delivery-address",
      "responses": [
        {
          "uuid": "c246fae8-52be-4b59-b189-4cb0639fe0ad",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71e40b0e-c283-4314-b93f-74b1387cf93d",
      "documentation": "Driver at restaurant",
      "method": "put",
      "endpoint": "driver-at-restaurant",
      "responses": [
        {
          "uuid": "d7c90bb9-1c54-43e0-b330-67aa7b8a854e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b36ca40c-3a2b-4578-8d44-0b543b659dee",
      "documentation": "Driver has delivered order",
      "method": "put",
      "endpoint": "driver-has-delivered-order",
      "responses": [
        {
          "uuid": "14f48334-d098-4f44-9c91-5538bb3dc443",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "01796d2d-0f78-4103-b778-6f1bf48b633a",
      "documentation": "Driver Location",
      "method": "put",
      "endpoint": "driver-location",
      "responses": [
        {
          "uuid": "8150facc-b289-4ecf-9116-2eed1c9aed29",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2514f268-59a4-474d-a5e3-3a7c25707f2d",
      "documentation": "Driver on their way to delivery address",
      "method": "put",
      "endpoint": "driver-on-their-way-to-delivery-address",
      "responses": [
        {
          "uuid": "329e7998-0a89-4588-ba53-feb8cb9b565a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0df79fc9-ef0b-4410-8d2a-427ab950adfe",
      "documentation": "late order compensation query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-compensation-query",
      "responses": [
        {
          "uuid": "7a7e9f23-e0f3-4fd2-a986-592e1326a8c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf967e7a-4b1d-4de9-920d-b5ae5f972b7b",
      "documentation": "late order query, restaurant response required",
      "method": "post",
      "endpoint": "late-order-query",
      "responses": [
        {
          "uuid": "11e44e02-f4b3-4f33-b13d-567e10805adf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dded04a2-ba64-4ea6-8a04-c23ebb95d640",
      "documentation": "Menu ingestion complete",
      "method": "post",
      "endpoint": "menu-ingestion-complete",
      "responses": [
        {
          "uuid": "b09c8c11-31ec-4076-9ee1-d59cb1de61f5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48c20e90-c0b7-40c2-b5ab-693f954b1939",
      "documentation": "Order accepted",
      "method": "post",
      "endpoint": "order-accepted",
      "responses": [
        {
          "uuid": "0e62c568-b3bf-4a55-a8f1-1fd83d9cf9bb",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34a9a12e-1188-43cc-8fa7-071dfecdbbdb",
      "documentation": "Order cancelled",
      "method": "post",
      "endpoint": "order-cancelled",
      "responses": [
        {
          "uuid": "bf01567c-ca1e-4123-bfda-a6a8f6c6892d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "206070b6-33c9-4adb-ad48-4d2de02e2ed7",
      "documentation": "Order Eligible For Restaurant Compensation",
      "method": "post",
      "endpoint": "order-eligible-for-restaurant-compensation",
      "responses": [
        {
          "uuid": "f437cc6c-d9b3-4eda-bcb1-d193dd0dc6f5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eb94455-a7d4-4aa2-a413-5db5bc2ea64e",
      "documentation": "Order ready for pickup",
      "method": "put",
      "endpoint": "order-is-ready-for-pickup",
      "responses": [
        {
          "uuid": "c9e94b9f-db78-4013-bbdc-fbc3f5d765b8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Upon successful receipt of the event, delivery partners should return a 200 HTTP status code indicating acknowledgement of transmission.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5350bf24-97d0-4f10-a5b1-197f7d982245",
          "body": "{\n  \"Details\": \"\",\n  \"Message\": \"\",\n  \"OrderId\": \"\",\n  \"Timestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the unlikely case of unknown errors, JUST EAT will log a raw response. If possible, the response should have the following format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "047ee2de-43c3-4b4d-814f-aac120dc1048",
      "documentation": "Order ready for preparation (async)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-async",
      "responses": [
        {
          "uuid": "d0ebb8cb-56f6-4e6d-8354-23999037b247",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Upon successful receipt of this event, a `202` status code should be returned, indicating the request has been accepted. You should then later respond with the result of processing this request, via the [callback URL](#section/Async-Webhooks) endpoint.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2a32f94-59fb-4441-b861-f08c11c16398",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Should the initial validation of the order fail, return a `400` status code. NOTE: In this instance we do not also expect a failure callback via the async callback URL.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "306161fc-9621-4bfa-94fb-2d376f25aa54",
      "documentation": "Order ready for preparation (sync)",
      "method": "post",
      "endpoint": "order-ready-for-preparation-sync",
      "responses": [
        {
          "uuid": "3021a73a-9933-45ea-a1a8-f11a25427979",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25ff0c88-8972-4656-bdc1-a3220ccfa8ec",
      "documentation": "Order rejected",
      "method": "post",
      "endpoint": "order-rejected",
      "responses": [
        {
          "uuid": "7514238f-01e3-4831-aa88-4aa00a1fd64f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3623223f-68f2-4039-840f-8e084c65ba99",
      "documentation": "Order requires delivery acceptance",
      "method": "put",
      "endpoint": "order-requires-delivery-acceptance",
      "responses": [
        {
          "uuid": "d633a869-2dac-4d0a-8aab-0003bd43089d",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "In the event of successful handling of the request, a 201 status code should be returned, indicating acknowledgement of transmission success.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8058b78-32ab-4728-9e9b-6c6b7adb131b",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": \"{{oneOf (array 'outside_hours' 'too_busy' 'too_far' 'not_supported' 'bad_address' 'bad_request' 'restaurant_not_configured' 'duplicate' 'other')}}\",\n      \"message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "In the case that the order cannot be accepted, an appropriate HTTP status code, such as 400 (Bad request) or 500 (Internal server error) should be returned.  In addition to the HTTP status code, a specific reason code and explanatory message should be provided within the response body",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29820e8e-c30e-4212-8f6d-a63535fe343a",
      "documentation": "Order time updated",
      "method": "post",
      "endpoint": "order-time-updated",
      "responses": [
        {
          "uuid": "f0634536-ce28-454c-951a-502f2a954183",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daeaa564-2559-4f03-b61f-cb704f6e7355",
      "documentation": "Create order",
      "method": "post",
      "endpoint": "orders",
      "responses": [
        {
          "uuid": "2591777f-f2ac-462a-855f-ee9b98523c7f",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d332210-6304-44bc-8520-4724c70947fb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - Request is for deprecated API version or has failed validation in some way - see response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbd05bc0-d24e-4da0-ba0f-e0b5610bd2a7",
          "body": "{\n  \"OrderId\": \"\"\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - you've already told us about an order with this `OrderReference`",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "feebc6af-e573-4de8-9352-2dcade0e09d2",
      "documentation": "Update current driver locations (bulk upload)",
      "method": "put",
      "endpoint": "orders/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "04ef7369-9643-4b3d-9706-4f2b10e2dda6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51702374-b85c-4fb4-8acb-d22a8b3f39e2",
      "documentation": "Accept order",
      "method": "put",
      "endpoint": "orders/:orderId/accept",
      "responses": [
        {
          "uuid": "d8f5c04a-b4d7-49e9-95fe-0dc53391fa09",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "949ad43b-f9bc-4d87-80b6-89580b0ea869",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "065d6114-ee96-4159-aca9-8b02fe74aa7e",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2ec5fd2-2dce-4928-bbc6-c1220900230e",
      "documentation": "Cancel order",
      "method": "put",
      "endpoint": "orders/:orderId/cancel",
      "responses": [
        {
          "uuid": "4ae6b01e-cb47-4687-90e0-a0b5ccf2bca2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42140d6e-f455-4cbe-b5f6-8cb24a086efa",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3313128b-3a89-4bfc-9f5e-79d252a29714",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has already been cancelled",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f46d564-1882-4dd6-805e-6830c1ab4565",
      "documentation": "Complete order",
      "method": "post",
      "endpoint": "orders/:orderId/complete",
      "responses": [
        {
          "uuid": "169c06e2-f660-4647-b335-7feb5ade9eb6",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4fa713c-2221-451c-9d86-1305dc9ab7ef",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d661bb5-1af2-4593-9174-b997ffaca02a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order has already been marked as cancelled or complete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03149d76-50e1-4f65-af9f-b56382c6328e",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ced94e0-8b46-4c98-9502-9a699c468408",
      "documentation": "Update order with driver at delivery address details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atdeliveryaddress",
      "responses": [
        {
          "uuid": "785ddf19-6ab9-4488-b290-11c3b370dfd1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9da3ce3-8f47-4c75-be62-da6351428ba0",
      "documentation": "Update order with driver at restaurant details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestaurant",
      "responses": [
        {
          "uuid": "f8455396-f494-4c5c-b010-9bc2b8482cf4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a056072d-0041-4c29-9195-f1b09e3aac24",
      "documentation": "Update the driver's estimated time to arrive at the Restaurant",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/atrestauranteta",
      "responses": [
        {
          "uuid": "7abe4bdf-4bba-4494-8655-cc0c62478b18",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92f19359-0f89-44e0-acc8-8c5ca9acb03c",
      "documentation": "Update order with delivered details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/delivered",
      "responses": [
        {
          "uuid": "b117da6e-c48e-4fd9-9ec7-b4e5bf58bf45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1cafc5ae-e493-4cec-93eb-782fff90c42f",
      "documentation": "Update order with driver assigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverassigned",
      "responses": [
        {
          "uuid": "992bb01d-4e17-4723-be5d-abea7fca9503",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1cc3984-9767-475f-83d8-79bf0bc64102",
      "documentation": "Update the driver's current location",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverlocation",
      "responses": [
        {
          "uuid": "57ce0601-7158-402b-8ef8-951ac8566447",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d302bc80-fdd4-44b3-97fd-fe509f444963",
      "documentation": "Update order with driver unassigned details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/driverunassigned",
      "responses": [
        {
          "uuid": "fd3018c0-055e-40fb-8339-82e6ec887f4d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f2352e-b3ae-4c0c-8385-e63d25e6504c",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "629e0986-0f86-4e2a-997c-ddeac1744ca6",
      "documentation": "Update order with driver on its way details",
      "method": "put",
      "endpoint": "orders/:orderId/deliverystate/onitsway",
      "responses": [
        {
          "uuid": "17c1f8ad-803a-41ef-a1ef-f0c966b43f3d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f68dd56e-88f5-4bfe-a4cc-bf108bd58113",
      "documentation": "Update order ETA",
      "method": "put",
      "endpoint": "orders/:orderId/duedate",
      "responses": [
        {
          "uuid": "860721b2-7ba9-4b4f-ac54-59f7463d69ca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77164883-3909-429e-bcff-35714fc7fc93",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "The due date is missing, or out of range (either in the past, or > 7 days in the future).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc7ec06b-f473-4767-9775-e60b230d3f6b",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The order could not be found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98fd3684-93ab-4a86-85b3-cd4938ae8a96",
      "documentation": "Ignore order",
      "method": "put",
      "endpoint": "orders/:orderId/ignore",
      "responses": [
        {
          "uuid": "62e29559-8f2a-42ae-866a-f3943ea14ad5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d3cd910-3a4f-4c35-b803-95c9ee1abadf",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "181cbe63-078c-4de6-8122-b2bc6cf06795",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "303dda72-1424-466f-a299-4b9c4fa199ab",
      "documentation": "Mark order as ready for collection",
      "method": "post",
      "endpoint": "orders/:orderId/readyforcollection",
      "responses": [
        {
          "uuid": "ef02f007-1d38-48d9-903b-b1b696e45054",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content - status updated successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a522e40-625e-4859-b1e6-878c0542ced3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request - order cannot be marked as ready for collection because it is not a collection order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "358e76c5-7362-4de2-81a3-a3a7a63c978a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found - order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e5d42f9-ac50-4eeb-8b61-1996031dba5d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - this order is not in the accepted state",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dea3536-2859-46d3-b2ad-16fe195f766f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f6e633f-3137-4a3b-a14d-030a955c76a7",
      "documentation": "Reject order",
      "method": "put",
      "endpoint": "orders/:orderId/reject",
      "responses": [
        {
          "uuid": "2a4ad3e2-73af-4423-a14a-75d4617e360d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c36d5956-0621-4137-a443-b4e96d9f47ee",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Order could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "673a634d-efaa-4cef-885d-11a25999b34e",
          "body": "",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0103d564-4db2-4c80-88b0-2da7b549ded0",
      "documentation": "Response to Late Order Update Request",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateorder/restaurantresponse",
      "responses": [
        {
          "uuid": "13fd2d2f-1890-4905-be6f-3fedfce8118c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adfb21c0-ad12-4711-b5e0-57d878bac7e8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid i.e. missing a required parameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c2c8452-bb5f-46e0-aa97-edd1836e672d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "719fc987-6970-40f2-80f2-e29d6fd48df0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12c111fe-42cb-41ca-88ef-1d1851d86c41",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2e7b00-0852-4159-ab5a-370d701b63c0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b541f68e-1cbd-4232-95fc-6fce1b3aa4ef",
      "documentation": "Update late order compensation request with Restaurant response",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/consumerqueries/lateordercompensation/restaurantresponse",
      "responses": [
        {
          "uuid": "51a46a28-ed4f-4cfc-a1df-f09cb202bf3a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9e92e34-97a3-4300-9807-9eff76315d79",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid - e.g. contains missing or invalid parameters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "932f6fbd-477a-42b0-9626-2887f01472f7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. Consumer is not authorized to modify the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4102103-ae67-4df6-9dac-06e5a1564a51",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Order query or Order not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb3963b0-da2d-486b-83f6-f667752d6b80",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. Query not in state to accept response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d478317-b5de-4c30-b9ad-a4f39c91e88d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b00da78-62e1-42da-bbc3-2ad4fef7cab0",
      "documentation": "Create Compensation requests",
      "method": "post",
      "endpoint": "orders/:tenant/:orderId/restaurantqueries/compensation",
      "responses": [
        {
          "uuid": "9bd63836-f832-49b4-97da-ae8d3cf2f5fb",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "602c3bfb-f4f0-4d6b-afc6-90e364158fbe",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37f6e305-feb8-44aa-b8e1-91ff58c4aa8a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfbacadc-118f-4bf2-9816-4cb45ade5f1a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - credentials provided by consumer do not allow access to this resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e95035b6-116f-4d69-9643-b321806fd9d9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5addf1a1-aab5-4229-b398-e8a0c0305249",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict - returned if tried to claim compensation for an order that is not eligible",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faf5d9bd-88d8-408b-aa1e-aa53d7025f01",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fbe9d4f-722d-478b-acf8-640413cc56ee",
      "documentation": "Customer Requested Redelivery",
      "method": "put",
      "endpoint": "redelivery-requested",
      "responses": [
        {
          "uuid": "49b7f4ef-8bd1-4be4-a7c0-8fdd3cf21be4",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc0a978b-b7eb-41be-a2fe-aa8667850cc9",
      "documentation": "Restaurant Offline Status",
      "method": "put",
      "endpoint": "restaurant-offline-status",
      "responses": [
        {
          "uuid": "329d00e2-a01a-422a-b7f0-767784f0f20d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "409e6018-a4f9-4c9b-a035-a19b948544eb",
      "documentation": "Restaurant Online Status",
      "method": "put",
      "endpoint": "restaurant-online-status",
      "responses": [
        {
          "uuid": "68bbd8e5-8a2f-43fc-820c-fb25131f376f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8819f82e-a8cf-426a-a78b-845329ac2c98",
      "documentation": "Get restaurants by location",
      "method": "get",
      "endpoint": "restaurants/bylatlong",
      "responses": [
        {
          "uuid": "4cc02ccc-278b-438f-938e-7607ac748491",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'random.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'random.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'random.number'}},\n    \"Longitude\": {{faker 'random.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'random.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'random.number'}},\n        \"Longitude\": {{faker 'random.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'random.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"IsTopCuisine\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'random.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'random.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'random.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'random.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'random.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'random.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'random.number'}},\n        \"RangeLower\": {{faker 'random.number'}},\n        \"RangeUpper\": {{faker 'random.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'random.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'random.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'random.number'}},\n      \"DriveInfoCalculated\": {{faker 'random.boolean'}},\n      \"HygieneRating\": {{faker 'random.number'}},\n      \"Id\": {{faker 'random.number'}},\n      \"IsBrand\": {{faker 'random.boolean'}},\n      \"IsCloseBy\": {{faker 'random.boolean'}},\n      \"IsCollection\": {{faker 'random.boolean'}},\n      \"IsDelivery\": {{faker 'random.boolean'}},\n      \"IsFreeDelivery\": {{faker 'random.boolean'}},\n      \"IsHalal\": {{faker 'random.boolean'}},\n      \"IsNew\": {{faker 'random.boolean'}},\n      \"IsOpenNow\": {{faker 'random.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'random.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'random.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'random.boolean'}},\n      \"IsPremier\": {{faker 'random.boolean'}},\n      \"IsSponsored\": {{faker 'random.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'random.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'random.boolean'}},\n      \"IsTestRestaurant\": {{faker 'random.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'random.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'random.number'}},\n      \"MinimumDeliveryValue\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'random.number'}},\n      \"OfferPercent\": {{faker 'random.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'random.number'}},\n        \"Count\": {{faker 'random.number'}},\n        \"StarRating\": {{faker 'random.number'}}\n      },\n      \"RatingAverage\": {{faker 'random.number'}},\n      \"RatingStars\": {{faker 'random.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'random.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'random.number'}},\n      \"SecondDateRanking\": {{faker 'random.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'random.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'random.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'random.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'random.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'random.number'}},\n    \"rankedIds\": [\n      {{faker 'random.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "872d9d11-2736-4f72-a354-53b297adf6f7",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0885a715-7669-499b-99d9-b0baa10b100e",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d349f7cf-f9b3-4e18-8c1e-fdf2c41cb022",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61d027a5-b85b-49e1-ae13-4e6126a597a9",
      "documentation": "Get restaurants by postcode",
      "method": "get",
      "endpoint": "restaurants/bypostcode/:postcode",
      "responses": [
        {
          "uuid": "a4ea28d5-6359-406b-8027-9f82f82a469f",
          "body": "{\n  \"CuisineSets\": [\n    {\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Type\": \"\"\n    }\n  ],\n  \"Dishes\": [\n    {\n      \"Best\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}},\n          \"StrProductId\": \"\"\n        }\n      ],\n      \"RestaurantId\": {{faker 'random.number'}},\n      \"Similar\": [\n        {\n          \"FullName\": \"\",\n          \"Price\": {{faker 'random.number'}},\n          \"ProductId\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"MetaData\": {\n    \"Area\": \"\",\n    \"CanonicalName\": \"\",\n    \"CuisineDetails\": [\n      {\n        \"Name\": \"\",\n        \"SeoName\": \"\",\n        \"Total\": {{faker 'random.number'}}\n      }\n    ],\n    \"District\": \"\",\n    \"Latitude\": {{faker 'random.number'}},\n    \"Longitude\": {{faker 'random.number'}},\n    \"Postcode\": \"\",\n    \"ResultCount\": {{faker 'random.number'}},\n    \"SearchedTerms\": {},\n    \"TagDetails\": [\n      {\n        \"BackgroundColour\": \"\",\n        \"Colour\": \"\",\n        \"DisplayName\": \"\",\n        \"Key\": \"\",\n        \"Priority\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"RestaurantSets\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Restaurants\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"Metadata\": [\n            {\n              \"Key\": \"\",\n              \"Value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"Type\": \"\"\n    }\n  ],\n  \"Restaurants\": [\n    {\n      \"Address\": {\n        \"City\": \"\",\n        \"FirstLine\": \"\",\n        \"Latitude\": {{faker 'random.number'}},\n        \"Longitude\": {{faker 'random.number'}},\n        \"Postcode\": \"\"\n      },\n      \"Badges\": [\n        {}\n      ],\n      \"BrandName\": \"\",\n      \"City\": \"\",\n      \"CollectionMenuId\": {{faker 'random.number'}},\n      \"CuisineTypes\": [\n        {\n          \"Id\": {{faker 'random.number'}},\n          \"IsTopCuisine\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"Cuisines\": [\n        {\n          \"Name\": \"\",\n          \"SeoName\": \"\"\n        }\n      ],\n      \"Deals\": [\n        {\n          \"Description\": \"\",\n          \"DiscountPercent\": {{faker 'random.number'}},\n          \"OfferType\": \"\",\n          \"QualifyingPrice\": {{faker 'random.number'}}\n        }\n      ],\n      \"DefaultDisplayRank\": {{faker 'random.number'}},\n      \"DeliveryChargeBands\": [\n        {\n          \"BasketThresholdPrice\": {{faker 'random.number'}},\n          \"DeliveryChargeBelowThreshold\": {{faker 'random.number'}}\n        }\n      ],\n      \"DeliveryCost\": {{faker 'random.number'}},\n      \"DeliveryEtaMinutes\": {\n        \"Approximate\": {{faker 'random.number'}},\n        \"RangeLower\": {{faker 'random.number'}},\n        \"RangeUpper\": {{faker 'random.number'}}\n      },\n      \"DeliveryMenuId\": {{faker 'random.number'}},\n      \"DeliveryOpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryOpeningTimeLocal\": \"\",\n      \"DeliveryOpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"DeliveryTime\": {{faker 'random.number'}},\n      \"DeliveryTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryWorkingTimeMinutes\": {{faker 'random.number'}},\n      \"DeliveryZipcode\": \"\",\n      \"Description\": \"\",\n      \"DriveDistance\": {{faker 'random.number'}},\n      \"DriveInfoCalculated\": {{faker 'random.boolean'}},\n      \"HygieneRating\": {{faker 'random.number'}},\n      \"Id\": {{faker 'random.number'}},\n      \"IsBrand\": {{faker 'random.boolean'}},\n      \"IsCloseBy\": {{faker 'random.boolean'}},\n      \"IsCollection\": {{faker 'random.boolean'}},\n      \"IsDelivery\": {{faker 'random.boolean'}},\n      \"IsFreeDelivery\": {{faker 'random.boolean'}},\n      \"IsHalal\": {{faker 'random.boolean'}},\n      \"IsNew\": {{faker 'random.boolean'}},\n      \"IsOpenNow\": {{faker 'random.boolean'}},\n      \"IsOpenNowForCollection\": {{faker 'random.boolean'}},\n      \"IsOpenNowForDelivery\": {{faker 'random.boolean'}},\n      \"IsOpenNowForPreorder\": {{faker 'random.boolean'}},\n      \"IsPremier\": {{faker 'random.boolean'}},\n      \"IsSponsored\": {{faker 'random.boolean'}},\n      \"IsTemporarilyOffline\": {{faker 'random.boolean'}},\n      \"IsTemporaryBoost\": {{faker 'random.boolean'}},\n      \"IsTestRestaurant\": {{faker 'random.boolean'}},\n      \"LastUpdated\": \"\",\n      \"Latitude\": {{faker 'random.number'}},\n      \"Logo\": [\n        {\n          \"StandardResolutionURL\": \"\"\n        }\n      ],\n      \"LogoUrl\": \"\",\n      \"Longitude\": {{faker 'random.number'}},\n      \"MinimumDeliveryValue\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"NewnessDate\": \"\",\n      \"NumberOfRatings\": {{faker 'random.number'}},\n      \"OfferPercent\": {{faker 'random.number'}},\n      \"Offers\": [\n        {}\n      ],\n      \"OpeningTime\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimeIso\": \"\",\n      \"OpeningTimeLocal\": \"\",\n      \"OpeningTimeUtc\": \"{{faker 'date.recent' 365}}\",\n      \"OpeningTimes\": [\n        {}\n      ],\n      \"Postcode\": \"\",\n      \"Rating\": {\n        \"Average\": {{faker 'random.number'}},\n        \"Count\": {{faker 'random.number'}},\n        \"StarRating\": {{faker 'random.number'}}\n      },\n      \"RatingAverage\": {{faker 'random.number'}},\n      \"RatingStars\": {{faker 'random.number'}},\n      \"ReasonWhyTemporarilyOffline\": \"\",\n      \"Score\": {{faker 'random.number'}},\n      \"ScoreMetaData\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"SecondDateRank\": {{faker 'random.number'}},\n      \"SecondDateRanking\": {{faker 'random.number'}},\n      \"SendsOnItsWayNotifications\": {{faker 'random.boolean'}},\n      \"ServiceableAreas\": [\n        {}\n      ],\n      \"ShowSmiley\": {{faker 'random.boolean'}},\n      \"SmileyDate\": {},\n      \"SmileyElite\": {{faker 'random.boolean'}},\n      \"SmileyResult\": {},\n      \"SmileyUrl\": {},\n      \"SponsoredPosition\": {{faker 'random.number'}},\n      \"Tags\": [\n        \"\"\n      ],\n      \"UniqueName\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ShortResultText\": \"\",\n  \"Views\": [\n    {\n      \"Components\": {\n        \"Id\": \"\",\n        \"TemplateName\": \"\",\n        \"TrackingId\": \"\",\n        \"Type\": \"\",\n        \"ViewData\": {}\n      },\n      \"Target\": \"\"\n    }\n  ],\n  \"area\": \"\",\n  \"deliveryFees\": {\n    \"restaurants\": {}\n  },\n  \"promotedPlacement\": {\n    \"filteredSearchPromotedLimit\": {{faker 'random.number'}},\n    \"rankedIds\": [\n      {{faker 'random.number'}}\n    ],\n    \"restaurants\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aac596c5-be9c-498e-82f3-668a8f818888",
          "body": "{}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca9f4a7a-eaa4-4558-800b-c1101d96f9f8",
          "body": "{}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e3c7d86-c20e-4c07-a49e-e2c67ad12b8e",
          "body": "{}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "506233a9-2827-49a2-b753-b596aefb120f",
      "documentation": "Set ETA for pickup",
      "method": "put",
      "endpoint": "restaurants/driver/eta",
      "responses": [
        {
          "uuid": "1baedee2-e283-4df4-a369-caacfb88c317",
          "body": "{\n  \"ignoredRestaurantIds\": [\n    \"123\",\n    \"456\"\n  ]\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Update will take effect shortly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d0f81db-2856-4b44-bf19-c91945bcbf42",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "There was something invalid in your request - check response body for details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9038d19-7453-4514-98d3-288e8cbde5dc",
      "documentation": "Get product catalogue",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue",
      "responses": [
        {
          "uuid": "73250734-def6-4e30-8060-71108e67c6b7",
          "body": "{\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2656589-782c-4630-8a6c-bb4b7bb54d09",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No product catalogue found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f61cf79a-1a44-4e44-ae53-9068a101b54a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22748762-b467-49e7-8d26-8bacb96d5e03",
      "documentation": "Get all availabilities",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/availabilities",
      "responses": [
        {
          "uuid": "78a4ab46-db23-4d96-b6b7-ad4739e87e5f",
          "body": "{\n  \"availabilities\": [\n    {\n      \"description\": \"Menu items available for delivery during weekdays for lunch.\",\n      \"id\": \"1-lunch-delivery\",\n      \"name\": \"Delivery Lunch\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"11:30:00\",\n          \"toDateTime\": \"14:30:00\"\n        }\n      ]\n    },\n    {\n      \"description\": \"Menu items available for delivery during weekdays for dinner.\",\n      \"id\": \"1-dinner-delivery\",\n      \"name\": \"Delivery Dinner\",\n      \"serviceTypes\": [\n        \"delivery\"\n      ],\n      \"times\": [\n        {\n          \"daysOfTheWeek\": [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\",\n            \"saturday\",\n            \"sunday\"\n          ],\n          \"fromDateTime\": \"16:30:00\",\n          \"toDateTime\": \"22:00:00\"\n        }\n      ]\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b02b34-b0a8-4b64-9c18-9ad30caabe7c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e92322a-017f-43f9-bcf2-cb6443e3ff27",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfa1a741-8631-4aec-92a1-2676fda2bd37",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abc9a0c7-0d53-4cf2-a290-ba0d523b12a6",
      "documentation": "Get all categories",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories",
      "responses": [
        {
          "uuid": "8311a981-e68d-4d4e-a291-35e13ac0bcc8",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"Sumptuous starters\",\n      \"id\": \"3\",\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"Magnificent mains\",\n      \"id\": \"4\",\n      \"name\": \"Mains\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e0e011d-c07a-4ffa-afea-7dce1b643c6d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f74fba27-6792-416f-b91c-3d1145b6c215",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eeb6a89-4d0f-474d-9f90-24230cfa4842",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a29bf9a3-ef6f-4263-859d-a854605a4df3",
      "documentation": "Get all category item IDs",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/categories/:categoryId/items",
      "responses": [
        {
          "uuid": "f7b6c595-2f98-44c8-ba68-9f751709fbca",
          "body": "{\n  \"itemIds\": [\n    \"65143901\",\n    \"65143902\",\n    \"65143903\",\n    \"65143904\",\n    \"65143905\"\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbe013ca-c6e9-4b01-9309-f910551df84f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "988d532c-352f-442d-a0c7-dab57e539dcf",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No availabilities found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ec35842-2b87-440b-93e3-8e6235a4b275",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3e786e3-689f-43ab-b845-bec1080b1dc5",
      "documentation": "Get all menu items",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items",
      "responses": [
        {
          "uuid": "a61a5512-8d2a-4526-8c93-d1ec92bab538",
          "body": "{\n  \"items\": [\n    {\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1be90b7c-25d1-4fd2-beab-e4ef6b394da5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a30ecb51-9d12-4b9c-9d49-50293330c434",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No menu items found for given tenant and restaurantId.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8e7c5a-1ec0-4702-b5c9-effa847b13eb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27ee0146-95ab-451a-bf23-75a428246e29",
      "documentation": "Get all menu item deal groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups",
      "responses": [
        {
          "uuid": "7c7e2183-1f07-4127-aa3b-fce42289d6ea",
          "body": "{\n  \"dealGroups\": [\n    {\n      \"id\": \"23435309-1\",\n      \"name\": \"Choose your base\",\n      \"numberOfChoices\": 1\n    },\n    {\n      \"id\": \"23435309-2\",\n      \"name\": \"Choose your halves\",\n      \"numberOfChoices\": 2\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aa6ab18-89e0-4e38-a4ac-2b8906fb8517",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dd735e8-86d4-493f-b173-22f572adf14f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa7323cd-e3d3-4d79-98d9-6899ef51aaa9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f49869c7-e6c5-4e58-90d2-93edc74556a5",
      "documentation": "Get all deal item variations for a deal group",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/dealgroups/:dealGroupId/dealitemvariations",
      "responses": [
        {
          "uuid": "b5c1019c-faf1-40f2-b6f8-4783259e92fd",
          "body": "{\n  \"dealItemVariations\": [\n    {\n      \"additionPrice\": 50,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 1,\n      \"minChoices\": 0\n    },\n    {\n      \"additionPrice\": 100,\n      \"dealItemVariationId\": \"8548153\",\n      \"maxChoices\": 2,\n      \"minChoices\": 1\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9590dd69-9b16-45e5-b480-7e6d34496241",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00ab6e59-3693-480c-9e36-68ad638ea24a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No deal item variations found for given `tenant`, `restaurantId`, `itemId` and `dealGroupId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0349c0dd-b6f1-4ef4-961f-f0838d584827",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6146ceb-fcb0-4a31-bc80-bad5642e0623",
      "documentation": "Get all menu item modifier groups",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/modifiergroups",
      "responses": [
        {
          "uuid": "27805581-2a80-4d52-aec6-9be0c98482a1",
          "body": "{\n  \"modifierGroups\": [\n    {\n      \"id\": \"8547130-req-1\",\n      \"maxChoices\": 1,\n      \"minChoices\": 1,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 0,\n          \"id\": \"854500\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Classic Crust\"\n        },\n        {\n          \"additionPrice\": 200,\n          \"id\": \"854600\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Stuffed Crust\"\n        }\n      ],\n      \"name\": \"Choose your crust\"\n    },\n    {\n      \"id\": \"8547130-opt-1\",\n      \"maxChoices\": 10,\n      \"minChoices\": 0,\n      \"modifiers\": [\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1000\",\n          \"maxChoices\": 2,\n          \"minChoices\": 0,\n          \"name\": \"Mozzarella Cheese\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1001\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Ham\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1002\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Red Onion\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1003\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Pepperoni\"\n        },\n        {\n          \"additionPrice\": 50,\n          \"id\": \"1004\",\n          \"maxChoices\": 1,\n          \"minChoices\": 0,\n          \"name\": \"Olives\"\n        }\n      ],\n      \"name\": \"Any extra toppings?\"\n    }\n  ],\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87afb659-a2f7-4eec-9959-dc4a8a45f5d8",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "710c2654-ffe7-4687-bc75-d57cd1f6bb12",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No modifier groups found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72b91b9b-c7c9-41b6-995a-baf3b4e3569d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b386e1f4-3341-4588-bef4-d0f59a353db9",
      "documentation": "Get all menu item variations",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/catalogue/items/:itemId/variations",
      "responses": [
        {
          "uuid": "43110713-d13e-4dce-a84b-8bf849818cfb",
          "body": "{\n  \"paging\": {\n    \"cursors\": {\n      \"after\": \"NDMyNzQyODI3OTQw\"\n    }\n  },\n  \"variations\": [\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 500,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8547121\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"Half\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery\",\n        \"2-lunch-collection\",\n        \"3-dinner-delivery\",\n        \"4-dinner-collection\"\n      ],\n      \"basePrice\": 1000,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": false,\n      \"id\": \"8547130\",\n      \"kitchenNumber\": \"100\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"12 inch\",\n      \"type\": \"variation\"\n    },\n    {\n      \"availabilityIds\": [\n        \"1-lunch-delivery-weekday\",\n        \"2-lunch-collection-weekday\",\n        \"3-dinner-delivery-weekday\",\n        \"4-dinner-collection-weekday\"\n      ],\n      \"basePrice\": 1200,\n      \"dealGroupsIds\": [],\n      \"dealOnly\": true,\n      \"id\": \"8543123\",\n      \"kitchenNumber\": \"200\",\n      \"modifierGroupsIds\": [\n        \"8547130-req-1\",\n        \"8547130-opt-1\"\n      ],\n      \"name\": \"14 inch\",\n      \"type\": \"variation\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6d1cdd0-dcca-4bf0-b7f3-2690385b1810",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc6847b2-c42c-4258-8eb0-f94eb3712122",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "No variations found for given `tenant`, `restaurantId` and `itemId`.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ced247a-e8d7-4162-96c2-bd56f0323ba7",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f36d7c5b-936c-4cc2-95f5-8c95152dd75a",
      "documentation": "Get claims",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims",
      "responses": [
        {
          "uuid": "ce419076-2e3b-41ca-a0ee-5ab6dbbb3977",
          "body": "{\n  \"claims\": [\n    {\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"954226580\",\n      \"id\": \"z2749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"LateOrder\",\n      \"orderId\": \"z27tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 4000\n      },\n      \"restaurantResponse\": {\n        \"decision\": \"Accepted\",\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 4000\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": null,\n          \"decision\": \"NotDecided\",\n          \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Pizza\",\n          \"quantity\": 1,\n          \"reference\": \"productid%t5y6574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"451226580\",\n      \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Damaged\",\n      \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n      \"resolution\": null,\n      \"restaurantResponse\": null,\n      \"state\": \"Open\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 3800\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"151226580\",\n      \"id\": \"1f749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"a23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Rejected\",\n        \"resolvedChannel\": \"PartnerCentre\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 0\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": {\n          \"comments\": null,\n          \"reason\": \"OrderWasHot\"\n        }\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226580\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e034\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorw\",\n      \"resolution\": {\n        \"decision\": \"Accepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    },\n    {\n      \"affectedItems\": [\n        {\n          \"additionalContext\": \"Potato skin was cold\",\n          \"decision\": \"Accepted\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n          \"name\": \"Potato skin\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574596\",\n          \"totalClaimed\": 1900,\n          \"unitPrice\": 2000\n        },\n        {\n          \"additionalContext\": \"Meat was terribly cold\",\n          \"decision\": \"Rejected\",\n          \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\",\n          \"name\": \"Meat\",\n          \"quantity\": 1,\n          \"reference\": \"productid%4t56574593\",\n          \"totalClaimed\": 2900,\n          \"unitPrice\": 3000\n        }\n      ],\n      \"currency\": \"GBP\",\n      \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n      \"friendlyOrderReference\": \"951226588\",\n      \"id\": \"zf749442-a62a-abcd-8623-04202878e038\",\n      \"issueType\": \"Cold\",\n      \"orderId\": \"z23tqoxdoeupdx9w8evorz\",\n      \"resolution\": {\n        \"decision\": \"PartiallyAccepted\",\n        \"resolvedChannel\": \"OrderPad\",\n        \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n        \"totalClaimedAccepted\": 1900\n      },\n      \"restaurantResponse\": {\n        \"items\": [\n          {\n            \"decision\": \"Accepted\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n          },\n          {\n            \"decision\": \"Rejected\",\n            \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\"\n          }\n        ],\n        \"justification\": null\n      },\n      \"state\": \"Closed\",\n      \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n      \"totalClaimed\": 1900\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d54dbdd3-7080-491a-8c6f-34d6f2cd3ae1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. has incorrect date limiter format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170492e5-6a58-422c-8f79-63afadb69680",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e47b651b-a513-42ee-b074-c4610257001c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "209afa73-6e2a-4115-8bec-09e374274a5f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c02e62d-faa7-46df-adef-bd5e2486789a",
      "documentation": "Get order claim",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id",
      "responses": [
        {
          "uuid": "daa5595b-572e-4af1-9f47-620cdbb0f8ec",
          "body": "{\n  \"affectedItems\": [\n    {\n      \"additionalContext\": \"Potato skin was damaged\",\n      \"decision\": \"Rejected\",\n      \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Potato skin\",\n      \"quantity\": 1,\n      \"reference\": \"productid%4t56574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    },\n    {\n      \"additionalContext\": \"Pizza was damaged too\",\n      \"decision\": \"Accepted\",\n      \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\": \"Pizza\",\n      \"quantity\": 1,\n      \"reference\": \"productid%t5y6574596\",\n      \"totalClaimed\": 1900,\n      \"unitPrice\": 2000\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"expirationDate\": \"2020-05-22T14:22:11.1053368+00:00\",\n  \"friendlyOrderReference\": \"451226580\",\n  \"id\": \"2f749442-a62a-abcd-8623-04202878e034\",\n  \"issueType\": \"Damaged\",\n  \"orderId\": \"r23tqoxdoeupdx9w8evorw\",\n  \"resolution\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"resolvedChannel\": \"PartnerCentre\",\n    \"resolvedDate\": \"2020-05-28T06:40:48.1053368+00:00\",\n    \"totalClaimedAccepted\": 1900\n  },\n  \"restaurantResponse\": {\n    \"decision\": \"PartiallyAccepted\",\n    \"items\": [\n      {\n        \"decision\": \"Rejected\",\n        \"id\": \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      },\n      {\n        \"decision\": \"Accepted\",\n        \"id\": \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      }\n    ],\n    \"justification\": {\n      \"comments\": \"The food was packed properly\",\n      \"reason\": \"Other\"\n    }\n  },\n  \"state\": \"Closed\",\n  \"submittedDate\": \"2020-05-20T14:22:11.1053368+00:00\",\n  \"totalClaimed\": 3800\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": ""
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ef8f037-d07b-402b-8ee4-bf6928ecb044",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96aecb00-7ba5-41a5-bb1d-1b83eb6a7a13",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ccb91d0-c3bd-4f90-8276-b6130e318337",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2ca5cdb-1349-4404-81bb-52386fb6e966",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c72d8964-84a3-4455-8dd6-a0760dab86b7",
      "documentation": "Submit a restaurant response for the claim",
      "method": "post",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse",
      "responses": [
        {
          "uuid": "713a492c-0cc1-4034-9ea6-0f8fa2d11093",
          "body": "",
          "latency": 0,
          "statusCode": 201,
          "label": "Request succeeded. Your response to the claim has been submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1a88b3e-4e83-49f4-a243-3e007798429c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. decision value is incorrect",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6de2041b-df24-4884-89dd-f1e35655f4e4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed514d51-5704-4c49-8752-2f94252cd7cc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5445af6-6c9f-4ebe-8f07-c7d371217521",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22144396-0f22-4096-9003-665fa48a7097",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to resolve is has been resolved",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bb7f4ed-1597-4516-acd3-50e087c41c22",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable. The claim you are attempting to update does not contain the items from the request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6adf97a-6ccb-4d4f-8b7d-d549582167f9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bf2def6-9dba-4d6e-8067-d6fcb12f598e",
      "documentation": "Add reason and comments to the response",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/customerclaims/:id/restaurantresponse/justification",
      "responses": [
        {
          "uuid": "da024761-dfcb-4be6-b521-8b5b84f493a4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Request succeeded. Justification was successfully submitted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41195204-f0fc-4968-9f18-de1e22849553",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. Returned if the request is invalid e.g. reason doesn't match any of the predefined values",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "148b8ce7-2369-404e-9e4b-9cf228f82df4",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6898208-c574-4f06-b870-b7f24b3f6eb1",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9c0b285-59d3-4fd5-8102-85e8e8dba2a9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found. Claim could not be found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ace92fb-7c3a-4752-a2ce-55a8850903e5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Conflict. The claim you are attempting to update is older than the current claim. Fetch the last copy of the entity and try the request again.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ba879c3-8790-4e68-af36-2944a27c70be",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d0dd82d-7ca3-4285-87bd-34030e1c8898",
      "documentation": "Get Restaurant Fees",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "33142004-8336-471d-a8cf-35a48f05fc70",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d5c30c4-d7ae-47da-9263-539d9e7b420b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "967dae6f-e8ee-403f-8fb3-032b43adf2f6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed587b41-9059-44f3-ab6d-0c928d5ac6bb",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4d0f2dd-2ce8-45b7-865e-4583aa9fc921",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdd7250-fb93-42e6-82e7-19ded5b4c43b",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc61b4fe-92b9-48b8-aea2-800f10e8fa12",
      "documentation": "Create or Update Restaurant Fees",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/fees",
      "responses": [
        {
          "uuid": "ab361d0c-f551-4826-a69b-fe1ec8b6e56e",
          "body": "{\n  \"bagFee\": {\n    \"description\": \"A charge for bags in delivery\",\n    \"serviceTypes\": {\n      \"collection\": {\n        \"amount\": 5\n      },\n      \"default\": {\n        \"amount\": 0\n      },\n      \"delivery\": {\n        \"amount\": 10\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48943f79-121b-448e-8535-3f5e8eb8e71a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99894b41-14dd-423a-8f6e-1378fca594d9",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee595ed2-fb56-43d6-a577-d523fb7db5da",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0464dbcf-e2e0-40fb-9385-6113dd59cad6",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "674196ca-5ef2-4e26-9933-9fa1a458cccd",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6592c4b-a60d-44fa-93d1-38d261677d86",
      "documentation": "Get the latest version of the restaurant's full menu",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "4520c47d-cbb9-46e5-8b61-bf18435dc8a5",
          "body": "{\n  \"categories\": [\n    {\n      \"description\": \"\",\n      \"id\": \"3\",\n      \"itemIds\": [\n        \"65143901\"\n      ],\n      \"name\": \"Starters\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"4\",\n      \"itemIds\": [\n        \"23435309\",\n        \"33445308\"\n      ],\n      \"name\": \"Deals\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"5\",\n      \"itemIds\": [\n        \"8547130\",\n        \"8547140\"\n      ],\n      \"name\": \"Pizzas\"\n    },\n    {\n      \"description\": \"\",\n      \"id\": \"6\",\n      \"itemIds\": [\n        \"6537130\",\n        \"6537140\"\n      ],\n      \"name\": \"Drinks\"\n    }\n  ],\n  \"currency\": \"GBP\",\n  \"description\": \"My excellent menu\",\n  \"items\": [\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"1577341\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-1\",\n          \"name\": \"Choose your base\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"8547121\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"3547157\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 50,\n              \"dealItemVariationId\": \"8548153\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"23435309-2\",\n          \"name\": \"Choose your halves\",\n          \"numberOfChoices\": 2\n        }\n      ],\n      \"description\": \"Choose each half.\",\n      \"id\": \"23435309\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Half-and-half Pizza\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"23435309-1\",\n            \"23435309-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"23435309\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750011\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"9750021\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"23435309\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-1\",\n          \"name\": \"Choose your pizza\",\n          \"numberOfChoices\": 1\n        },\n        {\n          \"dealItemVariations\": [\n            {\n              \"additionPrice\": 13,\n              \"dealItemVariationId\": \"6537130\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"6537140\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            },\n            {\n              \"additionPrice\": 0,\n              \"dealItemVariationId\": \"7739164\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0\n            }\n          ],\n          \"id\": \"33445308-2\",\n          \"name\": \"Choose your drink\",\n          \"numberOfChoices\": 1\n        }\n      ],\n      \"description\": \"Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.\",\n      \"id\": \"33445308\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"14 inch Pizza & A Drink For 1\",\n      \"type\": \"deal\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\"\n          ],\n          \"basePrice\": 3099,\n          \"dealGroupsIds\": [\n            \"33445308-1\",\n            \"33445308-2\"\n          ],\n          \"dealOnly\": false,\n          \"id\": \"33445308\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"65143901\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"65143901-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"834502\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pitta Bread\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835700\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Sourdough\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"835601\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Wholemeal\"\n            }\n          ],\n          \"name\": \"Choose your bread\"\n        },\n        {\n          \"id\": \"65143901-req-2\",\n          \"maxChoices\": 2,\n          \"minChoices\": 2,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835340\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Tzatziki\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"835341\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Taramasalata\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825344\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Hummus\"\n            },\n            {\n              \"additionPrice\": 0,\n              \"id\": \"825346\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Onion\"\n            }\n          ],\n          \"name\": \"Choose your dips\"\n        }\n      ],\n      \"name\": \"Flat Bread and Dips (Pick any 2 Dips)\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 650,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"65143901\",\n          \"kitchenNumber\": \"90\",\n          \"modifierGroupsIds\": [\n            \"65143901-req-1\",\n            \"65143901-req-2\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"1577341\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"1577341-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Crust\"\n        }\n      ],\n      \"name\": \"Base\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"1577341\",\n          \"modifierGroupsIds\": [\n            \"1577341-req-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547130\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547130-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547130-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Margherita\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8547121\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547130\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery-weekday\",\n            \"2-lunch-collection-weekday\",\n            \"3-dinner-delivery-weekday\",\n            \"4-dinner-collection-weekday\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8543123\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547130-req-1\",\n            \"8547130-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"8547140\",\n      \"labels\": [],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 200,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 4,\n              \"minChoices\": 2,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        },\n        {\n          \"id\": \"9755052-req-1\",\n          \"maxChoices\": 1,\n          \"minChoices\": 1,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 0,\n              \"id\": \"854500\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Classic Crust\"\n            },\n            {\n              \"additionPrice\": 250,\n              \"id\": \"854600\",\n              \"maxChoices\": 1,\n              \"minChoices\": 0,\n              \"name\": \"Stuffed Crust\"\n            }\n          ],\n          \"name\": \"Choose your crust\"\n        },\n        {\n          \"id\": \"9755052-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 70,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Double Pepperoni\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"8548153\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"Half\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1000,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"8547140\",\n          \"kitchenNumber\": \"100\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"12 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"9750021\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"8547140-req-1\",\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"14 inch\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 1200,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9755052\",\n          \"kitchenNumber\": \"200\",\n          \"modifierGroupsIds\": [\n            \"9755052-req-1\",\n            \"9755052-opt-1\"\n          ],\n          \"name\": \"18 inch\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"3547157\",\n      \"labels\": [\n        \"vegetarian\"\n      ],\n      \"modifierGroups\": [\n        {\n          \"id\": \"8547140-opt-1\",\n          \"maxChoices\": 10,\n          \"minChoices\": 0,\n          \"modifiers\": [\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1000\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Mozzarella Cheese\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1001\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Ham\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1002\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Red Onion\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1003\",\n              \"maxChoices\": 2,\n              \"minChoices\": 0,\n              \"name\": \"Pepperoni\"\n            },\n            {\n              \"additionPrice\": 50,\n              \"id\": \"1004\",\n              \"maxChoices\": 2,\n              \"minChoices\": 1,\n              \"name\": \"Olives\"\n            }\n          ],\n          \"name\": \"Any extra toppings?\"\n        }\n      ],\n      \"name\": \"Vegetarian\",\n      \"requireOtherProducts\": false,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 500,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": true,\n          \"id\": \"3547157\",\n          \"kitchenNumber\": \"121\",\n          \"modifierGroupsIds\": [\n            \"8547140-opt-1\"\n          ],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537130\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Coca-Cola\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537130\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750011\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"6537140\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Diet Coke\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 100,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"6537140\",\n          \"kitchenNumber\": \"300\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"0.33L\",\n          \"type\": \"variation\"\n        },\n        {\n          \"availabilityIds\": [\n            \"1-lunch-delivery\",\n            \"2-lunch-collection\",\n            \"3-dinner-delivery\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"9750312\",\n          \"kitchenNumber\": \"400\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"1.5L\",\n          \"type\": \"variation\"\n        }\n      ]\n    },\n    {\n      \"dealGroups\": [],\n      \"description\": \"\",\n      \"id\": \"7739164\",\n      \"labels\": [],\n      \"modifierGroups\": [],\n      \"name\": \"Bottle of Lager\",\n      \"requireOtherProducts\": true,\n      \"type\": \"menuItem\",\n      \"variations\": [\n        {\n          \"availabilityIds\": [\n            \"2-lunch-collection\",\n            \"4-dinner-collection\"\n          ],\n          \"basePrice\": 300,\n          \"dealGroupsIds\": [],\n          \"dealOnly\": false,\n          \"id\": \"7739164\",\n          \"kitchenNumber\": \"700\",\n          \"modifierGroupsIds\": [],\n          \"name\": \"\",\n          \"type\": \"noVariation\"\n        }\n      ]\n    }\n  ],\n  \"name\": \"My Restaurant\",\n  \"restaurantId\": \"100059\"\n}",
          "latency": 0,
          "statusCode": 301,
          "label": "Temporary Redirect. The redirect will contain the signed URL that the client needs to access the resource",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0ceb53c-814b-4698-ae76-9757524acac7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request. We were unable to process the request due to data you sent us",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4724dbe-bdb6-4370-a5a4-6b76960bfed9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34673d76-0b5b-4620-aa74-41f7d02296c3",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ea4a040-5502-4178-ae4f-2dbe1fcc0dab",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a07938e5-3896-4ff2-93df-f3c4f8426afa",
      "documentation": "Create or update a menu",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/menu",
      "responses": [
        {
          "uuid": "cc294e91-2150-479c-96a0-446f16a072cc",
          "body": "{\n  \"correlationId\": \"64bef5ee-7265-47f8-9aee-28bc74f00b13\"\n}",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1824835-9dc5-47b8-9d3c-ba75e9299364",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "496de6dc-acae-4ada-853b-8cc25eccb9af",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "474e0a20-ef18-4585-b787-a86dba75a4c9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22363a6e-38fe-4ade-b0a3-3f24d949f882",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"codeText\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b01dae5-12c4-4fdf-b070-b43f1343e52a",
      "documentation": "Get the restaurant's delivery and collection lead times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes",
      "responses": [
        {
          "uuid": "acd50d8d-279b-4c7a-bddb-17047e41843f",
          "body": "[\n  {\n    \"dayOfWeek\": \"Monday\",\n    \"lowerBoundMinutes\": 35,\n    \"serviceType\": \"Delivery\",\n    \"upperBoundMinutes\": 50\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c22da0a-854f-43df-8a57-9c9f64821a74",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2726a0b0-5249-48cb-9389-64cbd6a8021c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden - the restaurant still uses deprecated approach of Lunch and Night menus",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "911bdbbd-4b99-4680-b91c-0e157df6880f",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5e638b4-4202-4e20-bfc4-eadd2cb53c3e",
      "documentation": "Update the restaurant's delivery and collection lead times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/ordertimes/:dayOfWeek/:serviceType",
      "responses": [
        {
          "uuid": "ac267e5e-4d72-4887-959e-14758e17d86f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d614698e-b931-4796-b198-37f38db517b0",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd3acf38-60e8-491b-90ad-7ecf248ff37d",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized. The client did not provide an authentication token or the token was invalid",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b334719-7c21-4485-bbb7-647b68dfd7f2",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. The client is not allowed to perform this action",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd3fc263-7ba9-4d5f-9214-2cec91d4b668",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d024fb2f-c5c6-4d88-b8ac-720c158e5dc4",
      "documentation": "Get service times",
      "method": "get",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "2c663026-e1d2-47a8-b0af-23f7a5e660e8",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The restaurant's service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38e26823-022c-4b6a-ba01-b8115dabd65f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bb42b12-6541-4560-acd9-f0216eb89fa5",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b813e5a-6eb6-4d0d-b8ac-aabbcf5f6519",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2b5df41-58e0-4278-8dd9-a9b09567ed06",
      "documentation": "Create or update service times",
      "method": "put",
      "endpoint": "restaurants/:tenant/:restaurantId/servicetimes",
      "responses": [
        {
          "uuid": "eec3bcb2-5d77-4eb7-b8c7-6611d9bca8d5",
          "body": "{\n  \"desiredServiceTimes\": {\n    \"friday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"monday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"saturday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"sunday\": {\n      \"collection\": [\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"12:00:00\"\n        }\n      ]\n    },\n    \"thursday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"tuesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    },\n    \"wednesday\": {\n      \"collection\": [\n        {\n          \"end\": \"14:00:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"23:00:00\",\n          \"start\": \"17:00:00\"\n        }\n      ],\n      \"delivery\": [\n        {\n          \"end\": \"13:30:00\",\n          \"start\": \"12:00:00\"\n        },\n        {\n          \"end\": \"00:00:00\",\n          \"start\": \"18:00:00\"\n        }\n      ]\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new service times",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d681743-230c-42b9-8ef0-d192626025f3",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97a1b9f4-bf35-4ca1-97fa-730672e4524b",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a79324f-bdd1-4197-aa54-cfa85e0d3d5a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16db91c6-19b8-47e7-b98c-ca1b8ef6a63a",
      "documentation": "Get auto-completed search terms",
      "method": "get",
      "endpoint": "search/autocomplete/:tenant",
      "responses": [
        {
          "uuid": "88406d54-1dff-4a3d-9cb0-f19cf2f260a2",
          "body": "{\n  \"terms\": [\n    {\n      \"classification\": \"Restaurant\",\n      \"term\": \"Pizza Palace\"\n    },\n    {\n      \"classification\": \"Cuisine\",\n      \"term\": \"Pizza\"\n    },\n    {\n      \"classification\": \"Dish\",\n      \"term\": \"Large Hawaiian\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3984bcdb-b98c-466b-a0e6-5d3876ca13cc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\",\n        \"fields\": [\n          \"\"\n        ]\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb25bc6d-1e60-486f-adba-68ac491e671c",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af13823b-2749-402e-a5cf-a417065e8343",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d01f2b-cbc2-49c5-a30c-935b26c7497b",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd3efd90-f45d-45bd-8f2a-6d03768a94e2",
      "documentation": "Search restaurants",
      "method": "get",
      "endpoint": "search/restaurants/:tenant",
      "responses": [
        {
          "uuid": "6220cfbb-25b0-46ef-a56d-8d13aa7682b6",
          "body": "{\n  \"restaurants\": [\n    {\n      \"isSponsored\": true,\n      \"products\": [\n        {\n          \"fullName\": \"Chicken Korma\",\n          \"price\": 799,\n          \"productId\": \"289347\"\n        },\n        {\n          \"fullName\": \"Chicken Madras\",\n          \"price\": 699,\n          \"productId\": \"563454\"\n        }\n      ],\n      \"restaurantId\": \"110230\"\n    },\n    {\n      \"isSponsored\": false,\n      \"products\": [\n        {\n          \"fullName\": \"BBQ Chicken Pizza\",\n          \"price\": 1099,\n          \"productId\": \"67832\"\n        },\n        {\n          \"fullName\": \"Chicken Burger\",\n          \"price\": 899,\n          \"productId\": \"23567\"\n        }\n      ],\n      \"restaurantId\": \"229390\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "cache-control",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be9f064f-9520-4e3f-9dfd-0e691dc29efc",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12943129-1cea-452b-8241-8fcd916d716a",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80c8af46-0051-416e-b3fe-ea49ecfc8f31",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"\",\n        \"errorCode\": \"\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Unprocessable Entity - search term rejected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00770065-b7c4-4d3c-9aa8-a25efb96db71",
          "body": "{\n  \"fault\": {\n    \"errors\": [\n      {\n        \"description\": \"{{oneOf (array 'Internal Server Error')}}\"\n      }\n    ],\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3b06674-bb7d-4710-98b8-538704ceff07",
          "body": "{\n  \"fault\": {\n    \"faultId\": \"\",\n    \"traceId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "Service Unavailable",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "466c76f4-75f9-4c71-b768-6d981e5d63f4",
      "documentation": "Send to POS failed",
      "method": "post",
      "endpoint": "send-to-pos-failed",
      "responses": [
        {
          "uuid": "1f1df4c1-91a7-403b-8a26-09f36fe8fbed",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Respond with a 200 status code to indicate that you have received the notification.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "292dd9a2-b973-454f-bf8a-ec375691859f",
      "documentation": "Create Offline Event",
      "method": "post",
      "endpoint": "v1/:tenant/restaurants/event/offline",
      "responses": [
        {
          "uuid": "82e6b2c4-1cff-40cb-b052-caffd88bc88b",
          "body": "{\n  \"restaurantEventId\": \"03bff206-d136-405f-b789-95190e9711a4\",\n  \"restaurantIds\": \"12345\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d08e76d-5180-4b78-a566-7b836c0389a2",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8140b75b-d9fa-4e9e-ace4-dedb278f6a93",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfea6ad0-c762-42b9-80f1-b101ff6c8b53",
      "documentation": "Delete Offline Event",
      "method": "delete",
      "endpoint": "v1/:tenant/restaurants/:id/event/offline",
      "responses": [
        {
          "uuid": "965debad-83e7-4c7a-9b49-d1fa79355083",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No Events to Delete",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8aa48837-2f4b-4ba6-871e-1775014b8707",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Request Succeeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca8fb683-fa5f-4cef-959b-4ffd3c47636f",
          "body": "[\n  {\n    \"attemptedValue\": null,\n    \"customState\": null,\n    \"errorCode\": \"NotEmptyValidator\",\n    \"errorMessage\": \"TestProperty is empty\",\n    \"formattedMessageArguments\": [],\n    \"formattedMessagePlaceHolderValues\": {\n      \"PropertyName\": \"User Role\",\n      \"PropertyValue\": null\n    },\n    \"propertyName\": \"TestProperty\",\n    \"resourceName\": null,\n    \"severity\": 0\n  }\n]",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a22a0e5-dbe9-447d-a6f9-250336eafc5d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ddca4e7f-89af-415d-8d37-52a1a527598c",
      "documentation": "Delivery Attempt Failed",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery",
      "responses": [
        {
          "uuid": "156bc8fd-c33e-4023-849a-ea8955b3a3bc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce7a78e4-fac7-4f46-84ea-f5208302e961",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "243cd22a-b4a7-43de-b85d-5d0d5193ff9d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "424a0f3e-1e4e-4aea-855a-e54550a79cd2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20422849-ccff-458e-9d18-87cab5107fd1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b3bb654-c973-45e6-82a5-d8c7b92d5c25",
      "documentation": "Request Redelivery of the Order",
      "method": "post",
      "endpoint": ":tenant/orders/:orderId/queries/attempteddelivery/resolution/redeliverorder",
      "responses": [
        {
          "uuid": "e2adc58f-dc30-4826-a474-3915aa9d033e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc681926-ff5c-4db6-a5a3-d4872ff5adec",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - returned if providing invalid data such as an unacceptable reason code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f22254e-89e2-44e0-abcc-f936809739c7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - consumer has not provided the necessary credentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4cadfd0-3202-4d6b-bda7-458989afc6f9",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Resource not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4f38558-9443-4917-852c-2b55a7444a2f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}