{
  "uuid": "38d07a58-64ee-485a-8bee-ef75c2d63055",
  "lastMigration": 19,
  "name": "ExpressRouteCrossConnection REST APIs",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "03fc4015-5a43-48e0-a81b-4bc9d513edfc",
      "documentation": "Retrieves all the ExpressRouteCrossConnections in a subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Network/expressRouteCrossConnections",
      "responses": [
        {
          "uuid": "e5da6ce6-2f07-4707-8a2c-c77892d300e6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f07009fd-c1ee-4d0e-a1f8-6738b366fb24",
      "documentation": "Retrieves all the ExpressRouteCrossConnections in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections",
      "responses": [
        {
          "uuid": "c33db7cb-ed99-4c39-a282-8aa6480d83a2",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful.The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fcca623-60f8-4482-8579-b4ad9eadf207",
      "documentation": "Gets details about the specified ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "c0e95e69-3396-40e3-b51f-7a4cab4a7a4d",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a047c328-1495-4174-8014-f11397770d13",
      "documentation": "Updates an express route cross connection tags.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "1704136d-6c2c-430e-9c19-9a7b47a9c223",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c5fa702-b59d-4ab1-be9c-8c99471c86bd",
      "documentation": "Update the specified ExpressRouteCrossConnection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "54389d1a-5767-4669-8755-532e56f483aa",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c5e8745d-a9da-4138-879b-2e6c8866ecb1",
      "documentation": "Gets all peerings in a specified ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings",
      "responses": [
        {
          "uuid": "71215b79-bed6-4008-bfd1-a0075ae47e7c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of ExpressRouteCrossConnectionPeering resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cc30266-7a54-4064-a785-6ef4beb32a5d",
      "documentation": "Deletes the specified peering from the ExpressRouteCrossConnection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "e9c3d33f-3b2f-462d-a225-8ec12150fcbc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64746bb2-50cc-4ff7-8852-522c3b8bf7bb",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e69bb88-e520-4bb3-992c-abf769c48c1d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e607e0b9-28ad-4d8c-bcd2-f8e2edee357b",
      "documentation": "Gets the specified peering for the ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "1ec7c124-0f10-4a86-be43-7d175c2a67b8",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceedfd92-ec93-4879-88b8-041b84b4ffc1",
      "documentation": "Creates or updates a peering in the specified ExpressRouteCrossConnection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "c848320a-3272-4d12-a7c3-3e1141f306c6",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b88a0ad-0ba0-4983-a6b5-bd8f6c64531e",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce1dd559-8d54-4c6f-84d2-338da77685ac",
      "documentation": "Gets the currently advertised ARP table associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/arpTables/:devicePath",
      "responses": [
        {
          "uuid": "fa276548-34cd-4f5d-9e69-90051c3d8215",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"age\": {{faker 'random.number'}},\n      \"interface\": \"\",\n      \"ipAddress\": \"\",\n      \"macAddress\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsArpTable resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9227886-7c7e-4281-bc11-61065192c096",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4006a063-6366-4dda-a2b8-afe038349997",
      "documentation": "Gets the currently advertised routes table associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/routeTables/:devicePath",
      "responses": [
        {
          "uuid": "2544d7f4-eedb-4c6a-886f-103fe71b000e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"locPrf\": \"\",\n      \"network\": \"\",\n      \"nextHop\": \"\",\n      \"path\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTable resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bcb876d-0e4c-4fee-9a88-a810e6573e49",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f742346-b0e0-4142-bad6-ba2f7ddb846c",
      "documentation": "Gets the route table summary associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/routeTablesSummary/:devicePath",
      "responses": [
        {
          "uuid": "09f1191f-19b1-44b3-9578-8b2bd0c91e7e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"asn\": {{faker 'random.number'}},\n      \"neighbor\": \"\",\n      \"stateOrPrefixesReceived\": \"\",\n      \"upDown\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTableSummary resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "064f5b5d-6bd4-4c41-81bd-a10193e95476",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}