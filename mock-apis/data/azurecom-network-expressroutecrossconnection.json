{
  "uuid": "c2801688-6e6d-4da9-a5fc-dd4e00ddc0b2",
  "lastMigration": 19,
  "name": "ExpressRouteCrossConnection REST APIs",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "79819dde-4aef-4d5a-a9a7-785c8f6aab5c",
      "documentation": "Retrieves all the ExpressRouteCrossConnections in a subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.Network/expressRouteCrossConnections",
      "responses": [
        {
          "uuid": "c9b30242-8215-46c5-a728-b0abcd25c5a6",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8310074d-796d-409e-9799-3b5863c9d48b",
      "documentation": "Retrieves all the ExpressRouteCrossConnections in a resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections",
      "responses": [
        {
          "uuid": "b4d33d27-6e58-405b-abd1-de5d810c20b8",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful.The operation returns a list of ExpressRouteCrossConnection resources. If there are no cross connection resources an empty list is returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c71213a3-3f7c-4774-b652-e896fd10d358",
      "documentation": "Gets details about the specified ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "a1584d07-1bfb-44d9-87e5-32b928180045",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ade1f00e-b350-43b8-a3da-34a512fe9f0f",
      "documentation": "Updates an express route cross connection tags.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "d1e21567-dd03-4c2b-ad81-14ff32386231",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33ea8ad5-6b00-4701-9d82-b59df36bde27",
      "documentation": "Update the specified ExpressRouteCrossConnection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName",
      "responses": [
        {
          "uuid": "5ccba67a-638c-450e-9eab-3a923e405dfc",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnection resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd6c51e1-a5b0-425a-8141-d5ce67673687",
      "documentation": "Gets all peerings in a specified ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings",
      "responses": [
        {
          "uuid": "ccf926ac-a16f-4fea-9046-152f7b48893e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns a list of ExpressRouteCrossConnectionPeering resources.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16309666-0bf8-4eda-b014-c86fe3ba835b",
      "documentation": "Deletes the specified peering from the ExpressRouteCrossConnection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "9615d7ae-316d-4184-90b8-83feafe9fd34",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14a305f6-2575-4384-bd37-bd996841854a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3f25989-de8d-4cd9-9746-49e02ae8b7e0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Delete successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c28f969-e9bc-413d-b3cc-b73c924deeb7",
      "documentation": "Gets the specified peering for the ExpressRouteCrossConnection.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "21a0ca49-3934-4aae-a740-20c669e84768",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60719dec-8fd9-4720-93c2-b17fb872b9c1",
      "documentation": "Creates or updates a peering in the specified ExpressRouteCrossConnection.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName",
      "responses": [
        {
          "uuid": "9f2cae21-0a8e-479d-b57b-5ea209fd27fc",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b82fd2-dfdf-4eb7-93a5-422942ddc6f7",
          "body": "{\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Create successful. The operation returns the resulting ExpressRouteCrossConnectionPeering resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3cf8ee3-9b0c-4166-a316-d231d8eb4721",
      "documentation": "Gets the currently advertised ARP table associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/arpTables/:devicePath",
      "responses": [
        {
          "uuid": "39fe45ce-c7be-473c-b282-e570acaa6f5c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"age\": {{faker 'random.number'}},\n      \"interface\": \"\",\n      \"ipAddress\": \"\",\n      \"macAddress\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsArpTable resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cd0d41d-c9a2-418f-9465-c17a887b203c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b0ebbf3-94be-4050-a5a6-8661491c9317",
      "documentation": "Gets the currently advertised routes table associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/routeTables/:devicePath",
      "responses": [
        {
          "uuid": "37e7d4af-a423-48e8-9f7e-e5dbda8549c8",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"locPrf\": \"\",\n      \"network\": \"\",\n      \"nextHop\": \"\",\n      \"path\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTable resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59c24b31-b0cf-4c3f-bd5a-7b1252e5b0ba",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49835405-38fa-45e4-947d-fbd4edfcfbce",
      "documentation": "Gets the route table summary associated with the express route cross connection in a resource group.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Network/expressRouteCrossConnections/:crossConnectionName/peerings/:peeringName/routeTablesSummary/:devicePath",
      "responses": [
        {
          "uuid": "11bea2a4-a0c5-46d7-9ccb-6e1e6244cce4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"asn\": {{faker 'random.number'}},\n      \"neighbor\": \"\",\n      \"stateOrPrefixesReceived\": \"\",\n      \"upDown\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful. The operation returns the resulting ExpressRouteCrossConnectionsRouteTableSummary resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a08ee0f-91be-4fa5-a126-dacad320ef28",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Accepted and the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}