{
  "uuid": "bfa1e411-82de-4875-9590-afe144074979",
  "lastMigration": 19,
  "name": "Catalog Inventory",
  "endpointPrefix": "/api/catalog-inventory/v1.0",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "36d7d226-1a6a-4e85-b89e-eaf2e7ade263",
      "documentation": "Perform a GraphQL Query",
      "method": "post",
      "endpoint": "graphql",
      "responses": [
        {
          "uuid": "dbe4765b-20f7-40fb-b3d8-f108553942f7",
          "body": "{\n  \"data\": {},\n  \"errors\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GraphQL Query Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7f990ac-cc42-445f-b72c-f9aeb6cdea9c",
      "documentation": "Return this API document in JSON format",
      "method": "get",
      "endpoint": "openapi.json",
      "responses": [
        {
          "uuid": "18b0ca48-db38-491c-97c4-98304831725e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The API document for this version of the API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ad95d94-7b3e-4b7c-a522-9acb93816333",
      "documentation": "List ServiceCredentialTypes",
      "method": "get",
      "endpoint": "service_credential_types",
      "responses": [
        {
          "uuid": "877040bd-4101-40fd-a97f-0684d5e7ee41",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"namespace\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialTypes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a93a2955-329f-4751-942a-b9f210f5d924",
      "documentation": "Show an existing ServiceCredentialType",
      "method": "get",
      "endpoint": "service_credential_types/:id",
      "responses": [
        {
          "uuid": "3576f38e-cdbb-472f-b782-009eeebfa732",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"kind\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"namespace\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialType info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37c3da53-4eb9-45c7-b6f5-a4fbd686aee1",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a62960f7-47d8-47b1-aaf7-b6fdae303153",
      "documentation": "List ServiceCredentials",
      "method": "get",
      "endpoint": "service_credentials",
      "responses": [
        {
          "uuid": "2c99448d-bc00-4803-aa9b-46ec6eca9432",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"service_credential_type_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"type_name\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentials collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b79195f-246f-4a43-90d8-6c1aa9d823e7",
      "documentation": "Show an existing ServiceCredential",
      "method": "get",
      "endpoint": "service_credentials/:id",
      "responses": [
        {
          "uuid": "111c3fba-defc-42e9-b3c2-2e2f493edf4b",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"service_credential_type_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"type_name\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredential info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0e91e9b-1d07-4637-b448-98b5fff4cd0a",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ab4b9a6-22f6-4bd3-a917-5b6486fb9284",
      "documentation": "List ServiceInstances",
      "method": "get",
      "endpoint": "service_instances",
      "responses": [
        {
          "uuid": "5c6b341b-7802-4e37-b1f3-b56935494206",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79235d5e-4e35-4984-9330-4297061b4d02",
      "documentation": "Show an existing ServiceInstance",
      "method": "get",
      "endpoint": "service_instances/:id",
      "responses": [
        {
          "uuid": "da215f12-99db-4faa-9bb9-44b6b5ee9111",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"external_url\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample ServiceInstance\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_instance_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"service_plan_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'random.uuid'}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstance info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ac8eb27-5695-4528-aa1e-f2f9315056b5",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d79b3bb-f915-4a11-9d0d-8aa2da1fc04b",
      "documentation": "List ServiceInventories",
      "method": "get",
      "endpoint": "service_inventories",
      "responses": [
        {
          "uuid": "302fd604-1f41-48de-be6f-dbec0fe7286a",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d20f89ae-b292-4869-8c4a-b8f0c44bcbbe",
      "documentation": "Show an existing ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id",
      "responses": [
        {
          "uuid": "01276eb8-b553-4b90-b702-38f01b44abf8",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventory info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dac5ea6c-1855-42c4-8f20-87dd0ff12e6d",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eac8f216-993b-44ba-8a91-04d3a78873d2",
      "documentation": "Tag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/tag",
      "responses": [
        {
          "uuid": "d6d13337-47cd-4df5-a781-cbb9d5d17c9d",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "ServiceInventory tagged successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a5ef196-4dbd-4f03-be0e-547d2491cc7e",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "Not modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76416cea-8b41-40ad-b286-6aa1c97c718e",
      "documentation": "List Tags for ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id/tags",
      "responses": [
        {
          "uuid": "0fe84e66-d209-4fc6-ac46-1f15684f3b5f",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93220b04-a74a-4c65-9852-a8a7ef6a0d31",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "119fafaa-4edb-4dd1-ac1b-f35047512567",
      "documentation": "Untag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/untag",
      "responses": [
        {
          "uuid": "6db17239-da0c-4f83-94fb-aff99ad9fe90",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "ServiceInventory untagged successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "827b0f20-269f-4e7d-a444-90696285dd2d",
      "documentation": "List ServiceOfferingNodes",
      "method": "get",
      "endpoint": "service_offering_nodes",
      "responses": [
        {
          "uuid": "c613276d-d889-45b1-8983-681cb5821a61",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fff4b714-bc35-4431-b317-b5a49a49747d",
      "documentation": "Show an existing ServiceOfferingNode",
      "method": "get",
      "endpoint": "service_offering_nodes/:id",
      "responses": [
        {
          "uuid": "fea50771-5b96-4980-9b3b-478ebb5ed9b4",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_offering_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNode info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9709dcbb-a4c0-4c58-95f5-d679b86db537",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8b1368b-50e6-4e33-b74c-08f7bd54e641",
      "documentation": "List ServiceOfferings",
      "method": "get",
      "endpoint": "service_offerings",
      "responses": [
        {
          "uuid": "d73d535a-f123-4753-93e9-7bb2d36d16b3",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7aa4af62-366a-4f1c-b151-687d419cad58",
      "documentation": "Show an existing ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id",
      "responses": [
        {
          "uuid": "856ffa00-59c1-4d50-9533-82e028e35e6d",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a short description\",\n  \"display_name\": \"MariaDB (Ephemeral)\",\n  \"distributor\": \"Red Hat, Inc.\",\n  \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n  \"name\": \"Sample Service Offering\",\n  \"refresh_state_part_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"object-12345_67890\",\n  \"support_url\": \"https://access.redhat.com\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOffering info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e36302ca-71a8-43be-8e47-ae5af66036b6",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd8e3210-053f-4cad-97cc-a6cc6627eb4a",
      "documentation": "Invokes computing of ServiceInventories tags for given ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/applied_inventories_tags",
      "responses": [
        {
          "uuid": "aaac6c72-9e1b-44a6-8819-1e81a43dbf11",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of inventories tags for the computing result",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "756dd737-5495-4db9-acdf-be09a034f38f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "940245eb-2ccf-4758-b320-351e1dbe55b3",
      "documentation": "Order an existing ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/order",
      "responses": [
        {
          "uuid": "c09074aa-90a4-40e8-8867-73a19acafe53",
          "body": "{\n  \"task_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a task ID for the order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d86d461-010b-40ac-9dc8-71491e4761ed",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ce4ee8f-129c-4bba-b126-f8e1f52d1cf9",
      "documentation": "List ServiceInstances for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_instances",
      "responses": [
        {
          "uuid": "c77a88eb-7286-42af-9368-2b3635716b39",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e0d9167-5114-4457-851c-45f36adbc7dc",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ebdd620-4519-42ae-8e80-5e8413c818e9",
      "documentation": "List ServiceOfferingNodes for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "59dac1b2-0e0a-494c-937d-2b431eb118e8",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79ae51c7-5e45-426f-a550-42659b53d509",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "538afa8f-4484-40a2-b87f-551f5e5eee72",
      "documentation": "List ServicePlans for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_plans",
      "responses": [
        {
          "uuid": "56859ae0-2bec-4fbe-8c37-96d74b8d9533",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df1c9a6c-4d31-49bb-b745-865777b6ade6",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13c2e563-f7e6-4882-95d7-f2d47d2d3fef",
      "documentation": "List ServicePlans",
      "method": "get",
      "endpoint": "service_plans",
      "responses": [
        {
          "uuid": "93c4fb7d-5356-4e94-a94c-b9f5c9eac7f4",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7186abf-0b38-4846-9905-47742d0db61a",
      "documentation": "Show an existing ServicePlan",
      "method": "get",
      "endpoint": "service_plans/:id",
      "responses": [
        {
          "uuid": "f024894a-6e04-45b8-a20b-447c3e46204e",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"create_json_schema\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a sample description for a provider\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample Provider\",\n  \"refresh_state_part_id\": \"\",\n  \"resource_version\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'random.uuid'}}\",\n  \"update_json_schema\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlan info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e25974d0-b5d9-4e8f-9e49-b0e3044fe912",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1c48936-54ec-44b5-8228-1f51e0062842",
      "documentation": "List Sources",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "68a596a3-621c-49bc-9758-73e7254f0e0d",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"availability_message\": \"\",\n      \"availability_status\": \"The availability status of source\",\n      \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"enabled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"info\": \"The version of Tower being used\",\n      \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_refresh_message\": \"\",\n      \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"The Source Name\",\n      \"previous_sha\": \"\",\n      \"previous_size\": {{faker 'random.number'}},\n      \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_state\": \"\",\n      \"refresh_task_id\": \"{{faker 'random.uuid'}}\",\n      \"uid\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sources collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1635d67-64a3-4900-b8d1-777d1bc50ddc",
      "documentation": "Show an existing Source",
      "method": "get",
      "endpoint": "sources/:id",
      "responses": [
        {
          "uuid": "abb5e336-f18d-4754-a6a6-4b4f380dacca",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"availability_message\": \"\",\n  \"availability_status\": \"The availability status of source\",\n  \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"enabled\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"info\": \"The version of Tower being used\",\n  \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_refresh_message\": \"\",\n  \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"The Source Name\",\n  \"previous_sha\": \"\",\n  \"previous_size\": {{faker 'random.number'}},\n  \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_state\": \"\",\n  \"refresh_task_id\": \"{{faker 'random.uuid'}}\",\n  \"uid\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Source info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17330972-b1bc-4fca-959d-06eb004fe465",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64b4875c-f818-4b96-836d-a36998ebc5af",
      "documentation": "Incremental Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/incremental_refresh",
      "responses": [
        {
          "uuid": "17bab86f-8449-4b5c-8032-deeb521ce075",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f088f819-79d7-4865-bc7a-c553b99e9c30",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfcb80cc-9882-48b2-a812-4e7a53555460",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae02a72a-55cf-4d38-bcaa-64ea42a74b70",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5962b4b3-c0a5-48d7-8c1e-796301e1d270",
      "documentation": " Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/refresh",
      "responses": [
        {
          "uuid": "a7a03e37-8904-464f-8949-1e8483e29342",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad8aa598-b728-4c79-accd-a16485810490",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1a14c9a-4a2c-4a67-a119-d590e8461932",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c1ceacc-af93-4c74-b62f-4e8ef21c4fe7",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cef93bfa-b309-400a-90ab-de692d8b38de",
      "documentation": "List ServiceInstances for Source",
      "method": "get",
      "endpoint": "sources/:id/service_instances",
      "responses": [
        {
          "uuid": "0f24ce06-1e95-4734-a03f-bd5065c41820",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72681ae4-b821-41bd-aa9b-7faa02af27fc",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59cd939d-5aae-470d-99ff-4ca2673c8737",
      "documentation": "List ServiceInventories for Source",
      "method": "get",
      "endpoint": "sources/:id/service_inventories",
      "responses": [
        {
          "uuid": "53437e1d-2594-4bd0-9754-6b2381b8d700",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21c9330e-f5d8-4cea-bb74-4aac1debca59",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e87c736-f1e1-41b4-842e-f853a7125af8",
      "documentation": "List ServiceOfferingNodes for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "61adcc28-e458-4a24-8c51-35f0a60eef80",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4296c45-8708-4b9e-9439-05aabb07b0e5",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f601a802-5922-45ea-bfb8-fa66e9bd6b8d",
      "documentation": "List ServiceOfferings for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offerings",
      "responses": [
        {
          "uuid": "5d42c098-ad05-4181-aca6-e0fed9494072",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bff7cb44-840a-469c-8b67-eecef034fd02",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdb58acc-cf18-4e14-b858-6636f257128a",
      "documentation": "List ServicePlans for Source",
      "method": "get",
      "endpoint": "sources/:id/service_plans",
      "responses": [
        {
          "uuid": "62b8b9de-1e14-4171-ab16-bb39eadf5a89",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03404d56-d544-4f7a-90b7-6c254b1a813c",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8dc76e06-00ca-46dd-bd8d-e1318ea0d6fc",
      "documentation": "List Tasks for Source",
      "method": "get",
      "endpoint": "sources/:id/tasks",
      "responses": [
        {
          "uuid": "1969d988-91a0-4fbf-8c03-483739ca0640",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'random.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d81c6e4a-38da-4b35-9f4b-b0b8c2b2600b",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8482e19-0e05-485e-ae89-8b054254a125",
      "documentation": "List Tags",
      "method": "get",
      "endpoint": "tags",
      "responses": [
        {
          "uuid": "e6607017-f9c1-499b-8ce2-433f404152a3",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7bab989-d9d2-4af4-bca0-efebc547e6ab",
      "documentation": "List Tasks",
      "method": "get",
      "endpoint": "tasks",
      "responses": [
        {
          "uuid": "500170c9-a002-4ab6-aa64-d68bdf30de08",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'random.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98a5fd8c-8625-4d49-a536-3a747c42388d",
      "documentation": "Show an existing Task",
      "method": "get",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "a5b084a4-829e-4b24-872b-0fb1353d8a14",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"child_task_id\": \"{{faker 'random.uuid'}}\",\n  \"completed_at\": \"{{faker 'date.recent' 365}}\",\n  \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"input\": \"Task payload input content\",\n  \"message\": \"received message starting inventory collection\",\n  \"name\": \"Order Service Plan\",\n  \"output\": \"Result of Task Execution\",\n  \"owner\": \"jdoe\",\n  \"source_id\": \"\",\n  \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n  \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n  \"target_source_ref\": \"\",\n  \"target_type\": \"\",\n  \"type\": \"CloudConnectorTask\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Task info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "066bd915-cb6e-4c19-bbf4-0ff3aa2d25ae",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6a21207-c3a3-482c-bb0c-3a501f97453d",
      "documentation": "Update an existing Task",
      "method": "patch",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "607b9974-0d2b-42da-90bc-fea3c5874bb4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "193184c0-9a9b-4289-86ea-f698f927d3d7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f17488b-c968-4d42-9bf4-70034df4dc43",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}