{
  "uuid": "5a206764-92a5-43a6-b4fe-4f22e2ad0781",
  "lastMigration": 19,
  "name": "Catalog Inventory",
  "endpointPrefix": "/api/catalog-inventory/v1.0",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e50dd70d-333a-4cba-b851-d2c5f9f3e144",
      "documentation": "Perform a GraphQL Query",
      "method": "post",
      "endpoint": "graphql",
      "responses": [
        {
          "uuid": "c79ab5bd-11f6-448c-8b26-6b5fa39ab099",
          "body": "{\n  \"data\": {},\n  \"errors\": [\n    {}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GraphQL Query Response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7ebc090-e688-4b97-817c-f645fe830e40",
      "documentation": "Return this API document in JSON format",
      "method": "get",
      "endpoint": "openapi.json",
      "responses": [
        {
          "uuid": "ce90df52-868d-4a63-993e-fdebbe775c23",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The API document for this version of the API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aca72a08-4626-4ff8-9321-1ec96f74ddc7",
      "documentation": "List ServiceCredentialTypes",
      "method": "get",
      "endpoint": "service_credential_types",
      "responses": [
        {
          "uuid": "fc7f9292-4ce2-44dc-93e9-4b1175e5dc09",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"namespace\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialTypes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "848b62b8-91ee-456e-b8ef-355923b1473c",
      "documentation": "Show an existing ServiceCredentialType",
      "method": "get",
      "endpoint": "service_credential_types/:id",
      "responses": [
        {
          "uuid": "65b2e9fc-f3f5-4da1-a26a-54a9efa38597",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"kind\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"namespace\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentialType info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60c0257c-fe26-4b8f-b41e-1ef17695b4fc",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b02a4552-99d3-47f8-a11b-7de58c3b78a1",
      "documentation": "List ServiceCredentials",
      "method": "get",
      "endpoint": "service_credentials",
      "responses": [
        {
          "uuid": "ac3c1087-1dc3-456b-aa9f-b41f936492d3",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"service_credential_type_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"type_name\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredentials collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bab18749-8db3-453d-be97-bfb601e5def7",
      "documentation": "Show an existing ServiceCredential",
      "method": "get",
      "endpoint": "service_credentials/:id",
      "responses": [
        {
          "uuid": "75b00e00-68cd-426d-a4a9-442427d103f8",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"service_credential_type_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"type_name\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceCredential info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0441a9f2-88f7-4da6-9060-cae1b1ef8d0a",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c346b2ba-a92b-4551-a6c9-472abf897dc5",
      "documentation": "List ServiceInstances",
      "method": "get",
      "endpoint": "service_instances",
      "responses": [
        {
          "uuid": "05d50341-26e3-45bc-a5d8-4d38aa8c672d",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d04ac59-480e-4b18-bb1b-cffa9bbecbb6",
      "documentation": "Show an existing ServiceInstance",
      "method": "get",
      "endpoint": "service_instances/:id",
      "responses": [
        {
          "uuid": "2a7646d0-0801-4503-8f39-d7ca7aa81477",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"external_url\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample ServiceInstance\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_instance_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"service_plan_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'random.uuid'}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstance info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ed47e08-6bc7-4b95-8d0b-cb5646b97e47",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8edd2d70-816d-4ea3-87f1-0a05d394b5a6",
      "documentation": "List ServiceInventories",
      "method": "get",
      "endpoint": "service_inventories",
      "responses": [
        {
          "uuid": "1abe877d-8bc0-43b2-a2f2-90aeda1dfed2",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aafc2e6e-a524-4106-aec2-ea87162d3de2",
      "documentation": "Show an existing ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id",
      "responses": [
        {
          "uuid": "a590ffa7-9562-4cfb-82e1-f8d127de80e9",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventory info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b0a2f4f-90f9-46d6-bdf7-ff53b4527fba",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e079617d-6767-47c7-abb2-9de61f207769",
      "documentation": "Tag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/tag",
      "responses": [
        {
          "uuid": "52447ae1-08fa-4509-9dd2-869b25619a1f",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "ServiceInventory tagged successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "825cd113-2e4e-4119-8acf-7e41f6e09a0f",
          "body": "",
          "latency": 0,
          "statusCode": 304,
          "label": "Not modified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e11b2f6-8753-438e-96ca-027270e42b72",
      "documentation": "List Tags for ServiceInventory",
      "method": "get",
      "endpoint": "service_inventories/:id/tags",
      "responses": [
        {
          "uuid": "8e1bfc1b-0d35-4dae-b5a0-bcc37a153eca",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f60f13b5-1f28-4d9f-9a6c-a0dcb306b267",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "31ce876b-ba70-497a-87a4-6de0f3f3da9d",
      "documentation": "Untag a ServiceInventory",
      "method": "post",
      "endpoint": "service_inventories/:id/untag",
      "responses": [
        {
          "uuid": "71ef6462-e258-43c6-8e13-279ea57be677",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "ServiceInventory untagged successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e74f719-2cd9-40b0-b772-c74e2e9a771e",
      "documentation": "List ServiceOfferingNodes",
      "method": "get",
      "endpoint": "service_offering_nodes",
      "responses": [
        {
          "uuid": "66dcede3-c7c7-4603-a4d8-7be52e7be1fb",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bf465c3-d566-4054-93b5-db14d325996b",
      "documentation": "Show an existing ServiceOfferingNode",
      "method": "get",
      "endpoint": "service_offering_nodes/:id",
      "responses": [
        {
          "uuid": "b0775297-b2aa-43b4-94dd-f4a621e3a9e6",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"refresh_state_part_id\": \"\",\n  \"root_service_offering_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"\",\n  \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNode info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbce6094-2569-42fb-af1e-39a559b48904",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58e5ea44-1ae5-4833-8a1d-e6af7059da22",
      "documentation": "List ServiceOfferings",
      "method": "get",
      "endpoint": "service_offerings",
      "responses": [
        {
          "uuid": "1ee3c8db-f241-4174-88db-6a849ce10b3e",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be07ce10-8c4d-439d-bed5-ca3fc5726ed4",
      "documentation": "Show an existing ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id",
      "responses": [
        {
          "uuid": "e250a6b2-00a7-4daf-8afb-16dd5bbc6273",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a short description\",\n  \"display_name\": \"MariaDB (Ephemeral)\",\n  \"distributor\": \"Red Hat, Inc.\",\n  \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n  \"name\": \"Sample Service Offering\",\n  \"refresh_state_part_id\": \"\",\n  \"service_inventory_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"object-12345_67890\",\n  \"support_url\": \"https://access.redhat.com\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOffering info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "290d2961-b8ca-46d6-8d69-bb36f43d595b",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79d6c370-840e-4fac-8403-fe28d1770f21",
      "documentation": "Invokes computing of ServiceInventories tags for given ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/applied_inventories_tags",
      "responses": [
        {
          "uuid": "f092c7e3-4767-4069-b9eb-d174bde885a9",
          "body": "[\n  {\n    \"tag\": \"/namespace/architecture=x86_64\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of inventories tags for the computing result",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d663ba3-bb23-4056-8bfb-36bc7e3823c9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea359d25-fdcc-4732-9e36-aabdf1739f96",
      "documentation": "Order an existing ServiceOffering",
      "method": "post",
      "endpoint": "service_offerings/:id/order",
      "responses": [
        {
          "uuid": "1e7800e9-55ab-4173-b592-eda14d1a8833",
          "body": "{\n  \"task_id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a task ID for the order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8fd0883-147e-4fb1-b299-e73bf10c7b47",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "BadRequest",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92b5c14f-1866-4e9a-9bd2-9f12788647d5",
      "documentation": "List ServiceInstances for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_instances",
      "responses": [
        {
          "uuid": "2a327e2f-c1ad-48fb-a4d6-920fc32bfdf9",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cbc5b46-3c19-4d6e-9fac-6632ca5cf30f",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ff3eb74-a7fa-44ea-8193-acf69fac7893",
      "documentation": "List ServiceOfferingNodes for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "b50b69bb-2c30-46d8-8547-94499774ddce",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7be4b520-9f63-4cac-aa7a-5560d3fc2558",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ff2c1b48-bd89-448f-a884-6bd66f74cd73",
      "documentation": "List ServicePlans for ServiceOffering",
      "method": "get",
      "endpoint": "service_offerings/:id/service_plans",
      "responses": [
        {
          "uuid": "342ee7a1-ef73-4236-a7fa-89f1c4158d15",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22f6b07d-795a-4247-9b0f-e3ea503c330e",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a715f75-392b-47c2-95ab-01f18c7c4bde",
      "documentation": "List ServicePlans",
      "method": "get",
      "endpoint": "service_plans",
      "responses": [
        {
          "uuid": "96d46d11-293a-47d7-aec4-db84f6730fb7",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da7d1298-7093-494d-b7df-669205c3c73c",
      "documentation": "Show an existing ServicePlan",
      "method": "get",
      "endpoint": "service_plans/:id",
      "responses": [
        {
          "uuid": "3dbfc53a-e796-4b98-a7f8-ac72898a7f36",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"create_json_schema\": {},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"This is a sample description for a provider\",\n  \"extra\": {},\n  \"id\": \"\",\n  \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"Sample Provider\",\n  \"refresh_state_part_id\": \"\",\n  \"resource_version\": \"\",\n  \"service_offering_id\": \"\",\n  \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n  \"source_id\": \"\",\n  \"source_ref\": \"{{faker 'random.uuid'}}\",\n  \"update_json_schema\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlan info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a4b0167-82fd-4ecd-948b-4b00cee1961b",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af93c42b-f6c2-41a0-9376-77e3d058cd6a",
      "documentation": "List Sources",
      "method": "get",
      "endpoint": "sources",
      "responses": [
        {
          "uuid": "c69790f6-4edb-48cf-bb19-f4b0040fbba0",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"availability_message\": \"\",\n      \"availability_status\": \"The availability status of source\",\n      \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"enabled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"info\": \"The version of Tower being used\",\n      \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n      \"last_refresh_message\": \"\",\n      \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"The Source Name\",\n      \"previous_sha\": \"\",\n      \"previous_size\": {{faker 'random.number'}},\n      \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n      \"refresh_state\": \"\",\n      \"refresh_task_id\": \"{{faker 'random.uuid'}}\",\n      \"uid\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sources collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0c1b1a7-83e0-4954-8a26-5236f151fa43",
      "documentation": "Show an existing Source",
      "method": "get",
      "endpoint": "sources/:id",
      "responses": [
        {
          "uuid": "b9eb9c90-ee8a-493e-b6c0-9c7c066959f1",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"availability_message\": \"\",\n  \"availability_status\": \"The availability status of source\",\n  \"cloud_connector_id\": \"The GUID of the RedHat connect client being used\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"enabled\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"info\": \"The version of Tower being used\",\n  \"last_available_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_checked_at\": \"{{faker 'date.recent' 365}}\",\n  \"last_refresh_message\": \"\",\n  \"last_successful_refresh_at\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"The Source Name\",\n  \"previous_sha\": \"\",\n  \"previous_size\": {{faker 'random.number'}},\n  \"refresh_finished_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_started_at\": \"{{faker 'date.recent' 365}}\",\n  \"refresh_state\": \"\",\n  \"refresh_task_id\": \"{{faker 'random.uuid'}}\",\n  \"uid\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Source info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4e4c216-8135-4ec2-8bc7-0b4c36a41e0b",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eb5eae8a-1df2-4f01-a941-c8e3f6e70293",
      "documentation": "Incremental Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/incremental_refresh",
      "responses": [
        {
          "uuid": "2db6378f-c9d0-49af-bff5-0c9795f2d6e7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3733283-4d12-4137-b821-ab691bc74de1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af94eb8b-5b13-418c-bf28-0d6255140ba2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc029f88-e529-4000-b82c-69b8f998c8fa",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80bfefba-c816-46fb-8329-14cfbc777abc",
      "documentation": " Refresh an existing Source",
      "method": "patch",
      "endpoint": "sources/:id/refresh",
      "responses": [
        {
          "uuid": "6a6da8d3-b272-4d9d-9837-59a72ed314c9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8da373f3-677f-4992-a8d1-c86464704c0b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1bd5ac8-b5db-419e-ae9b-a94e10718ec8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a6a9806-4131-4d43-b339-8c2f6acfa4c3",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "Too many requests",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a19bada-115f-4fe6-ab4e-790d24e10e1e",
      "documentation": "List ServiceInstances for Source",
      "method": "get",
      "endpoint": "sources/:id/service_instances",
      "responses": [
        {
          "uuid": "81004cb6-197f-4513-bbc3-81f26c0ffb0c",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"external_url\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample ServiceInstance\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_instance_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"service_plan_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInstances collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b8ebb15-2d60-4cf7-a1c6-daf57a1fb4f8",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8cc3fe20-2d3b-4672-86c9-2ee2963e9cb7",
      "documentation": "List ServiceInventories for Source",
      "method": "get",
      "endpoint": "sources/:id/service_inventories",
      "responses": [
        {
          "uuid": "b6f03f0b-9252-4aa4-9f85-1a866d011404",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceInventories collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdbd65b7-1556-47e7-934f-dafb97dca6c1",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f8bb325-584e-4d86-b5ab-b2ffea0c22a6",
      "documentation": "List ServiceOfferingNodes for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offering_nodes",
      "responses": [
        {
          "uuid": "4de55140-d442-499d-a0e3-98afaa09fa84",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"refresh_state_part_id\": \"\",\n      \"root_service_offering_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"\",\n      \"source_updated_at\": \"{{faker 'date.recent' 365}}\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferingNodes collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca8dc067-0746-4d73-b0c0-1acdd1cc68e0",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b2657b5-39cf-4eb4-99cf-9b690adad179",
      "documentation": "List ServiceOfferings for Source",
      "method": "get",
      "endpoint": "sources/:id/service_offerings",
      "responses": [
        {
          "uuid": "4befe119-1be2-4bfe-b00f-896ad4f2b524",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a short description\",\n      \"display_name\": \"MariaDB (Ephemeral)\",\n      \"distributor\": \"Red Hat, Inc.\",\n      \"documentation_url\": \"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"long_description\": \"This template provides a standalone MariaDB server with a database created...\",\n      \"name\": \"Sample Service Offering\",\n      \"refresh_state_part_id\": \"\",\n      \"service_inventory_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"object-12345_67890\",\n      \"support_url\": \"https://access.redhat.com\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServiceOfferings collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a18742a-f787-4272-af15-af005db1cc41",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76f44beb-83f3-4ecb-99a6-b91de4ca2519",
      "documentation": "List ServicePlans for Source",
      "method": "get",
      "endpoint": "sources/:id/service_plans",
      "responses": [
        {
          "uuid": "7284f621-154c-4b25-b90d-13806be8daff",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"create_json_schema\": {},\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"This is a sample description for a provider\",\n      \"extra\": {},\n      \"id\": \"\",\n      \"last_seen_at\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"Sample Provider\",\n      \"refresh_state_part_id\": \"\",\n      \"resource_version\": \"\",\n      \"service_offering_id\": \"\",\n      \"source_created_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_deleted_at\": \"{{faker 'date.recent' 365}}\",\n      \"source_id\": \"\",\n      \"source_ref\": \"{{faker 'random.uuid'}}\",\n      \"update_json_schema\": \"\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "ServicePlans collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd56dbb9-cc33-4603-a97f-c641ccbd66ea",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "166f5cd6-ccff-42cf-867f-c776164abb34",
      "documentation": "List Tasks for Source",
      "method": "get",
      "endpoint": "sources/:id/tasks",
      "responses": [
        {
          "uuid": "6b367b9a-6541-48b2-95f8-db99ee957025",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'random.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48637de7-7080-45b8-b4bf-9a143f0bfa39",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d7008f73-5efe-4cad-84c1-a711ef2ef26f",
      "documentation": "List Tags",
      "method": "get",
      "endpoint": "tags",
      "responses": [
        {
          "uuid": "ac5b465e-7261-436b-b476-b548b0b6c2d3",
          "body": "{\n  \"data\": [\n    {\n      \"tag\": \"/namespace/architecture=x86_64\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tags collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4b329fc-f3fa-4c3f-92c3-cfc7e19ae050",
      "documentation": "List Tasks",
      "method": "get",
      "endpoint": "tasks",
      "responses": [
        {
          "uuid": "edac6930-df47-4e95-ae5c-ffca6b72ac21",
          "body": "{\n  \"data\": [\n    {\n      \"archived_at\": \"{{faker 'date.recent' 365}}\",\n      \"child_task_id\": \"{{faker 'random.uuid'}}\",\n      \"completed_at\": \"{{faker 'date.recent' 365}}\",\n      \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"input\": \"Task payload input content\",\n      \"message\": \"received message starting inventory collection\",\n      \"name\": \"Order Service Plan\",\n      \"output\": \"Result of Task Execution\",\n      \"owner\": \"jdoe\",\n      \"source_id\": \"\",\n      \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n      \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n      \"target_source_ref\": \"\",\n      \"target_type\": \"\",\n      \"type\": \"CloudConnectorTask\",\n      \"updated_at\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"\",\n    \"last\": \"\",\n    \"next\": \"\",\n    \"prev\": \"\"\n  },\n  \"meta\": {\n    \"count\": {{faker 'random.number'}},\n    \"limit\": {{faker 'random.number'}},\n    \"offset\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tasks collection",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0acb450b-a688-4ade-b9e5-0fbb38c76e58",
      "documentation": "Show an existing Task",
      "method": "get",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "fb9e4132-51d3-481a-bdc7-47be90f26a9d",
          "body": "{\n  \"archived_at\": \"{{faker 'date.recent' 365}}\",\n  \"child_task_id\": \"{{faker 'random.uuid'}}\",\n  \"completed_at\": \"{{faker 'date.recent' 365}}\",\n  \"controller_message_id\": \"{{faker 'random.uuid'}}\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"{{faker 'random.uuid'}}\",\n  \"input\": \"Task payload input content\",\n  \"message\": \"received message starting inventory collection\",\n  \"name\": \"Order Service Plan\",\n  \"output\": \"Result of Task Execution\",\n  \"owner\": \"jdoe\",\n  \"source_id\": \"\",\n  \"state\": \"{{oneOf (array 'pending' 'queued' 'running' 'timedout' 'completed')}}\",\n  \"status\": \"{{oneOf (array 'ok' 'warn' 'unchanged' 'error')}}\",\n  \"target_source_ref\": \"\",\n  \"target_type\": \"\",\n  \"type\": \"CloudConnectorTask\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Task info",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd75d64e-0863-4016-bbe8-ae7cf8496a52",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38b80c1c-c9b5-4ec5-9c75-823f524fbfe4",
      "documentation": "Update an existing Task",
      "method": "patch",
      "endpoint": "tasks/:id",
      "responses": [
        {
          "uuid": "00f56baf-bf01-4b1c-9e1f-110a477d8d9a",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Updated, no content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63272c96-a2ab-412d-8981-71d602084156",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5479fe64-7a72-4747-836e-b9f05fe2f524",
          "body": "{\n  \"errors\": [\n    {\n      \"detail\": \"Record not found\",\n      \"status\": \"404\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not found",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}