{
  "uuid": "c54efdbb-04c0-43d5-b6dd-0a79a687eff3",
  "lastMigration": 19,
  "name": "AWS X-Ray",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "a74e2a16-072a-4691-88d6-01e445bd1825",
      "documentation": "Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a list of trace IDs.",
      "method": "post",
      "endpoint": "Traces",
      "responses": [
        {
          "uuid": "e494134c-9b5f-4233-82af-b8a2c2689f94",
          "body": "{\n  \"Traces\": [\n    {\n      \"Id\": \"\",\n      \"Duration\": {{faker 'random.float'}},\n      \"LimitExceeded\": {{faker 'random.boolean'}},\n      \"Segments\": [\n        {\n          \"Id\": \"\",\n          \"Document\": \"\"\n        }\n      ]\n    }\n  ],\n  \"UnprocessedTraceIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04c46b25-5aea-43a2-81b9-ab6c27fc949b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b48d74-9d4c-4675-b59a-6b4eb2be45e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77cc4936-304a-4261-8ef6-0f93ee8c98be",
      "documentation": "Creates a group resource with a name and a filter expression. ",
      "method": "post",
      "endpoint": "CreateGroup",
      "responses": [
        {
          "uuid": "6e323ff2-3699-4b86-8420-63991aa7b027",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"GroupARN\": \"\",\n    \"FilterExpression\": \"\",\n    \"InsightsConfiguration\": {\n      \"InsightsEnabled\": {{faker 'random.boolean'}},\n      \"NotificationsEnabled\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6812671d-02bc-4ad1-8abe-44806699f7c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c75f1b6c-12ab-482a-82d5-649829f5e8e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e3c387a-3474-4698-ad30-0e0bc473c17a",
      "documentation": "Creates a rule to control sampling behavior for instrumented applications. Services retrieve rules with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingRules.html\">GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i> for each request. If a rule matches, the service records a trace, borrowing it from the reservoir size. After 10 seconds, the service reports back to X-Ray with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\">GetSamplingTargets</a> to get updated versions of each in-use rule. The updated rule contains a trace quota that the service can use instead of borrowing from the reservoir.",
      "method": "post",
      "endpoint": "CreateSamplingRule",
      "responses": [
        {
          "uuid": "9da5ba15-1eeb-4d18-b29a-c096de0c04e0",
          "body": "{\n  \"SamplingRuleRecord\": {\n    \"SamplingRule\": {\n      \"RuleName\": \"\",\n      \"RuleARN\": \"\",\n      \"ResourceARN\": \"\",\n      \"Priority\": {{faker 'random.number'}},\n      \"FixedRate\": {{faker 'random.float'}},\n      \"ReservoirSize\": {{faker 'random.number'}},\n      \"ServiceName\": \"\",\n      \"ServiceType\": \"\",\n      \"Host\": \"\",\n      \"HTTPMethod\": \"\",\n      \"URLPath\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Attributes\": {}\n    },\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"ModifiedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed19139d-d889-4376-8eaa-b9ba31ffbdae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "111e87a3-15cf-480a-bd79-835854185a69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4152489e-b377-48d5-9a15-a8a752cd1d46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "RuleLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b20429e-8178-441e-a2b2-72a0ca6b6fb1",
      "documentation": "Deletes a group resource.",
      "method": "post",
      "endpoint": "DeleteGroup",
      "responses": [
        {
          "uuid": "7dd1c106-60a0-43ad-b7a3-c615144c775d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c70474d-dd5b-4c15-9ad4-eb41d215f003",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eadcb783-c905-4df4-927e-546c2823c945",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "46bb6470-4369-4134-92f6-29bce97df173",
      "documentation": "Deletes a sampling rule.",
      "method": "post",
      "endpoint": "DeleteSamplingRule",
      "responses": [
        {
          "uuid": "d791d294-8cc6-4ced-85c4-6cdf3942f59d",
          "body": "{\n  \"SamplingRuleRecord\": {\n    \"SamplingRule\": {\n      \"RuleName\": \"\",\n      \"RuleARN\": \"\",\n      \"ResourceARN\": \"\",\n      \"Priority\": {{faker 'random.number'}},\n      \"FixedRate\": {{faker 'random.float'}},\n      \"ReservoirSize\": {{faker 'random.number'}},\n      \"ServiceName\": \"\",\n      \"ServiceType\": \"\",\n      \"Host\": \"\",\n      \"HTTPMethod\": \"\",\n      \"URLPath\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Attributes\": {}\n    },\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"ModifiedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4930468e-a7f1-4795-b964-eb464db939d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8208f167-0444-4067-bea0-cbc4dadcde11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b2c2a26-270b-42d4-9377-25d00d808713",
      "documentation": "Retrieves the current encryption configuration for X-Ray data.",
      "method": "post",
      "endpoint": "EncryptionConfig",
      "responses": [
        {
          "uuid": "f08e378b-59e5-4177-af29-cfee2868f338",
          "body": "{\n  \"EncryptionConfig\": {\n    \"KeyId\": \"\",\n    \"Status\": \"\",\n    \"Type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67d6c8f4-43de-41f5-b8a0-33dc3f1b58b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3762596-b690-4cb1-bdd8-39ed3e4bdba8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d79bf54-99d0-4929-89f8-ce599aa8312f",
      "documentation": "Retrieves group resource details.",
      "method": "post",
      "endpoint": "GetGroup",
      "responses": [
        {
          "uuid": "2a8db029-2a95-4c4d-bb6f-40707f6aa482",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"GroupARN\": \"\",\n    \"FilterExpression\": \"\",\n    \"InsightsConfiguration\": {\n      \"InsightsEnabled\": {{faker 'random.boolean'}},\n      \"NotificationsEnabled\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7135de6-2dfa-44ef-8d2f-0596dfa081dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35c43caf-6107-4267-bb02-b2ebc0ba570f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3324894-4302-4921-bb1a-65b834817d26",
      "documentation": "Retrieves all active group details.",
      "method": "post",
      "endpoint": "Groups",
      "responses": [
        {
          "uuid": "ffd5218f-224f-49da-a534-5288e9605d5a",
          "body": "{\n  \"Groups\": [\n    {\n      \"GroupName\": \"\",\n      \"GroupARN\": \"\",\n      \"FilterExpression\": \"\",\n      \"InsightsConfiguration\": {\n        \"InsightsEnabled\": {{faker 'random.boolean'}},\n        \"NotificationsEnabled\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00643ace-0573-4c5a-91db-77a531c61ae4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "552627b5-53bd-4d6b-9d2e-45d026b5de7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "460646ce-5c87-4e8b-b870-42f682000395",
      "documentation": "Retrieves the summary information of an insight. This includes impact to clients and root cause services, the top anomalous services, the category, the state of the insight, and the start and end time of the insight.",
      "method": "post",
      "endpoint": "Insight",
      "responses": [
        {
          "uuid": "cf700607-3d25-4db8-bdb4-13483f4be81c",
          "body": "{\n  \"Insight\": {\n    \"InsightId\": \"\",\n    \"GroupARN\": \"\",\n    \"GroupName\": \"\",\n    \"RootCauseServiceId\": {\n      \"Name\": \"\",\n      \"Names\": [\n        \"\"\n      ],\n      \"AccountId\": \"\",\n      \"Type\": \"\"\n    },\n    \"Categories\": [\n      \"{{oneOf (array 'FAULT')}}\"\n    ],\n    \"State\": \"\",\n    \"StartTime\": \"{{faker 'date.recent' 365}}\",\n    \"EndTime\": \"{{faker 'date.recent' 365}}\",\n    \"Summary\": \"\",\n    \"ClientRequestImpactStatistics\": {\n      \"FaultCount\": {{faker 'random.number'}},\n      \"OkCount\": {{faker 'random.number'}},\n      \"TotalCount\": {{faker 'random.number'}}\n    },\n    \"RootCauseServiceRequestImpactStatistics\": {\n      \"FaultCount\": {{faker 'random.number'}},\n      \"OkCount\": {{faker 'random.number'}},\n      \"TotalCount\": {{faker 'random.number'}}\n    },\n    \"TopAnomalousServices\": [\n      {\n        \"ServiceId\": {\n          \"Name\": \"\",\n          \"Names\": [\n            \"\"\n          ],\n          \"AccountId\": \"\",\n          \"Type\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "342017fd-d226-4e53-a611-fb7c53838525",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "960a55ab-c11f-4191-a297-398ac86c066a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "749d4c56-6d90-418c-b837-8bc98e80338e",
      "documentation": "X-Ray reevaluates insights periodically until they're resolved, and records each intermediate state as an event. You can review an insight's events in the Impact Timeline on the Inspect page in the X-Ray console.",
      "method": "post",
      "endpoint": "InsightEvents",
      "responses": [
        {
          "uuid": "d8c29786-47df-4707-82e7-9f1da095ad87",
          "body": "{\n  \"InsightEvents\": [\n    {\n      \"Summary\": \"\",\n      \"EventTime\": \"{{faker 'date.recent' 365}}\",\n      \"ClientRequestImpactStatistics\": {\n        \"FaultCount\": {{faker 'random.number'}},\n        \"OkCount\": {{faker 'random.number'}},\n        \"TotalCount\": {{faker 'random.number'}}\n      },\n      \"RootCauseServiceRequestImpactStatistics\": {\n        \"FaultCount\": {{faker 'random.number'}},\n        \"OkCount\": {{faker 'random.number'}},\n        \"TotalCount\": {{faker 'random.number'}}\n      },\n      \"TopAnomalousServices\": [\n        {\n          \"ServiceId\": {\n            \"Name\": \"\",\n            \"Names\": [\n              \"\"\n            ],\n            \"AccountId\": \"\",\n            \"Type\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91e070f7-b9ca-457b-ad73-23413fbe1176",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06edb8d7-77f8-4357-83fb-302e43a83772",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c1a6059-03a1-429d-9581-46a940d11e2a",
      "documentation": "Retrieves a service graph structure filtered by the specified insight. The service graph is limited to only structural information. For a complete service graph, use this API with the GetServiceGraph API.",
      "method": "post",
      "endpoint": "InsightImpactGraph",
      "responses": [
        {
          "uuid": "a0a5a308-acce-46d8-a0fd-25411590e4e6",
          "body": "{\n  \"InsightId\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\",\n  \"ServiceGraphStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"ServiceGraphEndTime\": \"{{faker 'date.recent' 365}}\",\n  \"Services\": [\n    {\n      \"ReferenceId\": {{faker 'random.number'}},\n      \"Type\": \"\",\n      \"Name\": \"\",\n      \"Names\": [\n        \"\"\n      ],\n      \"AccountId\": \"\",\n      \"Edges\": [\n        {\n          \"ReferenceId\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59eb539a-aff2-4881-b77f-e7ae29725681",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3692292a-ec4d-405c-aa78-b5dfa240f55e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35957646-9099-47a4-928c-34687303c256",
      "documentation": "Retrieves the summaries of all insights in the specified group matching the provided filter values.",
      "method": "post",
      "endpoint": "InsightSummaries",
      "responses": [
        {
          "uuid": "dacec6f4-5a12-4a1c-8e1c-19f4da332edb",
          "body": "{\n  \"InsightSummaries\": [\n    {\n      \"InsightId\": \"\",\n      \"GroupARN\": \"\",\n      \"GroupName\": \"\",\n      \"RootCauseServiceId\": {\n        \"Name\": \"\",\n        \"Names\": [\n          \"\"\n        ],\n        \"AccountId\": \"\",\n        \"Type\": \"\"\n      },\n      \"Categories\": [\n        \"{{oneOf (array 'FAULT')}}\"\n      ],\n      \"State\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Summary\": \"\",\n      \"ClientRequestImpactStatistics\": {\n        \"FaultCount\": {{faker 'random.number'}},\n        \"OkCount\": {{faker 'random.number'}},\n        \"TotalCount\": {{faker 'random.number'}}\n      },\n      \"RootCauseServiceRequestImpactStatistics\": {\n        \"FaultCount\": {{faker 'random.number'}},\n        \"OkCount\": {{faker 'random.number'}},\n        \"TotalCount\": {{faker 'random.number'}}\n      },\n      \"TopAnomalousServices\": [\n        {\n          \"ServiceId\": {\n            \"Name\": \"\",\n            \"Names\": [\n              \"\"\n            ],\n            \"AccountId\": \"\",\n            \"Type\": \"\"\n          }\n        }\n      ],\n      \"LastUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25e1cc67-4fe7-42a7-890b-16d1a113997a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b832d2-d315-4002-9b5f-cfd855928fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac73d034-7fbb-4889-8a18-50f7764b7d6d",
      "documentation": "Retrieves all sampling rules.",
      "method": "post",
      "endpoint": "GetSamplingRules",
      "responses": [
        {
          "uuid": "9c71ffd5-cab3-4035-b666-0340cf47bbcf",
          "body": "{\n  \"SamplingRuleRecords\": [\n    {\n      \"SamplingRule\": {\n        \"RuleName\": \"\",\n        \"RuleARN\": \"\",\n        \"ResourceARN\": \"\",\n        \"Priority\": {{faker 'random.number'}},\n        \"FixedRate\": {{faker 'random.float'}},\n        \"ReservoirSize\": {{faker 'random.number'}},\n        \"ServiceName\": \"\",\n        \"ServiceType\": \"\",\n        \"Host\": \"\",\n        \"HTTPMethod\": \"\",\n        \"URLPath\": \"\",\n        \"Version\": {{faker 'random.number'}},\n        \"Attributes\": {}\n      },\n      \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n      \"ModifiedAt\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22d90a4-4233-4e14-8d3b-c36b3954ca77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ccdfa34-dfb1-458c-b8a5-af8e1aee89bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "992e9bc0-9484-424e-bc06-7a80eddad4e7",
      "documentation": "Retrieves information about recent sampling results for all sampling rules.",
      "method": "post",
      "endpoint": "SamplingStatisticSummaries",
      "responses": [
        {
          "uuid": "5d8fd832-5f9b-4712-ba89-4c1f647c3bb5",
          "body": "{\n  \"SamplingStatisticSummaries\": [\n    {\n      \"RuleName\": \"\",\n      \"Timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"RequestCount\": {{faker 'random.number'}},\n      \"BorrowCount\": {{faker 'random.number'}},\n      \"SampledCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82708340-d6a3-415a-86fb-e9a379252433",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c6d0434-f493-45b0-91ec-bec80912fb03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3880e4df-3bfc-449a-ab2f-f1871952169b",
      "documentation": "Requests a sampling quota for rules that the service is using to sample requests. ",
      "method": "post",
      "endpoint": "SamplingTargets",
      "responses": [
        {
          "uuid": "95719b5d-fa26-4ac7-a978-fad532f71cba",
          "body": "{\n  \"SamplingTargetDocuments\": [\n    {\n      \"RuleName\": \"\",\n      \"FixedRate\": {{faker 'random.float'}},\n      \"ReservoirQuota\": {{faker 'random.number'}},\n      \"ReservoirQuotaTTL\": \"{{faker 'date.recent' 365}}\",\n      \"Interval\": {{faker 'random.number'}}\n    }\n  ],\n  \"LastRuleModification\": \"{{faker 'date.recent' 365}}\",\n  \"UnprocessedStatistics\": [\n    {\n      \"RuleName\": \"\",\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1ce8f9c-0ce3-407a-a24d-60498cae6ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a367fa9d-3731-4888-99c6-db972e10ec01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0577c45b-a9d6-4583-99e2-8088d8dedc77",
      "documentation": "Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result. Root services process incoming requests and make calls to downstream services. Root services are applications that use the <a href=\"https://docs.aws.amazon.com/xray/index.html\">Amazon Web Services X-Ray SDK</a>. Downstream services can be other applications, Amazon Web Services resources, HTTP web APIs, or SQL databases.",
      "method": "post",
      "endpoint": "ServiceGraph",
      "responses": [
        {
          "uuid": "ae17f995-9bb6-46f8-a75b-300e4e5a6d91",
          "body": "{\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\",\n  \"Services\": [\n    {\n      \"ReferenceId\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"Names\": [\n        \"\"\n      ],\n      \"Root\": {{faker 'random.boolean'}},\n      \"AccountId\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Edges\": [\n        {\n          \"ReferenceId\": {{faker 'random.number'}},\n          \"StartTime\": \"{{faker 'date.recent' 365}}\",\n          \"EndTime\": \"{{faker 'date.recent' 365}}\",\n          \"SummaryStatistics\": {\n            \"OkCount\": {{faker 'random.number'}},\n            \"ErrorStatistics\": {\n              \"ThrottleCount\": {{faker 'random.number'}},\n              \"OtherCount\": {{faker 'random.number'}},\n              \"TotalCount\": {{faker 'random.number'}}\n            },\n            \"FaultStatistics\": {\n              \"OtherCount\": {{faker 'random.number'}},\n              \"TotalCount\": {{faker 'random.number'}}\n            },\n            \"TotalCount\": {{faker 'random.number'}},\n            \"TotalResponseTime\": {{faker 'random.float'}}\n          },\n          \"ResponseTimeHistogram\": [\n            {\n              \"Value\": {{faker 'random.float'}},\n              \"Count\": {{faker 'random.number'}}\n            }\n          ],\n          \"Aliases\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"Type\": \"\"\n            }\n          ]\n        }\n      ],\n      \"SummaryStatistics\": {\n        \"OkCount\": {{faker 'random.number'}},\n        \"ErrorStatistics\": {\n          \"ThrottleCount\": {{faker 'random.number'}},\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"FaultStatistics\": {\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"TotalCount\": {{faker 'random.number'}},\n        \"TotalResponseTime\": {{faker 'random.float'}}\n      },\n      \"DurationHistogram\": [\n        {\n          \"Value\": {{faker 'random.float'}},\n          \"Count\": {{faker 'random.number'}}\n        }\n      ],\n      \"ResponseTimeHistogram\": [\n        {\n          \"Value\": {{faker 'random.float'}},\n          \"Count\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"ContainsOldGroupVersions\": {{faker 'random.boolean'}},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5357b4a-5e81-495c-a5f1-f7606e82d523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e688d80c-05ef-4220-be34-038248f8a7da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60e69234-bbce-4f26-886c-708209d8bfe9",
      "documentation": "Get an aggregation of service statistics defined by a specific time range.",
      "method": "post",
      "endpoint": "TimeSeriesServiceStatistics",
      "responses": [
        {
          "uuid": "57087738-25fb-4441-bed5-b0b3f987f762",
          "body": "{\n  \"TimeSeriesServiceStatistics\": [\n    {\n      \"Timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"EdgeSummaryStatistics\": {\n        \"OkCount\": {{faker 'random.number'}},\n        \"ErrorStatistics\": {\n          \"ThrottleCount\": {{faker 'random.number'}},\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"FaultStatistics\": {\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"TotalCount\": {{faker 'random.number'}},\n        \"TotalResponseTime\": {{faker 'random.float'}}\n      },\n      \"ServiceSummaryStatistics\": {\n        \"OkCount\": {{faker 'random.number'}},\n        \"ErrorStatistics\": {\n          \"ThrottleCount\": {{faker 'random.number'}},\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"FaultStatistics\": {\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"TotalCount\": {{faker 'random.number'}},\n        \"TotalResponseTime\": {{faker 'random.float'}}\n      },\n      \"ServiceForecastStatistics\": {\n        \"FaultCountHigh\": {{faker 'random.number'}},\n        \"FaultCountLow\": {{faker 'random.number'}}\n      },\n      \"ResponseTimeHistogram\": [\n        {\n          \"Value\": {{faker 'random.float'}},\n          \"Count\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"ContainsOldGroupVersions\": {{faker 'random.boolean'}},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6adbf891-5334-4085-8fd2-011b230c0e5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "779b4e20-2c50-49fe-a0bf-a95500e97d1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62852bda-0670-463e-93f1-ee4bb8cfbe09",
      "documentation": "Retrieves a service graph for one or more specific trace IDs.",
      "method": "post",
      "endpoint": "TraceGraph",
      "responses": [
        {
          "uuid": "a7fb7594-c72e-4a8a-b736-e29d74b4c1d8",
          "body": "{\n  \"Services\": [\n    {\n      \"ReferenceId\": {{faker 'random.number'}},\n      \"Name\": \"\",\n      \"Names\": [\n        \"\"\n      ],\n      \"Root\": {{faker 'random.boolean'}},\n      \"AccountId\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Edges\": [\n        {\n          \"ReferenceId\": {{faker 'random.number'}},\n          \"StartTime\": \"{{faker 'date.recent' 365}}\",\n          \"EndTime\": \"{{faker 'date.recent' 365}}\",\n          \"SummaryStatistics\": {\n            \"OkCount\": {{faker 'random.number'}},\n            \"ErrorStatistics\": {\n              \"ThrottleCount\": {{faker 'random.number'}},\n              \"OtherCount\": {{faker 'random.number'}},\n              \"TotalCount\": {{faker 'random.number'}}\n            },\n            \"FaultStatistics\": {\n              \"OtherCount\": {{faker 'random.number'}},\n              \"TotalCount\": {{faker 'random.number'}}\n            },\n            \"TotalCount\": {{faker 'random.number'}},\n            \"TotalResponseTime\": {{faker 'random.float'}}\n          },\n          \"ResponseTimeHistogram\": [\n            {\n              \"Value\": {{faker 'random.float'}},\n              \"Count\": {{faker 'random.number'}}\n            }\n          ],\n          \"Aliases\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"Type\": \"\"\n            }\n          ]\n        }\n      ],\n      \"SummaryStatistics\": {\n        \"OkCount\": {{faker 'random.number'}},\n        \"ErrorStatistics\": {\n          \"ThrottleCount\": {{faker 'random.number'}},\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"FaultStatistics\": {\n          \"OtherCount\": {{faker 'random.number'}},\n          \"TotalCount\": {{faker 'random.number'}}\n        },\n        \"TotalCount\": {{faker 'random.number'}},\n        \"TotalResponseTime\": {{faker 'random.float'}}\n      },\n      \"DurationHistogram\": [\n        {\n          \"Value\": {{faker 'random.float'}},\n          \"Count\": {{faker 'random.number'}}\n        }\n      ],\n      \"ResponseTimeHistogram\": [\n        {\n          \"Value\": {{faker 'random.float'}},\n          \"Count\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31f2aedb-99c8-461e-b510-2d9d8f70269a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d6caa08-8034-443b-a6f6-04184e8e47a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e7c56d9-1812-489c-b1a3-923d3faa44d0",
      "documentation": "<p>Retrieves IDs and annotations for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to <code>BatchGetTraces</code>.</p> <p>A filter expression can target traced requests that hit specific service nodes or edges, have errors, or come from a known user. For example, the following filter expression targets traces that pass through <code>api.example.com</code>:</p> <p> <code>service(\"api.example.com\")</code> </p> <p>This filter expression finds traces that have an annotation named <code>account</code> with the value <code>12345</code>:</p> <p> <code>annotation.account = \"12345\"</code> </p> <p>For a full list of indexed fields and keywords that you can use in filter expressions, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\">Using Filter Expressions</a> in the <i>Amazon Web Services X-Ray Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "TraceSummaries",
      "responses": [
        {
          "uuid": "9b6aaa47-0997-4e94-b3ce-d6812ddb34eb",
          "body": "{\n  \"TraceSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Duration\": {{faker 'random.float'}},\n      \"ResponseTime\": {{faker 'random.float'}},\n      \"HasFault\": {{faker 'random.boolean'}},\n      \"HasError\": {{faker 'random.boolean'}},\n      \"HasThrottle\": {{faker 'random.boolean'}},\n      \"IsPartial\": {{faker 'random.boolean'}},\n      \"Http\": {\n        \"HttpURL\": \"\",\n        \"HttpStatus\": {{faker 'random.number'}},\n        \"HttpMethod\": \"\",\n        \"UserAgent\": \"\",\n        \"ClientIp\": \"\"\n      },\n      \"Annotations\": {},\n      \"Users\": [\n        {\n          \"UserName\": \"\",\n          \"ServiceIds\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"AccountId\": \"\",\n              \"Type\": \"\"\n            }\n          ]\n        }\n      ],\n      \"ServiceIds\": [\n        {\n          \"Name\": \"\",\n          \"Names\": [\n            \"\"\n          ],\n          \"AccountId\": \"\",\n          \"Type\": \"\"\n        }\n      ],\n      \"ResourceARNs\": [\n        {\n          \"ARN\": \"\"\n        }\n      ],\n      \"InstanceIds\": [\n        {\n          \"Id\": \"\"\n        }\n      ],\n      \"AvailabilityZones\": [\n        {\n          \"Name\": \"\"\n        }\n      ],\n      \"EntryPoint\": {\n        \"Name\": \"\",\n        \"Names\": [\n          \"\"\n        ],\n        \"AccountId\": \"\",\n        \"Type\": \"\"\n      },\n      \"FaultRootCauses\": [\n        {\n          \"Services\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"Type\": \"\",\n              \"AccountId\": \"\",\n              \"EntityPath\": [\n                {\n                  \"Name\": \"\",\n                  \"Exceptions\": [\n                    {\n                      \"Name\": \"\",\n                      \"Message\": \"\"\n                    }\n                  ],\n                  \"Remote\": {{faker 'random.boolean'}}\n                }\n              ],\n              \"Inferred\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"ClientImpacting\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"ErrorRootCauses\": [\n        {\n          \"Services\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"Type\": \"\",\n              \"AccountId\": \"\",\n              \"EntityPath\": [\n                {\n                  \"Name\": \"\",\n                  \"Exceptions\": [\n                    {\n                      \"Name\": \"\",\n                      \"Message\": \"\"\n                    }\n                  ],\n                  \"Remote\": {{faker 'random.boolean'}}\n                }\n              ],\n              \"Inferred\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"ClientImpacting\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"ResponseTimeRootCauses\": [\n        {\n          \"Services\": [\n            {\n              \"Name\": \"\",\n              \"Names\": [\n                \"\"\n              ],\n              \"Type\": \"\",\n              \"AccountId\": \"\",\n              \"EntityPath\": [\n                {\n                  \"Name\": \"\",\n                  \"Coverage\": {{faker 'random.float'}},\n                  \"Remote\": {{faker 'random.boolean'}}\n                }\n              ],\n              \"Inferred\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"ClientImpacting\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"Revision\": {{faker 'random.number'}},\n      \"MatchedEventTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"ApproximateTime\": \"{{faker 'date.recent' 365}}\",\n  \"TracesProcessedCount\": {{faker 'random.number'}},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f978afbe-8f3a-4a14-867d-7739af21cdf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1d7ceb5-902d-4dd4-94d1-99ceacb72f01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0348bd84-4cb0-46aa-b801-17196bf5210d",
      "documentation": "Returns a list of tags that are applied to the specified Amazon Web Services X-Ray group or sampling rule.",
      "method": "post",
      "endpoint": "ListTagsForResource",
      "responses": [
        {
          "uuid": "87946e55-d88a-443d-b5c5-3ee4f59eb442",
          "body": "{\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbcd119c-fce8-48e6-94ad-654e228ffd69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c88b1585-447f-437f-a48e-9c20aa0cda88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c12dae6-9b64-405a-9bfd-bbcd45ce74eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a952bd5-6c73-4606-b576-4f1a82d1b7f4",
      "documentation": "Updates the encryption configuration for X-Ray data.",
      "method": "post",
      "endpoint": "PutEncryptionConfig",
      "responses": [
        {
          "uuid": "44d48216-5141-4e43-910f-ecdaafe2f739",
          "body": "{\n  \"EncryptionConfig\": {\n    \"KeyId\": \"\",\n    \"Status\": \"\",\n    \"Type\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcadcfae-da47-432a-a697-2ad13eff3a3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14f621cb-bcb2-41a4-b38a-3e41c3517eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d36c714a-6132-46c1-9bf0-05ee89235b1c",
      "documentation": "Used by the Amazon Web Services X-Ray daemon to upload telemetry.",
      "method": "post",
      "endpoint": "TelemetryRecords",
      "responses": [
        {
          "uuid": "e0834901-7156-4aa8-ada5-73d28b0b3625",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db7bc18-fe76-4513-8e8a-c2bb0ab8b11f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25d54f13-66db-40b2-8f58-ca1958a51764",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6863389f-03d9-4a5f-9302-5f759e64f3f5",
      "documentation": "<p>Uploads segment documents to Amazon Web Services X-Ray. The <a href=\"https://docs.aws.amazon.com/xray/index.html\">X-Ray SDK</a> generates segment documents and sends them to the X-Ray daemon, which uploads them in batches. A segment document can be a completed segment, an in-progress segment, or an array of subsegments.</p> <p>Segments must include the following fields. For the full segment document schema, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\">Amazon Web Services X-Ray Segment Documents</a> in the <i>Amazon Web Services X-Ray Developer Guide</i>.</p> <p class=\"title\"> <b>Required segment document fields</b> </p> <ul> <li> <p> <code>name</code> - The name of the service that handled the request.</p> </li> <li> <p> <code>id</code> - A 64-bit identifier for the segment, unique among segments in the same trace, in 16 hexadecimal digits.</p> </li> <li> <p> <code>trace_id</code> - A unique identifier that connects all segments and subsegments originating from a single client request.</p> </li> <li> <p> <code>start_time</code> - Time the segment or subsegment was created, in floating point seconds in epoch time, accurate to milliseconds. For example, <code>1480615200.010</code> or <code>1.480615200010E9</code>.</p> </li> <li> <p> <code>end_time</code> - Time the segment or subsegment was closed. For example, <code>1480615200.090</code> or <code>1.480615200090E9</code>. Specify either an <code>end_time</code> or <code>in_progress</code>.</p> </li> <li> <p> <code>in_progress</code> - Set to <code>true</code> instead of specifying an <code>end_time</code> to record that a segment has been started, but is not complete. Send an in-progress segment when your application receives a request that will take a long time to serve, to trace that the request was received. When the response is sent, send the complete segment to overwrite the in-progress segment.</p> </li> </ul> <p>A <code>trace_id</code> consists of three numbers separated by hyphens. For example, 1-58406520-a006649127e371903a2de979. This includes:</p> <p class=\"title\"> <b>Trace ID Format</b> </p> <ul> <li> <p>The version number, for instance, <code>1</code>.</p> </li> <li> <p>The time of the original request, in Unix epoch time, in 8 hexadecimal digits. For example, 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code> seconds, or <code>58406520</code> in hexadecimal.</p> </li> <li> <p>A 96-bit identifier for the trace, globally unique, in 24 hexadecimal digits.</p> </li> </ul>",
      "method": "post",
      "endpoint": "TraceSegments",
      "responses": [
        {
          "uuid": "3101b517-9d72-4031-a8b4-2c3c981e997c",
          "body": "{\n  \"UnprocessedTraceSegments\": [\n    {\n      \"Id\": \"\",\n      \"ErrorCode\": \"\",\n      \"Message\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20599076-f3a4-4e4f-884c-b8873e365470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cff91f54-dcf2-4ab6-9c95-c479bf3c9c92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "547a28b1-6834-4fea-984d-832ccf40cd2d",
      "documentation": "Applies tags to an existing Amazon Web Services X-Ray group or sampling rule.",
      "method": "post",
      "endpoint": "TagResource",
      "responses": [
        {
          "uuid": "6263cfc7-2911-4248-93f8-6d3f519c3983",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1c6a497-5b7c-4a4b-b16b-212e8c459bb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fa0f66a-ad90-4a39-8933-c61635c4ce28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad036567-1993-4fc0-ad41-7b59d16d2567",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c01e6088-b461-48b9-bd46-a7b7a1338979",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyTagsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d85929c-d7cd-49f6-a7b3-298b4627784c",
      "documentation": "Removes tags from an Amazon Web Services X-Ray group or sampling rule. You cannot edit or delete system tags (those with an <code>aws:</code> prefix).",
      "method": "post",
      "endpoint": "UntagResource",
      "responses": [
        {
          "uuid": "bb553cd3-0539-496a-afa1-2c6699f09cb4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbfedfbe-8e9d-43c9-a47e-52314969db4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8631564a-96dc-4008-9ce6-aeb646569802",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6a00ec4-6134-48f4-a7ba-57bf4d31ac6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a3318b4-6e57-47dc-8cfc-98edcd4d8c91",
      "documentation": "Updates a group resource.",
      "method": "post",
      "endpoint": "UpdateGroup",
      "responses": [
        {
          "uuid": "3a130fb6-c2d6-4df9-9a45-5f4f6dc55ab2",
          "body": "{\n  \"Group\": {\n    \"GroupName\": \"\",\n    \"GroupARN\": \"\",\n    \"FilterExpression\": \"\",\n    \"InsightsConfiguration\": {\n      \"InsightsEnabled\": {{faker 'random.boolean'}},\n      \"NotificationsEnabled\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33b26d62-30f6-4578-a58f-2bac3f53fae3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e90a572b-e071-4e79-a5db-dbee53ac0b8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "280454ec-e2d5-4908-beb6-e13d21f32912",
      "documentation": "Modifies a sampling rule's configuration.",
      "method": "post",
      "endpoint": "UpdateSamplingRule",
      "responses": [
        {
          "uuid": "c1aacfe5-5f9c-4daf-900c-af005abc429e",
          "body": "{\n  \"SamplingRuleRecord\": {\n    \"SamplingRule\": {\n      \"RuleName\": \"\",\n      \"RuleARN\": \"\",\n      \"ResourceARN\": \"\",\n      \"Priority\": {{faker 'random.number'}},\n      \"FixedRate\": {{faker 'random.float'}},\n      \"ReservoirSize\": {{faker 'random.number'}},\n      \"ServiceName\": \"\",\n      \"ServiceType\": \"\",\n      \"Host\": \"\",\n      \"HTTPMethod\": \"\",\n      \"URLPath\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Attributes\": {}\n    },\n    \"CreatedAt\": \"{{faker 'date.recent' 365}}\",\n    \"ModifiedAt\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fe1f01a-aca2-4024-8f32-2171277003d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee3c7e9d-b4cb-492d-8771-16e998d6f461",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}