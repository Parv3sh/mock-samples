{
  "uuid": "e5151e7f-4f16-475e-8200-28f7e5003eb4",
  "lastMigration": 19,
  "name": "AppConfigurationManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "59b3c708-0890-4e85-82e2-2d8f8ebe73ff",
      "documentation": "Lists the operations available from this provider.",
      "method": "get",
      "endpoint": "providers/Microsoft.AppConfiguration/operations",
      "responses": [
        {
          "uuid": "cb0ba412-8655-4df6-b2cb-e94ace49a5f7",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28a1a94e-675c-4390-83d9-7e7ce626f02a",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab8ab1d2-2137-40c8-b2f0-ca015e8b8fd4",
      "documentation": "Checks whether the configuration store name is available for use.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.AppConfiguration/checkNameAvailability",
      "responses": [
        {
          "uuid": "a8d7b4ec-82f3-4560-a075-ed7c40b98776",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ab6562b-b5ac-41cf-8274-caa394a8f685",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1547d91-b398-46dc-9e91-dc867d5b11b4",
      "documentation": "Lists the configuration stores for a given subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.AppConfiguration/configurationStores",
      "responses": [
        {
          "uuid": "d54a442a-b1fc-43dc-8995-2a5ac4b8fef9",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "031b7389-cb53-47a8-b3ab-7e0c4e9f1338",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e6f8bdf-7bb7-4ef6-aeeb-9eefa394a829",
      "documentation": "Lists the configuration stores for a given resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores",
      "responses": [
        {
          "uuid": "2f743e29-eaad-4bd7-bd4c-c8909d1c7e4c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b09932cb-2ce3-4375-9918-193d8ffc2983",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "007113d9-f604-4ebd-8598-e1eaf43e00a7",
      "documentation": "Deletes a configuration store.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "43c106bc-eaf0-43a7-8ac6-faea08353e70",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "625ad262-5b2a-4a1a-b390-92167e42916e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38988496-abae-4aaa-941b-26c186786795",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content - the specified resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2416be73-7f29-40f5-ba98-f11adefdcf60",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0049ce1-49f3-4c28-95db-3e5b9e1cabd9",
      "documentation": "Gets the properties of the specified configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "1b52b3dd-9256-460d-a283-299014c2fc4c",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccf79ee3-7cf0-49b6-9c13-bea44d1e2e6f",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19648e48-8f08-4fbf-ad04-5ca1dabe8ffe",
      "documentation": "Updates a configuration store with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "8a1a8538-8457-4429-8d00-a75465bb484c",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77c8ba56-526c-4fc9-952d-3abfee1f39bc",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c4add42-188e-41be-8ff1-bfbe37c2ca4e",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00bbf881-5e8c-4f07-9be4-24ca916a196b",
      "documentation": "Creates a configuration store with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "630663ba-6d6f-4216-b7fb-49c75c5177d5",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "426c5f1c-220f-4087-b65a-2a9339f41701",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4461153d-b5d0-4af7-9bb4-0f6c291358cf",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29d92dd4-7fdd-4e9a-a656-33e50010abd6",
      "documentation": "Lists the access key for the specified configuration store.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/ListKeys",
      "responses": [
        {
          "uuid": "6826fb02-6f78-4bf1-98c4-94c22f0f209e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"connectionString\": \"\",\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"readOnly\": {{faker 'random.boolean'}},\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad26db1f-bbab-492b-b863-141771606e09",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22653724-85a6-4068-aa85-57f30b2b6038",
      "documentation": "Regenerates an access key for the specified configuration store.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/RegenerateKey",
      "responses": [
        {
          "uuid": "b42ab48b-2e54-47b9-89c5-4688736d8a10",
          "body": "{\n  \"connectionString\": \"\",\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"readOnly\": {{faker 'random.boolean'}},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3b7d411-69c7-42d6-8c23-b6319e3211a7",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3271f09-dc57-4523-ba59-210d9cc662c3",
      "documentation": "Lists a configuration store key-value.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/listKeyValue",
      "responses": [
        {
          "uuid": "dff60408-e3f4-4f90-88c9-271046b5a4aa",
          "body": "{\n  \"contentType\": \"\",\n  \"eTag\": \"\",\n  \"key\": \"\",\n  \"label\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"locked\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4c05ac9-6739-4b32-a4e2-dd213d464d98",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "caa5b1df-2b77-4fb5-8272-9198204a505c",
      "documentation": "Lists all private endpoint connections for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections",
      "responses": [
        {
          "uuid": "3d5ab4b0-0b89-48e3-a9b9-8a414974d8da",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"privateEndpoint\": {\n          \"id\": \"\"\n        },\n        \"privateLinkServiceConnectionState\": {\n          \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n          \"description\": \"\",\n          \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n        },\n        \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc371be4-909c-4a40-ada0-612724dff1d9",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "079dceea-5d22-4a14-bd2b-edf187b72d3e",
      "documentation": "Deletes a private endpoint connection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "b4c0685d-2290-4b88-a0a9-e582c7c0afa5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d9a43e5-7e57-4dba-aac7-1457e087cb5f",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b51565e-0029-4426-8348-bd5cf9a2680d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content - the specified resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b69bfc4-2be8-42d8-94fd-fa9452ad30d8",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2da7c0d4-f7ae-478f-bb5c-eb8faefd802b",
      "documentation": "Gets the specified private endpoint connection associated with the configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "25d543a9-ddf6-4f64-9bcf-64df2cd8061f",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ffcb786-3356-425a-9e74-bebae13098a5",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e9e949db-0e3b-41ba-bdf8-fa823657d4e4",
      "documentation": "Update the state of the specified private endpoint connection associated with the configuration store.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "05ab21e8-3ba3-483e-a8ce-810f11dd39ad",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68a5a016-d77d-487c-921d-4cb15b4147e1",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cb418ab-1a69-416e-bc01-ae5e06937d53",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dec0ceaa-67d0-4241-be2e-2ecdfff751a5",
      "documentation": "Gets the private link resources that need to be created for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateLinkResources",
      "responses": [
        {
          "uuid": "9b9714f1-605e-4ac7-9253-dc52b4c04baf",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"groupId\": \"\",\n        \"requiredMembers\": [\n          \"\"\n        ]\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f940843f-4c8a-4f15-b106-aa786cdb4e50",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "905fb386-a109-4637-ba82-b3fe5ec28335",
      "documentation": "Gets a private link resource that need to be created for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateLinkResources/:groupName",
      "responses": [
        {
          "uuid": "623e9df6-d2e7-4fd9-b460-6bb4caec05cf",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"groupId\": \"\",\n    \"requiredMembers\": [\n      \"\"\n    ]\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af2da9dc-29c4-4bbd-87a1-03783a392910",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}