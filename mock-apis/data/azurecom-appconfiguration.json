{
  "uuid": "e6f02472-43cb-47a6-b67d-921807bc917a",
  "lastMigration": 19,
  "name": "AppConfigurationManagementClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e8721b85-578d-49cf-8593-4f40fad7670f",
      "documentation": "Lists the operations available from this provider.",
      "method": "get",
      "endpoint": "providers/Microsoft.AppConfiguration/operations",
      "responses": [
        {
          "uuid": "70defdc7-d092-4f0d-a5e6-80e764a837e8",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"display\": {\n        \"description\": \"\",\n        \"operation\": \"\",\n        \"provider\": \"\",\n        \"resource\": \"\"\n      },\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1456f4f-c4fd-48af-a602-0409d25ff13e",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70c4d646-4777-4fe8-beb1-79399262269a",
      "documentation": "Checks whether the configuration store name is available for use.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.AppConfiguration/checkNameAvailability",
      "responses": [
        {
          "uuid": "8289860b-29e8-40c9-bc97-b2835889e7e9",
          "body": "{\n  \"message\": \"\",\n  \"nameAvailable\": {{faker 'random.boolean'}},\n  \"reason\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d948b3ce-5004-4344-891d-37fd5aae8fd1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2f7265f4-2a47-4755-8f6a-3a6ceab8f07c",
      "documentation": "Lists the configuration stores for a given subscription.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/providers/Microsoft.AppConfiguration/configurationStores",
      "responses": [
        {
          "uuid": "9bd4c252-5d6f-405a-9274-716346fe23c7",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bc7466c-bbe6-42ca-99de-5c4103a2abd2",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65b98cbb-7663-4276-bbe9-c1194e56157e",
      "documentation": "Lists the configuration stores for a given resource group.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores",
      "responses": [
        {
          "uuid": "595683fa-2f0c-49a0-b3ca-d2aac958c24d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"tags\": {},\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "724db8df-7ac8-483d-8fb8-68dc1406948d",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1bc5e87c-7ef6-4fa9-9edb-5b3916e31d29",
      "documentation": "Deletes a configuration store.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "ecd12bfe-9fa6-4195-9057-381743449e36",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35926bf4-f6b6-403e-aca4-8364c4bf855c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef7e1068-9543-401f-8aec-28045ade25b9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content - the specified resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a68aead1-5316-491b-ab2e-bcd516af55c3",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d027ae2-be76-4fcf-a212-0557ec5460f7",
      "documentation": "Gets the properties of the specified configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "7bec6b0e-4791-47bc-9405-a111af08cb34",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80ae2a9a-1f6d-47a5-8f71-76b54eb5ef1f",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42b4d61e-bea1-48e2-ade2-33d4eb1e3c13",
      "documentation": "Updates a configuration store with the specified parameters.",
      "method": "patch",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "903097d3-5197-4d6f-92fb-b9c27b81623a",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fcb66e8-c201-4a66-881b-4dc0a997d6eb",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba8de90b-3c17-4cd8-bf09-4e38b5c78ebf",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25ffafe9-c2b6-4518-8ec1-7c08424bfe19",
      "documentation": "Creates a configuration store with the specified parameters.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName",
      "responses": [
        {
          "uuid": "727c75d5-fba5-44c8-a428-1e37a2e0b3d9",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f2ca04f-afcd-4554-910f-86a447b03a31",
          "body": "{\n  \"id\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"tags\": {},\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec98b467-da90-48f4-8336-d5ff25be03a1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73417bdd-f75c-4ee3-b32f-afbf8f244b2c",
      "documentation": "Lists the access key for the specified configuration store.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/ListKeys",
      "responses": [
        {
          "uuid": "8148ab19-1265-45c5-8595-871b2fd0e6df",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"connectionString\": \"\",\n      \"id\": \"\",\n      \"lastModified\": \"{{faker 'date.recent' 365}}\",\n      \"name\": \"\",\n      \"readOnly\": {{faker 'random.boolean'}},\n      \"value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a5444e3-9410-4342-9732-12da880f26f0",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b5c7aed-979b-4732-88ab-9f8751cbe83a",
      "documentation": "Regenerates an access key for the specified configuration store.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/RegenerateKey",
      "responses": [
        {
          "uuid": "643303b9-80fb-4970-8cc8-52603d5f57c8",
          "body": "{\n  \"connectionString\": \"\",\n  \"id\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"name\": \"\",\n  \"readOnly\": {{faker 'random.boolean'}},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c572cc2e-7cdd-44f0-a4b2-aa9e9fc7f86c",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d330a1b3-5323-4e11-ae5f-94de4bcfc34f",
      "documentation": "Lists a configuration store key-value.",
      "method": "post",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/listKeyValue",
      "responses": [
        {
          "uuid": "f4a25328-8013-4791-9929-25659b5fa0e8",
          "body": "{\n  \"contentType\": \"\",\n  \"eTag\": \"\",\n  \"key\": \"\",\n  \"label\": \"\",\n  \"lastModified\": \"{{faker 'date.recent' 365}}\",\n  \"locked\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e72d92bf-e321-428a-927f-6a11c6fc684b",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ba2329f-463c-4867-b065-0e1d7f614cad",
      "documentation": "Lists all private endpoint connections for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections",
      "responses": [
        {
          "uuid": "5393fff5-083d-4482-b5c0-6202376c35e0",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"privateEndpoint\": {\n          \"id\": \"\"\n        },\n        \"privateLinkServiceConnectionState\": {\n          \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n          \"description\": \"\",\n          \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n        },\n        \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c388012e-b8e4-482b-ae99-aa5ada4bfe54",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a827ed9c-b978-444c-a5c4-54d294e2daa0",
      "documentation": "Deletes a private endpoint connection.",
      "method": "delete",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "c1544537-4bad-4db4-badb-8fccb11d629e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d7646f2-eb31-4e00-864b-f2dc55bb90b1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The request was successful; the operation will complete asynchronously.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d660ee1-c4d4-4d52-88ff-66d076b74541",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content - the specified resource was not found.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f58bd45-fa3d-43ba-82af-4f69fd772bf1",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80b64864-7561-4cb2-ad2c-7879541d5f37",
      "documentation": "Gets the specified private endpoint connection associated with the configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "6d974264-9d8a-4640-8765-1078230c48d0",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c3dcdf-7c33-498d-bde0-3b21bcb29ee3",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75cd66b6-659a-4905-8f0a-582658929fab",
      "documentation": "Update the state of the specified private endpoint connection associated with the configuration store.",
      "method": "put",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateEndpointConnections/:privateEndpointConnectionName",
      "responses": [
        {
          "uuid": "66c4612e-f848-4401-8a88-371e6a2d4780",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5b2dae7-39cd-4012-a331-0099af0b04c8",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"privateEndpoint\": {\n      \"id\": \"\"\n    },\n    \"privateLinkServiceConnectionState\": {\n      \"actionsRequired\": \"{{oneOf (array 'None' 'Recreate')}}\",\n      \"description\": \"\",\n      \"status\": \"{{oneOf (array 'Pending' 'Approved' 'Rejected' 'Disconnected')}}\"\n    },\n    \"provisioningState\": \"{{oneOf (array 'Creating' 'Updating' 'Deleting' 'Succeeded' 'Failed' 'Canceled')}}\"\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ad897b0-c1d2-4af6-a3bb-cd8bb0fceae7",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45f2b970-bcb0-4042-8418-eb5098e15696",
      "documentation": "Gets the private link resources that need to be created for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateLinkResources",
      "responses": [
        {
          "uuid": "4f581da6-2dee-4623-97d3-242424f39e4c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"properties\": {\n        \"groupId\": \"\",\n        \"requiredMembers\": [\n          \"\"\n        ]\n      },\n      \"type\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca278252-acbd-47ef-9fb6-8539e2fc107f",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1065c50c-568a-4b31-a398-73f5bb3d9e32",
      "documentation": "Gets a private link resource that need to be created for a configuration store.",
      "method": "get",
      "endpoint": "subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.AppConfiguration/configurationStores/:configStoreName/privateLinkResources/:groupName",
      "responses": [
        {
          "uuid": "cb913f95-1b75-4a32-bf80-c8ea4bcb4e05",
          "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"properties\": {\n    \"groupId\": \"\",\n    \"requiredMembers\": [\n      \"\"\n    ]\n  },\n  \"type\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The request was successful; the request was well-formed and received properly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49bd9c9b-2dea-4a25-8cfc-53567be59663",
          "body": "{\n  \"code\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error response describing why the operation failed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}