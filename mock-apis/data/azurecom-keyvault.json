{
  "uuid": "22d5ae6a-5083-445f-be68-f217cd0da0f2",
  "lastMigration": 19,
  "name": "KeyVaultClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "1ec19155-b1ca-45a7-beba-8f2815dda569",
      "documentation": "List certificates in a specified key vault",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "2af81fc3-f08e-42d7-92a4-0fc72003420e",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates along with a link to the next page of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c2a0beb-f1bc-4c29-a14f-34957c5c63ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3b75fac-3048-4a90-aa6e-248e290799a6",
      "documentation": "Deletes the certificate contacts for a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "dfeb386c-bcbb-40b6-95db-56f506d125ac",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "551ae5fe-d327-46e3-b926-398389729233",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d0108c5-b54f-4f8e-b33b-23184e99a390",
      "documentation": "Lists the certificate contacts for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "5512f63a-6984-4c66-a812-f0683db52e4a",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "996d0e8f-6662-43ff-b7a2-92ce8bd86be2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fa85af4-35d6-4d60-a941-fb087feec209",
      "documentation": "Sets the certificate contacts for the specified key vault.",
      "method": "put",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "9abdcd6f-ba7d-4c97-a3fa-062a4196670e",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c4f810c-2bd0-49ca-97ec-afb0e97a99c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a0891fe-1eb4-4ff1-ab51-4a31347dc96f",
      "documentation": "List certificate issuers for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/issuers",
      "responses": [
        {
          "uuid": "510bd6cc-977a-491e-9759-0d15059f9548",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificate issuers in a key vault along with a link to the next page of certificate issuers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24cc53dc-a50d-4af2-a91a-53ded7b88544",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e94c65f-9659-4d0b-aa9b-a978c476276b",
      "documentation": "Deletes the specified certificate issuer.",
      "method": "delete",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "768a44a9-fa86-4759-b666-2976a117a296",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bc3fae4-19d3-4911-a96b-36d96d5c54d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5f6868f-0914-41a2-94ae-2addf014c2a4",
      "documentation": "Lists the specified certificate issuer.",
      "method": "get",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "6afd78cf-75be-48ce-ad1c-b437effadaac",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eca3180-52b1-4480-800f-f771c353934b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a61f21b3-15f3-489c-9d8f-fee9de56719f",
      "documentation": "Updates the specified certificate issuer.",
      "method": "patch",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "7846cd7e-d6df-4c1e-a342-e77d3df45a6b",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "898d8546-1ea4-4d16-b490-e44632a3a893",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f3088fce-85af-42a2-bf41-d51a6ef560ad",
      "documentation": "Sets the specified certificate issuer.",
      "method": "put",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "f3c22872-ca83-46f1-ae3b-682f8812e8f5",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fda0a41c-87f5-49a5-800b-8cf6c2df3fbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed5b768a-73cf-419b-8358-6db6e344e1f2",
      "documentation": "Restores a backed up certificate to a vault.",
      "method": "post",
      "endpoint": "certificates/restore",
      "responses": [
        {
          "uuid": "0263b1c1-0911-4c7b-a8a0-d269668df3bf",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored certificate bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40317945-d905-45d7-91a1-5d1263424311",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d046f31c-e2b3-43e7-920e-31e573e6267a",
      "documentation": "Deletes a certificate from a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}",
      "responses": [
        {
          "uuid": "28b9f421-463d-4ccc-8d2b-6a153e28b185",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4b341c1-c39c-4994-ba38-bb58fe059760",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2e0976a-371f-4c0f-b9ed-8fc6daf3dffd",
      "documentation": "Backs up the specified certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/backup",
      "responses": [
        {
          "uuid": "a1482f3a-e894-4b26-9739-d2488e59db7e",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b31048e7-8f2a-421f-bcbf-fdfb69a3cc87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f62bdaa9-136c-4768-8d61-8b64a329c84d",
      "documentation": "Creates a new certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/create",
      "responses": [
        {
          "uuid": "fdb72399-a679-4d45-abdd-c49288bcac2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "Created certificate bundle.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "556a893a-af6c-4a3c-86eb-fb140d716930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "956d52d5-500e-43c5-bbbe-f3b7c84f2104",
      "documentation": "Imports a certificate into a specified key vault.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/import",
      "responses": [
        {
          "uuid": "60ff56e1-c510-4852-ba3a-e95765d6d445",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c7d3aad-36db-4333-832c-f1188933f1c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06b96d90-bfb5-4b0a-b27c-2f31a16e6823",
      "documentation": "Deletes the creation operation for a specific certificate.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "23459c8d-82a0-4703-9380-71e9448eb86c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a645c3a-97c6-4900-a301-2e71c615acf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af5b6be8-a9f3-4972-8d6b-f51617b4db2e",
      "documentation": "Gets the creation operation of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "f250dd5e-3ee4-4641-a597-7a4957564119",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fedb198a-e964-46cb-974d-d194899ae41f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5d2e60f-4a33-4989-83b5-77228fd2962e",
      "documentation": "Updates a certificate operation.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "f5f31bd0-b4e1-465a-bebe-ad62d7c87d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "046ebb48-c002-4137-95a0-12ade06a77dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac0305ff-0005-4408-ace1-a6ab1c7eaf1a",
      "documentation": "Merges a certificate or a certificate chain with a key pair existing on the server.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/pending/merge",
      "responses": [
        {
          "uuid": "ca5012b1-9adc-4ad5-b9b5-e7853bf82401",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Merged certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cee3797c-b797-4610-a03d-d6094e258a78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4dc7a9e3-334f-412e-ae1c-8f298b8aedd9",
      "documentation": "Lists the policy for a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "f014d010-8436-4682-bb07-6022288fa610",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'random.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'random.boolean'}},\n    \"key_size\": {{faker 'random.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'random.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'random.number'}},\n        \"lifetime_percentage\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "602de833-4597-4b5b-8754-4de8add3632d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0bcbbbbe-751c-417c-9d53-fcc1c8362edc",
      "documentation": "Updates the policy for a certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "5ab98753-72b9-4ddd-a3d1-f5ea727f33c4",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'random.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'random.boolean'}},\n    \"key_size\": {{faker 'random.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'random.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'random.number'}},\n        \"lifetime_percentage\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb09f260-b232-410f-ac5b-ce9c94ba8d7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2fad0509-40b3-4fb7-904c-8d3d3b3ba530",
      "documentation": "List the versions of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/versions",
      "responses": [
        {
          "uuid": "9e2abd78-4176-4391-86af-a82007f17fa9",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates in the key vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d4fcfa7-f07a-41f6-b41c-bf6d611fb573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0062fde-5a58-4285-b224-ae83ea1addb6",
      "documentation": "Gets information about a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "765c9183-4687-4b7f-98c3-34e7075e99da",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89bb9ef-0317-4e47-99e3-378cec3d2256",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7903176-b3e5-47a0-876b-e4476e344afd",
      "documentation": "Updates the specified attributes associated with the given certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "ba55bd1f-dfb4-42da-952f-1de82b5b1c4f",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0afe1a37-e186-4f10-bf27-09c181cecb2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b227c5ab-e410-4e8f-a4cf-cc56b6d72f04",
      "documentation": "Lists the deleted certificates in the specified vault currently available for recovery.",
      "method": "get",
      "endpoint": "deletedcertificates",
      "responses": [
        {
          "uuid": "b5b8564a-cf05-4aef-ae07-84dee95711a9",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted certificates in the vault along with a link to the next page of deleted certificates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e37404e9-9b58-4c63-a753-a71444d66291",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76aedd43-fb2f-4f4c-89f6-ed3f549ba8ed",
      "documentation": "Permanently deletes the specified deleted certificate.",
      "method": "delete",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "89ac3e2c-55f6-4193-bd21-4cf779874e8b",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the certificate was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5b17878-69b3-47cf-92a6-210ef4b0a201",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5217826-fc16-4cc8-a0f0-bcd89e7f0f36",
      "documentation": "Retrieves information about the specified deleted certificate.",
      "method": "get",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "dace03ac-3ae5-4390-8e42-69016cf6acde",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c87ca3d0-117e-49a8-b69a-2f3a09389899",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d9dbde4-30d2-408b-8a0b-5ae3f31c43d8",
      "documentation": "Recovers the deleted certificate back to its current version under /certificates.",
      "method": "post",
      "endpoint": "deletedcertificates/{certificate-name}/recover",
      "responses": [
        {
          "uuid": "abcaa7aa-9ef6-44b3-89fc-ac836124fbe5",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the original certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a30bd11-3a73-4724-b170-32bf6d8b816d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1262189-1052-43db-8be6-a7e3bafa1ca6",
      "documentation": "Lists the deleted keys in the specified vault.",
      "method": "get",
      "endpoint": "deletedkeys",
      "responses": [
        {
          "uuid": "e3315022-ada4-467a-abb0-e97467681570",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13a71e5-d96c-42ba-b1ee-2eac0374cf2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d750cc7-6188-4c6d-b32a-507fada1330b",
      "documentation": "Permanently deletes the specified key.",
      "method": "delete",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "c7dcc455-2aa7-48ca-8e93-4c7710074105",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content, signaling that the key was permanently purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d24c8c46-f75c-4918-93a1-739d256add9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d5e2d4a-2616-44c1-acba-44721efde1b3",
      "documentation": "Gets the public part of a deleted key.",
      "method": "get",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "9f4d3865-e685-4fcf-925b-56406b8e3924",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35f4cccc-849b-4e49-9feb-898ecb659073",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f94bbd5e-cd7a-47b8-bb25-90e9cecad75b",
      "documentation": "Recovers the deleted key to its latest version.",
      "method": "post",
      "endpoint": "deletedkeys/{key-name}/recover",
      "responses": [
        {
          "uuid": "0e4ef56d-29c2-4a98-990b-72c9ad17a068",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Key bundle of the original key and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a79844d-a43e-4b06-a4b2-747240a2f765",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9cd46d05-0043-44ab-be25-e8d745aba7aa",
      "documentation": "Lists deleted secrets for the specified vault.",
      "method": "get",
      "endpoint": "deletedsecrets",
      "responses": [
        {
          "uuid": "209e94ba-c7ab-4d8c-8466-e7e7e3a6c167",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted secrets in the vault, along with a link to the next page of deleted secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75334494-fef8-423d-89f0-f1bac3d3183f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2a35a1a-5557-470d-b6de-8c09b5e8fb01",
      "documentation": "Permanently deletes the specified secret.",
      "method": "delete",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "f6918563-aa8d-48fa-9302-af2bad9164b0",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the secret was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aefdc18-ec56-4bd7-8426-885a3ceea416",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "103ddd38-87d2-46f5-8511-cb6adbab7dd8",
      "documentation": "Gets the specified deleted secret.",
      "method": "get",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "56a390ca-9416-4e67-a21f-76d11373fcf7",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle of the secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46b02154-620a-4557-9161-c36aec865e20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75e86c74-b43c-43e2-a0c5-4fc73dc5c09e",
      "documentation": "Recovers the deleted secret to the latest version.",
      "method": "post",
      "endpoint": "deletedsecrets/{secret-name}/recover",
      "responses": [
        {
          "uuid": "8a088d54-b9fc-45f8-902c-d736ff78d05c",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Secret bundle of the original secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05b75a44-dbe1-4e29-a8a9-15c9f62c8c31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15340f75-fe91-4026-a7af-8ff0d3fc8535",
      "documentation": "Lists deleted storage accounts for the specified vault.",
      "method": "get",
      "endpoint": "deletedstorage",
      "responses": [
        {
          "uuid": "014932d7-d6e0-4b6d-9234-c28474d2e45d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e226f9a7-0589-4d98-a03e-b731de48e519",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c5c2e21-6033-4826-869f-8d595409bc1f",
      "documentation": "Permanently deletes the specified storage account.",
      "method": "delete",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "660473db-28be-4175-8bd8-2ddf17faae1e",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the storage account was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "593cfe8a-3e6b-4e8d-89b5-ef4c165d84c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaa7a069-1223-48c3-b009-ec7495954b23",
      "documentation": "Gets the specified deleted storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "0de070db-104e-496a-952a-f908e2168739",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when it will be purged, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93091901-5b0b-48ef-b9c7-a59b462ae891",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e9da7e0-393f-4e8b-8cac-3adffdc3c90b",
      "documentation": "Recovers the deleted storage account.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/recover",
      "responses": [
        {
          "uuid": "581754e3-9b70-47a3-a0ea-2cf0c8995def",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A storage bundle of the original storage account and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b2f235c-749e-47db-922a-4aae7fc752e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaabc3f7-8ad5-474d-ae0c-065d6d0bf471",
      "documentation": "Lists deleted SAS definitions for the specified vault and storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "152aa047-6a9e-4968-85d8-9677b72e0efe",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted SAS definitions for the storage account, along with a link to the next page of deleted SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07fd9995-b261-4898-8a39-bb8c3413adff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b77bc46a-72f2-4e6e-875a-256e8429dd66",
      "documentation": "Gets the specified deleted sas definition.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "bf100292-fa1f-4c6b-8296-986a50eb87c8",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the it will be purged, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "094704ea-296f-4204-b240-97d66d37419d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a72ce29-df4c-4742-b90e-8c22ea39976c",
      "documentation": "Recovers the deleted SAS definition.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover",
      "responses": [
        {
          "uuid": "d96eed5d-2457-45be-b8c5-1436e9cc03ea",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A SAS definition bundle of the original SAS definition and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5782e8ee-21c0-4bfc-9cd4-15175212affb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e265522d-d36c-49e9-b478-0f05f9ab0d8f",
      "documentation": "List keys in the specified vault.",
      "method": "get",
      "endpoint": "keys",
      "responses": [
        {
          "uuid": "a63ad378-ce79-4754-8cd9-23cb409a1104",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys in the vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a937d6a-14f3-49c0-8ec6-27fdb3628b7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "306fd02e-76b9-4af3-9fad-32a762b6436f",
      "documentation": "Restores a backed up key to a vault.",
      "method": "post",
      "endpoint": "keys/restore",
      "responses": [
        {
          "uuid": "3f68f9d2-bba2-4b52-b2a3-031ed36a34e9",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored key bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b89d0ed-d5e5-40df-bb96-593745bddc42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c4c0610-f47a-4e6e-8922-7246d803a531",
      "documentation": "Deletes a key of any type from storage in Azure Key Vault.",
      "method": "delete",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "28796763-7081-4c73-8c36-0218c59a9d76",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The public part of the deleted key and deletion information on when the key will be purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b92a4217-2007-4a38-99cb-10da019ae501",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4a27bd5-a471-43b9-ac53-a2617e401f32",
      "documentation": "Imports an externally created key, stores it, and returns key parameters and attributes to the client.",
      "method": "put",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "5c850467-8ae8-47ae-a3b8-574ac10e16ea",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported key bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a864d6f-0e56-4a12-b97c-77b8746e32cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4f04d538-2e4d-4f41-aba1-b5054b8124ec",
      "documentation": "Requests that a backup of the specified key be downloaded to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/backup",
      "responses": [
        {
          "uuid": "764fd702-82b9-4f42-8bd3-fc2baad5b1e3",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e5723a-af95-468b-b0c8-a8b3074a8047",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "15ee7ebb-cbe7-4a55-8530-6f4debf635e0",
      "documentation": "Creates a new key, stores it, then returns key parameters and attributes to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/create",
      "responses": [
        {
          "uuid": "3d2aaacd-c9b7-40b3-82e9-ede4b3a09fbf",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the result of the create key request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bab73e2-008d-471a-83ed-7b7afcc9b6c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "496e0f68-02d6-4d5e-b03a-4ba40c2b9f53",
      "documentation": "Retrieves a list of individual key versions with the same key name.",
      "method": "get",
      "endpoint": "keys/{key-name}/versions",
      "responses": [
        {
          "uuid": "2ba9d66e-d695-4a7a-a1dd-de1edc9de42c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46a62632-a657-4e5c-9e38-ea9797d2c809",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ea290c6-0334-4b26-bef8-3f114cb5fd05",
      "documentation": "Gets the public part of a stored key.",
      "method": "get",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "7170516c-66ee-47e7-baaf-29dba1ba7ded",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the key and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2c3adbb-4f02-431c-9265-46bd094d3529",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "958ed72c-43b6-41b7-b391-ec6542231ff8",
      "documentation": "The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault.",
      "method": "patch",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "d8d4b4af-fa10-46f0-a402-15cf7641f19a",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "364f1321-ae5b-455b-9238-7c732c14e3d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90859ae7-3ec1-41c3-9302-49bef1c1d277",
      "documentation": "Decrypts a single block of encrypted data.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/decrypt",
      "responses": [
        {
          "uuid": "ec08a75b-a5cf-4c89-8c89-b852d0f7ec23",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The decryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76399ab2-13f1-4cb9-ba40-09aa1ea57579",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c808e999-6a28-44fb-8b6e-f8bb5db178d7",
      "documentation": "Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/encrypt",
      "responses": [
        {
          "uuid": "f96b2732-5bce-4b9f-9529-e2c49a6bedeb",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The encryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "217d93a2-92a6-4acb-8e84-a5cf8200671f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4284bd3c-0d2c-4d99-bbc0-0af654ca64b9",
      "documentation": "Creates a signature from a digest using the specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/sign",
      "responses": [
        {
          "uuid": "ab3abc08-23c6-4f00-ae81-0d3d5617f628",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The signature value.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e38ed43c-b303-48dd-838e-0d7e179090b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9f3f5f19-d57c-4253-a950-9d07517ae468",
      "documentation": "Unwraps a symmetric key using the specified key that was initially used for wrapping that key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/unwrapkey",
      "responses": [
        {
          "uuid": "8ba1762b-6658-48d6-883d-456e1e54c608",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The unwrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "170d44e3-8506-422e-84e8-202319511779",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "433a4275-7154-4b86-a097-17686e99acb6",
      "documentation": "Verifies a signature using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/verify",
      "responses": [
        {
          "uuid": "06e1329d-74d8-4957-804a-30d61bf56f56",
          "body": "{\n  \"value\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The verification result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ce24c3-23d8-401e-b629-ccb8bbef6d87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "05d966bb-5611-4d92-b147-386f57a1b581",
      "documentation": "Wraps a symmetric key using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/wrapkey",
      "responses": [
        {
          "uuid": "35f605a1-61bb-417e-89e1-f5363e452c53",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The wrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a87fea73-7ff2-466a-b3ee-58f91e5329d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dd3e1a3-5a59-4a5e-81a3-a6024dde7134",
      "documentation": "List secrets in a specified key vault.",
      "method": "get",
      "endpoint": "secrets",
      "responses": [
        {
          "uuid": "51f7f9c5-4ac8-4f1a-93a7-d4ad6a1dcbfa",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets in the vault along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "120cc064-ebe5-42dd-9dbe-f9591f138d77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ffa4542-f4a2-41b4-b08c-c687d9d340d3",
      "documentation": "Restores a backed up secret to a vault.",
      "method": "post",
      "endpoint": "secrets/restore",
      "responses": [
        {
          "uuid": "d5c6d56e-31dd-4c67-b72b-69ad61cd078e",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored secret bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad5fd9fb-7ce8-4236-ad03-73103e7d27f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d11b228b-9b01-4357-aa69-42b48fb0f7ec",
      "documentation": "Deletes a secret from a specified key vault.",
      "method": "delete",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "feb0dbf9-c067-4a11-b35d-b494b7beea3d",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted secret and information on when the secret will be deleted, and how to recover the deleted secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b529dc9-4e08-4e9c-8564-417f6d8fa89f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "819d155e-f3fe-483c-8522-d0f99e37a8ae",
      "documentation": "Sets a secret in a specified key vault.",
      "method": "put",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "a02e23d6-a990-4ffb-ab2a-d94e2ec35ebd",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle containing the result of the set secret request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fb20c49-0fd0-42e8-bb6c-5d7ec34ce356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2f541d6-fd41-41e2-be51-ce9d43580c5a",
      "documentation": "Backs up the specified secret.",
      "method": "post",
      "endpoint": "secrets/{secret-name}/backup",
      "responses": [
        {
          "uuid": "c55a9d2e-0e66-42b2-af8b-6d9d86590b0c",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a805369-371e-43a3-93e0-b0cc743836a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc068586-6d35-4d9c-942a-296187cd3c2e",
      "documentation": "List all versions of the specified secret.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/versions",
      "responses": [
        {
          "uuid": "6e360b3e-51cb-4606-a569-d6022c915d62",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8fb51a2-a2ee-474f-86cd-3c341deaa48a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65faa89a-a6cb-4af4-982f-4a89efadbfcf",
      "documentation": "Get a specified secret from a given key vault.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "a4e4ea1a-3ef8-4021-99b1-efc41a57349b",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26d44474-ce0c-4702-a755-5e382cafc39c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceb66e84-1195-43d1-9415-ffde97f10368",
      "documentation": "Updates the attributes associated with a specified secret in a given key vault.",
      "method": "patch",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "468d5d9e-fe28-4982-88eb-318eaa427802",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce4d93db-00cb-43d5-8807-077e65639e26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8cfdf37-890a-4198-b869-a94e70346232",
      "documentation": "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.",
      "method": "get",
      "endpoint": "storage",
      "responses": [
        {
          "uuid": "51caecee-7508-4803-8348-15822a7f721a",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of storage accounts along with a link to the next page of storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1be7c97-9ca0-4784-bfdb-1a87926799d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56506365-010e-4452-b592-0ddfe2b8bc6c",
      "documentation": "Restores a backed up storage account to a vault.",
      "method": "post",
      "endpoint": "storage/restore",
      "responses": [
        {
          "uuid": "e633c475-6a9f-4dfb-a7a3-8895770bc07a",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored storage account bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01dc37d1-c35c-4ce5-9ad8-b22c6f6413f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7591be55-a118-4711-b4a9-4ebc18783e34",
      "documentation": "Deletes a storage account. This operation requires the storage/delete permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "7ae47afc-5143-42ee-af3c-4a8696579150",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when the storage account will be deleted, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5727ba8e-6a08-41ad-95fa-3646b08b2e7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16604dca-e2c8-4f89-8c1c-02b3b1b92bd1",
      "documentation": "Gets information about a specified storage account. This operation requires the storage/get permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "89715cf2-0db9-43d5-8c6b-9204f2d6c38f",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f86d1617-cc92-49c2-9fbd-16f235bfb7d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f36739ca-12da-495f-afe1-2477e48f3b8a",
      "documentation": "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "7e704f8b-9202-42ff-bee7-d996911726bb",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bbf1f0d-2a7a-4795-8c71-a48fc5d751c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e65860e5-1887-4b6e-abd8-40cf514a2902",
      "documentation": "Creates or updates a new storage account. This operation requires the storage/set permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "72aa1c12-8e29-46a6-9c4c-c6dcf128bed7",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4947840d-e96d-4193-a072-640c744d28fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e215463d-9e2d-4f7c-9f8a-8283a7fd98a0",
      "documentation": "Backs up the specified storage account.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/backup",
      "responses": [
        {
          "uuid": "89921c9a-c7c6-4132-9f0f-b1336f854f4f",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82849028-acde-4169-9187-75fe3a8158f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4a519a15-5403-47c0-b904-89c5364a7647",
      "documentation": "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/regeneratekey",
      "responses": [
        {
          "uuid": "25e4c2e0-e9a9-43d6-ba6b-efb609603a11",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b7e6b6f-beee-43b6-9e1d-8f58c14d7740",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "220350d5-940e-4d0a-ab1c-c52137893257",
      "documentation": "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "b7a7f9ae-b84a-4f62-8425-bc6005cb845d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deabc3fc-a5ec-4fc9-b5d6-89f17d1b2d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd22f013-b620-4ffc-bedb-562005f8240d",
      "documentation": "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "15ef8643-086e-4745-a3c8-7a0c3605d374",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the SAS definition will be deleted, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0897c8f6-82f1-44c7-9857-43c2978d2f16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b2a6084-2653-473d-973e-b711132699d5",
      "documentation": "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "3860eae6-d648-4e93-8b8a-c24099056f50",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35f850f2-140d-4a73-9047-d3c8ffe41f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "904627ab-9798-47dd-88ac-fb250001691d",
      "documentation": "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "02291bd9-c3ad-438d-90cc-b33acb30f8fb",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67717d5b-c497-4da9-918b-4397dd169988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7582283a-b480-4bf2-9efe-359e3734963f",
      "documentation": "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "e385e10b-97da-455e-9f64-5e66b9c31528",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29b411f5-4a7d-400a-94eb-b15bffe86a76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}