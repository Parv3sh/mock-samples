{
  "uuid": "a6e40d35-306a-456a-b914-db6afeeb1d06",
  "lastMigration": 19,
  "name": "KeyVaultClient",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "e079be98-dd6c-43cd-9363-988168a620ba",
      "documentation": "List certificates in a specified key vault",
      "method": "get",
      "endpoint": "certificates",
      "responses": [
        {
          "uuid": "a04f8740-54bb-4868-aca6-e94ec8ce0acb",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates along with a link to the next page of certificates.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6817b786-93ce-4a0d-9924-b114b0009315",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0371cee7-d1b5-499d-b3b9-7a6b0f079091",
      "documentation": "Deletes the certificate contacts for a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "7513ea62-a78b-427b-9345-931757af06fa",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3269c3c-87ba-4932-ae83-7a3880d2bf21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dc1ef706-92c7-483f-a5d3-aaeb86607393",
      "documentation": "Lists the certificate contacts for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "d7f9b4ee-d01b-4905-81f7-d25ffe85ca80",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad6b260-0dbf-4987-bf7c-b09c99e2c585",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6a17626e-0ac8-4659-9d4a-16665fbe0223",
      "documentation": "Sets the certificate contacts for the specified key vault.",
      "method": "put",
      "endpoint": "certificates/contacts",
      "responses": [
        {
          "uuid": "b6bda646-8490-42e6-a2e8-d83c4c761847",
          "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\"\n    }\n  ],\n  \"id\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contacts for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11a8ed7d-4c5d-4d95-9b58-6587e0561a3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac82e7a9-9923-49af-a8f8-8a30d934a686",
      "documentation": "List certificate issuers for a specified key vault.",
      "method": "get",
      "endpoint": "certificates/issuers",
      "responses": [
        {
          "uuid": "a7f47bdc-2cdb-48fd-a431-80ffaf31acff",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"id\": \"\",\n      \"provider\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificate issuers in a key vault along with a link to the next page of certificate issuers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6eef5b18-1395-4556-acad-e5b7ed3b8dc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "043f3460-0c0d-475c-b38b-db20ee2d6191",
      "documentation": "Deletes the specified certificate issuer.",
      "method": "delete",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "976f9b05-8b61-463b-884d-e313f7d2fae4",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb333514-440a-4434-a20c-c436867b3230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e6e9cab-07f1-4a79-8292-38ab3d5822be",
      "documentation": "Lists the specified certificate issuer.",
      "method": "get",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "919ad0b7-5333-4acd-b3da-f894ce8d6ce9",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "542527b5-dec1-42fa-b85d-7bce719cdfb3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3cc0c177-4dee-40ba-ae22-68d353a138df",
      "documentation": "Updates the specified certificate issuer.",
      "method": "patch",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "c9022cfe-1e5c-43a5-bc9d-f88b291d784a",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "529021e6-4d88-4bc2-83a9-6597c63d6184",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9e7bbed5-6ac3-45bc-aa13-ac8cfc841ca5",
      "documentation": "Sets the specified certificate issuer.",
      "method": "put",
      "endpoint": "certificates/issuers/{issuer-name}",
      "responses": [
        {
          "uuid": "25a67891-145f-418d-b70c-32cbf3d0c3a5",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"credentials\": {\n    \"account_id\": \"\",\n    \"pwd\": \"\"\n  },\n  \"id\": \"\",\n  \"org_details\": {\n    \"admin_details\": [\n      {\n        \"email\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"phone\": \"\"\n      }\n    ],\n    \"id\": \"\"\n  },\n  \"provider\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The issuer for the key vault certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b4a9d13-1d71-415a-bc68-6980680195df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00672db1-6fc4-4499-b4ac-37b0b5977eea",
      "documentation": "Restores a backed up certificate to a vault.",
      "method": "post",
      "endpoint": "certificates/restore",
      "responses": [
        {
          "uuid": "4c2dc2d5-faff-4be6-89af-c2b78ff933f6",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored certificate bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05ae9032-0ef3-4314-8140-60c8e0ffddab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5814d11e-7d3b-4804-b6ba-e263f3263707",
      "documentation": "Deletes a certificate from a specified key vault.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}",
      "responses": [
        {
          "uuid": "9df52301-c2bb-4eaf-b8f1-324cd10b5990",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eb217dc-46e3-4521-b841-d216ac4cb106",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cdab19b3-9804-4ac7-ab8e-a5080e4d5426",
      "documentation": "Backs up the specified certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/backup",
      "responses": [
        {
          "uuid": "207eafe5-3178-4016-be8e-9696d5a272aa",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21cce9c0-ec6c-4cce-9e14-e1bb6017e19e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8f5489a4-26d6-4365-8085-e187b7a90d00",
      "documentation": "Creates a new certificate.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/create",
      "responses": [
        {
          "uuid": "da3552ab-fc18-466b-be07-d4477a331eb2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 202,
          "label": "Created certificate bundle.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac491915-fe39-47a5-ad18-0daf57eb01dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6e5bca2-376b-4f37-a381-cd28fc0371a2",
      "documentation": "Imports a certificate into a specified key vault.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/import",
      "responses": [
        {
          "uuid": "609390f1-ef0a-4ea8-bd6b-77de16a13ab7",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b10e748-28fa-4bba-9518-c552d820161a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "108fac80-489d-40f4-a34c-92d403b63e5e",
      "documentation": "Deletes the creation operation for a specific certificate.",
      "method": "delete",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "0c159144-8a7d-4c2c-85e3-428f21c720a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca653825-ed81-41b8-83a0-60b7c6498215",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d436c0b-ae9a-4903-b568-fbe8d1eb6e1e",
      "documentation": "Gets the creation operation of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "d24aeaeb-0392-48eb-836c-a5c08c1a8d3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da77c6ad-42fc-4819-b6d9-b9f97ea90685",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "023c83d6-4f67-4773-a0eb-b6ac23aec685",
      "documentation": "Updates a certificate operation.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/pending",
      "responses": [
        {
          "uuid": "e97aaa59-a7e5-4b41-aeb8-a67692a584d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "A message containing the certificate operation response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0280c30-8933-4631-adbd-4d2bde05d69c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5075f6a0-c9b1-45ed-adf9-c4eee58a2493",
      "documentation": "Merges a certificate or a certificate chain with a key pair existing on the server.",
      "method": "post",
      "endpoint": "certificates/{certificate-name}/pending/merge",
      "responses": [
        {
          "uuid": "40736e8a-c905-4825-b789-ca6beaa3fc91",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Merged certificate bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3661667-fbdf-488e-9fd4-6c6d536ac871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c7fdc5c-fa99-44c8-bbd7-27cf7b45baf8",
      "documentation": "Lists the policy for a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "ffb037cc-dc88-4302-b8db-ae9987816afe",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'random.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'random.boolean'}},\n    \"key_size\": {{faker 'random.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'random.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'random.number'}},\n        \"lifetime_percentage\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5584aad4-830a-48c9-aaca-268d051e220d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "395e544c-cd1c-41fa-9a89-9f2685c209f9",
      "documentation": "Updates the policy for a certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/policy",
      "responses": [
        {
          "uuid": "4dde095e-71d4-48f8-99d1-617823e7c5a6",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"issuer\": {\n    \"cert_transparency\": {{faker 'random.boolean'}},\n    \"cty\": \"\",\n    \"name\": \"\"\n  },\n  \"key_props\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"exportable\": {{faker 'random.boolean'}},\n    \"key_size\": {{faker 'random.number'}},\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"reuse_key\": {{faker 'random.boolean'}}\n  },\n  \"lifetime_actions\": [\n    {\n      \"action\": {\n        \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n      },\n      \"trigger\": {\n        \"days_before_expiry\": {{faker 'random.number'}},\n        \"lifetime_percentage\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"secret_props\": {\n    \"contentType\": \"\"\n  },\n  \"x509_props\": {\n    \"ekus\": [\n      \"\"\n    ],\n    \"key_usage\": [\n      \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n    ],\n    \"sans\": {\n      \"dns_names\": [\n        \"\"\n      ],\n      \"emails\": [\n        \"\"\n      ],\n      \"upns\": [\n        \"\"\n      ]\n    },\n    \"subject\": \"\",\n    \"validity_months\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The certificate policy",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41c5cdf6-a9bf-425d-bf93-ba5efc3e945b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0876cf2d-6cbb-4003-a34a-5ea44015817a",
      "documentation": "List the versions of a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/versions",
      "responses": [
        {
          "uuid": "b2db9a73-9944-4da0-a3f3-a22c6bd1f682",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of certificates in the key vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f9ba3f4-1b1c-4ded-ab79-606065808dcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6b64d36-e99a-4157-8d4c-e642059206c8",
      "documentation": "Gets information about a certificate.",
      "method": "get",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "b1c22624-387c-4226-b52f-161bbda56657",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2b597b8-c754-4179-bc0f-595f81f875bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a16d81a7-92a2-472a-9d13-42824cb64f66",
      "documentation": "Updates the specified attributes associated with the given certificate.",
      "method": "patch",
      "endpoint": "certificates/{certificate-name}/{certificate-version}",
      "responses": [
        {
          "uuid": "5a5c592c-e8d7-4ecc-acc7-0d23c5ebc8f3",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated certificate.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "673962b4-d775-4249-bf89-7269c2baa994",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3e7511f-e5c0-4887-9925-feea5e5f8191",
      "documentation": "Lists the deleted certificates in the specified vault currently available for recovery.",
      "method": "get",
      "endpoint": "deletedcertificates",
      "responses": [
        {
          "uuid": "5313bb51-a0cf-4c15-9f25-05ddb5d3d5f8",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"tags\": {},\n      \"x5t\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted certificates in the vault along with a link to the next page of deleted certificates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7d0428c-3bbe-4464-b1d0-49a53dc94ef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14d8a0b7-7ce3-42b6-a383-10d0ea004cc0",
      "documentation": "Permanently deletes the specified deleted certificate.",
      "method": "delete",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "439bee01-9408-40ae-a380-399de44debab",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the certificate was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de32e73c-22fc-4261-a641-13efe5a8fb52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34a31972-553a-4771-a7b5-947db81b83b2",
      "documentation": "Retrieves information about the specified deleted certificate.",
      "method": "get",
      "endpoint": "deletedcertificates/{certificate-name}",
      "responses": [
        {
          "uuid": "d3355e4d-4446-4bd0-b027-f9f44d339e43",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "327d472b-f605-499e-a67c-ee8408619766",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e51bbd6b-c676-4385-bfa9-52d2df1e3e1f",
      "documentation": "Recovers the deleted certificate back to its current version under /certificates.",
      "method": "post",
      "endpoint": "deletedcertificates/{certificate-name}/recover",
      "responses": [
        {
          "uuid": "904a9a93-2fb5-4563-89cb-6b13ebcbf28d",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"cer\": \"\",\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"policy\": {\n    \"attributes\": {\n      \"created\": {{faker 'random.number'}},\n      \"enabled\": {{faker 'random.boolean'}},\n      \"exp\": {{faker 'random.number'}},\n      \"nbf\": {{faker 'random.number'}},\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"id\": \"\",\n    \"issuer\": {\n      \"cert_transparency\": {{faker 'random.boolean'}},\n      \"cty\": \"\",\n      \"name\": \"\"\n    },\n    \"key_props\": {\n      \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n      \"exportable\": {{faker 'random.boolean'}},\n      \"key_size\": {{faker 'random.number'}},\n      \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n      \"reuse_key\": {{faker 'random.boolean'}}\n    },\n    \"lifetime_actions\": [\n      {\n        \"action\": {\n          \"action_type\": \"{{oneOf (array 'EmailContacts' 'AutoRenew')}}\"\n        },\n        \"trigger\": {\n          \"days_before_expiry\": {{faker 'random.number'}},\n          \"lifetime_percentage\": {{faker 'random.number'}}\n        }\n      }\n    ],\n    \"secret_props\": {\n      \"contentType\": \"\"\n    },\n    \"x509_props\": {\n      \"ekus\": [\n        \"\"\n      ],\n      \"key_usage\": [\n        \"{{oneOf (array 'digitalSignature' 'nonRepudiation' 'keyEncipherment' 'dataEncipherment' 'keyAgreement' 'keyCertSign' 'cRLSign' 'encipherOnly' 'decipherOnly')}}\"\n      ],\n      \"sans\": {\n        \"dns_names\": [\n          \"\"\n        ],\n        \"emails\": [\n          \"\"\n        ],\n        \"upns\": [\n          \"\"\n        ]\n      },\n      \"subject\": \"\",\n      \"validity_months\": {{faker 'random.number'}}\n    }\n  },\n  \"sid\": \"\",\n  \"tags\": {},\n  \"x5t\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Certificate bundle of the original certificate and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "380fde67-3c39-4a2c-9189-39877a10061e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33935b44-e58f-4f73-a0f5-7f898a528dc7",
      "documentation": "Lists the deleted keys in the specified vault.",
      "method": "get",
      "endpoint": "deletedkeys",
      "responses": [
        {
          "uuid": "1c2ed4b5-b758-4a27-abcd-c353a8821590",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d64cfcd9-8997-4898-ab16-fa8babac81b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "faacc15c-cecc-41a5-a5a8-184d707b62c0",
      "documentation": "Permanently deletes the specified key.",
      "method": "delete",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "c9f6b8b3-7758-4ae0-ac33-8c9db3cf24b8",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content, signaling that the key was permanently purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e9c4756-a902-410f-b70c-c5a6a14f79e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "37dc56df-80ac-49c9-b8bc-a8c55f046eae",
      "documentation": "Gets the public part of a deleted key.",
      "method": "get",
      "endpoint": "deletedkeys/{key-name}",
      "responses": [
        {
          "uuid": "e2c4cfb2-59c6-4d99-8791-1ca30d6c6c96",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion information.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68fad3c1-fc98-4141-8f62-f259e62b462a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ad4dcc7-8194-4af0-b884-8a84f8d5383b",
      "documentation": "Recovers the deleted key to its latest version.",
      "method": "post",
      "endpoint": "deletedkeys/{key-name}/recover",
      "responses": [
        {
          "uuid": "ec589da3-7620-493f-8c54-675c6b986873",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Key bundle of the original key and its attributes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "387562c2-38a8-4cdf-a6d1-de5d6be43a53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b69f1dd7-47b3-4f2a-82df-82d3e7c9312c",
      "documentation": "Lists deleted secrets for the specified vault.",
      "method": "get",
      "endpoint": "deletedsecrets",
      "responses": [
        {
          "uuid": "0ef87ee1-c7af-4612-b152-29faeb81ab5d",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted secrets in the vault, along with a link to the next page of deleted secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8a37aad-60cb-4073-a982-b6ecb81e6e72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79c9ff7f-35ba-4242-bb80-7b6f2ee7ae6c",
      "documentation": "Permanently deletes the specified secret.",
      "method": "delete",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "33eae2b5-ace9-4f6a-9e75-8da01c8ac676",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the secret was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54a9002f-b9b4-4c5f-9b70-cce72c1d57ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e1b438d-fa18-4d5b-b20d-c3e4ef20fb38",
      "documentation": "Gets the specified deleted secret.",
      "method": "get",
      "endpoint": "deletedsecrets/{secret-name}",
      "responses": [
        {
          "uuid": "a43f2313-8623-408f-b6d2-f9009f112539",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle of the secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8542b5bf-2767-4f20-aada-4eab0da48f62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b26e50b9-88e4-40d1-8717-02056aa1ab6f",
      "documentation": "Recovers the deleted secret to the latest version.",
      "method": "post",
      "endpoint": "deletedsecrets/{secret-name}/recover",
      "responses": [
        {
          "uuid": "2339a874-3fab-4da4-9960-7e5548dc07c3",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Secret bundle of the original secret and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e211e2a-d99c-46f8-b1bf-5ac8828fcbb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abccea4f-d59a-401a-90d4-69974448b4e2",
      "documentation": "Lists deleted storage accounts for the specified vault.",
      "method": "get",
      "endpoint": "deletedstorage",
      "responses": [
        {
          "uuid": "66749041-bca0-4e4c-9840-9e5a40108513",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted storage accounts in the vault, along with a link to the next page of deleted storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a6d866f-3c9c-4848-a4ba-d4967b2f4a25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3843b66a-c805-4bd5-b109-ac0e5efa7de6",
      "documentation": "Permanently deletes the specified storage account.",
      "method": "delete",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "f9fe30a4-f45b-476e-baa3-41f711977cda",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No content signaling that the storage account was purged forever.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d51d2c2d-16be-44a4-8fb0-d4c750eafca1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e446e085-0965-4bb9-8252-1c721e210263",
      "documentation": "Gets the specified deleted storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}",
      "responses": [
        {
          "uuid": "0f899b62-335c-4bfb-af98-67edee685aa7",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when it will be purged, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed90ce86-1b48-459f-8da0-3c41419dadc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "29cc2b79-17ce-4db4-a658-5328c3657156",
      "documentation": "Recovers the deleted storage account.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/recover",
      "responses": [
        {
          "uuid": "3d4b673d-6ad8-4e53-973b-04c3f0e7a501",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A storage bundle of the original storage account and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "145e6c30-51af-42aa-9063-ead5a04f22d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba77da9b-ae1d-4694-90ef-c810f27c4d50",
      "documentation": "Lists deleted SAS definitions for the specified vault and storage account.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "f61fce8a-e54c-49df-8ded-087f3ebc02a4",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of deleted SAS definitions for the storage account, along with a link to the next page of deleted SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85fe354c-62bd-4c5b-8d7a-e21314518425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5925ee16-4e7e-4ef7-b872-76d564cbf612",
      "documentation": "Gets the specified deleted sas definition.",
      "method": "get",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "cec824c9-b810-4f63-879a-23b4bcb28090",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the it will be purged, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40474cfb-1610-4910-ac5c-f8e80c3be19e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb93a98e-727c-466d-b1dd-9bba4413ea48",
      "documentation": "Recovers the deleted SAS definition.",
      "method": "post",
      "endpoint": "deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover",
      "responses": [
        {
          "uuid": "3b030f8e-3b95-4b06-be46-1658c33cc793",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A SAS definition bundle of the original SAS definition and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d3bb7b-7382-4b3d-9eea-9b37b818237e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "222e4542-85a8-45e5-8347-70e2283fafb3",
      "documentation": "List keys in the specified vault.",
      "method": "get",
      "endpoint": "keys",
      "responses": [
        {
          "uuid": "9f2840b9-40ea-4e9a-8441-498038e464b1",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys in the vault along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6795d9aa-b612-4b2c-80ca-b9118aa4aafe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b97b64d-ad8b-4644-9499-4e757f6fe463",
      "documentation": "Restores a backed up key to a vault.",
      "method": "post",
      "endpoint": "keys/restore",
      "responses": [
        {
          "uuid": "66ac14f7-2b1c-41d9-9b7f-fd25dda7fda1",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored key bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16e4c3d9-53b3-4a3e-b201-bea82295b8c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "435a605f-c00b-40ec-9abc-b5171ab45fbd",
      "documentation": "Deletes a key of any type from storage in Azure Key Vault.",
      "method": "delete",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "ae98f5fe-933c-4e7b-a617-7e73dc39a6fc",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The public part of the deleted key and deletion information on when the key will be purged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e9ec5de-577c-4ede-b890-c667fb8319b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5029c90d-ed63-4e79-a6ea-2e488b82baf4",
      "documentation": "Imports an externally created key, stores it, and returns key parameters and attributes to the client.",
      "method": "put",
      "endpoint": "keys/{key-name}",
      "responses": [
        {
          "uuid": "d48625aa-f796-42e9-8351-fca06b9b0124",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Imported key bundle to the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ff6ed18-d38e-4c51-aaca-2fd91124a143",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5370cd3-4f46-4deb-95cc-f6c577e83946",
      "documentation": "Requests that a backup of the specified key be downloaded to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/backup",
      "responses": [
        {
          "uuid": "1fd4b2f0-e2f4-4254-89f4-461ddc8a5a92",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4722ec7-455c-419b-987d-7a7af28e3b1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4c365fe-121e-4d20-91ab-96ba7a99c167",
      "documentation": "Creates a new key, stores it, then returns key parameters and attributes to the client.",
      "method": "post",
      "endpoint": "keys/{key-name}/create",
      "responses": [
        {
          "uuid": "b8a5bc3e-dea8-4c97-8892-8d212c5dd68f",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the result of the create key request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c42bc2a-4ffb-4e5e-8f28-ee5eb3e40a31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0d15888-da24-4805-a67e-17a9fbfef68a",
      "documentation": "Retrieves a list of individual key versions with the same key name.",
      "method": "get",
      "endpoint": "keys/{key-name}/versions",
      "responses": [
        {
          "uuid": "532570f3-e3b1-411c-9ae4-391167131105",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"kid\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of keys along with a link to the next page of keys.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77be1a4c-be58-4d0b-afdb-5b69343cb1f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efa15478-e20c-48bb-88a5-e20fd5b156fa",
      "documentation": "Gets the public part of a stored key.",
      "method": "get",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "a9a1f491-900a-4142-86b0-5bfa03f20c70",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A key bundle containing the key and its attributes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d550276c-1218-4953-8c41-6e8eb402af90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "65b6100f-4a25-4e23-b307-d53fc9f6ffc6",
      "documentation": "The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault.",
      "method": "patch",
      "endpoint": "keys/{key-name}/{key-version}",
      "responses": [
        {
          "uuid": "32cda907-248c-4dd1-981f-317ce32594d8",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"key\": {\n    \"crv\": \"{{oneOf (array 'P-256' 'P-384' 'P-521' 'P-256K')}}\",\n    \"d\": \"\",\n    \"dp\": \"\",\n    \"dq\": \"\",\n    \"e\": \"\",\n    \"k\": \"\",\n    \"key_hsm\": \"\",\n    \"key_ops\": [\n      \"\"\n    ],\n    \"kid\": \"\",\n    \"kty\": \"{{oneOf (array 'EC' 'EC-HSM' 'RSA' 'RSA-HSM' 'oct')}}\",\n    \"n\": \"\",\n    \"p\": \"\",\n    \"q\": \"\",\n    \"qi\": \"\",\n    \"x\": \"\",\n    \"y\": \"\"\n  },\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e891183-6ca4-4be2-acf5-f9d89479453a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7884d33d-189f-41bf-9f7e-24ce01a4320c",
      "documentation": "Decrypts a single block of encrypted data.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/decrypt",
      "responses": [
        {
          "uuid": "9201e987-81aa-437c-977d-53a3d4f2269b",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The decryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bb62912-2239-45ea-97c5-0b6c387d859b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2aae203e-3fc7-47ab-baf2-2fcf30fdb86c",
      "documentation": "Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/encrypt",
      "responses": [
        {
          "uuid": "fde3d814-6232-4de7-b63c-3f25966e63a5",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The encryption result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b89aff4c-e121-41f3-88d6-1637aec1d938",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a48a8074-be09-48fb-a59c-3e887c7fc54c",
      "documentation": "Creates a signature from a digest using the specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/sign",
      "responses": [
        {
          "uuid": "6ba79535-d345-4ca1-9c7d-10f642123c11",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The signature value.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "387a0ba1-94ba-4ff6-a503-fe30de7949bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b50250f-2e92-456d-965a-10ea7b72afca",
      "documentation": "Unwraps a symmetric key using the specified key that was initially used for wrapping that key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/unwrapkey",
      "responses": [
        {
          "uuid": "78633758-91a7-49fe-a398-730541adfd75",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The unwrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe200c9b-817c-46a3-a6c8-02b2ec9b8d4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ebd421e-08d1-468c-bd57-109287fb3937",
      "documentation": "Verifies a signature using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/verify",
      "responses": [
        {
          "uuid": "0919222a-a0b0-465b-978a-286f19dfc3a8",
          "body": "{\n  \"value\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The verification result.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6d8f5ea-b7e6-43df-bcce-f0767b072cb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94e6f3b9-9717-47cb-af90-225b1fc71902",
      "documentation": "Wraps a symmetric key using a specified key.",
      "method": "post",
      "endpoint": "keys/{key-name}/{key-version}/wrapkey",
      "responses": [
        {
          "uuid": "c45a959c-1fd2-4bbd-92c6-835b184517cc",
          "body": "{\n  \"kid\": \"\",\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The wrapped symmetric key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31a784f7-0a1c-4559-b649-1bad5f0d469f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81f47ff6-48ef-4449-a2df-8866ebc5958b",
      "documentation": "List secrets in a specified key vault.",
      "method": "get",
      "endpoint": "secrets",
      "responses": [
        {
          "uuid": "1b76f7ff-a872-4702-9319-94ba626d132c",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets in the vault along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b85f797c-6692-47ee-aeb9-92e56ad4ccc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2ca5bef-dfa2-4863-8af3-df316082b7d8",
      "documentation": "Restores a backed up secret to a vault.",
      "method": "post",
      "endpoint": "secrets/restore",
      "responses": [
        {
          "uuid": "42c45c95-2425-49b3-b2d0-6096a1c86a97",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored secret bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "789b6254-faff-430d-b93c-3d7a03f72f85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "561a8212-9beb-4792-ad86-7fcd0e4f75d5",
      "documentation": "Deletes a secret from a specified key vault.",
      "method": "delete",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "09498341-2104-4ffb-9c30-9a2703a30536",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted secret and information on when the secret will be deleted, and how to recover the deleted secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90a35285-b69c-4208-876b-12e694c04ab1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20e14e05-9efa-445d-a06d-ec65b7a3bba0",
      "documentation": "Sets a secret in a specified key vault.",
      "method": "put",
      "endpoint": "secrets/{secret-name}",
      "responses": [
        {
          "uuid": "8868b39f-1651-40b0-b320-f1c018783216",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A secret bundle containing the result of the set secret request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aa48fdd-802a-4588-a4f6-eb2636f17b09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7d6187f-0aae-4a76-980c-50d004023054",
      "documentation": "Backs up the specified secret.",
      "method": "post",
      "endpoint": "secrets/{secret-name}/backup",
      "responses": [
        {
          "uuid": "3c505bcb-f265-4043-8f5a-75b6583592ab",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2c647e7-1616-465e-8fcd-d8865534f38d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b56bb7cd-8785-4de7-891c-374451a9d084",
      "documentation": "List all versions of the specified secret.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/versions",
      "responses": [
        {
          "uuid": "e2e06755-be7c-4e72-a7e0-b80b048edab0",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"exp\": {{faker 'random.number'}},\n        \"nbf\": {{faker 'random.number'}},\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"contentType\": \"\",\n      \"id\": \"\",\n      \"managed\": {{faker 'random.boolean'}},\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of secrets along with a link to the next page of secrets.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "666dd55d-a62c-4a6d-a155-31b7a41eb3cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec1c08e2-910d-47d8-a691-2e6b899c891e",
      "documentation": "Get a specified secret from a given key vault.",
      "method": "get",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "e6d68213-7625-4ba0-b550-adb12644b13a",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d78f12f3-e4d2-4d7d-9b56-aa0f82f6f652",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81650fee-e97d-40cc-bf51-32018fbe93a6",
      "documentation": "Updates the attributes associated with a specified secret in a given key vault.",
      "method": "patch",
      "endpoint": "secrets/{secret-name}/{secret-version}",
      "responses": [
        {
          "uuid": "513eb259-d938-4134-b94a-ddf1974f51c0",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"exp\": {{faker 'random.number'}},\n    \"nbf\": {{faker 'random.number'}},\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"contentType\": \"\",\n  \"id\": \"\",\n  \"kid\": \"\",\n  \"managed\": {{faker 'random.boolean'}},\n  \"tags\": {},\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated secret.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05d30956-3d58-4db6-9561-6d46619a678f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a266fe2f-ca9a-489e-af1b-9c186b626f66",
      "documentation": "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.",
      "method": "get",
      "endpoint": "storage",
      "responses": [
        {
          "uuid": "77d93163-7db7-4483-9a11-b29ec8514ba7",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"resourceId\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of storage accounts along with a link to the next page of storage accounts.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc69016a-0806-4a13-a370-39f067969839",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79e57fda-cca9-4280-8951-22da0cbf807b",
      "documentation": "Restores a backed up storage account to a vault.",
      "method": "post",
      "endpoint": "storage/restore",
      "responses": [
        {
          "uuid": "486e2661-551e-4eb7-8091-f1f731fd49bf",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restored storage account bundle in the vault.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbd9be22-efc5-47da-8483-d03410bf4d65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd9eb53e-bd7f-433b-82ec-b8cd8377e92c",
      "documentation": "Deletes a storage account. This operation requires the storage/delete permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "ef7325db-baed-4a32-9460-1c121d984cd1",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted storage account and information on when the storage account will be deleted, and how to recover the deleted storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74478a75-f755-4fbd-b829-e1d84c7e3297",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50ab180f-d289-4aee-a417-055e0a5fd10a",
      "documentation": "Gets information about a specified storage account. This operation requires the storage/get permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "ccd085a3-42b9-4839-9ff1-f9510db370ab",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "314776c8-8e76-44ed-93b2-553a13eafec8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0c0c704-7bd3-49d8-9ba4-7576b6e4387a",
      "documentation": "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "c1b9b709-370a-4c82-8fc8-772b1a5b2815",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d828697-77fc-427f-84f7-9894d60462ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a61e2457-fea8-41b0-bca1-af7a1b4ea7e4",
      "documentation": "Creates or updates a new storage account. This operation requires the storage/set permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}",
      "responses": [
        {
          "uuid": "bbae0731-b640-42ac-a68e-0c106ed2a05f",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fda36130-6243-4ad7-8ac2-b053c39c3d8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "babf9079-84b5-494f-a555-afc92bc448aa",
      "documentation": "Backs up the specified storage account.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/backup",
      "responses": [
        {
          "uuid": "73eb02e2-ce54-4d10-a628-e0fae7e4e676",
          "body": "{\n  \"value\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The backup blob containing the backed up storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8883629f-974d-4f70-9e66-e1d959d9f6a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "348dae45-d287-4895-bedb-145287909051",
      "documentation": "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.",
      "method": "post",
      "endpoint": "storage/{storage-account-name}/regeneratekey",
      "responses": [
        {
          "uuid": "eaec808c-471d-49fc-8464-db6c45097197",
          "body": "{\n  \"activeKeyName\": \"\",\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"autoRegenerateKey\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"regenerationPeriod\": \"\",\n  \"resourceId\": \"\",\n  \"tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated storage account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbdc9c2a-61cf-4ddf-b11c-f19f926c7570",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d19b1183-0d5b-4edb-aa33-759aed8b24fa",
      "documentation": "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas",
      "responses": [
        {
          "uuid": "dcc7df43-9d0a-45e6-b6d6-2563b6fa0830",
          "body": "{\n  \"nextLink\": \"\",\n  \"value\": [\n    {\n      \"attributes\": {\n        \"created\": {{faker 'random.number'}},\n        \"enabled\": {{faker 'random.boolean'}},\n        \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"sid\": \"\",\n      \"tags\": {}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6f53629-16f1-4b4b-b3e8-7006f14b88fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "21c1fe77-355c-45d9-8374-80ff507f740c",
      "documentation": "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.",
      "method": "delete",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "042eb6ec-eb00-42eb-8508-dd8fb3271a97",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The deleted SAS definition and information on when the SAS definition will be deleted, and how to recover the deleted SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a5f650f-940f-410f-807f-1a3f8fb4bd3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "effeb5c3-4be4-4f20-99cd-ddc9b56032f9",
      "documentation": "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.",
      "method": "get",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "08227a4f-b0f8-486c-8ca0-b47dc26110e7",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The retrieved SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e21767-c8b4-4cd9-b52c-5c2b391f5a21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "654816aa-991d-4b52-b11e-5aab778fae8e",
      "documentation": "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.",
      "method": "patch",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "1cc1c8bc-1579-4fa4-9d20-1fae03c98c60",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc3113ce-7216-42e2-9210-e3dce747fbd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0ca9c78f-8243-4fbf-9060-9c72f7c02e19",
      "documentation": "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.",
      "method": "put",
      "endpoint": "storage/{storage-account-name}/sas/{sas-definition-name}",
      "responses": [
        {
          "uuid": "5571cde2-b8a9-46b9-b72a-9129b890ea53",
          "body": "{\n  \"attributes\": {\n    \"created\": {{faker 'random.number'}},\n    \"enabled\": {{faker 'random.boolean'}},\n    \"recoveryLevel\": \"{{oneOf (array 'Purgeable' 'Recoverable+Purgeable' 'Recoverable' 'Recoverable+ProtectedSubscription')}}\",\n    \"updated\": {{faker 'random.number'}}\n  },\n  \"id\": \"\",\n  \"sasType\": \"{{oneOf (array 'account' 'service')}}\",\n  \"sid\": \"\",\n  \"tags\": {},\n  \"templateUri\": \"\",\n  \"validityPeriod\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The created SAS definition.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c37418f-9b7c-4249-9ec3-8b2084d5f14d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Key Vault error response describing why the operation failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}