{
  "uuid": "98f37755-d1bd-496c-b76b-2d773175900b",
  "lastMigration": 19,
  "name": "Cloud Source Repositories API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "5903975d-5edd-4177-8b8a-44166db9a4e9",
      "documentation": "Deletes a repo.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "81811784-8c23-4fce-a271-da6eb04959fd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "385aa0f3-ea13-4ae7-bcb5-dacccc529a39",
      "documentation": "Returns information about a repo.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "b292cb32-e783-41c0-8a8e-9c547463dd91",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0031b85-53b9-4907-9d86-bf6a638987ca",
      "documentation": "Updates information about a repo.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "583263c4-ed79-491e-b84b-d5651db80f85",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52987763-e510-4b55-a96e-ebe78fcfa45e",
      "documentation": "Returns the Cloud Source Repositories configuration of the project.",
      "method": "get",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "b2d7f087-921b-408d-bce8-0ecabf368651",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99d0e65f-3110-440d-8046-ac47b2330622",
      "documentation": "Updates the Cloud Source Repositories configuration of the project.",
      "method": "patch",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "cde1c4aa-63e8-43ca-a887-e900eda2d3e0",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a1c21bb-ce3d-4cf9-b0e2-e423cc8f3da9",
      "documentation": "Returns all repos belonging to a project. The sizes of the repos are not set by ListRepos. To get the size of a repo, use GetRepo.",
      "method": "get",
      "endpoint": "v1/:name/repos",
      "responses": [
        {
          "uuid": "2d6e8e05-e724-47f0-983d-91e1cf1d3e71",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"repos\": [\n    {\n      \"mirrorConfig\": {\n        \"deployKeyId\": \"\",\n        \"url\": \"\",\n        \"webhookId\": \"\"\n      },\n      \"name\": \"\",\n      \"pubsubConfigs\": {},\n      \"size\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1889a5e2-2fe5-4159-8c53-18911c34562e",
      "documentation": "Synchronize a connected repo. The response contains SyncRepoMetadata in the metadata field.",
      "method": "post",
      "endpoint": "v1/:name:sync",
      "responses": [
        {
          "uuid": "987004dc-f3a2-485a-a7cc-60f24c5f554f",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "55cc659b-7946-4828-9634-167e2eb09c1a",
      "documentation": "Creates a repo in the given project with the given name. If the named repository already exists, `CreateRepo` returns `ALREADY_EXISTS`.",
      "method": "post",
      "endpoint": "v1/:parent/repos",
      "responses": [
        {
          "uuid": "b5bd02f3-ea67-48ec-a2ec-783da74300bd",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "42f269ab-b444-426c-b395-4b4643c0dd42",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "c8c3d8fc-e5be-4b10-a0b9-e9bb80627ec3",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f34f190-77a7-498c-a1c4-ad526c661443",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "41514701-d4f2-4f71-a8d8-b927760e72fe",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d3349b8-4b5a-426c-826c-3ed86ec11f9a",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "dedeceb1-9aed-47e7-a3d6-914b833585fc",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}