{
  "uuid": "f384f206-d6e7-4692-867a-b947a91da1f5",
  "lastMigration": 19,
  "name": "Cloud Source Repositories API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4d389514-d096-4da3-adf7-6e6071b85877",
      "documentation": "Deletes a repo.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "76bbf013-8185-428c-a5cc-f45da3567575",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "620cee4e-f2cc-480f-9ef6-0b7fa313a3db",
      "documentation": "Returns information about a repo.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "3b1fed59-d3cb-414a-81a6-9a804c0c7675",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0473610d-a76b-49d1-854e-ee1f0b5ffb0b",
      "documentation": "Updates information about a repo.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "ed18e308-c4b8-4c3b-a3e7-386ce743fa77",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1c2b4a5-9e81-4524-a6ab-c29f85df9d44",
      "documentation": "Returns the Cloud Source Repositories configuration of the project.",
      "method": "get",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "4caf95cc-a326-476e-8aeb-744d1e7d6b19",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6fc307d-ae70-45c9-a18b-86c6768e3c83",
      "documentation": "Updates the Cloud Source Repositories configuration of the project.",
      "method": "patch",
      "endpoint": "v1/:name/config",
      "responses": [
        {
          "uuid": "2f93bcad-44ba-4b71-a19d-17a402f5d1e5",
          "body": "{\n  \"enablePrivateKeyCheck\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"pubsubConfigs\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e5e2f03-4d6f-4b0f-bf80-5a0f7e6f2605",
      "documentation": "Returns all repos belonging to a project. The sizes of the repos are not set by ListRepos. To get the size of a repo, use GetRepo.",
      "method": "get",
      "endpoint": "v1/:name/repos",
      "responses": [
        {
          "uuid": "bc78daec-f367-4aeb-9627-e23f916a1d23",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"repos\": [\n    {\n      \"mirrorConfig\": {\n        \"deployKeyId\": \"\",\n        \"url\": \"\",\n        \"webhookId\": \"\"\n      },\n      \"name\": \"\",\n      \"pubsubConfigs\": {},\n      \"size\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2069395-6d8d-4859-a23b-d8f32b045265",
      "documentation": "Synchronize a connected repo. The response contains SyncRepoMetadata in the metadata field.",
      "method": "post",
      "endpoint": "v1/:name:sync",
      "responses": [
        {
          "uuid": "15bf343e-6615-4fa2-a49c-975391cbcd71",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0466fbf9-4484-4855-95d0-1e5ff3274daf",
      "documentation": "Creates a repo in the given project with the given name. If the named repository already exists, `CreateRepo` returns `ALREADY_EXISTS`.",
      "method": "post",
      "endpoint": "v1/:parent/repos",
      "responses": [
        {
          "uuid": "7078fa82-aaa3-4680-95ec-6b07d9a46735",
          "body": "{\n  \"mirrorConfig\": {\n    \"deployKeyId\": \"\",\n    \"url\": \"\",\n    \"webhookId\": \"\"\n  },\n  \"name\": \"\",\n  \"pubsubConfigs\": {},\n  \"size\": \"\",\n  \"url\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e427b6e-4601-4c03-8a01-c2b2a31b055a",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "get",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "230bda46-0999-4dda-87c5-0370e7833881",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ae9667a-cf8c-4934-9933-cfdffa667962",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "125da2d7-74b1-462b-b361-e85b88debb56",
          "body": "{\n  \"auditConfigs\": [\n    {\n      \"auditLogConfigs\": [\n        {\n          \"exemptedMembers\": [\n            \"\"\n          ],\n          \"logType\": \"{{oneOf (array 'LOG_TYPE_UNSPECIFIED' 'ADMIN_READ' 'DATA_WRITE' 'DATA_READ')}}\"\n        }\n      ],\n      \"service\": \"\"\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9757f86a-e4a7-4dc0-9cfa-54e3c0d2bc7f",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "2d4a7d7b-73f9-484d-a921-d573ff7db255",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}