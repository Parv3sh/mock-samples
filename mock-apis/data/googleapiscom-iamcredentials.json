{
  "uuid": "4feb976c-4b68-4381-952c-ccf7ff8ab2c7",
  "lastMigration": 19,
  "name": "IAM Service Account Credentials API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "7441b5b0-8a74-4fe6-a573-9f5796fc5e37",
      "documentation": "Generates an OAuth 2.0 access token for a service account.",
      "method": "post",
      "endpoint": "v1/:name:generateAccessToken",
      "responses": [
        {
          "uuid": "f9a84873-1767-45dc-9c23-d1725ba300e2",
          "body": "{\n  \"accessToken\": \"\",\n  \"expireTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "842249d3-595d-404b-a8a7-9b1dc9f3295b",
      "documentation": "Generates an OpenID Connect ID token for a service account.",
      "method": "post",
      "endpoint": "v1/:name:generateIdToken",
      "responses": [
        {
          "uuid": "0001101c-22e8-4f52-a038-0c1b51a5a419",
          "body": "{\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b50039d8-b24d-4cb6-8ab6-70b27182b380",
      "documentation": "Signs a blob using a service account's system-managed private key.",
      "method": "post",
      "endpoint": "v1/:name:signBlob",
      "responses": [
        {
          "uuid": "0310a342-ad30-425b-8f51-a5013db64ab4",
          "body": "{\n  \"keyId\": \"\",\n  \"signedBlob\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5b2d02c1-66d7-4573-b7a7-0f394f7af71e",
      "documentation": "Signs a JWT using a service account's system-managed private key.",
      "method": "post",
      "endpoint": "v1/:name:signJwt",
      "responses": [
        {
          "uuid": "a40e1edc-ad26-4ea5-96d0-f24349c4b57c",
          "body": "{\n  \"keyId\": \"\",\n  \"signedJwt\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}