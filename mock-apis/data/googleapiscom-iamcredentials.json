{
  "uuid": "30b96b57-8a52-43f1-af65-32e43c3290de",
  "lastMigration": 19,
  "name": "IAM Service Account Credentials API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "9365953f-e4b2-429f-9ceb-47416b273639",
      "documentation": "Generates an OAuth 2.0 access token for a service account.",
      "method": "post",
      "endpoint": "v1/:name:generateAccessToken",
      "responses": [
        {
          "uuid": "426e67a2-9323-4443-a748-86cf5dadbaf3",
          "body": "{\n  \"accessToken\": \"\",\n  \"expireTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f529836-41a0-4040-a615-e13eb0ca7c92",
      "documentation": "Generates an OpenID Connect ID token for a service account.",
      "method": "post",
      "endpoint": "v1/:name:generateIdToken",
      "responses": [
        {
          "uuid": "ff175d5d-9a1e-4a57-b2e8-1e4fb4e550a7",
          "body": "{\n  \"token\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d23e3e3b-b96e-4eff-831c-280958eb3cd2",
      "documentation": "Signs a blob using a service account's system-managed private key.",
      "method": "post",
      "endpoint": "v1/:name:signBlob",
      "responses": [
        {
          "uuid": "b3571972-5213-47f3-9dc8-6129da989834",
          "body": "{\n  \"keyId\": \"\",\n  \"signedBlob\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fef2b25-475d-4b81-961c-aee15979b290",
      "documentation": "Signs a JWT using a service account's system-managed private key.",
      "method": "post",
      "endpoint": "v1/:name:signJwt",
      "responses": [
        {
          "uuid": "9d97b03f-bf10-4183-83a7-360d6401547d",
          "body": "{\n  \"keyId\": \"\",\n  \"signedJwt\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}