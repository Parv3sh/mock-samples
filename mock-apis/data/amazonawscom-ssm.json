{
  "uuid": "e0e7cfdf-0efe-48dd-bf8a-c4eebd5e1d65",
  "lastMigration": 19,
  "name": "Amazon Simple Systems Manager (SSM)",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "eb91f968-e036-4d03-9c9c-a77468bcc06e",
      "documentation": "<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, maintenance windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account's managed instances that helps you track each instance's owner and stack level. For example:</p> <ul> <li> <p> <code>Key=Owner,Value=DbAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=SysAdmin</code> </p> </li> <li> <p> <code>Key=Owner,Value=Dev</code> </p> </li> <li> <p> <code>Key=Stack,Value=Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Pre-Production</code> </p> </li> <li> <p> <code>Key=Stack,Value=Test</code> </p> </li> </ul> <p>Each resource can have a maximum of 50 tags.</p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don't have any semantic meaning to and are interpreted strictly as a string of characters. </p> <p>For more information about using tags with Amazon Elastic Compute Cloud (Amazon EC2) instances, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\">Tagging your Amazon EC2 resources</a> in the <i>Amazon EC2 User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AddTagsToResource",
      "responses": [
        {
          "uuid": "196fe6a1-6730-40c0-9abb-dcffe8db6e29",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54f7e95a-0731-4ee9-9b90-550556118e1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5668feff-96fb-4314-bee3-93764d742b20",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ef7fe8-1d9d-4ca6-a572-002134c5c7db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "013f18a8-44ff-4104-8b43-43f67be0bc06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyTagsError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23cf8e7e-6ac9-4607-8a5e-cf33fa1c0019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "407c194f-5763-4004-b6d3-302f244c13d2",
      "documentation": "Associates a related resource to a Systems Manager OpsCenter OpsItem. For example, you can associate an Incident Manager incident or analysis with an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.AssociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "545ed209-c8b6-4908-904d-74de623e18aa",
          "body": "{\n  \"AssociationId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "553b58c1-d9d7-44e8-a58f-dcc34a145132",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb9eea4e-84fe-43f2-aa14-63de366a1384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30701fca-9729-407b-8a8d-0215546fdf74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c0c5efb-5fbb-4603-8d90-0e2fb89f54cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "806a34fd-ec09-41e3-a2a9-95f8f0ad5c6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemRelatedItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1410cb4b-a3f1-4d1e-917f-0cda3b490cc8",
      "documentation": "Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelCommand",
      "responses": [
        {
          "uuid": "963a8935-ef2c-4857-a00d-dc1c4a3a92b6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75142ee0-32b2-4050-ada1-6525dc1e726d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28eabab9-85bf-419c-8147-6f581bf16b1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54decebe-decf-489d-8139-fefcdcabdb64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a4c4b47-7b09-4a21-9db3-e0f635bb1c3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09d773ed-0d67-43ee-83a4-f1afc539cc1a",
      "documentation": "Stops a maintenance window execution that is already in progress and cancels any tasks in the window that haven't already starting running. Tasks already in progress will continue to completion.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "9d7b1072-d5ef-4a03-8cab-5386a755176a",
          "body": "{\n  \"WindowExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30fb71f4-9d13-4ec3-929d-fa6fcbdb962c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d26d3ae4-17f5-44bb-a0ac-ce83448ed6a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33f2526c-ddae-4ee1-9614-05d0b643eccb",
      "documentation": "<p>Generates an activation code and activation ID you can use to register your on-premises server or virtual machine (VM) with Amazon Web Services Systems Manager. Registering these machines with Systems Manager makes it possible to manage them using Systems Manager capabilities. You use the activation code and ID when installing SSM Agent on machines in your hybrid environment. For more information about requirements for managing on-premises instances and VMs using Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\">Setting up Amazon Web Services Systems Manager for hybrid environments</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note> <p>On-premises servers or VMs that are registered with Systems Manager and Amazon Elastic Compute Cloud (Amazon EC2) instances that you manage with Systems Manager are all called <i>managed instances</i>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateActivation",
      "responses": [
        {
          "uuid": "91cec17d-5f88-483c-9aa3-2c4c4fe3aefd",
          "body": "{\n  \"ActivationId\": \"\",\n  \"ActivationCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "212c68ec-1bbc-4f31-a17a-d780aac94962",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baac94d3-b5d0-4a59-a94b-404b36cd459b",
      "documentation": "A State Manager association defines the state that you want to maintain on your instances. For example, an association can specify that anti-virus software must be installed and running on your instances, or that certain ports must be closed. For static targets, the association specifies a schedule for when the configuration is reapplied. For dynamic targets, such as an Amazon Web Services resource group or an Amazon Web Services autoscaling group, State Manager, a capability of Amazon Web Services Systems Manager applies the configuration when new instances are added to the group. The association also specifies actions to take when applying the configuration. For example, an association for anti-virus software might run once a day. If the software isn't installed, then State Manager installs it. If the software is installed, but the service isn't running, then the association might instruct State Manager to start the service. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociation",
      "responses": [
        {
          "uuid": "734c4fcf-1921-4f38-bec0-0b52239034ed",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e3d32a9-afc0-4193-b89c-35e216f6d286",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0c8a9f4-9aec-4d7a-90a9-9f39429cb9a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e84533-1afe-45c7-abf1-5526f11198e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eaa6284d-a846-4916-85f7-a5560df6757f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0b89d08-bd93-4fd3-8ae9-76769c7ce82d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "852aa071-c63e-4dc2-96ad-11c39e7b4c4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c355c9d5-0747-4caa-a3f3-c7aac93f20ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1921954-e3f0-41ca-97c5-3817ccb0c002",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c138dfe-476e-445b-af3e-ded02d67838d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade1318b-319d-4b0b-9682-5d3b5c2d39a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acf77093-df75-480a-8fdf-5de4c4564a91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "efe51715-09dc-4eaf-a62e-f8a7ec007cf0",
      "documentation": "<p>Associates the specified Amazon Web Services Systems Manager document (SSM document) with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, Amazon Web Services Systems Manager Agent (SSM Agent) running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system returns the AssociationAlreadyExists exception.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateAssociationBatch",
      "responses": [
        {
          "uuid": "6c3196d2-eb7b-4d93-9821-531b91e37d68",
          "body": "{\n  \"Successful\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": {\n        \"Date\": \"{{faker 'date.recent' 365}}\",\n        \"Name\": \"\",\n        \"Message\": \"\",\n        \"AdditionalInfo\": \"\"\n      },\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"DocumentVersion\": \"\",\n      \"AutomationTargetParameterName\": \"\",\n      \"Parameters\": {},\n      \"AssociationId\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"Failed\": [\n    {\n      \"Entry\": {\n        \"Name\": \"\",\n        \"InstanceId\": \"\",\n        \"Parameters\": {},\n        \"AutomationTargetParameterName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"ScheduleExpression\": \"\",\n        \"OutputLocation\": {\n          \"S3Location\": {\n            \"OutputS3Region\": \"\",\n            \"OutputS3BucketName\": \"\",\n            \"OutputS3KeyPrefix\": \"\"\n          }\n        },\n        \"AssociationName\": \"\",\n        \"MaxErrors\": \"\",\n        \"MaxConcurrency\": \"\",\n        \"ComplianceSeverity\": \"\",\n        \"SyncCompliance\": \"\",\n        \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n        \"CalendarNames\": [\n          \"\"\n        ],\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      },\n      \"Message\": \"\",\n      \"Fault\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "695f5f13-0853-459b-89f1-a641471e9857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eac90d6f-ecd5-42dd-b761-1c2e4ef67b26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0de109f-8da7-43ba-8103-1ad25e9dd8b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f24726f-dd40-41bb-a308-ce537f2dec92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c3f7ef1-8d42-4428-89f0-065c962b19a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c7b03ff-e3ae-4be6-9230-93065bcdaada",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f9a03ae-3838-4714-af2a-ee7b3c916843",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AssociationLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a207b2b8-3a6e-4da6-a70c-e0afc0fd9067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ed51760-fd75-4288-bc7f-cbf2bd105058",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce1c8dac-930c-40ff-ad4d-3c208de5623c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc160107-1fd6-4de8-85a8-b9e774f7f012",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce27c61a-2dc5-48b6-937a-db531e9fcfe4",
      "documentation": "Creates a Amazon Web Services Systems Manager (SSM document). An SSM document defines the actions that Systems Manager performs on your managed instances. For more information about SSM documents, including information about supported schemas, features, and syntax, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\">Amazon Web Services Systems Manager Documents</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateDocument",
      "responses": [
        {
          "uuid": "7e95354d-0261-49b5-b59b-cc9b8ce5dc0f",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fae17789-86c0-4eb1-a121-f88f67e4ff41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DocumentAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9cbaf45-1446-4ce9-b33c-89142365bbda",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a09fa7ca-a0d1-420d-98d0-a5a348729dc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40192a83-388e-4ad3-89e6-1e40a3f22664",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de8f629e-e605-4665-bc30-068d2e50b293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74ed3ffb-cd16-42e7-9803-9a79376c8c7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47f440cd-00f7-41b3-9ffc-842c895be24e",
      "documentation": "<p>Creates a new maintenance window.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow",
      "responses": [
        {
          "uuid": "0a623ba0-f156-4a51-bb0c-49e2ecff149a",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ace15785-9fba-4023-9d11-6f5d34badf61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bad2aa5-9f63-45b6-a6b2-b937f4c5d79e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea9223c9-f9f7-4e2b-beb9-e799aafd057f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93a02b52-42b2-488a-8e4c-e7bef159451c",
      "documentation": "<p>Creates a new OpsItem. You must have permission in Identity and Access Management (IAM) to create a new OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">Amazon Web Services Systems Manager OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsItem",
      "responses": [
        {
          "uuid": "115c85be-8f78-49e9-8db6-1508ef52a44a",
          "body": "{\n  \"OpsItemId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29b10af3-dc46-45f5-ac65-f0f92157c933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e9d071b-3c63-428f-a594-261d35bad545",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "919a2332-bdca-4212-a9ca-579989d670c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d83dd1f0-80a1-4a16-8210-9c5a37fe08c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "85f1ba5e-51f9-456c-b3df-1ffefdc31535",
      "documentation": "If you create a new application in Application Manager, Amazon Web Services Systems Manager calls this API operation to specify information about the new application, including the application type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateOpsMetadata",
      "responses": [
        {
          "uuid": "d97a2860-f2ed-4ca0-afe6-ec5582728ae8",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba8b47ad-6268-4918-b073-95f8fce2f02c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58f0e65f-a319-46a8-b2a7-4d4ec367a5f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "042242d5-6f56-4f66-a4e9-5b8e05397bac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fd0b4d4-8551-41d1-9461-6c8baa4e9047",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60f90f9f-8792-4f20-9c48-a16c60dc5f08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "76b417ac-4159-4e67-9a08-f918f4b4f575",
      "documentation": "<p>Creates a patch baseline.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreatePatchBaseline",
      "responses": [
        {
          "uuid": "e5a7b4e3-d852-4dc7-8fe9-e2155c0f61c2",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9aa9c46-c07a-4fe2-83a3-85093306150c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38defcaa-541b-4934-87f9-708f0bb16afd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a11750d-fdd2-4eba-912e-9fb223c3feba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d95faa7-6715-4f98-9af8-fe94531cc5ab",
      "documentation": "<p>A resource data sync helps you view data from multiple sources in a single location. Amazon Web Services Systems Manager offers two types of resource data sync: <code>SyncToDestination</code> and <code>SyncFromSource</code>.</p> <p>You can configure Systems Manager Inventory to use the <code>SyncToDestination</code> type to synchronize Inventory data from multiple Amazon Web Services Regions to a single Amazon Simple Storage Service (Amazon S3) bucket. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\">Configuring resource data sync for Inventory</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>You can configure Systems Manager Explorer to use the <code>SyncFromSource</code> type to synchronize operational work items (OpsItems) and operational data (OpsData) from multiple Amazon Web Services Regions to a single Amazon S3 bucket. This type can synchronize OpsItems and OpsData from multiple Amazon Web Services accounts and Amazon Web Services Regions or <code>EntireOrganization</code> by using Organizations. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html\">Setting up Systems Manager Explorer to display data from multiple accounts and Regions</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>A resource data sync is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data. To check the status of a sync, use the <a>ListResourceDataSync</a>.</p> <note> <p>By default, data isn't encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. </p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.CreateResourceDataSync",
      "responses": [
        {
          "uuid": "b6f476ee-ceb2-49e0-84a0-78eced80d5a2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b254f28a-c932-454c-a384-13399241ca48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61efef47-795e-4e5e-8eb0-bd65ccd13fd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncCountExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "effb1bec-7973-458d-b01d-2c9ddb9ea27d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d469d0dc-68a0-4387-afc0-ede4053186f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6253ffd6-5192-46e2-9a3b-a5ed5e930f15",
      "documentation": "Deletes an activation. You aren't required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation doesn't de-register managed instances. You must manually de-register managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteActivation",
      "responses": [
        {
          "uuid": "96019ad4-ad65-4628-b754-c196e057a9dc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b21ec34a-eb1e-470a-ac10-41217372d858",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidActivationId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19ca289c-63a1-4cfa-b6d2-fcca966a97ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidActivation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5782a09-affc-464a-87a8-e38791817bd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a893564-ebb1-4a59-a184-d105b748a7fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "078a67d2-8b5f-42dd-b371-82c82bc4e31e",
      "documentation": "<p>Disassociates the specified Amazon Web Services Systems Manager document (SSM document) from the specified instance. If you created the association by using the <code>Targets</code> parameter, then you must delete the association by using the association ID.</p> <p>When you disassociate a document from an instance, it doesn't change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteAssociation",
      "responses": [
        {
          "uuid": "0bba1657-4af3-48f3-bde4-41ab0fc35a71",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae8c782a-3ea6-4f27-b7eb-061cf20fa4c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "668670eb-f724-4e92-b957-4745688ae3fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79953278-7e62-4b65-80bf-3c756c7dae2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29475312-aa47-4505-a114-585fa84b5d30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cec15a3-627c-4c52-bfd0-4f1dae7607cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5efa666-f360-4ef8-b0fa-8a56bc43650b",
      "documentation": "<p>Deletes the Amazon Web Services Systems Manager document (SSM document) and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteDocument",
      "responses": [
        {
          "uuid": "6796cf57-03d4-417c-9ef6-525d79ad7ddd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83bc9e4e-3f7d-44b6-b4dc-f174f4a72e39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d154ff00-9aa7-471b-8938-1d370dae2f5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6803d6d-1786-446b-84a0-d2bdb2f52619",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f74af07-1a9e-4554-a0d5-79684edcfe8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociatedInstances",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a770c81e-9f4b-4106-84c7-7e95ebe43927",
      "documentation": "Delete a custom inventory type or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteInventory",
      "responses": [
        {
          "uuid": "c8b77531-c482-479a-98a1-0fff196ecb0e",
          "body": "{\n  \"DeletionId\": \"\",\n  \"TypeName\": \"\",\n  \"DeletionSummary\": {\n    \"TotalCount\": {{faker 'random.number'}},\n    \"RemainingCount\": {{faker 'random.number'}},\n    \"SummaryItems\": [\n      {\n        \"Version\": \"\",\n        \"Count\": {{faker 'random.number'}},\n        \"RemainingCount\": {{faker 'random.number'}}\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f10c46a-3192-41f6-ad95-fd96c0e5a288",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a36b378-600e-4aa8-bc00-d78a0799f400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebd256fc-a3a1-4dde-8bb3-66ab0fec14e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidOptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4518b3ac-7865-4977-837d-8f6645f4457b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDeleteInventoryParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1b6d8b6-d59a-4696-a31e-0c8bf4c2dba3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInventoryRequestException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f45d7b56-e7fb-4ec9-85e4-f5ed7d22fc58",
      "documentation": "Deletes a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow",
      "responses": [
        {
          "uuid": "18eda559-72dd-410c-b06c-6a2a63814a2f",
          "body": "{\n  \"WindowId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9a9ffdd-9c84-469e-bbdc-5201a865dcf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44f9cf59-f4b9-4a84-a23e-5648b42d7ad3",
      "documentation": "Delete OpsMetadata related to an application.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteOpsMetadata",
      "responses": [
        {
          "uuid": "649d47c9-16e3-44ae-9969-b50f94e253bc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbab1364-4114-445c-801d-b58a5a440a1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "392885c0-ca4d-45e4-86b3-c4743368ba21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7d7f785-9e55-4cad-b4b5-be48d5b890ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94a044ab-acb4-4f6c-8a85-164a9bd73276",
      "documentation": "Delete a parameter from the system. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameter",
      "responses": [
        {
          "uuid": "b0bb5db7-ef8c-4921-a397-660d80392509",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f52946ea-c971-4ccc-975b-6ca5af68790a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9364019-d0a1-42bd-b28a-65a49ec5db15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19e35dca-82a1-442c-8243-d2c4a4f182ea",
      "documentation": "Delete a list of parameters. After deleting a parameter, wait for at least 30 seconds to create a parameter with the same name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteParameters",
      "responses": [
        {
          "uuid": "4af1a994-6502-43a3-88d1-7a339b558360",
          "body": "{\n  \"DeletedParameters\": [\n    \"\"\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d6650c4-b1e2-4614-8d20-15adabb4665c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "151c4d3b-7d4a-4b8f-9c18-86c024fe54aa",
      "documentation": "Deletes a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeletePatchBaseline",
      "responses": [
        {
          "uuid": "51d14c10-1cbc-4eb3-96ac-888916668ee6",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93d8fc35-f500-413c-9d69-244c753c9b4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de33b565-caa2-4eb6-97ac-823bd3a63d3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77bcc71d-61a6-4bb2-977e-072ef6cb8cf2",
      "documentation": "Deletes a resource data sync configuration. After the configuration is deleted, changes to data on managed instances are no longer synced to or from the target. Deleting a sync configuration doesn't delete data.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeleteResourceDataSync",
      "responses": [
        {
          "uuid": "6c564a3b-f907-416a-b383-292be3f6b12e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a86dd0c2-3be7-408c-be03-03a85da59008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "399c7f6f-673d-4238-b485-e6dac81b38d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bad219d-00a9-4cfd-982a-b0a4707efaf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08ff2bd4-4999-401d-9dc3-51e4f2813d39",
      "documentation": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don't plan to use Run Command on the server, we suggest uninstalling SSM Agent first.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterManagedInstance",
      "responses": [
        {
          "uuid": "011c6549-6911-4f40-900c-ee5c7d002313",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1984a1b1-9f03-4857-9c31-4247660fb9ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "126cde71-1a2c-4c77-9b53-de39fc386b6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c557b399-ea65-49a0-b80b-5032b03104a7",
      "documentation": "Removes a patch group from a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "597b0b07-5cc8-4ffa-972a-a7b5db690982",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a222a836-433f-4c07-8a9d-d6c35820c468",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6014a8b8-d15d-42df-8aed-31ce5e734a6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43814864-9bb0-4ad0-a222-1fd3982cb11c",
      "documentation": "Removes a target from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "f12e2e5a-27db-4d10-a503-284df81517c3",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e69317d1-61e8-49f6-83fe-936e3f40d936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "499cee73-7004-4a78-ab05-8c78a6897257",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e038247d-4636-4d0b-b1b5-1a787be62daf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TargetInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee2b1397-6f91-46bd-85c1-92046c3fc2be",
      "documentation": "Removes a task from a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow",
      "responses": [
        {
          "uuid": "90e7b48c-6536-4a26-aab8-a5ae73d9bd41",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd002959-b2ab-43de-85d7-44e8af1ec778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a770c15-4608-4728-a9b8-393406e9e4d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7dfca10-425c-4138-a190-b220b064a60b",
      "documentation": "Describes details about the activation, such as the date and time the activation was created, its expiration date, the Identity and Access Management (IAM) role assigned to the instances in the activation, and the number of instances registered by using this activation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeActivations",
      "responses": [
        {
          "uuid": "448f9678-f1ff-4885-8a98-1782595d6e88",
          "body": "{\n  \"ActivationList\": [\n    {\n      \"ActivationId\": \"\",\n      \"Description\": \"\",\n      \"DefaultInstanceName\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationLimit\": {{faker 'random.number'}},\n      \"RegistrationsCount\": {{faker 'random.number'}},\n      \"ExpirationDate\": \"{{faker 'date.recent' 365}}\",\n      \"Expired\": {{faker 'random.boolean'}},\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d26bbaf-faf8-4235-93e8-f425a4fc64ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0543a52-b59e-4f01-b296-134109f244c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bcd087f-9761-46e3-9e6a-3b46f667aa45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57f2da26-ab41-48e7-aa78-9fa09782bae6",
      "documentation": "Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociation",
      "responses": [
        {
          "uuid": "12f0cd24-727e-41ab-aa61-61aa2d5f3678",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b7f4e1d-ef25-4a5e-ac12-e3dfa6ac47ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c7debb4-3d8b-4ec9-b771-0d9b13cd5249",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9754a786-155d-4378-97fd-0f05ea5d52b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0d818cc-7f3b-40b7-90b6-30f03329211d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54aa6528-2644-4edf-9114-b467e634dd03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4c42a42f-9e3d-4b8e-91ba-20ee68568368",
      "documentation": "Views information about a specific execution of a specific association.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets",
      "responses": [
        {
          "uuid": "40ad8787-0513-475d-8b89-464f5112068e",
          "body": "{\n  \"AssociationExecutionTargets\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"ResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"OutputSource\": {\n        \"OutputSourceId\": \"\",\n        \"OutputSourceType\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29cf0c94-0c14-4b2a-af84-37700b342e1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "998eb303-09ab-417d-ad4a-3f38e25ae259",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1607c524-e919-46d4-8c69-2d13a8ed25cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29355f7f-54c4-49fc-b285-7b9ad70b9065",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationExecutionDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3d4b76f-0faf-498f-adee-124fc256e90e",
      "documentation": "Views all executions for a specific association ID. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions",
      "responses": [
        {
          "uuid": "9a052a66-6610-4fc5-846d-6adf4e070f84",
          "body": "{\n  \"AssociationExecutions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"ExecutionId\": \"\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceCountByStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c9b7162-e8c1-4bab-8d87-e0b0a1355911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77706d5c-1f0a-42cd-87c7-8697ee3c9c64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e29844c6-62cd-425b-b98b-9ee2ed17b981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fa15918-79c7-49da-904f-f0882cdc5445",
      "documentation": "Provides details about all active and terminated Automation executions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions",
      "responses": [
        {
          "uuid": "05f8c658-85bf-4204-aa57-2b29040ecf4c",
          "body": "{\n  \"AutomationExecutionMetadataList\": [\n    {\n      \"AutomationExecutionId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AutomationExecutionStatus\": \"\",\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutedBy\": \"\",\n      \"LogFile\": \"\",\n      \"Outputs\": {},\n      \"Mode\": \"\",\n      \"ParentAutomationExecutionId\": \"\",\n      \"CurrentStepName\": \"\",\n      \"CurrentAction\": \"\",\n      \"FailureMessage\": \"\",\n      \"TargetParameterName\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetMaps\": [\n        {}\n      ],\n      \"ResolvedTargets\": {\n        \"ParameterValues\": [\n          \"\"\n        ],\n        \"Truncated\": {{faker 'random.boolean'}}\n      },\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Target\": \"\",\n      \"AutomationType\": \"\",\n      \"AutomationSubtype\": \"\",\n      \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n      \"Runbooks\": [\n        {\n          \"DocumentName\": \"\",\n          \"DocumentVersion\": \"\",\n          \"Parameters\": {},\n          \"TargetParameterName\": \"\",\n          \"Targets\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ],\n          \"MaxConcurrency\": \"\",\n          \"MaxErrors\": \"\",\n          \"TargetLocations\": [\n            {\n              \"Accounts\": [\n                \"\"\n              ],\n              \"Regions\": [\n                \"\"\n              ],\n              \"TargetLocationMaxConcurrency\": \"\",\n              \"TargetLocationMaxErrors\": \"\",\n              \"ExecutionRoleName\": \"\"\n            }\n          ]\n        }\n      ],\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ChangeRequestName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89f0f2bc-bd0a-4551-bebe-d3d2d249d6b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2316a94e-6853-49cd-9f92-2513d6931226",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38301591-38d1-4978-b611-9f6706cb0029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f86e4249-e778-40b7-a564-577de8c8e873",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "929fc586-033d-488a-a7fe-154df28e914a",
      "documentation": "Information about all active and terminated step executions in an Automation workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions",
      "responses": [
        {
          "uuid": "499b59a9-d2b0-48b4-a12c-3bccb1197f7f",
          "body": "{\n  \"StepExecutions\": [\n    {\n      \"StepName\": \"\",\n      \"Action\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}},\n      \"OnFailure\": \"\",\n      \"MaxAttempts\": {{faker 'random.number'}},\n      \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"StepStatus\": \"\",\n      \"ResponseCode\": \"\",\n      \"Inputs\": {},\n      \"Outputs\": {},\n      \"Response\": \"\",\n      \"FailureMessage\": \"\",\n      \"FailureDetails\": {\n        \"FailureStage\": \"\",\n        \"FailureType\": \"\",\n        \"Details\": {}\n      },\n      \"StepExecutionId\": \"\",\n      \"OverriddenParameters\": {},\n      \"IsEnd\": {{faker 'random.boolean'}},\n      \"NextStep\": \"\",\n      \"IsCritical\": {{faker 'random.boolean'}},\n      \"ValidNextSteps\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TargetLocation\": {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "396ea082-d005-47c8-9de1-d70b1d31155b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "631964ff-37bc-4955-a9a1-ed13ef8b7172",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66f372a2-ca08-4be9-993c-ee3ec21e4785",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0117cf2f-05cb-4617-b448-e71445d07774",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83cb9bf1-3f10-40c6-9024-8060a908dd6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4476d83d-57ec-4560-94eb-d730b8bf127f",
      "documentation": "Lists all patches eligible to be included in a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeAvailablePatches",
      "responses": [
        {
          "uuid": "07b02402-90b9-4a98-a565-93c63034b18a",
          "body": "{\n  \"Patches\": [\n    {\n      \"Id\": \"\",\n      \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n      \"Title\": \"\",\n      \"Description\": \"\",\n      \"ContentUrl\": \"\",\n      \"Vendor\": \"\",\n      \"ProductFamily\": \"\",\n      \"Product\": \"\",\n      \"Classification\": \"\",\n      \"MsrcSeverity\": \"\",\n      \"KbNumber\": \"\",\n      \"MsrcNumber\": \"\",\n      \"Language\": \"\",\n      \"AdvisoryIds\": [\n        \"\"\n      ],\n      \"BugzillaIds\": [\n        \"\"\n      ],\n      \"CVEIds\": [\n        \"\"\n      ],\n      \"Name\": \"\",\n      \"Epoch\": {{faker 'random.number'}},\n      \"Version\": \"\",\n      \"Release\": \"\",\n      \"Arch\": \"\",\n      \"Severity\": \"\",\n      \"Repository\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d45d46cb-9b07-452f-a9ca-f29bfb009700",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "235658ea-0f83-49ca-bc32-8cf62a53f0e4",
      "documentation": "Describes the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocument",
      "responses": [
        {
          "uuid": "5b31f8bf-02b1-4ced-968f-9c5efb6736bf",
          "body": "{\n  \"Document\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13fc408-588f-4227-8bf1-72e065c3c250",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8a14cad-f7bb-4aa6-aed6-0b7c29552a0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "836e772a-aaa9-41db-8c72-b1a7d8239a4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8e20eb3-bff0-4366-aa04-dadf15f4b913",
      "documentation": "Describes the permissions for a Amazon Web Services Systems Manager document (SSM document). If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user's Amazon Web Services account ID) or publicly (<i>All</i>). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeDocumentPermission",
      "responses": [
        {
          "uuid": "ad8db8d1-8612-489a-8486-dee9cee10e51",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"AccountSharingInfoList\": [\n    {\n      \"AccountId\": \"\",\n      \"SharedDocumentVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fef3986-0e5d-4ee5-8b27-47b10e1f76bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff031ce2-768c-44f3-b912-b3ccf095bab6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f9ac0ef-3dbb-4d1b-8655-93df5a07ad50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f2a8348-949f-4888-9500-035a0ac5b8ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "836d2527-b92c-43c3-8a39-9abd0428e4dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "114955aa-8983-40bf-acdf-6b4121292ef6",
      "documentation": "All associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations",
      "responses": [
        {
          "uuid": "72c857d2-c46d-4a19-968b-b48636a6cc19",
          "body": "{\n  \"Associations\": [\n    {\n      \"AssociationId\": \"\",\n      \"InstanceId\": \"\",\n      \"Content\": \"\",\n      \"AssociationVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e94e82e6-66a6-4aa4-b7c3-3060a1aeb28b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a77ca816-18de-4514-8444-395e73a2a5d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "048fd977-1067-422c-9c8c-6dd5486996e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6001b059-e185-40f7-bfb9-103221a20a86",
      "documentation": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Applies to patch baselines for Windows only.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline",
      "responses": [
        {
          "uuid": "e1f10677-d7f9-4dc5-b457-5168f4dc5ecd",
          "body": "{\n  \"EffectivePatches\": [\n    {\n      \"Patch\": {\n        \"Id\": \"\",\n        \"ReleaseDate\": \"{{faker 'date.recent' 365}}\",\n        \"Title\": \"\",\n        \"Description\": \"\",\n        \"ContentUrl\": \"\",\n        \"Vendor\": \"\",\n        \"ProductFamily\": \"\",\n        \"Product\": \"\",\n        \"Classification\": \"\",\n        \"MsrcSeverity\": \"\",\n        \"KbNumber\": \"\",\n        \"MsrcNumber\": \"\",\n        \"Language\": \"\",\n        \"AdvisoryIds\": [\n          \"\"\n        ],\n        \"BugzillaIds\": [\n          \"\"\n        ],\n        \"CVEIds\": [\n          \"\"\n        ],\n        \"Name\": \"\",\n        \"Epoch\": {{faker 'random.number'}},\n        \"Version\": \"\",\n        \"Release\": \"\",\n        \"Arch\": \"\",\n        \"Severity\": \"\",\n        \"Repository\": \"\"\n      },\n      \"PatchStatus\": {\n        \"DeploymentStatus\": \"\",\n        \"ComplianceLevel\": \"\",\n        \"ApprovalDate\": \"{{faker 'date.recent' 365}}\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2e80956-877d-44e6-8608-73b238cc393f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7e80005-dd96-41d4-815b-1c2c7c0e4bbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aa18dc4-004e-4168-bdbe-1bc65e946bf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ea9ddb0-79ab-4cf1-b75b-16e43a3a65c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3014127a-979d-4f81-8a02-0b02970d664e",
      "documentation": "The status of the associations for the instance(s).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus",
      "responses": [
        {
          "uuid": "baffab1e-1751-4a3d-8661-d5b516c5e890",
          "body": "{\n  \"InstanceAssociationStatusInfos\": [\n    {\n      \"AssociationId\": \"\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"AssociationVersion\": \"\",\n      \"InstanceId\": \"\",\n      \"ExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"ExecutionSummary\": \"\",\n      \"ErrorCode\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": {\n          \"OutputUrl\": \"\"\n        }\n      },\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d15e1082-d0ce-4b2f-ac10-031af694643d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b259885c-f60d-4d91-a3a1-e24bcc9d4d9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de0e4259-0cdc-4a13-b16a-caa705f3e12d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc9fe34c-41f5-4c98-9441-063f9ae05122",
      "documentation": "<p>Describes one or more of your instances, including information about the operating system platform, the version of SSM Agent installed on the instance, instance status, and so on.</p> <p>If you specify one or more instance IDs, it returns information for those instances. If you don't specify instance IDs, it returns information for all your instances. If you specify an instance ID that isn't valid or an instance that you don't own, you receive an error.</p> <note> <p>The <code>IamRole</code> field for this API operation is the Identity and Access Management (IAM) role assigned to on-premises instances. This call doesn't return the IAM role for EC2 instances.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstanceInformation",
      "responses": [
        {
          "uuid": "1f782dc4-1fc1-4ec9-b8c2-2b4a672597f5",
          "body": "{\n  \"InstanceInformationList\": [\n    {\n      \"InstanceId\": \"\",\n      \"PingStatus\": \"\",\n      \"LastPingDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"AgentVersion\": \"\",\n      \"IsLatestVersion\": {{faker 'random.boolean'}},\n      \"PlatformType\": \"\",\n      \"PlatformName\": \"\",\n      \"PlatformVersion\": \"\",\n      \"ActivationId\": \"\",\n      \"IamRole\": \"\",\n      \"RegistrationDate\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceType\": \"\",\n      \"Name\": \"\",\n      \"IPAddress\": \"\",\n      \"ComputerName\": \"\",\n      \"AssociationStatus\": \"\",\n      \"LastAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulAssociationExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"AssociationOverview\": {\n        \"DetailedStatus\": \"\",\n        \"InstanceAssociationStatusAggregatedCount\": {}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "638624e0-72a2-4f05-848b-0590da9c3cec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5250821-b4ae-4d23-8d67-6555fb4dcdd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7192dd65-8824-47e7-8751-c09a000b3def",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05b0a544-582b-489b-9338-6f71935edd23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInstanceInformationFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8a65084-8b5a-4c3c-a18c-fbe4bf4564d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d2e90dc-2069-41b2-a0cb-e5932b6c7aa3",
      "documentation": "Retrieves the high-level patch state of one or more instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates",
      "responses": [
        {
          "uuid": "4cb5501f-baea-4243-825c-a0fe1b06934a",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'random.number'}},\n      \"InstalledOtherCount\": {{faker 'random.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'random.number'}},\n      \"InstalledRejectedCount\": {{faker 'random.number'}},\n      \"MissingCount\": {{faker 'random.number'}},\n      \"FailedCount\": {{faker 'random.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'random.number'}},\n      \"NotApplicableCount\": {{faker 'random.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'random.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'random.number'}},\n      \"OtherNonCompliantCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccccae46-490a-41c5-b77e-8921c6dd3d2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf360f3e-ecdc-49ae-a8e2-d8fc0ea664d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56b80a1b-68da-471e-b126-2ba927f1a512",
      "documentation": "Retrieves the high-level patch state for the instances in the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup",
      "responses": [
        {
          "uuid": "70ae1b2e-29d7-4341-803f-0f484460f06a",
          "body": "{\n  \"InstancePatchStates\": [\n    {\n      \"InstanceId\": \"\",\n      \"PatchGroup\": \"\",\n      \"BaselineId\": \"\",\n      \"SnapshotId\": \"\",\n      \"InstallOverrideList\": \"\",\n      \"OwnerInformation\": \"\",\n      \"InstalledCount\": {{faker 'random.number'}},\n      \"InstalledOtherCount\": {{faker 'random.number'}},\n      \"InstalledPendingRebootCount\": {{faker 'random.number'}},\n      \"InstalledRejectedCount\": {{faker 'random.number'}},\n      \"MissingCount\": {{faker 'random.number'}},\n      \"FailedCount\": {{faker 'random.number'}},\n      \"UnreportedNotApplicableCount\": {{faker 'random.number'}},\n      \"NotApplicableCount\": {{faker 'random.number'}},\n      \"OperationStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"OperationEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"Operation\": \"\",\n      \"LastNoRebootInstallOperationTime\": \"{{faker 'date.recent' 365}}\",\n      \"RebootOption\": \"\",\n      \"CriticalNonCompliantCount\": {{faker 'random.number'}},\n      \"SecurityNonCompliantCount\": {{faker 'random.number'}},\n      \"OtherNonCompliantCount\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9e74ef8-acdc-4d55-9455-26d2b6c45bef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ca74acb-53f0-4589-95f6-093b638351ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a499350-de49-440c-a5ae-1f8382f84e7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c41f1178-16ae-4296-b044-5abec0371199",
      "documentation": "Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInstancePatches",
      "responses": [
        {
          "uuid": "326890b3-50ba-4257-9606-ae47a6164318",
          "body": "{\n  \"Patches\": [\n    {\n      \"Title\": \"\",\n      \"KBId\": \"\",\n      \"Classification\": \"\",\n      \"Severity\": \"\",\n      \"State\": \"\",\n      \"InstalledTime\": \"{{faker 'date.recent' 365}}\",\n      \"CVEIds\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68516836-8c17-4d55-998a-cc2fade2abd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "009f9914-7c11-47be-a8af-7c25bcf65489",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5149f636-9aa9-40a1-adac-a631a727651d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4d366c9-5ab9-45cd-b650-afdad1acb891",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2fe5bc5-580c-4df8-965b-726bf40bad18",
      "documentation": "Describes a specific delete inventory operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions",
      "responses": [
        {
          "uuid": "6a06a2b7-dc50-44ef-ad07-5a21fa17bca5",
          "body": "{\n  \"InventoryDeletions\": [\n    {\n      \"DeletionId\": \"\",\n      \"TypeName\": \"\",\n      \"DeletionStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"LastStatusMessage\": \"\",\n      \"DeletionSummary\": {\n        \"TotalCount\": {{faker 'random.number'}},\n        \"RemainingCount\": {{faker 'random.number'}},\n        \"SummaryItems\": [\n          {\n            \"Version\": \"\",\n            \"Count\": {{faker 'random.number'}},\n            \"RemainingCount\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"LastStatusUpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca714e1d-6fb2-4035-a866-84fcc83427c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c00166c2-1ca8-483e-8875-eccfe459a191",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDeletionIdException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb090370-9e06-4dbc-89cb-d2ec5239bc9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6148b8b5-f03b-47f0-97cb-b26d044ea82f",
      "documentation": "Retrieves the individual task executions (one per target) for a particular task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations",
      "responses": [
        {
          "uuid": "40fdb7a4-a1e1-4e27-80c0-a0c01f886450",
          "body": "{\n  \"WindowExecutionTaskInvocationIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"InvocationId\": \"\",\n      \"ExecutionId\": \"\",\n      \"TaskType\": \"\",\n      \"Parameters\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"OwnerInformation\": \"\",\n      \"WindowTargetId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f0273b-4df4-40c7-8a27-b2ce640fb04e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d10d799-a86f-4cc4-9900-915468867510",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f31a8c6-6c09-4fcd-8db1-825acad9bd5b",
      "documentation": "For a given maintenance window execution, lists the tasks that were run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks",
      "responses": [
        {
          "uuid": "54c38142-c001-4bd7-8298-a82dffa1bbb4",
          "body": "{\n  \"WindowExecutionTaskIdentities\": [\n    {\n      \"WindowExecutionId\": \"\",\n      \"TaskExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\",\n      \"TaskArn\": \"\",\n      \"TaskType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ca69285-5f89-4200-89e7-81d3b4fbdb40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c18b4d5e-2d52-41f7-97a5-25a4495a0d10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "443a5029-afd9-4294-9d4b-336d2e375d02",
      "documentation": "Lists the executions of a maintenance window. This includes information about when the maintenance window was scheduled to be active, and information about tasks registered and run with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions",
      "responses": [
        {
          "uuid": "0c794f60-64c6-4c01-add1-d53362e02228",
          "body": "{\n  \"WindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowExecutionId\": \"\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\",\n      \"EndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0831103f-b935-4566-af33-b4f660c459ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19ada33d-dad3-4d05-b1c3-2561a77f2567",
      "documentation": "Retrieves information about upcoming executions of a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule",
      "responses": [
        {
          "uuid": "23ec966d-0f50-41a2-9f1b-32da877034c9",
          "body": "{\n  \"ScheduledWindowExecutions\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"ExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d48a3995-7002-449b-8a40-9d5fa4f02f19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f866ec1-af2e-498f-afcc-b49472fc54ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27f2ab40-0bdc-4ba4-bbdc-9b1275d3e478",
      "documentation": "Lists the targets registered with the maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets",
      "responses": [
        {
          "uuid": "f64f45b3-d05d-4ef3-8adb-2e65b2ac174f",
          "body": "{\n  \"Targets\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTargetId\": \"\",\n      \"ResourceType\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"OwnerInformation\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "031bc969-35ea-45d8-bd68-83dcd066e6d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7451db65-0d20-483f-8377-25c00317e10a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "681a77f5-68bb-4218-8117-57438bf98013",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks",
      "responses": [
        {
          "uuid": "703f5981-c60b-41da-a246-865c4fa0e5c0",
          "body": "{\n  \"Tasks\": [\n    {\n      \"WindowId\": \"\",\n      \"WindowTaskId\": \"\",\n      \"TaskArn\": \"\",\n      \"Type\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"TaskParameters\": {},\n      \"Priority\": {{faker 'random.number'}},\n      \"LoggingInfo\": {\n        \"S3BucketName\": \"\",\n        \"S3KeyPrefix\": \"\",\n        \"S3Region\": \"\"\n      },\n      \"ServiceRoleArn\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bc82ed7-4581-4579-b2d0-2890cba89359",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ffd84ccd-255d-4c7f-a6fb-6ef03ac608ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "604123b9-ee4e-4179-93ad-8c0da47ebba1",
      "documentation": "Retrieves the maintenance windows in an Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows",
      "responses": [
        {
          "uuid": "72ab6051-0e46-4b92-ac66-8027f23b5742",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Enabled\": {{faker 'random.boolean'}},\n      \"Duration\": {{faker 'random.number'}},\n      \"Cutoff\": {{faker 'random.number'}},\n      \"Schedule\": \"\",\n      \"ScheduleTimezone\": \"\",\n      \"ScheduleOffset\": {{faker 'random.number'}},\n      \"EndDate\": \"\",\n      \"StartDate\": \"\",\n      \"NextExecutionTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d47d16f-783c-4a46-9286-483ead8e33a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71626306-ea3d-45bd-995a-eb2881b13058",
      "documentation": "Retrieves information about the maintenance window targets or tasks that an instance is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget",
      "responses": [
        {
          "uuid": "c83ec986-a03c-4ee0-9f37-0d9a32269fd1",
          "body": "{\n  \"WindowIdentities\": [\n    {\n      \"WindowId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eed99e5f-d3f5-42f4-8796-500fe325708f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ff944a5-9f45-43f7-ab0e-33b4b7dbde1c",
      "documentation": "<p>Query a set of OpsItems. You must have permission in Identity and Access Management (IAM) to query a list of OpsItems. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeOpsItems",
      "responses": [
        {
          "uuid": "1400a098-03a0-4696-916d-34fa64f557fe",
          "body": "{\n  \"NextToken\": \"\",\n  \"OpsItemSummaries\": [\n    {\n      \"CreatedBy\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": \"\",\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Priority\": {{faker 'random.number'}},\n      \"Source\": \"\",\n      \"Status\": \"\",\n      \"OpsItemId\": \"\",\n      \"Title\": \"\",\n      \"OperationalData\": {},\n      \"Category\": \"\",\n      \"Severity\": \"\",\n      \"OpsItemType\": \"\",\n      \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n      \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0262690d-5491-48ec-98e4-b39a0904e74a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "794a4d78-8d5b-49af-a597-a4cf0c04abf3",
      "documentation": "<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeParameters",
      "responses": [
        {
          "uuid": "aa8a9182-afb3-4516-87b5-6d5c23789ab5",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a122a4b4-7bf8-4b90-bc47-eee9ccfd7bd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f9eb111-bdad-487d-bc2d-aa0f966805c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4751333-6212-46a9-8c32-9bb250cb604f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d495507-ef5b-45c7-9a94-c30113185566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8f6bce3-2539-4ed0-a3e3-912ec5df9434",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99a93a7a-2e93-4053-af48-b0ca8d713704",
      "documentation": "Lists the patch baselines in your Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchBaselines",
      "responses": [
        {
          "uuid": "3c069a62-ca5b-4ef1-8df5-90d6ddafee93",
          "body": "{\n  \"BaselineIdentities\": [\n    {\n      \"BaselineId\": \"\",\n      \"BaselineName\": \"\",\n      \"OperatingSystem\": \"\",\n      \"BaselineDescription\": \"\",\n      \"DefaultBaseline\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7692233-752b-4d50-8b8f-5ed43f9e943d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d12bfd50-93e3-4c02-9bd8-087ae366f683",
      "documentation": "Returns high-level aggregated patch compliance state information for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroupState",
      "responses": [
        {
          "uuid": "3cfe7a58-bc7e-4169-a533-d1b31d4ca6cc",
          "body": "{\n  \"Instances\": {{faker 'random.number'}},\n  \"InstancesWithInstalledPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledOtherPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledPendingRebootPatches\": {{faker 'random.number'}},\n  \"InstancesWithInstalledRejectedPatches\": {{faker 'random.number'}},\n  \"InstancesWithMissingPatches\": {{faker 'random.number'}},\n  \"InstancesWithFailedPatches\": {{faker 'random.number'}},\n  \"InstancesWithNotApplicablePatches\": {{faker 'random.number'}},\n  \"InstancesWithUnreportedNotApplicablePatches\": {{faker 'random.number'}},\n  \"InstancesWithCriticalNonCompliantPatches\": {{faker 'random.number'}},\n  \"InstancesWithSecurityNonCompliantPatches\": {{faker 'random.number'}},\n  \"InstancesWithOtherNonCompliantPatches\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d610281-adac-4f0b-8420-4ccc0ae3a681",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d9a5b46-596a-4eed-badb-a6422ae3cb80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e72fb78-f046-4c0c-9b2f-6e4c6620836a",
      "documentation": "Lists all patch groups that have been registered with patch baselines.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchGroups",
      "responses": [
        {
          "uuid": "12e99b91-3b0a-4853-8ef2-0c54345f26e0",
          "body": "{\n  \"Mappings\": [\n    {\n      \"PatchGroup\": \"\",\n      \"BaselineIdentity\": {\n        \"BaselineId\": \"\",\n        \"BaselineName\": \"\",\n        \"OperatingSystem\": \"\",\n        \"BaselineDescription\": \"\",\n        \"DefaultBaseline\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0778c74-684a-477e-8d4b-5ad5f53e6424",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6a2704e-1339-4785-a79a-3d3478b6e191",
      "documentation": "<p>Lists the properties of available patches organized by product, product family, classification, severity, and other properties of available patches. You can use the reported properties in the filters you specify in requests for operations such as <a>CreatePatchBaseline</a>, <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.</p> <p>The following section lists the properties that can be used in filters for each major operating system type:</p> <dl> <dt>AMAZON_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>CENTOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>DEBIAN</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>MACOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> </p> </dd> <dt>ORACLE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>REDHAT_ENTERPRISE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>SUSE</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>UBUNTU</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p> </dd> <dt>WINDOWS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRODUCT_FAMILY</code> | <code>CLASSIFICATION</code> | <code>MSRC_SEVERITY</code> </p> </dd> </dl>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribePatchProperties",
      "responses": [
        {
          "uuid": "46529e5c-68d2-43d2-82ab-40ca742135d7",
          "body": "{\n  \"Properties\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73ca79c7-178c-499a-b10e-2e372280ec43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc40ad48-52ca-464e-bd67-f6748893e1e8",
      "documentation": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DescribeSessions",
      "responses": [
        {
          "uuid": "f3edadca-1787-4a78-8389-32d30b34e80c",
          "body": "{\n  \"Sessions\": [\n    {\n      \"SessionId\": \"\",\n      \"Target\": \"\",\n      \"Status\": \"\",\n      \"StartDate\": \"{{faker 'date.recent' 365}}\",\n      \"EndDate\": \"{{faker 'date.recent' 365}}\",\n      \"DocumentName\": \"\",\n      \"Owner\": \"\",\n      \"Details\": \"\",\n      \"OutputUrl\": {\n        \"S3OutputUrl\": \"\",\n        \"CloudWatchOutputUrl\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65de2377-502e-4075-917b-6e47516a52b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64c46dcd-7865-4711-8199-dc2e248f37ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c943555-4ea3-4bed-9ec9-f23afde7d216",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "09faafb1-1841-48ab-8a3c-1018b6a0f38d",
      "documentation": "Deletes the association between an OpsItem and a related resource. For example, this API operation can delete an Incident Manager incident from an OpsItem. Incident Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.DisassociateOpsItemRelatedItem",
      "responses": [
        {
          "uuid": "d250fa50-25be-40a2-a8df-a11bdaefd053",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47249e40-e2de-4d02-8f8d-0455084c498f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "789c61fd-88ea-486c-961d-08dbf3514ac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemRelatedItemAssociationNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26514022-549f-4c7a-b173-11c6237fa0ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08df6b23-289a-4a3f-8004-99c2dc5f8378",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9dbbb2b2-faa0-432b-b2fb-5a1a1ef2e2ef",
      "documentation": "Get detailed information about a particular Automation execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetAutomationExecution",
      "responses": [
        {
          "uuid": "ad76b982-ac6e-4265-a1dc-949f22d3d0bf",
          "body": "{\n  \"AutomationExecution\": {\n    \"AutomationExecutionId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"AutomationExecutionStatus\": \"\",\n    \"StepExecutions\": [\n      {\n        \"StepName\": \"\",\n        \"Action\": \"\",\n        \"TimeoutSeconds\": {{faker 'random.number'}},\n        \"OnFailure\": \"\",\n        \"MaxAttempts\": {{faker 'random.number'}},\n        \"ExecutionStartTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionEndTime\": \"{{faker 'date.recent' 365}}\",\n        \"StepStatus\": \"\",\n        \"ResponseCode\": \"\",\n        \"Inputs\": {},\n        \"Outputs\": {},\n        \"Response\": \"\",\n        \"FailureMessage\": \"\",\n        \"FailureDetails\": {\n          \"FailureStage\": \"\",\n          \"FailureType\": \"\",\n          \"Details\": {}\n        },\n        \"StepExecutionId\": \"\",\n        \"OverriddenParameters\": {},\n        \"IsEnd\": {{faker 'random.boolean'}},\n        \"NextStep\": \"\",\n        \"IsCritical\": {{faker 'random.boolean'}},\n        \"ValidNextSteps\": [\n          \"\"\n        ],\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"TargetLocation\": {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      }\n    ],\n    \"StepExecutionsTruncated\": {{faker 'random.boolean'}},\n    \"Parameters\": {},\n    \"Outputs\": {},\n    \"FailureMessage\": \"\",\n    \"Mode\": \"\",\n    \"ParentAutomationExecutionId\": \"\",\n    \"ExecutedBy\": \"\",\n    \"CurrentStepName\": \"\",\n    \"CurrentAction\": \"\",\n    \"TargetParameterName\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"TargetMaps\": [\n      {}\n    ],\n    \"ResolvedTargets\": {\n      \"ParameterValues\": [\n        \"\"\n      ],\n      \"Truncated\": {{faker 'random.boolean'}}\n    },\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"Target\": \"\",\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ],\n    \"ProgressCounters\": {\n      \"TotalSteps\": {{faker 'random.number'}},\n      \"SuccessSteps\": {{faker 'random.number'}},\n      \"FailedSteps\": {{faker 'random.number'}},\n      \"CancelledSteps\": {{faker 'random.number'}},\n      \"TimedOutSteps\": {{faker 'random.number'}}\n    },\n    \"AutomationSubtype\": \"\",\n    \"ScheduledTime\": \"{{faker 'date.recent' 365}}\",\n    \"Runbooks\": [\n      {\n        \"DocumentName\": \"\",\n        \"DocumentVersion\": \"\",\n        \"Parameters\": {},\n        \"TargetParameterName\": \"\",\n        \"Targets\": [\n          {\n            \"Key\": \"\",\n            \"Values\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MaxConcurrency\": \"\",\n        \"MaxErrors\": \"\",\n        \"TargetLocations\": [\n          {\n            \"Accounts\": [\n              \"\"\n            ],\n            \"Regions\": [\n              \"\"\n            ],\n            \"TargetLocationMaxConcurrency\": \"\",\n            \"TargetLocationMaxErrors\": \"\",\n            \"ExecutionRoleName\": \"\"\n          }\n        ]\n      }\n    ],\n    \"OpsItemId\": \"\",\n    \"AssociationId\": \"\",\n    \"ChangeRequestName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "209ba50a-6d5d-4bf1-881e-d0bc51f4293e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15f410f1-d56a-42fb-93b3-64ae4f571dbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ebe64a4c-d236-488c-b9cf-f5aecabb98ae",
      "documentation": "<p>Gets the state of a Amazon Web Services Systems Manager change calendar at the current time or a specified time. If you specify a time, <code>GetCalendarState</code> returns the state of the calendar at that specific time, and returns the next time that the change calendar state will transition. If you don't specify a time, <code>GetCalendarState</code> uses the current time. Change Calendar entries have two possible states: <code>OPEN</code> or <code>CLOSED</code>.</p> <p>If you specify more than one calendar in a request, the command returns the status of <code>OPEN</code> only if all calendars in the request are open. If one or more calendars in the request are closed, the status returned is <code>CLOSED</code>.</p> <p>For more information about Change Calendar, a capability of Amazon Web Services Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar.html\">Amazon Web Services Systems Manager Change Calendar</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCalendarState",
      "responses": [
        {
          "uuid": "09f38e28-dcae-4891-8594-0033854903c3",
          "body": "{\n  \"State\": \"\",\n  \"AtTime\": \"\",\n  \"NextTransitionTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e49334c5-62c4-4ca2-89e4-348453cee24b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87b38bb1-d63c-4440-91ac-f8bfbeb845fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "716646c9-33ab-4fab-a1e9-2a7af1c201ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2392c04-2b68-4316-8175-fb8c2e527f84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "UnsupportedCalendarException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd08bbc8-b6b3-4474-b4bc-3caff5fe54fb",
      "documentation": "<p>Returns detailed information about command execution for an invocation or plugin.</p> <p> <code>GetCommandInvocation</code> only gives the execution status of a plugin in a document. To get the command execution status on a specific instance, use <a>ListCommandInvocations</a>. To get the command execution status across instances, use <a>ListCommands</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetCommandInvocation",
      "responses": [
        {
          "uuid": "e53edaa5-2679-4d4e-8ce7-79a77648fb15",
          "body": "{\n  \"CommandId\": \"\",\n  \"InstanceId\": \"\",\n  \"Comment\": \"\",\n  \"DocumentName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"PluginName\": \"\",\n  \"ResponseCode\": {{faker 'random.number'}},\n  \"ExecutionStartDateTime\": \"\",\n  \"ExecutionElapsedTime\": \"\",\n  \"ExecutionEndDateTime\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StandardOutputContent\": \"\",\n  \"StandardOutputUrl\": \"\",\n  \"StandardErrorContent\": \"\",\n  \"StandardErrorUrl\": \"\",\n  \"CloudWatchOutputConfig\": {\n    \"CloudWatchLogGroupName\": \"\",\n    \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daafd10b-84bf-4376-88ed-2dd91e508084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36836d8b-ac42-4997-bfd1-de96110342fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85d843a9-c73a-4bd3-b248-e7297d6ed9c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8ce7443-2823-481a-9f43-c0def88caa47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidPluginName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e533fde-47d4-420e-a88e-2fe784488b54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvocationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5af536e-3963-4221-a86f-1bce5767b293",
      "documentation": "Retrieves the Session Manager connection status for an instance to determine whether it is running and ready to receive Session Manager connections.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetConnectionStatus",
      "responses": [
        {
          "uuid": "5e577aa1-4326-45d2-90d0-44d1bb22feb9",
          "body": "{\n  \"Target\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e34356f-4aa3-4690-b56d-9dc89ddc49de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0b6f604-d98b-4cd3-8312-767ae374cd4b",
      "documentation": "<p>Retrieves the default patch baseline. Amazon Web Services Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you don't specify an operating system value, the default patch baseline for Windows is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "bf4e3e18-3028-4bd6-b0f8-a89b2073ade8",
          "body": "{\n  \"BaselineId\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9ebb9c0-0de2-4a8c-818d-dc4a07facd51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "baf55498-6a2e-47dd-a3b3-e43472092442",
      "documentation": "<p>Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code> Systems Manager document (SSM document).</p> <note> <p>If you run the command locally, such as with the Command Line Interface (CLI), the system attempts to use your local Amazon Web Services credentials and the operation fails. To avoid this, you can run the command in the Amazon Web Services Systems Manager console. Use Run Command, a capability of Amazon Web Services Systems Manager, with an SSM document that enables you to target an instance with a script or command. For example, run the command using the <code>AWS-RunShellScript</code> document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance",
      "responses": [
        {
          "uuid": "cd35c7ad-0aa9-415e-aac8-3f087a3a497a",
          "body": "{\n  \"InstanceId\": \"\",\n  \"SnapshotId\": \"\",\n  \"SnapshotDownloadUrl\": \"\",\n  \"Product\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d28ac64-09d0-48a5-8a70-f611421a20b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64e1963c-404e-479a-9188-4fb18b4ed87f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedOperatingSystem",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf121737-2095-4e3e-b44a-2cd3ccb47e91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "UnsupportedFeatureRequiredException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbdc19b7-6d0f-4506-bb0f-cede1ad9fb9d",
      "documentation": "Gets the contents of the specified Amazon Web Services Systems Manager document (SSM document).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetDocument",
      "responses": [
        {
          "uuid": "60f39919-84f7-46a0-93d7-9e8137c7271c",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"DisplayName\": \"\",\n  \"VersionName\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Status\": \"\",\n  \"StatusInformation\": \"\",\n  \"Content\": \"\",\n  \"DocumentType\": \"\",\n  \"DocumentFormat\": \"\",\n  \"Requires\": [\n    {\n      \"Name\": \"\",\n      \"Version\": \"\"\n    }\n  ],\n  \"AttachmentsContent\": [\n    {\n      \"Name\": \"\",\n      \"Size\": {{faker 'random.number'}},\n      \"Hash\": \"\",\n      \"HashType\": \"\",\n      \"Url\": \"\"\n    }\n  ],\n  \"ReviewStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f0f3ee7-0e5a-448b-a1ab-e7ce7298e19d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04baafca-8017-41b8-8a4d-75957dd1149f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "919b0f75-5abe-4345-b146-363b5a178a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1849ca36-cc2c-447d-ab1b-ce18b433ef5d",
      "documentation": "Query inventory information. This includes instance status, such as <code>Stopped</code> or <code>Terminated</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventory",
      "responses": [
        {
          "uuid": "d55345f7-663d-4d41-9566-8de8a08e03d0",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c7fda0a-df1c-423d-842d-1d201ec1a3da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ce34913-0701-4d3a-a208-22f29f01c734",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b55a3e4-d1fe-476a-8d39-f79d903ce71b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInventoryGroupException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d895e1b-20a5-45db-840a-1849b01d2892",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec3b532-83c8-4f4b-98f1-b6616ba8e2d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54478ca5-a6a3-4619-a35a-c3808fb3695f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5fbe3c4-c578-49d6-9817-f065d3a4598e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResultAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bd2a0f9-bea9-432b-918f-75582d16f385",
      "documentation": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetInventorySchema",
      "responses": [
        {
          "uuid": "27e35a55-c4ca-4195-a720-d51d0d48d44c",
          "body": "{\n  \"Schemas\": [\n    {\n      \"TypeName\": \"\",\n      \"Version\": \"\",\n      \"Attributes\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"DisplayName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23faca58-7b1c-47e4-b975-e35b19f76f60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53eac673-18c6-4dfb-8cbd-72031e3d8ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0149e3e-41fa-4bc2-9870-87720c907313",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "77adc387-f303-4396-8fd0-8271fe3c1209",
      "documentation": "Retrieves a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindow",
      "responses": [
        {
          "uuid": "a16b39d5-f41e-4cbd-9fb8-90412dcbf769",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'random.number'}},\n  \"NextExecutionTime\": \"\",\n  \"Duration\": {{faker 'random.number'}},\n  \"Cutoff\": {{faker 'random.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'random.boolean'}},\n  \"Enabled\": {{faker 'random.boolean'}},\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8fdb9a2-9098-48e9-af0f-56f4892467b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57886a9e-4e10-4d6f-b26b-fd6dd2e77bf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d367415-e120-4d66-9a3e-bb2d01837dc2",
      "documentation": "Retrieves details about a specific a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution",
      "responses": [
        {
          "uuid": "58358557-bd8a-4878-bee6-2bf6c89d52de",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskIds\": [\n    \"\"\n  ],\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fe7f2a0-a290-4e46-994a-a9c42004bfba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6f9e97e-a37f-4632-bb5b-41b9073eb026",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1009b0ee-8953-4d82-9074-3a7cdcb7bfb8",
      "documentation": "Retrieves the details about a specific task run as part of a maintenance window execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask",
      "responses": [
        {
          "uuid": "2ab7f816-3d80-46a4-b5a0-05d2ac3a09bb",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"TaskArn\": \"\",\n  \"ServiceRole\": \"\",\n  \"Type\": \"\",\n  \"TaskParameters\": [\n    {}\n  ],\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0de64e4c-5d8f-4435-a26b-7b1b10c09e28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6efea26-8160-4985-a788-a809fd97c084",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13d218d6-82da-4d2c-9e79-252ac009131f",
      "documentation": "Retrieves information about a specific task running on a specific target.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation",
      "responses": [
        {
          "uuid": "6b9a7a9d-a49e-4054-b5e0-96c048b5e998",
          "body": "{\n  \"WindowExecutionId\": \"\",\n  \"TaskExecutionId\": \"\",\n  \"InvocationId\": \"\",\n  \"ExecutionId\": \"\",\n  \"TaskType\": \"\",\n  \"Parameters\": \"\",\n  \"Status\": \"\",\n  \"StatusDetails\": \"\",\n  \"StartTime\": \"{{faker 'date.recent' 365}}\",\n  \"EndTime\": \"{{faker 'date.recent' 365}}\",\n  \"OwnerInformation\": \"\",\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2bb1b73-9659-4019-a721-112b6fca7957",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8a74265-fa7d-4a1c-802d-795830058199",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b70c09ac-2c95-4d28-9734-e8e0fa25c8a8",
      "documentation": "<p>Lists the tasks in a maintenance window.</p> <note> <p>For maintenance window tasks without a specified target, you can't supply values for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead, the system inserts a placeholder value of <code>1</code>, which may be reported in the response to this command. These values don't affect the running of your task and can be ignored.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "54f74c2a-f086-405c-8136-64fd02550547",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskType\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "354e7e32-6858-4fa8-90c6-7736a436f6ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f08d594f-275d-4dfd-be2f-4b22bb536e83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73dd77f8-0ada-4092-8a8f-0ad85b24cecd",
      "documentation": "<p>Get information about an OpsItem by using the ID. You must have permission in Identity and Access Management (IAM) to view information about an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsItem",
      "responses": [
        {
          "uuid": "be61c55d-b25c-41ba-9740-9687d09a0815",
          "body": "{\n  \"OpsItem\": {\n    \"CreatedBy\": \"\",\n    \"OpsItemType\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Description\": \"\",\n    \"LastModifiedBy\": \"\",\n    \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Notifications\": [\n      {\n        \"Arn\": \"\"\n      }\n    ],\n    \"Priority\": {{faker 'random.number'}},\n    \"RelatedOpsItems\": [\n      {\n        \"OpsItemId\": \"\"\n      }\n    ],\n    \"Status\": \"\",\n    \"OpsItemId\": \"\",\n    \"Version\": \"\",\n    \"Title\": \"\",\n    \"Source\": \"\",\n    \"OperationalData\": {},\n    \"Category\": \"\",\n    \"Severity\": \"\",\n    \"ActualStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"ActualEndTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedStartTime\": \"{{faker 'date.recent' 365}}\",\n    \"PlannedEndTime\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfd9b4e6-ca2c-4fb7-94d6-7199d23e6ce2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33b3672d-3cbd-40df-8c19-24656fdb12d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "36ca2971-8285-4cc2-a544-0a33a4244a56",
      "documentation": "View operational metadata related to an application in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsMetadata",
      "responses": [
        {
          "uuid": "d695081f-4596-416b-a3d4-f896f8603065",
          "body": "{\n  \"ResourceId\": \"\",\n  \"Metadata\": {},\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99919c4b-7ed6-4b1c-a76e-68baad13761e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f9d03b2-5e3e-415a-b710-1c695079b27e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c0c5a92-b6a8-4979-a3e0-309ab7506229",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c15848dc-bd6e-4650-bc59-4f745f2b6691",
      "documentation": "View a summary of operations metadata (OpsData) based on specified filters and aggregators. OpsData can include information about Amazon Web Services Systems Manager OpsCenter operational workitems (OpsItems) as well as information about any Amazon Web Services resource or service configured to report OpsData to Amazon Web Services Systems Manager Explorer. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetOpsSummary",
      "responses": [
        {
          "uuid": "952f0cff-5cca-4eb5-a4fc-9152c3b6a20b",
          "body": "{\n  \"Entities\": [\n    {\n      \"Id\": \"\",\n      \"Data\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91b5917f-2093-4026-8798-003106a56db3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d07c49b-1178-45e7-9784-ac5812579eaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54e016dd-bae8-4420-8bf6-dbe73ecdd5e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "313c61c5-1bc6-461b-bbda-947ca41c85d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fc633d8-90a3-4fa0-9366-00e7371223c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7db84a7-476e-4543-933c-f74be022e63a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidAggregatorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4aeb23a-1151-462b-8f12-276619e7799f",
      "documentation": "<p>Get information about a single parameter by specifying the parameter name.</p> <note> <p>To get information about more than one parameter at a time, use the <a>GetParameters</a> operation.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameter",
      "responses": [
        {
          "uuid": "36a22c2e-619b-4735-9607-4a839b1ab8af",
          "body": "{\n  \"Parameter\": {\n    \"Name\": \"\",\n    \"Type\": \"\",\n    \"Value\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Selector\": \"\",\n    \"SourceResult\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"ARN\": \"\",\n    \"DataType\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5166ea7-55f2-4e55-94f6-99d60c90f07c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9febea-4a29-4828-9c4c-c8d2ed22fc73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49575030-bd1f-410e-bb7f-a3fb51da8c55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b54aaf53-1697-428a-8805-b1a2fb36fcfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0de3187b-17c5-4b27-9502-87f857d693d0",
      "documentation": "Retrieves the history of all changes to a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameterHistory",
      "responses": [
        {
          "uuid": "2ee52463-88a1-4f63-9f40-d92332891608",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"KeyId\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"Description\": \"\",\n      \"Value\": \"\",\n      \"AllowedPattern\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Labels\": [\n        \"\"\n      ],\n      \"Tier\": \"\",\n      \"Policies\": [\n        {\n          \"PolicyText\": \"\",\n          \"PolicyType\": \"\",\n          \"PolicyStatus\": \"\"\n        }\n      ],\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75910940-4492-4295-a944-5b02d401396d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab2682a0-a45e-4b95-9fc9-7867a76cbe7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb4fe985-ac6c-4621-85e4-9c2480df9280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c63be8f-b3b5-434c-889f-3b54566bb02f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9514155a-210f-403c-97d1-fd383e0c7a40",
      "documentation": "<p>Get information about one or more parameters by specifying multiple parameter names.</p> <note> <p>To get information about a single parameter, you can use the <a>GetParameter</a> operation instead.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParameters",
      "responses": [
        {
          "uuid": "c3ad4942-ff9e-4b50-a458-9d8a28acc60e",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"InvalidParameters\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b36b46b-ab2d-4d53-bfc3-90ae11b1357d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c75e51d0-b22f-409a-bea2-c8e94e95b96e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45fb3f83-d531-4508-96e7-4d32b5948164",
      "documentation": "<p>Retrieve information about one or more parameters in a specific hierarchy. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetParametersByPath",
      "responses": [
        {
          "uuid": "9bdd6603-32a6-4ca2-954f-c07ea0212ba3",
          "body": "{\n  \"Parameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"Value\": \"\",\n      \"Version\": {{faker 'random.number'}},\n      \"Selector\": \"\",\n      \"SourceResult\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"ARN\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb4910c8-1b4d-4b80-9fdb-c53338064a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21553ef9-d7a5-437b-8b89-539380b1d93a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7162422-4560-446a-9dbf-2472033a3ae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterOption",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ede72d01-23c2-4dd6-ad6a-929482d49aae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterValue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "773de3f6-3b2c-4e37-a441-32e5e7e5a2c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a26f70a4-a9a4-4ee1-9c5b-f6c9ba857cf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c0a4497-f490-409c-9ec4-dac1df0661a4",
      "documentation": "Retrieves information about a patch baseline.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaseline",
      "responses": [
        {
          "uuid": "9eaffbd5-32bb-4318-90f2-fde9322bd9ee",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'random.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'random.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"PatchGroups\": [\n    \"\"\n  ],\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0647f342-cf31-4dd0-b5a6-b096fdb66dc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8aedf0a-5eed-4eb9-90ac-ec63e6999b5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e2b967f-2f33-4a67-835b-98fcf6906fa3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40798c53-8479-459d-b011-76bfe6a346a8",
      "documentation": "Retrieves the patch baseline that should be used for the specified patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "b6cd5c6a-c9c7-4006-a640-264a242e5f2e",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\",\n  \"OperatingSystem\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bff4eabf-ff0c-4ab0-827f-9a3e8805ba84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df7eaa6f-ae60-432b-bd70-f596f882d718",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of <code>false</code>. This means the user can't use this feature unless they change the setting to <code>true</code> and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. Or use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Query the current service setting for the Amazon Web Services account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.GetServiceSetting",
      "responses": [
        {
          "uuid": "b47a100e-27ab-4040-bfc5-8a28a1b27634",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e30605b-2b6a-427e-a6e7-adca7cddc670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83a6010b-8c9a-4cb3-92a1-73dd531dfcfd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9bfab8e0-cca6-4129-8d1f-6ba479ddd327",
      "documentation": "<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Amazon Web Services Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can't attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can't create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>If you no longer want to use a parameter label, then you can either delete it or move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin with a number, \"<code>aws</code>\" or \"<code>ssm</code>\" (not case sensitive). If a label fails to meet these requirements, then the label isn't associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.LabelParameterVersion",
      "responses": [
        {
          "uuid": "e2530f8a-1825-4313-ac98-6c58294e0d6c",
          "body": "{\n  \"InvalidLabels\": [\n    \"\"\n  ],\n  \"ParameterVersion\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9dcef129-b0e9-4cb4-9323-0491fb6f2555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8343635d-514c-47f2-8788-10264e57ab92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfd9b4aa-259c-4f65-bb2c-716d664640f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f6a5b92-c1e2-49a3-8fd1-5915a3daf419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e9711e9-8bb7-4ca7-9cc8-9dccbf136cf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterVersionLabelLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "945187c6-0a8a-4e35-837b-fd6b037f7db4",
      "documentation": "Retrieves all versions of an association for a specific association ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociationVersions",
      "responses": [
        {
          "uuid": "e8e9590b-3270-4a9f-a5f6-304637ad237d",
          "body": "{\n  \"AssociationVersions\": [\n    {\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {},\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"ScheduleExpression\": \"\",\n      \"OutputLocation\": {\n        \"S3Location\": {\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      },\n      \"AssociationName\": \"\",\n      \"MaxErrors\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"ComplianceSeverity\": \"\",\n      \"SyncCompliance\": \"\",\n      \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n      \"CalendarNames\": [\n        \"\"\n      ],\n      \"TargetLocations\": [\n        {\n          \"Accounts\": [\n            \"\"\n          ],\n          \"Regions\": [\n            \"\"\n          ],\n          \"TargetLocationMaxConcurrency\": \"\",\n          \"TargetLocationMaxErrors\": \"\",\n          \"ExecutionRoleName\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "189e5434-87ae-48d8-8209-04ee5fe03c08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2887954a-5f52-4d28-9129-2664df5ae0eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51168a8f-0734-456e-a2ff-d8ace8fde5b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "868bcc8f-94d2-4176-9a33-edd148c19256",
      "documentation": "Returns all State Manager associations in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results to a specific State Manager association document or instance by specifying a filter. State Manager is a capability of Amazon Web Services Systems Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListAssociations",
      "responses": [
        {
          "uuid": "654f0d72-6ebf-4398-892a-cd1460a2b648",
          "body": "{\n  \"Associations\": [\n    {\n      \"Name\": \"\",\n      \"InstanceId\": \"\",\n      \"AssociationId\": \"\",\n      \"AssociationVersion\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n      \"Overview\": {\n        \"Status\": \"\",\n        \"DetailedStatus\": \"\",\n        \"AssociationStatusAggregatedCount\": {}\n      },\n      \"ScheduleExpression\": \"\",\n      \"AssociationName\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31b50b4a-7edf-44aa-af57-06fe0daf445b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2674399d-4f47-408e-83cd-7cddb35cc0c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3ddd5ef-690b-45fc-bcae-d976b0e43ebd",
      "documentation": "An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs <code>SendCommand</code> against three instances, then a command invocation is created for each requested instance ID. <code>ListCommandInvocations</code> provide status about command execution.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommandInvocations",
      "responses": [
        {
          "uuid": "6c0db476-cb60-45d7-9b01-0ae57003cbd7",
          "body": "{\n  \"CommandInvocations\": [\n    {\n      \"CommandId\": \"\",\n      \"InstanceId\": \"\",\n      \"InstanceName\": \"\",\n      \"Comment\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"TraceOutput\": \"\",\n      \"StandardOutputUrl\": \"\",\n      \"StandardErrorUrl\": \"\",\n      \"CommandPlugins\": [\n        {\n          \"Name\": \"\",\n          \"Status\": \"\",\n          \"StatusDetails\": \"\",\n          \"ResponseCode\": {{faker 'random.number'}},\n          \"ResponseStartDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"ResponseFinishDateTime\": \"{{faker 'date.recent' 365}}\",\n          \"Output\": \"\",\n          \"StandardOutputUrl\": \"\",\n          \"StandardErrorUrl\": \"\",\n          \"OutputS3Region\": \"\",\n          \"OutputS3BucketName\": \"\",\n          \"OutputS3KeyPrefix\": \"\"\n        }\n      ],\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf652ddf-b9f3-4b3e-be09-0faa4feef1d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a052542e-caa1-44af-a77e-3e7dfbb8076d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c100c0e6-0003-4d01-aaf6-2984e48858fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "450e7403-7b75-4e8f-9c2e-8a5794b83e89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8eef0029-3366-42b0-90fd-d166c9d99b81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "17ba10a7-0586-48cf-8cdc-a810c5e8dc06",
      "documentation": "Lists the commands requested by users of the Amazon Web Services account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListCommands",
      "responses": [
        {
          "uuid": "357376a7-4ae4-4ec5-80e5-dbc433245267",
          "body": "{\n  \"Commands\": [\n    {\n      \"CommandId\": \"\",\n      \"DocumentName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"Comment\": \"\",\n      \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n      \"Parameters\": {},\n      \"InstanceIds\": [\n        \"\"\n      ],\n      \"Targets\": [\n        {\n          \"Key\": \"\",\n          \"Values\": [\n            \"\"\n          ]\n        }\n      ],\n      \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"StatusDetails\": \"\",\n      \"OutputS3Region\": \"\",\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"MaxConcurrency\": \"\",\n      \"MaxErrors\": \"\",\n      \"TargetCount\": {{faker 'random.number'}},\n      \"CompletedCount\": {{faker 'random.number'}},\n      \"ErrorCount\": {{faker 'random.number'}},\n      \"DeliveryTimedOutCount\": {{faker 'random.number'}},\n      \"ServiceRole\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fc7fc29-a1d3-4c56-882f-5ffa5f8f8df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fe175e1-8b2a-4307-bc4b-1845de68e126",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidCommandId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42ae42e1-97a6-4dfa-a159-5b70955db032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67fd15d3-015d-4737-8d08-a5e657e1ef65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3752114a-08bb-4307-89dd-01a6c2a7a91a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81d24cc2-07ff-4821-8625-2a3f7158745c",
      "documentation": "For a specified resource ID, this API operation returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceItems",
      "responses": [
        {
          "uuid": "6387aa48-b0b8-4177-8499-90b379f50425",
          "body": "{\n  \"ComplianceItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Id\": \"\",\n      \"Title\": \"\",\n      \"Status\": \"\",\n      \"Severity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"Details\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1acf4a3-c78a-43bc-8c9f-eb5eb1440d4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e457027d-30cc-414c-b678-8c503ee194e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "518cc586-e9c9-4c9b-b537-182d40bc4263",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf7c565-038f-49b6-9f86-7af127c70aee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7c56daa-2a48-468a-92e7-39c059cfc9bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b0c6487-582a-4c3e-a46f-bfb85ba3a44a",
      "documentation": "Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListComplianceSummaries",
      "responses": [
        {
          "uuid": "439f7d36-6f70-4453-bb11-86a97593913e",
          "body": "{\n  \"ComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70d2bcc6-362e-4075-bc69-673712c4cfc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df9eb8fc-dc15-4d46-bbaf-15724d968bad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bb7f62f-366b-4803-a698-9cd2adc7e1f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97ff5e46-7646-4337-9f08-fa5aa0ecd961",
      "documentation": "Information about approval reviews for a version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentMetadataHistory",
      "responses": [
        {
          "uuid": "a35daafd-8126-45a8-a47a-f45409a2629a",
          "body": "{\n  \"Name\": \"\",\n  \"DocumentVersion\": \"\",\n  \"Author\": \"\",\n  \"Metadata\": {\n    \"ReviewerResponse\": [\n      {\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"ReviewStatus\": \"\",\n        \"Comment\": [\n          {\n            \"Type\": \"\",\n            \"Content\": \"\"\n          }\n        ],\n        \"Reviewer\": \"\"\n      }\n    ]\n  },\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dbaebfd-7b76-4bae-a5db-a1c7133bc7e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd17667d-bea5-4566-8c56-84c16705e09e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68fa3d37-8da4-4e57-94b8-8c0e59f72fb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1377ad97-09f3-4077-9254-63225b52beed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afb379af-1af6-4884-8738-a9c20c8764bc",
      "documentation": "List all versions for a document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocumentVersions",
      "responses": [
        {
          "uuid": "5fdc1cef-99d7-4d8f-8299-7efb7a943c44",
          "body": "{\n  \"DocumentVersions\": [\n    {\n      \"Name\": \"\",\n      \"DisplayName\": \"\",\n      \"DocumentVersion\": \"\",\n      \"VersionName\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"IsDefaultVersion\": {{faker 'random.boolean'}},\n      \"DocumentFormat\": \"\",\n      \"Status\": \"\",\n      \"StatusInformation\": \"\",\n      \"ReviewStatus\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ee6994e-2eba-4e07-b3fe-c424c144673d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db1f140-a399-41ce-87d9-f647888b64bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e55f132b-8e71-4d4f-b4e3-2cb4f6d86ccf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e8f1ed9-254a-42b3-b3df-aa2757e55e76",
      "documentation": "Returns all Systems Manager (SSM) documents in the current Amazon Web Services account and Amazon Web Services Region. You can limit the results of this request by using a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListDocuments",
      "responses": [
        {
          "uuid": "5e05289a-341e-4b20-b902-cc2d55a8b753",
          "body": "{\n  \"DocumentIdentifiers\": [\n    {\n      \"Name\": \"\",\n      \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n      \"DisplayName\": \"\",\n      \"Owner\": \"\",\n      \"VersionName\": \"\",\n      \"PlatformTypes\": [\n        \"{{oneOf (array 'Windows' 'Linux')}}\"\n      ],\n      \"DocumentVersion\": \"\",\n      \"DocumentType\": \"\",\n      \"SchemaVersion\": \"\",\n      \"DocumentFormat\": \"\",\n      \"TargetType\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Requires\": [\n        {\n          \"Name\": \"\",\n          \"Version\": \"\"\n        }\n      ],\n      \"ReviewStatus\": \"\",\n      \"Author\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ecc421a-a74a-4e57-b690-99ccb607c4b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1efaa9b6-b5c7-4601-b2cf-875d94e7013f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26c153bc-a0de-4b7b-a7e5-190eef01bdee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidFilterKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4fdc83f-3f56-45e6-830e-2abeef18bd02",
      "documentation": "A list of inventory items returned by the request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListInventoryEntries",
      "responses": [
        {
          "uuid": "24f6e6d1-4701-4d86-8aeb-b0a6a8898bd5",
          "body": "{\n  \"TypeName\": \"\",\n  \"InstanceId\": \"\",\n  \"SchemaVersion\": \"\",\n  \"CaptureTime\": \"\",\n  \"Entries\": [\n    {}\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ae68d59-3f3f-44ca-a965-7e11e6e62d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65b0e4f2-b4fd-4e71-83c5-13140d4fd45c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9266e927-c178-49f5-960e-db2d6a2dfe63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54f26ac2-56bc-4771-97e4-9fb2f6bbfc15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aebf624d-84a3-4248-97e8-c91492ff3c50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4dc25a65-dfe5-4a39-8656-83d43175ef02",
      "documentation": "Returns a list of all OpsItem events in the current Amazon Web Services Region and Amazon Web Services account. You can limit the results to events associated with specific OpsItems by specifying a filter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemEvents",
      "responses": [
        {
          "uuid": "947669c8-9571-4d20-a583-453513c6559a",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"EventId\": \"\",\n      \"Source\": \"\",\n      \"DetailType\": \"\",\n      \"Detail\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5e4a4a8-edab-47a4-b8d2-b074174719a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad4f1ac8-1e4a-4663-a41c-138450f68b0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20dd72c0-8726-4851-b82b-bfb303c3a498",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c068c89d-c2a5-44b7-b397-852f46ca596d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "941b5e16-3da6-406f-855e-6ae4aabb0ffc",
      "documentation": "Lists all related-item resources associated with an OpsItem.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsItemRelatedItems",
      "responses": [
        {
          "uuid": "184af565-c1d4-46c8-9dc7-99539349b0a0",
          "body": "{\n  \"NextToken\": \"\",\n  \"Summaries\": [\n    {\n      \"OpsItemId\": \"\",\n      \"AssociationId\": \"\",\n      \"ResourceType\": \"\",\n      \"AssociationType\": \"\",\n      \"ResourceUri\": \"\",\n      \"CreatedBy\": {\n        \"Arn\": \"\"\n      },\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedBy\": {\n        \"Arn\": \"\"\n      },\n      \"LastModifiedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcf2ac7c-bbfe-4f06-9be0-f85446f61930",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d61e7bb-e9b1-4f58-9058-075fe257791a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "de1986fe-6907-418a-b49d-ea264305336f",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when displaying all Application Manager OpsMetadata objects or blobs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListOpsMetadata",
      "responses": [
        {
          "uuid": "92d96b3d-0ac0-48f5-9886-078c4ed72573",
          "body": "{\n  \"OpsMetadataList\": [\n    {\n      \"ResourceId\": \"\",\n      \"OpsMetadataArn\": \"\",\n      \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedUser\": \"\",\n      \"CreationDate\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8267eab-51b2-4da1-b26e-ec6265c207af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96d7b91e-0835-4c13-a4c4-285783b7c17d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43220619-ac16-4f30-84db-c97ae0b7eb00",
      "documentation": "Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries",
      "responses": [
        {
          "uuid": "3d26c039-39e5-4417-9f4c-6c0b5fd1ba2b",
          "body": "{\n  \"ResourceComplianceSummaryItems\": [\n    {\n      \"ComplianceType\": \"\",\n      \"ResourceType\": \"\",\n      \"ResourceId\": \"\",\n      \"Status\": \"\",\n      \"OverallSeverity\": \"\",\n      \"ExecutionSummary\": {\n        \"ExecutionTime\": \"{{faker 'date.recent' 365}}\",\n        \"ExecutionId\": \"\",\n        \"ExecutionType\": \"\"\n      },\n      \"CompliantSummary\": {\n        \"CompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      },\n      \"NonCompliantSummary\": {\n        \"NonCompliantCount\": {{faker 'random.number'}},\n        \"SeveritySummary\": {\n          \"CriticalCount\": {{faker 'random.number'}},\n          \"HighCount\": {{faker 'random.number'}},\n          \"MediumCount\": {{faker 'random.number'}},\n          \"LowCount\": {{faker 'random.number'}},\n          \"InformationalCount\": {{faker 'random.number'}},\n          \"UnspecifiedCount\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6263e32-ceda-4953-9f1b-5aa3fa78528c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidFilter",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb43574b-64fa-4f21-b730-0101e3ffe463",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61b615c9-ff01-4d37-8a6e-507d33331c19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94ced198-be86-4e25-9ff4-89908c2ab569",
      "documentation": "<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListResourceDataSync",
      "responses": [
        {
          "uuid": "a1e8f843-f292-4cef-bac2-37ebfc5ec56d",
          "body": "{\n  \"ResourceDataSyncItems\": [\n    {\n      \"SyncName\": \"\",\n      \"SyncType\": \"\",\n      \"SyncSource\": {\n        \"SourceType\": \"\",\n        \"AwsOrganizationsSource\": {\n          \"OrganizationSourceType\": \"\",\n          \"OrganizationalUnits\": [\n            {\n              \"OrganizationalUnitId\": \"\"\n            }\n          ]\n        },\n        \"SourceRegions\": [\n          \"\"\n        ],\n        \"IncludeFutureRegions\": {{faker 'random.boolean'}},\n        \"State\": \"\",\n        \"EnableAllOpsDataSources\": {{faker 'random.boolean'}}\n      },\n      \"S3Destination\": {\n        \"BucketName\": \"\",\n        \"Prefix\": \"\",\n        \"SyncFormat\": \"\",\n        \"Region\": \"\",\n        \"AWSKMSKeyARN\": \"\",\n        \"DestinationDataSharing\": {\n          \"DestinationDataSharingType\": \"\"\n        }\n      },\n      \"LastSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSuccessfulSyncTime\": \"{{faker 'date.recent' 365}}\",\n      \"SyncLastModifiedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastStatus\": \"\",\n      \"SyncCreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastSyncStatusMessage\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469d9fa5-3a53-4da9-a294-b202ded4f2f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3651e81a-c436-40fd-bf35-d5579083cdb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f133705-4aa8-4d5f-86c8-0d063f63ceeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidNextToken",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "193febca-aeef-45a4-99ac-060e85ee05c9",
      "documentation": "<p>Returns a list of the tags assigned to the specified resource.</p> <p>For information about the ID format for each supported resource type, see <a>AddTagsToResource</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ListTagsForResource",
      "responses": [
        {
          "uuid": "649eced6-89d5-4e1f-a4a1-067abc4c1d0b",
          "body": "{\n  \"TagList\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80bc8491-0a20-4139-afac-4cf7a031b6af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae21c5f3-5946-42ff-b24e-ac63e417d385",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0457214-8ef4-400f-979b-d3dc705e6a5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ef9b45a-81fb-4c97-9408-ef2b7c16b006",
      "documentation": "Shares a Amazon Web Services Systems Manager document (SSM document)publicly or privately. If you share a document privately, you must specify the Amazon Web Services user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ModifyDocumentPermission",
      "responses": [
        {
          "uuid": "cde32716-d4c9-4a70-a52d-505c257bcc3d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ba3e2d-c68c-4c66-a77b-1ed21f138c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f12a8f11-8ca3-4f12-b6d9-0e6852e752a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7c0f335-bd24-4778-a0f0-75a94851697a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidPermissionType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3d054a0-d203-408d-9863-7c968b785485",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DocumentPermissionLimit",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcdca403-6a05-47fe-8c96-c75f3cb8b4cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DocumentLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e520289c-54e2-4092-9b7b-7b01d889bf58",
      "documentation": "<p>Registers a compliance type and other compliance details on a designated resource. This operation lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutComplianceItems",
      "responses": [
        {
          "uuid": "b1c0207f-6391-490e-85b5-f387b98ab5b2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "795720bb-37dd-42c2-839b-ea468e2fcbe5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc44ff0e-ef62-4c61-8c8f-06b81ad8bc7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bf82186-94bd-4788-b471-a49363981e7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5e4b97c-9e86-47e3-9b21-a070596b72f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26763b3b-6e67-4886-a366-21aafaf728a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ComplianceTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cdcc54d-953a-46c2-89c0-652d9c201467",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acc7fe56-3d46-4586-ad14-434ad8f85315",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e26edbf-9788-4599-bc53-fc1d664a4c5e",
      "documentation": "Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn't already exist, or updates an inventory item, if it does exist.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutInventory",
      "responses": [
        {
          "uuid": "0018fa62-1f5f-4332-bd78-7bf2ccefe823",
          "body": "{\n  \"Message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90516245-c8c5-4eeb-b15c-9d3abdf765aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b40f44c-fa54-4e4c-8a4c-cd793c8c0f72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a098cba-bf31-4704-9a07-af085987adb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidTypeNameException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "667b71f0-7ced-447f-88bd-37e99192315c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidItemContentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86b4fdda-0876-460a-b161-6fc770c10d16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "TotalSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61d98ba2-14d0-4882-844b-f58844c16d7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ItemSizeLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7075361a-94c3-4d69-8015-e963e0af95fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ItemContentMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd185f61-ed34-4ec8-b780-cf9ac3f4fd43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "CustomSchemaCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8b431ad-3a23-4580-824a-1d7184a40024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "UnsupportedInventorySchemaVersionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3418982-d07d-46a8-b4f2-7ed66e83abcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "UnsupportedInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a2a76df-7069-4885-a7d2-33efb9aa8156",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidInventoryItemContextException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31488ccd-769d-4a25-8c0f-78bb11f58a4d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "SubTypeCountLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb630a9b-3ab9-4a35-807f-aa4edcc35974",
      "documentation": "Add a parameter to the system.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.PutParameter",
      "responses": [
        {
          "uuid": "e508e460-c7b1-43a2-b018-7823b77ae29f",
          "body": "{\n  \"Version\": {{faker 'random.number'}},\n  \"Tier\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e45980d-7a61-439c-83bd-09359da9b526",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abf04f9a-3e58-4178-af96-6bd5cd9324d4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidKeyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6f9c76f-2f72-4837-8f88-2b1dee3373fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5735093e-85e8-4ce7-a2c1-b650e3272c9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60d985d9-1d65-4b61-a1f5-b2909ba5efdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ParameterAlreadyExists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0933baf7-a0d1-4474-97c8-2e495aa7bb7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "HierarchyLevelLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03beca0b-6821-4305-8392-cd80ba7f5c3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "HierarchyTypeMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abfa7981-63f5-4d0e-8d7f-b5ec359dccea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidAllowedPatternException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31680a09-1498-4e5e-8292-f800c1293569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "ParameterMaxVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b88bc538-f4e4-4d0e-8013-5d01daf47f0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "ParameterPatternMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81452fdd-2e74-464d-b686-79fc47beda59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "UnsupportedParameterType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32f2283a-b166-4ee2-ba20-4f3bb61be85f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "PoliciesLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "048f1abb-b135-4ac9-9a93-69367db1ac7b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 492,
          "label": "InvalidPolicyTypeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d92851b3-d87e-4e9d-9307-fbe6d40f2f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidPolicyAttributeException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d3821ec-f51a-4266-a422-c7fa5232ca81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 494,
          "label": "IncompatiblePolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d72ae53-8e74-4bbc-a0d9-eb9fa6c5319a",
      "documentation": "<p>Defines the default patch baseline for the relevant operating system.</p> <p>To reset the Amazon Web Services-predefined patch baseline as the default, specify the full patch baseline Amazon Resource Name (ARN) as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code> instead of <code>pb-0574b43a65ea646ed</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline",
      "responses": [
        {
          "uuid": "88d97b6f-8616-42d3-9f56-20e769b1c62a",
          "body": "{\n  \"BaselineId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52671aa6-2b0f-430e-bd35-351300871251",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c141bd-80fe-4aaf-90aa-47c0c0e18829",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb9db75a-c35e-4928-840b-2a862c2772e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f39a5c42-541c-4f3a-ab0e-cf349c0a1463",
      "documentation": "Registers a patch baseline for a patch group.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup",
      "responses": [
        {
          "uuid": "061faca4-6304-4060-afc3-9b73a6388af6",
          "body": "{\n  \"BaselineId\": \"\",\n  \"PatchGroup\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47caa61f-7360-423d-b01e-649a9fa6003d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4a87809-81e6-408a-865a-12ea56047896",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49aeb32d-af4e-44fb-9833-03ccfea47fbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44e1ad73-9c87-4759-848e-4e7a18a306fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "373e35a9-30a3-4f29-a6e8-ae96590e2bf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "843a872f-0fe5-4d34-b6a1-0f3e4c1cb584",
      "documentation": "Registers a target with a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "a115f06e-70e4-430a-a1cb-eb59c6bce0ac",
          "body": "{\n  \"WindowTargetId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85d8b8cc-f6cb-4311-92e4-7aeb2c06bd7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21855879-08a3-413f-8af7-57219976d911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3af80c-7576-4fcb-a3e6-27ea66be2c46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "663f96e0-bb5f-4bba-940b-60a604f6e1ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c167b6ff-d15a-47f3-8317-5008a943a152",
      "documentation": "Adds a new task to a maintenance window.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow",
      "responses": [
        {
          "uuid": "ac7b27f2-8d6e-4c42-a5b5-b0f2fdbc3686",
          "body": "{\n  \"WindowTaskId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0659a3e8-2fb1-4ffa-86f1-6a2147daf385",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02b4a30d-4527-430f-948d-d90eace7c5f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fea9613-1859-4989-84df-96e6d74ab0a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ebe2715-a02a-438c-98ef-9ba18dc22ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "FeatureNotAvailableException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bd5e6a4-a84b-4344-ac1b-803e0c31d90e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf82bbae-0bae-48b6-a463-edc0a26954d5",
      "documentation": "Removes tag keys from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.RemoveTagsFromResource",
      "responses": [
        {
          "uuid": "f8e390f9-dd4c-4356-9f69-179e304dac73",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5a6b240-a548-4b81-880e-0894f782ca82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5024fb9-fe0c-4009-ba51-569d50109795",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidResourceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26356f5d-3c34-48a0-99b6-ccddd0bde8d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6f2a953-3a7b-41a2-bbc2-8cd435c8b739",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eec9256d-7864-427f-8b31-3551111e3e1d",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. </p> <p>Reset the service setting for the account to the default value as provisioned by the Amazon Web Services service team. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResetServiceSetting",
      "responses": [
        {
          "uuid": "a7da901f-6206-4d75-9787-dbb5da9192f9",
          "body": "{\n  \"ServiceSetting\": {\n    \"SettingId\": \"\",\n    \"SettingValue\": \"\",\n    \"LastModifiedDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedUser\": \"\",\n    \"ARN\": \"\",\n    \"Status\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8077ef80-cf1b-4476-84e1-09ade5aa3cdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f58903f-e874-48b7-915d-7575676059c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0a89d11-e325-4b55-a5e2-858d16a32b7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54c25c1a-2a1c-49c7-ab90-acb6da86fd67",
      "documentation": "<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It isn't intended for any other use.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.ResumeSession",
      "responses": [
        {
          "uuid": "562c7c28-dbcf-4f20-a024-33624ccbb879",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9011aac2-cd01-43a4-9b81-3ee2e401ea38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2389dcb-581d-4ef4-bf1e-07ea995aa1bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "beb444cc-2da0-4fe9-9c10-19e224ca6f64",
      "documentation": "Sends a signal to an Automation execution to change the current behavior or status of the execution. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendAutomationSignal",
      "responses": [
        {
          "uuid": "4692ad9d-5c49-4e9a-b602-d0f5b7c7e6bd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f9c5260-3e66-4af1-bea1-172d5be997ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d00dcad-354e-4562-80e5-8e3121f076eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AutomationStepNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6396418d-6765-4c34-b0a0-483c0e6eaa8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidAutomationSignalException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc693e9b-d525-40a5-9f19-3da302594ea4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cc3a755e-a637-4b5e-9827-cd2f959106b5",
      "documentation": "Runs commands on one or more managed instances.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.SendCommand",
      "responses": [
        {
          "uuid": "e09db8fb-d660-4b9a-8a38-5fd7b373b1ba",
          "body": "{\n  \"Command\": {\n    \"CommandId\": \"\",\n    \"DocumentName\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Comment\": \"\",\n    \"ExpiresAfter\": \"{{faker 'date.recent' 365}}\",\n    \"Parameters\": {},\n    \"InstanceIds\": [\n      \"\"\n    ],\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"RequestedDateTime\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusDetails\": \"\",\n    \"OutputS3Region\": \"\",\n    \"OutputS3BucketName\": \"\",\n    \"OutputS3KeyPrefix\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"MaxErrors\": \"\",\n    \"TargetCount\": {{faker 'random.number'}},\n    \"CompletedCount\": {{faker 'random.number'}},\n    \"ErrorCount\": {{faker 'random.number'}},\n    \"DeliveryTimedOutCount\": {{faker 'random.number'}},\n    \"ServiceRole\": \"\",\n    \"NotificationConfig\": {\n      \"NotificationArn\": \"\",\n      \"NotificationEvents\": [\n        \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n      ],\n      \"NotificationType\": \"\"\n    },\n    \"CloudWatchOutputConfig\": {\n      \"CloudWatchLogGroupName\": \"\",\n      \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n    },\n    \"TimeoutSeconds\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a821345-17e5-4a0a-b4e7-8fc089740871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cfcd61e-4abb-4476-a4a2-57aeee86fe44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31dcb5aa-006e-4285-aaa3-c8998f366f8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c67b589-c83f-401e-8696-282459efa129",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "917162d6-ffab-4e92-922c-aa86c18a14d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f378ccf9-5694-4327-b55d-dc15ae0f87fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidOutputFolder",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9211d3e-f8fd-4358-bde1-1f4724cf1c26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfd28ca2-9c91-4a98-8248-c708578735bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "UnsupportedPlatformType",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1c92f37-a965-4ace-bdfe-a22af9bfb1a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d4ab84-7bdf-46ac-88f6-bd98cd2b02be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidRole",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1670fa3-2965-4992-a4c9-93d2d6954b02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidNotificationConfig",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54278483-9697-4dce-8f3c-60de5f5f6938",
      "documentation": "Runs an association immediately and only one time. This operation can be helpful when troubleshooting associations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAssociationsOnce",
      "responses": [
        {
          "uuid": "5de2c8cf-a786-4867-a8e8-e3f8dcccb3eb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b3c82fa-0e16-420e-85a7-661aa591d165",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAssociation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02534800-6b52-4562-ba38-872a1622d891",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e29f225-ebed-4ab6-953b-34a0360883eb",
      "documentation": "Initiates execution of an Automation runbook.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartAutomationExecution",
      "responses": [
        {
          "uuid": "5f9d9af0-fa98-45ce-b399-eeab69a1be80",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55ab6911-aa4e-4875-b8a4-83a8e3c3863e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f019011f-7af4-4d61-9f34-0af13c43112d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d09b6d4-f678-4510-8f63-7ba85788174a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48f2978e-427c-4c9f-83ba-d3737b22102b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c4d4ea9-ccc2-4033-a161-4583cafac273",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fb47af0-7c58-4a2f-b900-21e28322179d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ccfbbe0-de1a-4728-af8b-7c177b2f3e91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b78e9bcd-dc78-465a-bfce-f386a0b2bb00",
      "documentation": "Creates a change request for Change Manager. The Automation runbooks specified in the change request run only after all required approvals for the change request have been received.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartChangeRequestExecution",
      "responses": [
        {
          "uuid": "6d868a18-c343-4cf0-890e-9470f9786a2e",
          "body": "{\n  \"AutomationExecutionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7b4ebee-60ab-4148-bf2e-30d34d0ad9fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationDefinitionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bee9e2ec-6ad6-4e8b-bcee-19a6f6f6cc28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationExecutionParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bd559dd-daea-4be2-86e5-6d0c80714fb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AutomationExecutionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dad7461f-c168-4fa3-a6d7-dc2160742440",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AutomationDefinitionVersionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b4e1966-7ea3-442c-bb88-be34c69d2511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IdempotentParameterMismatch",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3bb77c9-7621-425c-9236-3252fa70e1c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd515735-d931-4010-9075-51877bf1ba93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "AutomationDefinitionNotApprovedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd43dbba-7f2c-4d48-8552-8652b57093f5",
      "documentation": "<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>Amazon Web Services CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\">Install the Session Manager plugin for the Amazon Web Services CLI</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Amazon Web Services Tools for PowerShell usage: Start-SSMSession isn't currently supported by Amazon Web Services Tools for PowerShell on Windows local machines.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StartSession",
      "responses": [
        {
          "uuid": "d7f816e7-b535-4f14-b77b-966059d0b332",
          "body": "{\n  \"SessionId\": \"\",\n  \"TokenValue\": \"\",\n  \"StreamUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7688dc75-654c-421b-9ff0-997f872e6b16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b3e92b2-0777-4440-a50b-3a9eb58a592d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TargetNotConnected",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85b73df7-2272-4983-a0e4-c6ec20ff7fc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90225568-2b27-420d-a6e3-d0cf1128998f",
      "documentation": "Stop an Automation that is currently running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.StopAutomationExecution",
      "responses": [
        {
          "uuid": "9232cd54-c299-4e1b-9959-03cb5dd8bb82",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ed882ce-1c8e-43c9-b527-7b73d1c7092b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AutomationExecutionNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e49fb542-6955-48e5-9e6d-649dd63baa4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidAutomationStatusUpdateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c61e8f6-adcb-4efd-abfc-6c3136d3b4ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61035be6-3248-415c-acf6-5beba3c785e0",
      "documentation": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session isn't be resumed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.TerminateSession",
      "responses": [
        {
          "uuid": "6a909062-938c-497b-92d0-5d49c11fd78b",
          "body": "{\n  \"SessionId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86ca41f4-f2be-43dc-8fde-0d826e1f12b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "340f8896-936a-4a15-8a2a-70454c65c56c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8772c3e7-2368-41d9-8f99-ef14916aa0a7",
      "documentation": "Remove a label or labels from a parameter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UnlabelParameterVersion",
      "responses": [
        {
          "uuid": "143b0bf2-7349-423d-8880-d375872d9847",
          "body": "{\n  \"RemovedLabels\": [\n    \"\"\n  ],\n  \"InvalidLabels\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc779775-1861-4710-b08a-89bc84a52baf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b49b6624-02f7-4f20-998e-70b5ae7053c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7036fb03-daf4-43d7-a9d5-92e7dec0f120",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ParameterNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8177fce7-6ca8-463b-8fc9-a6ea2b26e0e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ParameterVersionNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a26e2534-97d4-4cf2-a972-be7ce12c7eba",
      "documentation": "<p>Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon Simple Storage Service (Amazon S3) output. </p> <p>In order to call this API operation, your Identity and Access Management (IAM) user account, group, or role must be configured with permission to call the <a>DescribeAssociation</a> API operation. If you don't have permission to call <code>DescribeAssociation</code>, then you receive the following error: <code>An error occurred (AccessDeniedException) when calling the UpdateAssociation operation: User: &lt;user_arn&gt; isn't authorized to perform: ssm:DescribeAssociation on resource: &lt;resource_arn&gt;</code> </p> <important> <p>When you update an association, the association immediately runs against the specified targets.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociation",
      "responses": [
        {
          "uuid": "d44243f6-304b-45e8-a318-0052c0c6e015",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c15d7d7a-1d1a-422d-98f4-0fc258917c3b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d36fc20f-5b38-4d36-a3ee-3011e7668ea0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidSchedule",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c2d8e72-0099-4138-a9d8-147c6e84c919",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameters",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea2d4a30-5cb3-494e-9ed6-3d9468607d64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidOutputLocation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7643672-126b-498d-a477-b5ae87b558c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbe7027d-f8aa-4622-a38c-2c8de5ff108b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfdbafda-5e3d-4408-a1c7-9a8f1dd2d667",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidUpdate",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a87ebc8e-bad2-4766-b979-f10d187828ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "243a76cf-be23-4d72-ba37-84005a6a7077",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b02fda-fa64-4a7b-9cc0-da987e5f80e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidTarget",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "345ee5a3-4e08-4cbd-b7f9-5e6ce2f34e2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 490,
          "label": "InvalidAssociationVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddf6d443-ed81-4e44-9ae8-c47c61a6204b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 491,
          "label": "AssociationVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97d00578-941c-4c73-80cf-67242eca5e27",
      "documentation": "<p>Updates the status of the Amazon Web Services Systems Manager document (SSM document) associated with the specified instance.</p> <p> <code>UpdateAssociationStatus</code> is primarily used by the Amazon Web Services Systems Manager Agent (SSM Agent) to report status updates about your associations and is only used for associations created with the <code>InstanceId</code> legacy parameter.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateAssociationStatus",
      "responses": [
        {
          "uuid": "6f1f1e81-5958-4da7-a3cd-a53f118a2bf4",
          "body": "{\n  \"AssociationDescription\": {\n    \"Name\": \"\",\n    \"InstanceId\": \"\",\n    \"AssociationVersion\": \"\",\n    \"Date\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdateAssociationDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": {\n      \"Date\": \"{{faker 'date.recent' 365}}\",\n      \"Name\": \"\",\n      \"Message\": \"\",\n      \"AdditionalInfo\": \"\"\n    },\n    \"Overview\": {\n      \"Status\": \"\",\n      \"DetailedStatus\": \"\",\n      \"AssociationStatusAggregatedCount\": {}\n    },\n    \"DocumentVersion\": \"\",\n    \"AutomationTargetParameterName\": \"\",\n    \"Parameters\": {},\n    \"AssociationId\": \"\",\n    \"Targets\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ],\n    \"ScheduleExpression\": \"\",\n    \"OutputLocation\": {\n      \"S3Location\": {\n        \"OutputS3Region\": \"\",\n        \"OutputS3BucketName\": \"\",\n        \"OutputS3KeyPrefix\": \"\"\n      }\n    },\n    \"LastExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"LastSuccessfulExecutionDate\": \"{{faker 'date.recent' 365}}\",\n    \"AssociationName\": \"\",\n    \"MaxErrors\": \"\",\n    \"MaxConcurrency\": \"\",\n    \"ComplianceSeverity\": \"\",\n    \"SyncCompliance\": \"\",\n    \"ApplyOnlyAtCronInterval\": {{faker 'random.boolean'}},\n    \"CalendarNames\": [\n      \"\"\n    ],\n    \"TargetLocations\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Regions\": [\n          \"\"\n        ],\n        \"TargetLocationMaxConcurrency\": \"\",\n        \"TargetLocationMaxErrors\": \"\",\n        \"ExecutionRoleName\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0d415f3-4fcf-4ca6-9c96-c263a29cc601",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ae73483-81ec-4e07-97f7-1e5f63e6c7f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79d536b-6401-4217-878e-b108805fa120",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "650aa28d-20db-4f01-af07-c4c2a4848eec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AssociationDoesNotExist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbabdb22-8f9d-4622-87e6-40cca4aad478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "StatusUnchanged",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04354f31-99b0-4d63-9a19-b00d556e2baa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82d1deda-2b78-44f5-a0b8-90306d2df545",
      "documentation": "Updates one or more values for an SSM document.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocument",
      "responses": [
        {
          "uuid": "fa1f885b-767f-4c80-a43b-25a78bf66ee9",
          "body": "{\n  \"DocumentDescription\": {\n    \"Sha1\": \"\",\n    \"Hash\": \"\",\n    \"HashType\": \"\",\n    \"Name\": \"\",\n    \"DisplayName\": \"\",\n    \"VersionName\": \"\",\n    \"Owner\": \"\",\n    \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"StatusInformation\": \"\",\n    \"DocumentVersion\": \"\",\n    \"Description\": \"\",\n    \"Parameters\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Description\": \"\",\n        \"DefaultValue\": \"\"\n      }\n    ],\n    \"PlatformTypes\": [\n      \"{{oneOf (array 'Windows' 'Linux')}}\"\n    ],\n    \"DocumentType\": \"\",\n    \"SchemaVersion\": \"\",\n    \"LatestVersion\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DocumentFormat\": \"\",\n    \"TargetType\": \"\",\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"AttachmentsInformation\": [\n      {\n        \"Name\": \"\"\n      }\n    ],\n    \"Requires\": [\n      {\n        \"Name\": \"\",\n        \"Version\": \"\"\n      }\n    ],\n    \"Author\": \"\",\n    \"ReviewInformation\": [\n      {\n        \"ReviewedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"Reviewer\": \"\"\n      }\n    ],\n    \"ApprovedVersion\": \"\",\n    \"PendingReviewVersion\": \"\",\n    \"ReviewStatus\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f247233-cd8b-4c5e-86ad-b0fc51bb55c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "MaxDocumentSizeExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b376c5a0-fac9-4f00-a7c0-99c6e6649735",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DocumentVersionLimitExceeded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fee20306-4d52-4c8a-94a5-ae0433790b5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54c4b04c-882a-4043-a88f-e9b91d59a931",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65753455-b9bd-4228-b263-489959f5dd10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateDocumentVersionName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f265ac9-0668-41fa-8ff0-8ae66dc6e4fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidDocumentContent",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a2e6d55f-0d54-432b-b51c-5d0c98f8328e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c90c6444-8f71-4dbb-b7fc-7d8ba282f182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0626b261-37d5-4af8-8382-fa9f6c4c9f18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 488,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49b98046-fe94-4bad-9e42-765b4b900b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 489,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "da9f4c37-9840-4b4f-8c64-baee11ebbc72",
      "documentation": "Set the default version of a document. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion",
      "responses": [
        {
          "uuid": "54a0c13f-c387-48f2-871a-bdcd71561ce6",
          "body": "{\n  \"Description\": {\n    \"Name\": \"\",\n    \"DefaultVersion\": \"\",\n    \"DefaultVersionName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "143fd5da-06e6-4771-b906-fd0502c89478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3637df6-2fe6-4846-8f50-58b0e1477767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85ea6c93-7850-4227-a9ab-8f8f0637a61c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9953bad9-94c5-47d5-8841-96e1a273f33e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentSchemaVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "745d5be0-1e16-4a08-90b3-9cb3d1da7871",
      "documentation": "Updates information related to approval reviews for a specific version of a change template in Change Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateDocumentMetadata",
      "responses": [
        {
          "uuid": "b85f9cf6-4d9a-4515-88ce-0f375320df79",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71c21f5e-ce9e-4e22-bb3a-bf5767ff74fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68d7cca2-d4dc-47b4-98c8-6ce7c5c67b18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidDocument",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "649d2390-9baa-4bdb-91b4-02f577081f57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidDocumentOperation",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f06c69b3-7392-421b-b580-c0bb695ca8ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidDocumentVersion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "425044e8-8ae4-4949-a971-511ff0ec2dca",
      "documentation": "<p>Updates an existing maintenance window. Only specified parameters are modified.</p> <note> <p>The value you specify for <code>Duration</code> determines the specific end time for the maintenance window based on the time it begins. No maintenance window tasks are permitted to start after the resulting endtime minus the number of hours you specify for <code>Cutoff</code>. For example, if the maintenance window starts at 3 PM, the duration is three hours, and the value you specify for <code>Cutoff</code> is one hour, no maintenance window tasks can start after 5 PM.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow",
      "responses": [
        {
          "uuid": "6208ecf3-eb17-4ad3-bef4-083133d7a026",
          "body": "{\n  \"WindowId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"StartDate\": \"\",\n  \"EndDate\": \"\",\n  \"Schedule\": \"\",\n  \"ScheduleTimezone\": \"\",\n  \"ScheduleOffset\": {{faker 'random.number'}},\n  \"Duration\": {{faker 'random.number'}},\n  \"Cutoff\": {{faker 'random.number'}},\n  \"AllowUnassociatedTargets\": {{faker 'random.boolean'}},\n  \"Enabled\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07453f97-6815-4d62-941e-6060db152039",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "822c3339-c30c-4255-935e-dd1f4b128a5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0dda191-1c7e-4881-a030-55c1c1221043",
      "documentation": "<p>Modifies the target of an existing maintenance window. You can change the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p> </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li> <li> <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag type to another. The three supported tag types are ID target, Tag target, and resource group. For more information, see <a>Target</a>.</p> </li> </ul> <note> <p>If a parameter is null, then the corresponding field isn't modified.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget",
      "responses": [
        {
          "uuid": "9bdd617b-d2fc-4593-91e0-b6e6faacefca",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTargetId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"OwnerInformation\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb33143c-d1ab-4b72-a30a-3c2654bb055c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9436e6f4-1328-43f2-b75c-3d66492854b5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "718a22bd-674a-415e-aa99-eb4793da2a24",
      "documentation": "<p>Modifies a task assigned to a maintenance window. You can't change the task type, but you can change the following values:</p> <ul> <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code> task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p> </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code> </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code> </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then the corresponding field isn't modified. If you set <code>Replace</code> to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> operation are required for this request. Optional fields that aren't specified are set to null.</p> <important> <p>When you update a maintenance window task that has options specified in <code>TaskInvocationParameters</code>, you must provide again all the <code>TaskInvocationParameters</code> values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>. If you update the maintenance window task and specify only a different <code>OutputS3BucketName</code> value, the values for <code>Comment</code> and <code>NotificationConfig</code> are removed.</p> </important>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask",
      "responses": [
        {
          "uuid": "fdfb3dc0-a45e-4f96-a182-d11c26a32cde",
          "body": "{\n  \"WindowId\": \"\",\n  \"WindowTaskId\": \"\",\n  \"Targets\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"TaskArn\": \"\",\n  \"ServiceRoleArn\": \"\",\n  \"TaskParameters\": {},\n  \"TaskInvocationParameters\": {\n    \"RunCommand\": {\n      \"Comment\": \"\",\n      \"CloudWatchOutputConfig\": {\n        \"CloudWatchLogGroupName\": \"\",\n        \"CloudWatchOutputEnabled\": {{faker 'random.boolean'}}\n      },\n      \"DocumentHash\": \"\",\n      \"DocumentHashType\": \"\",\n      \"DocumentVersion\": \"\",\n      \"NotificationConfig\": {\n        \"NotificationArn\": \"\",\n        \"NotificationEvents\": [\n          \"{{oneOf (array 'All' 'InProgress' 'Success' 'TimedOut' 'Cancelled' 'Failed')}}\"\n        ],\n        \"NotificationType\": \"\"\n      },\n      \"OutputS3BucketName\": \"\",\n      \"OutputS3KeyPrefix\": \"\",\n      \"Parameters\": {},\n      \"ServiceRoleArn\": \"\",\n      \"TimeoutSeconds\": {{faker 'random.number'}}\n    },\n    \"Automation\": {\n      \"DocumentVersion\": \"\",\n      \"Parameters\": {}\n    },\n    \"StepFunctions\": {\n      \"Input\": \"\",\n      \"Name\": \"\"\n    },\n    \"Lambda\": {\n      \"ClientContext\": \"\",\n      \"Qualifier\": \"\",\n      \"Payload\": \"\"\n    }\n  },\n  \"Priority\": {{faker 'random.number'}},\n  \"MaxConcurrency\": \"\",\n  \"MaxErrors\": \"\",\n  \"LoggingInfo\": {\n    \"S3BucketName\": \"\",\n    \"S3KeyPrefix\": \"\",\n    \"S3Region\": \"\"\n  },\n  \"Name\": \"\",\n  \"Description\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c34b347-07cc-4367-8cb6-324b9c508aa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83cca8a2-9209-4fcb-90cf-2ac0b1a67c54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90ea4639-45f5-4eb9-9275-8516207d0bcf",
      "documentation": "Changes the Identity and Access Management (IAM) role that is assigned to the on-premises instance or virtual machines (VM). IAM roles are first assigned to these hybrid instances during the activation process. For more information, see <a>CreateActivation</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole",
      "responses": [
        {
          "uuid": "43da1e29-00a2-47da-aff0-c0e00b5e5507",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "227a7e92-e59d-4265-92cc-81989f752dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInstanceId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05098652-cb9b-485e-a93c-97b1792a6328",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9339bf6-5878-4204-8004-54de33cb7dd1",
      "documentation": "<p>Edit or change an OpsItem. You must have permission in Identity and Access Management (IAM) to update an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html\">Getting started with OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational issues impacting the performance and health of their Amazon Web Services resources. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsItem",
      "responses": [
        {
          "uuid": "2805ec14-ec4b-431c-82cf-f4ef115608aa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "972eb317-4622-4fe1-b4e8-fb8010a28a99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "156f394a-4363-4cda-a90d-f1586376accd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsItemNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3f1c228-6edd-4f12-a47a-101af8253536",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsItemAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12128f3d-3843-47d2-b9a1-2c24c27f87e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsItemLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72742289-b431-4057-813c-87842da0df07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OpsItemInvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2297aa69-8f9e-4b7b-9c58-cf891c9f6510",
      "documentation": "Amazon Web Services Systems Manager calls this API operation when you edit OpsMetadata in Application Manager.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateOpsMetadata",
      "responses": [
        {
          "uuid": "e4cc6a7f-456f-4374-9842-595821bf5135",
          "body": "{\n  \"OpsMetadataArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41852a7c-a35d-4cef-9271-c1e21ca6c2ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OpsMetadataNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66bb9511-ead7-46e7-92c7-33bfc54f2f4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OpsMetadataInvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3617de70-c54c-45bc-968e-d9892113ee98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OpsMetadataKeyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac634937-22ba-405c-ac45-c93d8fd34bf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OpsMetadataTooManyUpdatesException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5239e358-33ea-4f9f-8adb-23071e7adc31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2f58b0c-e9fe-48b3-a960-0bfbbd8171d9",
      "documentation": "<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key-value pairs in <code>PatchFilters</code> for each supported operating system type, see <a>PatchFilter</a>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdatePatchBaseline",
      "responses": [
        {
          "uuid": "e65d49c8-d251-4f7b-9f03-0b4a8e73c08a",
          "body": "{\n  \"BaselineId\": \"\",\n  \"Name\": \"\",\n  \"OperatingSystem\": \"\",\n  \"GlobalFilters\": {\n    \"PatchFilters\": [\n      {\n        \"Key\": \"\",\n        \"Values\": [\n          \"\"\n        ]\n      }\n    ]\n  },\n  \"ApprovalRules\": {\n    \"PatchRules\": [\n      {\n        \"PatchFilterGroup\": {\n          \"PatchFilters\": [\n            {\n              \"Key\": \"\",\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        },\n        \"ComplianceLevel\": \"\",\n        \"ApproveAfterDays\": {{faker 'random.number'}},\n        \"ApproveUntilDate\": \"\",\n        \"EnableNonSecurity\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"ApprovedPatches\": [\n    \"\"\n  ],\n  \"ApprovedPatchesComplianceLevel\": \"\",\n  \"ApprovedPatchesEnableNonSecurity\": {{faker 'random.boolean'}},\n  \"RejectedPatches\": [\n    \"\"\n  ],\n  \"RejectedPatchesAction\": \"\",\n  \"CreatedDate\": \"{{faker 'date.recent' 365}}\",\n  \"ModifiedDate\": \"{{faker 'date.recent' 365}}\",\n  \"Description\": \"\",\n  \"Sources\": [\n    {\n      \"Name\": \"\",\n      \"Products\": [\n        \"\"\n      ],\n      \"Configuration\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab027aa4-f804-4576-820d-4f3d879a301a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DoesNotExistException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31048203-d362-4f9d-9745-f6c45daf14b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "615e5b6d-fb4c-4eb9-9596-d61231a462b3",
      "documentation": "<p>Update a resource data sync. After you create a resource data sync for a Region, you can't change the account options for that sync. For example, if you create a sync in the us-east-2 (Ohio) Region and you choose the <code>Include only the current account</code> option, you can't edit that sync later and choose the <code>Include all accounts from my Organizations configuration</code> option. Instead, you must delete the first resource data sync, and create a new one.</p> <note> <p>This API operation only supports a resource data sync that was created with a SyncFromSource <code>SyncType</code>.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateResourceDataSync",
      "responses": [
        {
          "uuid": "8a659206-ba5a-459e-907c-c5a6bb0ea727",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "676b6129-3160-4fdf-adaf-92f8f65b0d47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceDataSyncNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "720d8f6d-6dba-4033-a755-dbbc0e027ec0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceDataSyncInvalidConfigurationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "679236e9-ada3-4fdd-ba03-24a96ae4390a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceDataSyncConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4b4d26e-93ba-4436-898f-4c9cb1970c28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa9e24eb-99fa-47fe-85f9-5a14385d555d",
      "documentation": "<p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of \"false\". This means the user can't use this feature unless they change the setting to \"true\" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>GetServiceSetting</a> API operation to view the current value. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p> <p>Update the service setting for the account. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AmazonSSM.UpdateServiceSetting",
      "responses": [
        {
          "uuid": "a1c43ef6-3a21-4182-b820-3b495b68b491",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb008f36-319e-42c8-86bb-558fcb9d713d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServerError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6076d5e8-ac92-450f-b8fa-d8206fe99cb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ServiceSettingNotFound",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b82e677-b3fa-4a2b-9162-9e194bb21a0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TooManyUpdates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}